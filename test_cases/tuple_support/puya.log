debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['tuple_support'], resource_encoding='value', output_awst=True, output_awst_json=False, output_source_annotations_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing tuple_support/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Terminated block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@5
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let required_budget_with_buffer#3: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@3
debug: Added required_budget_with_buffer#3 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3) in block@3
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let required_budget_with_buffer#4: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@4
debug: Added required_budget_with_buffer#4 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3, required_budget_with_buffer#4 <- block@4) in block@4
debug: Added required_budget_with_buffer#2 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#2 <- block@5) in block@5
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@5
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let fee_source#3: uint64 = undefined while trying to resolve 'fee_source' in block@3
debug: Added fee_source#3 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3) in block@3
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let fee_source#4: uint64 = undefined while trying to resolve 'fee_source' in block@4
debug: Added fee_source#4 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3, fee_source#4 <- block@4) in block@4
debug: Added fee_source#2 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#2 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replaced trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1
debug: Deleting Phi assignment: let fee_source#3: uint64 = φ(fee_source#1 <- block@2)
debug: Replaced trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1 in current definition for 1 blocks
debug: Sealing block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4)
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 5 blocks
debug: Added fee_source#1 to Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1
debug: Deleting Phi assignment: let fee_source#4: uint64 = φ(fee_source#1 <- block@2)
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4)
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0 in current definition for 5 blocks
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'head_and_tail_length' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_and_tail_length#1: uint64 = undefined while trying to resolve 'head_and_tail_length' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added head_and_tail_length#0 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4) in block@4
debug: Added head_and_tail_length#1 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0
debug: Deleting Phi assignment: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7)
debug: Replaced trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.tuple_support.tuple_support.get_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.single_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.bin_ops
debug: Sealing block@0
tuple_support/tuple_support.py:96:10 debug: encountered already materialized expression (1u), reusing result: 1u
tuple_support/tuple_support.py:96:10 debug: encountered already materialized expression (1u), reusing result: 1u
tuple_support/tuple_support.py:102:9 debug: encountered already materialized expression (tup), reusing result: (tup.0#0, tup.1#0)
tuple_support/tuple_support.py:102:9 debug: encountered already materialized expression (tup[0]), reusing result: tup.0#0
tuple_support/tuple_support.py:102:9 debug: encountered already materialized expression (tup[1]), reusing result: tup.1#0
tuple_support/tuple_support.py:102:9 debug: encountered already materialized expression (tup[0]), reusing result: tup.0#0
tuple_support/tuple_support.py:102:9 debug: encountered already materialized expression (tup[1]), reusing result: tup.1#0
tuple_support/tuple_support.py:115:9 debug: encountered already materialized expression (tup), reusing result: (tup.0#0, tup.1#0)
tuple_support/tuple_support.py:115:15 debug: encountered already materialized expression (tup), reusing result: (tup.0#0, tup.1#0)
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.bytes_combine
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.bytes_multiply
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let result#1: bytes = undefined while trying to resolve 'result' in block@1
debug: Looking for 'b' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let b#1: bytes = undefined while trying to resolve 'b' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added result#0 to Phi node: let result#1: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#2 to Phi node: let result#1: bytes = φ(result#0 <- block@0, result#2 <- block@3) in block@3
debug: Added b#0 to Phi node: let b#1: bytes = φ(b#0 <- block@0) in block@0
debug: Added b#1 to Phi node: let b#1: bytes = φ(b#0 <- block@0, b#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let b#1: bytes = φ(b#0 <- block@0, b#1 <- block@3) (b#1) with b#0
debug: Deleting Phi assignment: let b#1: bytes = φ(b#0 <- block@0, b#1 <- block@3)
debug: Replaced trivial Phi node: let b#1: bytes = φ(b#0 <- block@0, b#1 <- block@3) (b#1) with b#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.tuple_support.tuple_support.add_three_values
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Looking for 'value' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value#1: uint64 = undefined while trying to resolve 'value' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3, total#2 <- block@4) in block@4
debug: Added value#0 to Phi node: let value#1: uint64 = φ(value#0 <- block@0) in block@0
debug: Added value#2 to Phi node: let value#1: uint64 = φ(value#0 <- block@0, value#2 <- block@3) in block@3
debug: Added value#3 to Phi node: let value#1: uint64 = φ(value#0 <- block@0, value#2 <- block@3, value#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.tuple_support.tuple_support.addw2
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.slicing
debug: Sealing block@0
tuple_support/tuple_support.py:175:12 debug: encountered already materialized expression (one_to_three), reusing result: (one_to_three.0#0, one_to_three.1#0, one_to_three.2#0)
tuple_support/tuple_support.py:175:12 debug: encountered already materialized expression (one_to_three), reusing result: (one_to_three.0#0, one_to_three.1#0, one_to_three.2#0)
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.test_empty
debug: Sealing block@0
tuple_support/tuple_support.py:184:5 warning: assertion is always true, ignoring
tuple_support/tuple_support.py:185:5 warning: assertion is always true, ignoring
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: Sealing block@0
tuple_support/tuple_comparisons.py:43:5 warning: assertion is always true, ignoring
tuple_support/tuple_comparisons.py:47:5 warning: assertion is always true, ignoring
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.simple_tup
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.echo
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.test_rearrange
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.test_swap
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let s.0.0#2: uint64 = undefined while trying to resolve 's.0.0' in block@2
debug: Added s.0.0#0 to Phi node: let s.0.0#2: uint64 = φ(s.0.0#0 <- block@0) in block@0
debug: Added s.0.0#1 to Phi node: let s.0.0#2: uint64 = φ(s.0.0#0 <- block@0, s.0.0#1 <- block@1) in block@1
debug: Created Phi assignment: let s.1.0#2: uint64 = undefined while trying to resolve 's.1.0' in block@2
debug: Added s.1.0#0 to Phi node: let s.1.0#2: uint64 = φ(s.1.0#0 <- block@0) in block@0
debug: Added s.1.0#1 to Phi node: let s.1.0#2: uint64 = φ(s.1.0#0 <- block@0, s.1.0#1 <- block@1) in block@1
debug: Created Phi assignment: let s.2.0#2: uint64 = undefined while trying to resolve 's.2.0' in block@2
debug: Added s.2.0#0 to Phi node: let s.2.0#2: uint64 = φ(s.2.0#0 <- block@0) in block@0
debug: Added s.2.0#1 to Phi node: let s.2.0#2: uint64 = φ(s.2.0#0 <- block@0, s.2.0#1 <- block@1) in block@1
debug: Created Phi assignment: let reassign#1: bool = undefined while trying to resolve 'reassign' in block@2
debug: Added reassign#0 to Phi node: let reassign#1: bool = φ(reassign#0 <- block@0) in block@0
debug: Added reassign#0 to Phi node: let reassign#1: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let reassign#1: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) (reassign#1) with reassign#0
debug: Deleting Phi assignment: let reassign#1: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1)
debug: Replaced trivial Phi node: let reassign#1: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) (reassign#1) with reassign#0 in current definition for 1 blocks
debug: Created Phi assignment: let t.0#1: uint64 = undefined while trying to resolve 't.0' in block@2
debug: Added t.0#0 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0) in block@0
debug: Added t.0#0 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#0 <- block@1) (t.0#1) with t.0#0
debug: Deleting Phi assignment: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#0 <- block@1)
debug: Replaced trivial Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#0 <- block@1) (t.0#1) with t.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let one#1: uint64 = undefined while trying to resolve 'one' in block@2
debug: Added one#0 to Phi node: let one#1: uint64 = φ(one#0 <- block@0) in block@0
debug: Added one#0 to Phi node: let one#1: uint64 = φ(one#0 <- block@0, one#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let one#1: uint64 = φ(one#0 <- block@0, one#0 <- block@1) (one#1) with one#0
debug: Deleting Phi assignment: let one#1: uint64 = φ(one#0 <- block@0, one#0 <- block@1)
debug: Replaced trivial Phi node: let one#1: uint64 = φ(one#0 <- block@0, one#0 <- block@1) (one#1) with one#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Building IR for function test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 't.0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let t.0#1: uint64 = undefined while trying to resolve 't.0' in block@1
debug: Looking for 't.1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let t.1#1: uint64 = undefined while trying to resolve 't.1' in block@1
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added loop_counter%0#4 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4, loop_counter%0#4 <- block@5) in block@5
debug: Added t.0#0 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0) in block@0
debug: Added t.0#2 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#2 <- block@3) in block@3
debug: Added t.0#3 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#2 <- block@3, t.0#3 <- block@4) in block@4
debug: Added t.0#4 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#2 <- block@3, t.0#3 <- block@4, t.0#4 <- block@5) in block@5
debug: Added t.1#0 to Phi node: let t.1#1: uint64 = φ(t.1#0 <- block@0) in block@0
debug: Added t.1#2 to Phi node: let t.1#1: uint64 = φ(t.1#0 <- block@0, t.1#2 <- block@3) in block@3
debug: Added t.1#3 to Phi node: let t.1#1: uint64 = φ(t.1#0 <- block@0, t.1#2 <- block@3, t.1#3 <- block@4) in block@4
debug: Added t.1#4 to Phi node: let t.1#1: uint64 = φ(t.1#0 <- block@0, t.1#2 <- block@3, t.1#3 <- block@4, t.1#4 <- block@5) in block@5
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3, total#2 <- block@4) in block@4
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3, total#2 <- block@4, total#2 <- block@5) in block@5
debug: Sealing block@6
debug: Created Phi assignment: let x#1: uint64 = undefined while trying to resolve 'x' in block@1
debug: Added x#0 to Phi node: let x#1: uint64 = φ(x#0 <- block@0) in block@0
debug: Added x#1 to Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3) in block@3
debug: Added x#1 to Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4) in block@4
debug: Added x#1 to Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4, x#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4, x#1 <- block@5) (x#1) with x#0
debug: Deleting Phi assignment: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4, x#1 <- block@5)
debug: Replaced trivial Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4, x#1 <- block@5) (x#1) with x#0 in current definition for 5 blocks
debug: Created Phi assignment: let y#1: uint64 = undefined while trying to resolve 'y' in block@1
debug: Added y#0 to Phi node: let y#1: uint64 = φ(y#0 <- block@0) in block@0
debug: Added y#1 to Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3) in block@3
debug: Added y#1 to Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4) in block@4
debug: Added y#1 to Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4, y#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4, y#1 <- block@5) (y#1) with y#0
debug: Deleting Phi assignment: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4, y#1 <- block@5)
debug: Replaced trivial Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4, y#1 <- block@5) (y#1) with y#0 in current definition for 5 blocks
debug: Terminated block@6
debug: Looking for 'loop_counter%1' in an unsealed block creating an incomplete Phi: block@7
debug: Created Phi assignment: let loop_counter%1#1: uint64 = undefined while trying to resolve 'loop_counter%1' in block@7
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@7
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@7
debug: Looking for 'a' in an unsealed block creating an incomplete Phi: block@7
debug: Created Phi assignment: let a#2: uint64 = undefined while trying to resolve 'a' in block@7
debug: Looking for 'b' in an unsealed block creating an incomplete Phi: block@7
debug: Created Phi assignment: let b#2: uint64 = undefined while trying to resolve 'b' in block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@7
debug: Added loop_counter%1#0 to Phi node: let loop_counter%1#1: uint64 = φ(loop_counter%1#0 <- block@6) in block@6
debug: Added loop_counter%1#2 to Phi node: let loop_counter%1#1: uint64 = φ(loop_counter%1#0 <- block@6, loop_counter%1#2 <- block@9) in block@9
debug: Added loop_counter%1#3 to Phi node: let loop_counter%1#1: uint64 = φ(loop_counter%1#0 <- block@6, loop_counter%1#2 <- block@9, loop_counter%1#3 <- block@10) in block@10
debug: Added loop_counter%1#4 to Phi node: let loop_counter%1#1: uint64 = φ(loop_counter%1#0 <- block@6, loop_counter%1#2 <- block@9, loop_counter%1#3 <- block@10, loop_counter%1#4 <- block@11) in block@11
debug: Added total#2 to Phi node: let total#3: uint64 = φ(total#2 <- block@6) in block@6
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#2 <- block@6, total#4 <- block@9) in block@9
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#2 <- block@6, total#4 <- block@9, total#4 <- block@10) in block@10
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#2 <- block@6, total#4 <- block@9, total#4 <- block@10, total#4 <- block@11) in block@11
debug: Added a#1 to Phi node: let a#2: uint64 = φ(a#1 <- block@6) in block@6
debug: Added a#3 to Phi node: let a#2: uint64 = φ(a#1 <- block@6, a#3 <- block@9) in block@9
debug: Added a#4 to Phi node: let a#2: uint64 = φ(a#1 <- block@6, a#3 <- block@9, a#4 <- block@10) in block@10
debug: Added a#5 to Phi node: let a#2: uint64 = φ(a#1 <- block@6, a#3 <- block@9, a#4 <- block@10, a#5 <- block@11) in block@11
debug: Added b#1 to Phi node: let b#2: uint64 = φ(b#1 <- block@6) in block@6
debug: Added b#3 to Phi node: let b#2: uint64 = φ(b#1 <- block@6, b#3 <- block@9) in block@9
debug: Added b#4 to Phi node: let b#2: uint64 = φ(b#1 <- block@6, b#3 <- block@9, b#4 <- block@10) in block@10
debug: Added b#5 to Phi node: let b#2: uint64 = φ(b#1 <- block@6, b#3 <- block@9, b#4 <- block@10, b#5 <- block@11) in block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function test_cases.tuple_support.tuple_support.TupleSupport.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Sealing block@0
tuple_support/tuple_support.py:18:17 debug: encountered already materialized expression (3u), reusing result: 3u
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let a2#1: uint64 = undefined while trying to resolve 'a2' in block@3
debug: Added a2#0 to Phi node: let a2#1: uint64 = φ(a2#0 <- block@1) in block@1
debug: Added a2#0 to Phi node: let a2#1: uint64 = φ(a2#0 <- block@1, a2#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let a2#1: uint64 = φ(a2#0 <- block@1, a2#0 <- block@2) (a2#1) with a2#0
debug: Deleting Phi assignment: let a2#1: uint64 = φ(a2#0 <- block@1, a2#0 <- block@2)
debug: Replaced trivial Phi node: let a2#1: uint64 = φ(a2#0 <- block@1, a2#0 <- block@2) (a2#1) with a2#0 in current definition for 1 blocks
debug: Created Phi assignment: let a#1: uint64 = undefined while trying to resolve 'a' in block@3
debug: Added a#0 to Phi node: let a#1: uint64 = φ(a#0 <- block@1) in block@1
debug: Added a#0 to Phi node: let a#1: uint64 = φ(a#0 <- block@1, a#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let a#1: uint64 = φ(a#0 <- block@1, a#0 <- block@2) (a#1) with a#0
debug: Deleting Phi assignment: let a#1: uint64 = φ(a#0 <- block@1, a#0 <- block@2)
debug: Replaced trivial Phi node: let a#1: uint64 = φ(a#0 <- block@1, a#0 <- block@2) (a#1) with a#0 in current definition for 1 blocks
debug: Created Phi assignment: let b2#1: uint64 = undefined while trying to resolve 'b2' in block@3
debug: Added b2#0 to Phi node: let b2#1: uint64 = φ(b2#0 <- block@1) in block@1
debug: Added b2#0 to Phi node: let b2#1: uint64 = φ(b2#0 <- block@1, b2#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let b2#1: uint64 = φ(b2#0 <- block@1, b2#0 <- block@2) (b2#1) with b2#0
debug: Deleting Phi assignment: let b2#1: uint64 = φ(b2#0 <- block@1, b2#0 <- block@2)
debug: Replaced trivial Phi node: let b2#1: uint64 = φ(b2#0 <- block@1, b2#0 <- block@2) (b2#1) with b2#0 in current definition for 1 blocks
debug: Created Phi assignment: let b#1: uint64 = undefined while trying to resolve 'b' in block@3
debug: Added b#0 to Phi node: let b#1: uint64 = φ(b#0 <- block@1) in block@1
debug: Added b#0 to Phi node: let b#1: uint64 = φ(b#0 <- block@1, b#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let b#1: uint64 = φ(b#0 <- block@1, b#0 <- block@2) (b#1) with b#0
debug: Deleting Phi assignment: let b#1: uint64 = φ(b#0 <- block@1, b#0 <- block@2)
debug: Replaced trivial Phi node: let b#1: uint64 = φ(b#0 <- block@1, b#0 <- block@2) (b#1) with b#0 in current definition for 1 blocks
debug: Created Phi assignment: let cd.0#1: uint64 = undefined while trying to resolve 'cd.0' in block@3
debug: Added cd.0#0 to Phi node: let cd.0#1: uint64 = φ(cd.0#0 <- block@1) in block@1
debug: Added cd.0#0 to Phi node: let cd.0#1: uint64 = φ(cd.0#0 <- block@1, cd.0#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let cd.0#1: uint64 = φ(cd.0#0 <- block@1, cd.0#0 <- block@2) (cd.0#1) with cd.0#0
debug: Deleting Phi assignment: let cd.0#1: uint64 = φ(cd.0#0 <- block@1, cd.0#0 <- block@2)
debug: Replaced trivial Phi node: let cd.0#1: uint64 = φ(cd.0#0 <- block@1, cd.0#0 <- block@2) (cd.0#1) with cd.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let cd.1#1: uint64 = undefined while trying to resolve 'cd.1' in block@3
debug: Added cd.1#0 to Phi node: let cd.1#1: uint64 = φ(cd.1#0 <- block@1) in block@1
debug: Added cd.1#0 to Phi node: let cd.1#1: uint64 = φ(cd.1#0 <- block@1, cd.1#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let cd.1#1: uint64 = φ(cd.1#0 <- block@1, cd.1#0 <- block@2) (cd.1#1) with cd.1#0
debug: Deleting Phi assignment: let cd.1#1: uint64 = φ(cd.1#0 <- block@1, cd.1#0 <- block@2)
debug: Replaced trivial Phi node: let cd.1#1: uint64 = φ(cd.1#0 <- block@1, cd.1#0 <- block@2) (cd.1#1) with cd.1#0 in current definition for 1 blocks
debug: Created Phi assignment: let tup.0#2: uint64 = undefined while trying to resolve 'tup.0' in block@3
debug: Added tup.0#0 to Phi node: let tup.0#2: uint64 = φ(tup.0#0 <- block@1) in block@1
debug: Added tup.0#1 to Phi node: let tup.0#2: uint64 = φ(tup.0#0 <- block@1, tup.0#1 <- block@2) in block@2
debug: Created Phi assignment: let tup.1#2: uint64 = undefined while trying to resolve 'tup.1' in block@3
debug: Added tup.1#0 to Phi node: let tup.1#2: uint64 = φ(tup.1#0 <- block@1) in block@1
debug: Added tup.1#1 to Phi node: let tup.1#2: uint64 = φ(tup.1#0 <- block@1, tup.1#1 <- block@2) in block@2
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let ternary_result%0.0#2: uint64 = undefined while trying to resolve 'ternary_result%0.0' in block@6
debug: Added ternary_result%0.0#0 to Phi node: let ternary_result%0.0#2: uint64 = φ(ternary_result%0.0#0 <- block@4) in block@4
debug: Added ternary_result%0.0#1 to Phi node: let ternary_result%0.0#2: uint64 = φ(ternary_result%0.0#0 <- block@4, ternary_result%0.0#1 <- block@5) in block@5
debug: Created Phi assignment: let ternary_result%0.1#2: uint64 = undefined while trying to resolve 'ternary_result%0.1' in block@6
debug: Added ternary_result%0.1#0 to Phi node: let ternary_result%0.1#2: uint64 = φ(ternary_result%0.1#0 <- block@4) in block@4
debug: Added ternary_result%0.1#1 to Phi node: let ternary_result%0.1#2: uint64 = φ(ternary_result%0.1#0 <- block@4, ternary_result%0.1#1 <- block@5) in block@5
debug: Created Phi assignment: let a#2: uint64 = undefined while trying to resolve 'a' in block@6
debug: Added a#0 to Phi node: let a#2: uint64 = φ(a#0 <- block@4) in block@4
debug: Added a#0 to Phi node: let a#2: uint64 = φ(a#0 <- block@4, a#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let a#2: uint64 = φ(a#0 <- block@4, a#0 <- block@5) (a#2) with a#0
debug: Deleting Phi assignment: let a#2: uint64 = φ(a#0 <- block@4, a#0 <- block@5)
debug: Replaced trivial Phi node: let a#2: uint64 = φ(a#0 <- block@4, a#0 <- block@5) (a#2) with a#0 in current definition for 1 blocks
debug: Created Phi assignment: let b#2: uint64 = undefined while trying to resolve 'b' in block@6
debug: Added b#0 to Phi node: let b#2: uint64 = φ(b#0 <- block@4) in block@4
debug: Added b#0 to Phi node: let b#2: uint64 = φ(b#0 <- block@4, b#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let b#2: uint64 = φ(b#0 <- block@4, b#0 <- block@5) (b#2) with b#0
debug: Deleting Phi assignment: let b#2: uint64 = φ(b#0 <- block@4, b#0 <- block@5)
debug: Replaced trivial Phi node: let b#2: uint64 = φ(b#0 <- block@4, b#0 <- block@5) (b#2) with b#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let a#3: uint64 = undefined while trying to resolve 'a' in block@10
debug: Created Phi assignment: let a#4: uint64 = undefined while trying to resolve 'a' in block@8
debug: Added a#0 to Phi node: let a#4: uint64 = φ(a#0 <- block@6) in block@6
debug: Added a#0 to Phi node: let a#4: uint64 = φ(a#0 <- block@6, a#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let a#4: uint64 = φ(a#0 <- block@6, a#0 <- block@7) (a#4) with a#0
debug: Deleting Phi assignment: let a#4: uint64 = φ(a#0 <- block@6, a#0 <- block@7)
debug: Replaced trivial Phi node: let a#4: uint64 = φ(a#0 <- block@6, a#0 <- block@7) (a#4) with a#0 in current definition for 1 blocks
debug: Added a#0 to Phi node: let a#3: uint64 = φ(a#0 <- block@8) in block@8
debug: Added a#0 to Phi node: let a#3: uint64 = φ(a#0 <- block@8, a#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let a#3: uint64 = φ(a#0 <- block@8, a#0 <- block@9) (a#3) with a#0
debug: Deleting Phi assignment: let a#3: uint64 = φ(a#0 <- block@8, a#0 <- block@9)
debug: Replaced trivial Phi node: let a#3: uint64 = φ(a#0 <- block@8, a#0 <- block@9) (a#3) with a#0 in current definition for 1 blocks
debug: Created Phi assignment: let b#3: uint64 = undefined while trying to resolve 'b' in block@10
debug: Created Phi assignment: let b#4: uint64 = undefined while trying to resolve 'b' in block@8
debug: Added b#0 to Phi node: let b#4: uint64 = φ(b#0 <- block@6) in block@6
debug: Added b#0 to Phi node: let b#4: uint64 = φ(b#0 <- block@6, b#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let b#4: uint64 = φ(b#0 <- block@6, b#0 <- block@7) (b#4) with b#0
debug: Deleting Phi assignment: let b#4: uint64 = φ(b#0 <- block@6, b#0 <- block@7)
debug: Replaced trivial Phi node: let b#4: uint64 = φ(b#0 <- block@6, b#0 <- block@7) (b#4) with b#0 in current definition for 1 blocks
debug: Added b#0 to Phi node: let b#3: uint64 = φ(b#0 <- block@8) in block@8
debug: Added b#0 to Phi node: let b#3: uint64 = φ(b#0 <- block@8, b#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let b#3: uint64 = φ(b#0 <- block@8, b#0 <- block@9) (b#3) with b#0
debug: Deleting Phi assignment: let b#3: uint64 = φ(b#0 <- block@8, b#0 <- block@9)
debug: Replaced trivial Phi node: let b#3: uint64 = φ(b#0 <- block@8, b#0 <- block@9) (b#3) with b#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Building IR for function test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.echo
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: removing unused subroutine test_cases.tuple_support.tuple_support.TupleSupport.__puya_arc4_router__
debug: removing unused subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: removing unused subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: removing unused subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: removing unused subroutine test_cases.tuple_support.tuple_support.addw2
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: removing unused subroutine test_cases.tuple_support.tuple_support.slicing
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.echo
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: removing unused subroutine test_cases.tuple_support.tuple_support.TupleSupport.__puya_arc4_router__
debug: removing unused subroutine test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: removing unused subroutine test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: removing unused subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple
debug: Sealing block@0
tuple_support/tuple_storage.py:30:9 debug: encountered already materialized expression (GlobalState['tup']), reusing result: (tmp%0#0, tmp%1#0)
tuple_support/tuple_storage.py:30:9 debug: encountered already materialized expression ('tup'), reusing result: "tup"
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box
debug: Sealing block@0
tuple_support/tuple_storage.py:34:9 debug: encountered already materialized expression (Box['box']), reusing result: (tmp%0#0, tmp%1#0)
tuple_support/tuple_storage.py:34:9 debug: encountered already materialized expression ('box'), reusing result: "box"
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global
debug: Sealing block@0
tuple_support/tuple_storage.py:38:9 debug: encountered already materialized expression (GlobalState['glob']), reusing result: (tmp%0#0, tmp%1#0)
tuple_support/tuple_storage.py:38:9 debug: encountered already materialized expression ('glob'), reusing result: "glob"
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local
debug: Sealing block@0
tuple_support/tuple_storage.py:42:9 debug: encountered already materialized expression (LocalState['loc', txn<Sender>()]), reusing result: (tmp%1#0, tmp%2#0)
tuple_support/tuple_storage.py:42:9 debug: encountered already materialized expression ('loc'), reusing result: "loc"
tuple_support/tuple_storage.py:42:18 debug: encountered already materialized expression (txn<Sender>()), reusing result: tmp%0#0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: removing unused subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: removing unused subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: removing unused subroutine test_cases.tuple_support.tuple_support.addw2
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: removing unused subroutine test_cases.tuple_support.tuple_support.slicing
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.echo
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: removing unused subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: removing unused subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: removing unused subroutine test_cases.tuple_support.tuple_support.addw2
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: removing unused subroutine test_cases.tuple_support.tuple_support.slicing
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.echo
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__init__
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.tuple_support.tuple_comparisons.TupleComparisons.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: removing unused subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: removing unused subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: removing unused subroutine test_cases.tuple_support.tuple_support.addw2
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: removing unused subroutine test_cases.tuple_support.tuple_support.slicing
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_empty
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.echo
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.__puya_arc4_router__
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: removing unused subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: removing unused subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: removing unused subroutine test_cases.tuple_support.tuple_support.addw2
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: removing unused subroutine test_cases.tuple_support.tuple_support.slicing
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.echo
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.__puya_arc4_router__
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0.a#2: uint64 = undefined while trying to resolve 'ternary_result%0.a' in block@3
debug: Added ternary_result%0.a#0 to Phi node: let ternary_result%0.a#2: uint64 = φ(ternary_result%0.a#0 <- block@1) in block@1
debug: Added ternary_result%0.a#1 to Phi node: let ternary_result%0.a#2: uint64 = φ(ternary_result%0.a#0 <- block@1, ternary_result%0.a#1 <- block@2) in block@2
debug: Created Phi assignment: let ternary_result%0.b#2: uint64 = undefined while trying to resolve 'ternary_result%0.b' in block@3
debug: Added ternary_result%0.b#0 to Phi node: let ternary_result%0.b#2: uint64 = φ(ternary_result%0.b#0 <- block@1) in block@1
debug: Added ternary_result%0.b#1 to Phi node: let ternary_result%0.b#2: uint64 = φ(ternary_result%0.b#0 <- block@1, ternary_result%0.b#1 <- block@2) in block@2
debug: Terminated block@3
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0.a#2: uint64 = undefined while trying to resolve 'ternary_result%0.a' in block@3
debug: Added ternary_result%0.a#0 to Phi node: let ternary_result%0.a#2: uint64 = φ(ternary_result%0.a#0 <- block@1) in block@1
debug: Added ternary_result%0.a#1 to Phi node: let ternary_result%0.a#2: uint64 = φ(ternary_result%0.a#0 <- block@1, ternary_result%0.a#1 <- block@2) in block@2
debug: Created Phi assignment: let ternary_result%0.b#2: uint64 = undefined while trying to resolve 'ternary_result%0.b' in block@3
debug: Added ternary_result%0.b#0 to Phi node: let ternary_result%0.b#2: uint64 = φ(ternary_result%0.b#0 <- block@1) in block@1
debug: Added ternary_result%0.b#1 to Phi node: let ternary_result%0.b#2: uint64 = φ(ternary_result%0.b#0 <- block@1, ternary_result%0.b#1 <- block@2) in block@2
debug: Terminated block@3
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0.a#2: uint64 = undefined while trying to resolve 'ternary_result%0.a' in block@3
debug: Added ternary_result%0.a#0 to Phi node: let ternary_result%0.a#2: uint64 = φ(ternary_result%0.a#0 <- block@1) in block@1
debug: Added ternary_result%0.a#1 to Phi node: let ternary_result%0.a#2: uint64 = φ(ternary_result%0.a#0 <- block@1, ternary_result%0.a#1 <- block@2) in block@2
debug: Created Phi assignment: let ternary_result%0.b#2: uint64 = undefined while trying to resolve 'ternary_result%0.b' in block@3
debug: Added ternary_result%0.b#0 to Phi node: let ternary_result%0.b#2: uint64 = φ(ternary_result%0.b#0 <- block@1) in block@1
debug: Added ternary_result%0.b#1 to Phi node: let ternary_result%0.b#2: uint64 = φ(ternary_result%0.b#0 <- block@1, ternary_result%0.b#1 <- block@2) in block@2
debug: Terminated block@3
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'twm.arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let twm.arr#3: Encoded(len+uint64[]) = undefined while trying to resolve 'twm.arr' in block@1
debug: Looking for 'twm.child.a' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let twm.child.a#1: uint64 = undefined while trying to resolve 'twm.child.a' in block@1
debug: Looking for 'twm.child.b' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let twm.child.b#1: bytes = undefined while trying to resolve 'twm.child.b' in block@1
debug: Looking for 'twm.child.c' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let twm.child.c#1: string = undefined while trying to resolve 'twm.child.c' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added twm.arr#2 to Phi node: let twm.arr#3: Encoded(len+uint64[]) = φ(twm.arr#2 <- block@0) in block@0
debug: Added twm.arr#3 to Phi node: let twm.arr#3: Encoded(len+uint64[]) = φ(twm.arr#2 <- block@0, twm.arr#3 <- block@3) in block@3
debug: Replacing trivial Phi node: let twm.arr#3: Encoded(len+uint64[]) = φ(twm.arr#2 <- block@0, twm.arr#3 <- block@3) (twm.arr#3) with twm.arr#2
debug: Deleting Phi assignment: let twm.arr#3: Encoded(len+uint64[]) = φ(twm.arr#2 <- block@0, twm.arr#3 <- block@3)
debug: Replaced trivial Phi node: let twm.arr#3: Encoded(len+uint64[]) = φ(twm.arr#2 <- block@0, twm.arr#3 <- block@3) (twm.arr#3) with twm.arr#2 in current definition for 3 blocks
debug: Added twm.child.a#0 to Phi node: let twm.child.a#1: uint64 = φ(twm.child.a#0 <- block@0) in block@0
debug: Added twm.child.a#1 to Phi node: let twm.child.a#1: uint64 = φ(twm.child.a#0 <- block@0, twm.child.a#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let twm.child.a#1: uint64 = φ(twm.child.a#0 <- block@0, twm.child.a#1 <- block@3) (twm.child.a#1) with twm.child.a#0
debug: Deleting Phi assignment: let twm.child.a#1: uint64 = φ(twm.child.a#0 <- block@0, twm.child.a#1 <- block@3)
debug: Replaced trivial Phi node: let twm.child.a#1: uint64 = φ(twm.child.a#0 <- block@0, twm.child.a#1 <- block@3) (twm.child.a#1) with twm.child.a#0 in current definition for 3 blocks
debug: Added twm.child.b#0 to Phi node: let twm.child.b#1: bytes = φ(twm.child.b#0 <- block@0) in block@0
debug: Added twm.child.b#1 to Phi node: let twm.child.b#1: bytes = φ(twm.child.b#0 <- block@0, twm.child.b#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let twm.child.b#1: bytes = φ(twm.child.b#0 <- block@0, twm.child.b#1 <- block@3) (twm.child.b#1) with twm.child.b#0
debug: Deleting Phi assignment: let twm.child.b#1: bytes = φ(twm.child.b#0 <- block@0, twm.child.b#1 <- block@3)
debug: Replaced trivial Phi node: let twm.child.b#1: bytes = φ(twm.child.b#0 <- block@0, twm.child.b#1 <- block@3) (twm.child.b#1) with twm.child.b#0 in current definition for 3 blocks
debug: Added twm.child.c#0 to Phi node: let twm.child.c#1: string = φ(twm.child.c#0 <- block@0) in block@0
debug: Added twm.child.c#1 to Phi node: let twm.child.c#1: string = φ(twm.child.c#0 <- block@0, twm.child.c#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let twm.child.c#1: string = φ(twm.child.c#0 <- block@0, twm.child.c#1 <- block@3) (twm.child.c#1) with twm.child.c#0
debug: Deleting Phi assignment: let twm.child.c#1: string = φ(twm.child.c#0 <- block@0, twm.child.c#1 <- block@3)
debug: Replaced trivial Phi node: let twm.child.c#1: string = φ(twm.child.c#0 <- block@0, twm.child.c#1 <- block@3) (twm.child.c#1) with twm.child.c#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Sealing block@0
tuple_support/nested_tuples.py:142:24 debug: encountered already materialized expression (y), reusing result: (y.0#0, y.1.0#0, y.1.1#0)
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Sealing block@0
tuple_support/nested_tuples.py:168:9 debug: encountered already materialized expression ('build_nested_call_count'), reusing result: "build_nested_call_count"
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0.0.0#2: string = undefined while trying to resolve 'ternary_result%0.0.0' in block@3
debug: Added ternary_result%0.0.0#0 to Phi node: let ternary_result%0.0.0#2: string = φ(ternary_result%0.0.0#0 <- block@1) in block@1
debug: Added ternary_result%0.0.0#1 to Phi node: let ternary_result%0.0.0#2: string = φ(ternary_result%0.0.0#0 <- block@1, ternary_result%0.0.0#1 <- block@2) in block@2
debug: Created Phi assignment: let ternary_result%0.0.1#2: uint64 = undefined while trying to resolve 'ternary_result%0.0.1' in block@3
debug: Added ternary_result%0.0.1#0 to Phi node: let ternary_result%0.0.1#2: uint64 = φ(ternary_result%0.0.1#0 <- block@1) in block@1
debug: Added ternary_result%0.0.1#1 to Phi node: let ternary_result%0.0.1#2: uint64 = φ(ternary_result%0.0.1#0 <- block@1, ternary_result%0.0.1#1 <- block@2) in block@2
debug: Created Phi assignment: let ternary_result%0.1#2: bytes = undefined while trying to resolve 'ternary_result%0.1' in block@3
debug: Added ternary_result%0.1#0 to Phi node: let ternary_result%0.1#2: bytes = φ(ternary_result%0.1#0 <- block@1) in block@1
debug: Added ternary_result%0.1#1 to Phi node: let ternary_result%0.1#2: bytes = φ(ternary_result%0.1#0 <- block@1, ternary_result%0.1#1 <- block@2) in block@2
debug: Terminated block@3
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: removing unused subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: removing unused subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: removing unused subroutine test_cases.tuple_support.tuple_support.addw2
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: removing unused subroutine test_cases.tuple_support.tuple_support.slicing
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: removing unused subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: removing unused subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: removing unused subroutine test_cases.tuple_support.tuple_support.addw2
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: removing unused subroutine test_cases.tuple_support.tuple_support.slicing
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.echo
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.approval.000.ssa.ir
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.clear.000.ssa.ir
debug: optimizing approval program of test_cases.tuple_support.tuple_support.TupleSupport at level 1
debug: Begin optimization pass 1/100
debug: marking trivial method test_cases.tuple_support.tuple_support.get_tuple as inlineable
debug: marking single-use function test_cases.tuple_support.tuple_support.single_tuple for inlining
debug: marking trivial method test_cases.tuple_support.tuple_support.get_uint_with_side_effect as inlineable
debug: marking trivial method test_cases.tuple_support.tuple_support.non_empty_tuple as inlineable
debug: marking single-use function test_cases.tuple_support.tuple_support.bin_ops for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.bytes_combine for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.bytes_multiply for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.addw2 for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.test_tuple_swap for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.slicing for inlining
debug: marking trivial method test_cases.tuple_support.tuple_support.test_empty as inlineable
debug: marking trivial method test_cases.tuple_support.tuple_support.TupleSupport.__init__ as inlineable
debug: marking single-use function test_cases.tuple_support.tuple_support.TupleSupport.approval_program for inlining
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.tuple_support.tuple_support.TupleSupport.approval_program in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: inlining call to test_cases.tuple_support.tuple_support.TupleSupport.__init__ in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, total#0
debug: selected total#0 from equivalence set
debug: Found equivalence set: tmp%2#0, did_overflow#0
debug: selected did_overflow#0 from equivalence set
debug: Found equivalence set: tmp%6#0, result.0#0
debug: selected result.0#0 from equivalence set
debug: Found equivalence set: tmp%7#0, result.1#0
debug: selected result.1#0 from equivalence set
debug: Found equivalence set: awst_tmp%0#0, ternary_result%0.0#0
debug: selected awst_tmp%0#0 from equivalence set
debug: Found equivalence set: awst_tmp%1#0, ternary_result%0.1#0
debug: selected awst_tmp%1#0 from equivalence set
debug: Found equivalence set: ternary_result%0.0#2, m#0
debug: selected m#0 from equivalence set
debug: Found equivalence set: ternary_result%0.1#2, n#0
debug: selected n#0 from equivalence set
debug: Found equivalence set: tmp%25#0, hi#0
debug: selected hi#0 from equivalence set
debug: Found equivalence set: tmp%26#0, mid#0
debug: selected mid#0 from equivalence set
debug: Found equivalence set: tmp%27#0, lo#0
debug: selected lo#0 from equivalence set
debug: Found equivalence set: tmp%38#0, tmp%1#0
debug: selected tmp%38#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a#0
debug: Removing unused variable b#0
debug: Removing unused variable ab.0#0
debug: Removing unused variable ab.1#0
debug: Removing unused variable d#0
debug: Removing unused variable c#0
debug: Removing unused variable a2#0
debug: Removing unused variable b2#0
debug: Removing unused variable cd.0#0
debug: Removing unused variable cd.1#0
debug: Removing unused variable ab2.0#0
debug: Removing unused variable ab2.1#0
debug: Removing unused variable max_uint64#0
debug: Removing unused variable x.0#0
debug: Removing unused variable x.1#0
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== did_overflow#0 0u) to (! did_overflow#0)
debug: Simplified (== 2u 2u) to 1u
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== result.0#0 0u) to (! result.0#0)
debug: Simplified (== 1u 2u) to 0u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== awst_tmp%0#0 awst_tmp%0#0) to 1u
debug: Simplified (== awst_tmp%1#0 awst_tmp%1#0) to 1u
debug: Simplified (|| 1u 1u) to 1u
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== awst_tmp%2#0 awst_tmp%2#0) to 1u
debug: Simplified (== awst_tmp%3#0 awst_tmp%3#0) to 1u
debug: Simplified (|| 1u 1u) to 1u
debug: Simplified (== awst_tmp%4#0 awst_tmp%4#0) to 1u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== 0x 0x) to 1u
debug: Simplified (+ 1u 2u) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@3 from goto 0u ? block@4 : block@5 to goto block@5
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@6 from goto 1u ? block@7 : block@8 to goto block@7
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@9 from goto 1u ? block@10 : block@11 to goto block@10
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@11 from goto 1u ? block@12 : block@13 to goto block@12
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@15 with block@1 in block@16
debug: Merged linear block@15 into block@1
debug: Replaced predecessor block@16 with block@1 in block@2
debug: Merged linear block@16 into block@1
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@5 with block@2 in block@6
debug: Merged linear block@5 into block@2
debug: Replaced predecessor block@7 with block@6 in block@9
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@10 with block@9 in block@11
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@11 with block@9 in block@12
debug: Merged linear block@11 into block@9
debug: Replaced predecessor block@12 with block@9 in block@13
debug: Merged linear block@12 into block@9
debug: Replaced predecessor block@13 with block@9 in block@14
debug: Merged linear block@13 into block@9
debug: Merged linear block@14 into block@9
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@4
debug: Removing unreachable block: block@8
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let (result.0#0: uint64, result.1#0: uint64) = (addw 1u 2u) with copy of existing registers [Register(source_location=tuple_support/tuple_support.py:12:9-21, ir_type=uint64, name='did_overflow', version=0), Register(source_location=tuple_support/tuple_support.py:12:37-50, ir_type=uint64, name='tmp%3', version=0)]
debug: Replacing redundant declaration let (tmp%23#0: uint64, tmp%24#0: uint64) = (addw 1u 2u) with copy of existing registers [Register(source_location=tuple_support/tuple_support.py:12:9-21, ir_type=uint64, name='did_overflow', version=0), Register(source_location=tuple_support/tuple_support.py:12:37-50, ir_type=uint64, name='tmp%3', version=0)]
debug: Found equivalence set: did_overflow#0, result.0#0, tmp%23#0
debug: selected did_overflow#0 from equivalence set
debug: Found equivalence set: tmp%3#0, result.1#0, tmp%24#0
debug: selected result.1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Replacing redundant declaration let tmp%8#0: bool = (! did_overflow#0) with copy of existing registers [Register(source_location=tuple_support/tuple_support.py:13:15-31, ir_type=bool, name='tmp%4', version=0)]
debug: Found equivalence set: tmp%4#0, tmp%8#0
debug: selected tmp%4#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of tmp%4#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tup.0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a.0#0
debug: Removing unused variable a.1#0
debug: Removing unused variable a.2#0
debug: Removing unused variable tup.0#0
debug: Removing unused variable tup.1#0
debug: Removing unused variable b.0#0
debug: Removing unused variable b.1#0
debug: Removing unused variable b.2#0
debug: Removing unused variable b.3#0
debug: Removing unused variable b.4#0
debug: Removing unused variable b.5#0
debug: Removing unused variable c.0#0
debug: Removing unused variable c.1#0
debug: Removing unused variable c.2#0
debug: Removing unused variable d.0#0
debug: Removing unused variable d.1#0
debug: Removing unused variable d.2#0
debug: Removing unused variable d.3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 0x32 0x32) to 1u
debug: Simplified (== 3u 3u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arg.0#0, a#0
debug: selected arg.0#0 from equivalence set
debug: Found equivalence set: arg.1#0, b#0
debug: selected arg.1#0 from equivalence set
debug: Found equivalence set: tmp%0#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arg.0#0, b#0
debug: selected arg.0#0 from equivalence set
debug: Found equivalence set: arg.1#0, count#0
debug: selected arg.1#0 from equivalence set
debug: Found equivalence set: tmp%0#0, result#2
debug: selected result#2 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: values.0#0, value#0
debug: selected values.0#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: values.1#0, value#2
debug: selected values.1#0 from equivalence set
debug: Found equivalence set: values.2#0, value#3
debug: selected values.2#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.addw2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: a.0#0, a_hi#0
debug: selected a.0#0 from equivalence set
debug: Found equivalence set: a.1#0, a_lo#0
debug: selected a.1#0 from equivalence set
debug: Found equivalence set: b.0#0, b_hi#0
debug: selected b.0#0 from equivalence set
debug: Found equivalence set: b.1#0, b_lo#0
debug: selected b.1#0 from equivalence set
debug: Found equivalence set: tmp%0#0, lo_carry#0
debug: selected lo_carry#0 from equivalence set
debug: Found equivalence set: tmp%1#0, c_lo#0
debug: selected c_lo#0 from equivalence set
debug: Found equivalence set: tmp%2#0, hi_carry1#0
debug: selected hi_carry1#0 from equivalence set
debug: Found equivalence set: tmp%3#0, c_mid#0
debug: selected c_mid#0 from equivalence set
debug: Found equivalence set: tmp%4#0, hi_carry2#0
debug: selected hi_carry2#0 from equivalence set
debug: Found equivalence set: tmp%5#0, c_mid#1
debug: selected c_mid#1 from equivalence set
debug: Found equivalence set: tmp%6#0, did_overflow#0
debug: selected did_overflow#0 from equivalence set
debug: Found equivalence set: tmp%7#0, c_hi#0
debug: selected c_hi#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== did_overflow#0 0u) to (! did_overflow#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, a#0, b#1
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%1#0, b#0, a#1
debug: selected b#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.slicing
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: values.0#0, one_to_three.0#0
debug: selected values.0#0 from equivalence set
debug: Found equivalence set: values.1#0, one_to_three.1#0
debug: selected values.1#0 from equivalence set
debug: Found equivalence set: values.2#0, one_to_three.2#0
debug: selected values.2#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== values.1#0 values.1#0) to 1u
debug: Simplified (== values.0#0 values.0#0) to 1u
debug: Simplified (== values.1#0 values.1#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== values.2#0 values.2#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_support.py:59:9 debug: inlining call to test_cases.tuple_support.tuple_support.single_tuple in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:64:9 debug: inlining call to test_cases.tuple_support.tuple_support.test_empty in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:57:13 debug: inlining call to test_cases.tuple_support.tuple_support.get_uint_with_side_effect in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:34:13 debug: inlining call to test_cases.tuple_support.tuple_support.bytes_combine in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:36:23 debug: inlining call to test_cases.tuple_support.tuple_support.addw2 in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:40:13 debug: inlining call to test_cases.tuple_support.tuple_support.bytes_multiply in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:41:9 debug: inlining call to test_cases.tuple_support.tuple_support.test_tuple_swap in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:42:9 debug: inlining call to test_cases.tuple_support.tuple_support.slicing in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:54:9 debug: inlining call to test_cases.tuple_support.tuple_support.bin_ops in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:55:12 debug: inlining call to test_cases.tuple_support.tuple_support.non_empty_tuple in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:29:37 debug: inlining call to test_cases.tuple_support.tuple_support.get_tuple in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
tuple_support/tuple_support.py:29:18 debug: inlining call to test_cases.tuple_support.tuple_support.get_tuple in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, total#0
debug: selected total#0 from equivalence set
debug: Found equivalence set: tmp%2#0, did_overflow#0
debug: selected did_overflow#0 from equivalence set
debug: Found equivalence set: tmp%6#0, result.0#0
debug: selected result.0#0 from equivalence set
debug: Found equivalence set: tmp%7#0, result.1#0
debug: selected result.1#0 from equivalence set
debug: Found equivalence set: ternary_result%0.0#2, m#0
debug: selected m#0 from equivalence set
debug: Found equivalence set: ternary_result%0.1#2, n#0
debug: selected n#0 from equivalence set
debug: Found equivalence set: result#0, tmp%20#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%21#0, a.0#0
debug: selected a.0#0 from equivalence set
debug: Found equivalence set: tmp%22#0, a.1#0
debug: selected a.1#0 from equivalence set
debug: Found equivalence set: tmp%23#0, b.0#0
debug: selected b.0#0 from equivalence set
debug: Found equivalence set: tmp%24#0, b.1#0
debug: selected b.1#0 from equivalence set
debug: Found equivalence set: c_hi#0, tmp%25#0, hi#0
debug: selected c_hi#0 from equivalence set
debug: Found equivalence set: c_mid#1, tmp%26#0, mid#0
debug: selected c_mid#1 from equivalence set
debug: Found equivalence set: c_lo#0, tmp%27#0, lo#0
debug: selected c_lo#0 from equivalence set
debug: Found equivalence set: result#2, tmp%31#0
debug: selected result#2 from equivalence set
debug: Copy propagation made 15 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a#0
debug: Removing unused variable b#0
debug: Removing unused variable ab.0#0
debug: Removing unused variable ab.1#0
debug: Removing unused variable d#0
debug: Removing unused variable c#0
debug: Removing unused variable a2#0
debug: Removing unused variable b2#0
debug: Removing unused variable cd.0#0
debug: Removing unused variable cd.1#0
debug: Removing unused variable ab2.0#0
debug: Removing unused variable ab2.1#0
debug: Removing unused variable a#3
debug: Removing unused variable b#3
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable a#2
debug: Removing unused variable b#2
debug: Removing unused variable arg.0#0
debug: Removing unused variable arg.1#0
debug: Removing unused variable max_uint64#0
debug: Removing unused variable arg.0#1
debug: Removing unused variable arg.1#1
debug: Removing unused variable zero#0
debug: Removing unused variable values.0#0
debug: Removing unused variable values.1#0
debug: Removing unused variable values.2#0
debug: Removing unused variable values.3#0
debug: Removing unused variable values.4#0
debug: Removing unused variable values.5#0
debug: Removing unused variable values.6#0
debug: Removing unused variable values.7#0
debug: Removing unused variable tmp%4#1
debug: Removing unused variable tmp%5#1
debug: Removing unused variable tmp%6#1
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%9#1
debug: Removing unused variable tmp%0#3
debug: Removing unused variable tmp%1#2
debug: Removing unused variable tmp%2#3
debug: Removing unused variable tmp%3#3
debug: Removing unused variable tmp%4#2
debug: Removing unused variable tmp%5#2
debug: Removing unused variable tmp%6#2
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#3
debug: Removing unused variable tmp%9#2
debug: Removing unused variable tmp%10#1
debug: Removing unused variable tmp%11#1
debug: Removing unused variable tmp%12#1
debug: Removing unused variable tmp%13#1
debug: Removing unused variable tmp%14#1
debug: Removing unused variable tmp%15#1
debug: Removing unused variable awst_tmp%2#0
debug: Removing unused variable awst_tmp%3#0
debug: Removing unused variable awst_tmp%4#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable x.0#0
debug: Removing unused variable x.1#0
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== did_overflow#0 0u) to (! did_overflow#0)
debug: Simplified (== 2u 2u) to 1u
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== result.0#0 0u) to (! result.0#0)
debug: Simplified (== 1u 2u) to 0u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (|| 1u 1u) to 1u
debug: Simplified (concat 0x48656c6c6f2c20 0x776f726c6421) to 0x48656c6c6f2c20776f726c6421
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Don't know how to simplify 1 addw 2
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (+ 1u 2u) to 3u
debug: Simplified (+ 3u 3u) to 6u
debug: Simplified (== 4u 4u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (|| 1u 1u) to 1u
debug: Simplified (== 4u 4u) to 1u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== 0x 0x) to 1u
debug: Simplified (+ 1u 2u) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 0u ? block@1 : block@2 to goto block@2
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@37 from goto 1u ? block@4 : block@5 to goto block@4
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@33 from goto 1u ? block@7 : block@8 to goto block@7
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@16 from goto 1u ? block@9 : block@10 to goto block@9
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@36 with block@3 in block@37
debug: Merged linear block@36 into block@3
debug: Replaced predecessor block@37 with block@3 in block@4
debug: Merged linear block@37 into block@3
debug: Replaced predecessor block@4 with block@3 in block@6
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@34 with block@5 in block@35
debug: Merged linear block@34 into block@5
debug: Replaced predecessor block@35 with block@5 in block@6
debug: Merged linear block@35 into block@5
debug: Replaced predecessor block@17 with block@6 in block@18
debug: Merged linear block@17 into block@6
debug: Replaced predecessor block@18 with block@6 in block@19
debug: Merged linear block@18 into block@6
debug: Replaced predecessor block@19 with block@6 in block@20
debug: Merged linear block@19 into block@6
debug: Replaced predecessor block@20 with block@6 in block@21
debug: Merged linear block@20 into block@6
debug: Replaced predecessor block@21 with block@6 in block@22
debug: Merged linear block@21 into block@6
debug: Replaced predecessor block@25 with block@24 in block@26
debug: Merged linear block@25 into block@24
debug: Replaced predecessor block@26 with block@24 in block@27
debug: Merged linear block@26 into block@24
debug: Replaced predecessor block@27 with block@24 in block@28
debug: Merged linear block@27 into block@24
debug: Replaced predecessor block@28 with block@24 in block@29
debug: Merged linear block@28 into block@24
debug: Replaced predecessor block@29 with block@24 in block@30
debug: Merged linear block@29 into block@24
debug: Replaced predecessor block@30 with block@24 in block@31
debug: Merged linear block@30 into block@24
debug: Replaced predecessor block@31 with block@24 in block@32
debug: Merged linear block@31 into block@24
debug: Replaced predecessor block@32 with block@24 in block@33
debug: Merged linear block@32 into block@24
debug: Replaced predecessor block@33 with block@24 in block@7
debug: Merged linear block@33 into block@24
debug: Replaced predecessor block@7 with block@24 in block@8
debug: Merged linear block@7 into block@24
debug: Replaced predecessor block@8 with block@24 in block@15
debug: Merged linear block@8 into block@24
debug: Replaced predecessor block@15 with block@24 in block@16
debug: Merged linear block@15 into block@24
debug: Replaced predecessor block@16 with block@24 in block@9
debug: Merged linear block@16 into block@24
debug: Replaced predecessor block@9 with block@24 in block@10
debug: Merged linear block@9 into block@24
debug: Replaced predecessor block@10 with block@24 in block@11
debug: Merged linear block@10 into block@24
debug: Replaced predecessor block@11 with block@24 in block@12
debug: Merged linear block@11 into block@24
debug: Replaced predecessor block@12 with block@24 in block@13
debug: Merged linear block@12 into block@24
debug: Replaced predecessor block@13 with block@24 in block@14
debug: Merged linear block@13 into block@24
debug: Merged linear block@14 into block@24
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@1
debug: Removing unreachable block: block@5
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let (result.0#0: uint64, result.1#0: uint64) = (addw 1u 2u) with copy of existing registers [Register(source_location=tuple_support/tuple_support.py:12:9-21, ir_type=uint64, name='did_overflow', version=0), Register(source_location=tuple_support/tuple_support.py:12:37-50, ir_type=uint64, name='tmp%3', version=0)]
debug: Replacing redundant declaration let (b.0#0: uint64, b.1#0: uint64) = (addw 1u 2u) with copy of existing registers [Register(source_location=tuple_support/tuple_support.py:12:9-21, ir_type=uint64, name='did_overflow', version=0), Register(source_location=tuple_support/tuple_support.py:12:37-50, ir_type=uint64, name='tmp%3', version=0)]
debug: Found equivalence set: did_overflow#0, result.0#0, b.0#0
debug: selected did_overflow#0 from equivalence set
debug: Found equivalence set: tmp%3#0, result.1#0, b.1#0
debug: selected result.1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Replacing redundant declaration let tmp%8#0: bool = (! did_overflow#0) with copy of existing registers [Register(source_location=tuple_support/tuple_support.py:13:15-31, ir_type=bool, name='tmp%4', version=0)]
debug: Found equivalence set: tmp%4#0, tmp%8#0
debug: selected tmp%4#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of tmp%4#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: removing unused subroutine test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking trivial method test_cases.tuple_support.tuple_support.get_tuple as inlineable
debug: marking single-use function test_cases.tuple_support.tuple_support.single_tuple for inlining
debug: marking trivial method test_cases.tuple_support.tuple_support.get_uint_with_side_effect as inlineable
debug: marking trivial method test_cases.tuple_support.tuple_support.non_empty_tuple as inlineable
debug: marking single-use function test_cases.tuple_support.tuple_support.bin_ops for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.bytes_combine for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.bytes_multiply for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.addw2 for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.test_tuple_swap for inlining
debug: marking single-use function test_cases.tuple_support.tuple_support.slicing for inlining
debug: marking trivial method test_cases.tuple_support.tuple_support.test_empty as inlineable
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_support.py:34:13 debug: inlining call to test_cases.tuple_support.tuple_support.bytes_combine in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:36:23 debug: inlining call to test_cases.tuple_support.tuple_support.addw2 in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:40:13 debug: inlining call to test_cases.tuple_support.tuple_support.bytes_multiply in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:41:9 debug: inlining call to test_cases.tuple_support.tuple_support.test_tuple_swap in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:42:9 debug: inlining call to test_cases.tuple_support.tuple_support.slicing in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:54:9 debug: inlining call to test_cases.tuple_support.tuple_support.bin_ops in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:55:12 debug: inlining call to test_cases.tuple_support.tuple_support.non_empty_tuple in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:57:13 debug: inlining call to test_cases.tuple_support.tuple_support.get_uint_with_side_effect in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:59:9 debug: inlining call to test_cases.tuple_support.tuple_support.single_tuple in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:64:9 debug: inlining call to test_cases.tuple_support.tuple_support.test_empty in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
tuple_support/tuple_support.py:29:18 debug: inlining call to test_cases.tuple_support.tuple_support.get_tuple in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: result#0, tmp%20#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%21#0, a.0#0
debug: selected a.0#0 from equivalence set
debug: Found equivalence set: tmp%22#0, a.1#0
debug: selected a.1#0 from equivalence set
debug: Found equivalence set: did_overflow#0, b.0#0
debug: selected did_overflow#0 from equivalence set
debug: Found equivalence set: result.1#0, b.1#0
debug: selected result.1#0 from equivalence set
debug: Found equivalence set: c_hi#0, hi#0
debug: selected c_hi#0 from equivalence set
debug: Found equivalence set: c_mid#1, mid#0
debug: selected c_mid#1 from equivalence set
debug: Found equivalence set: c_lo#0, lo#0
debug: selected c_lo#0 from equivalence set
debug: Found equivalence set: result#2, tmp%31#0
debug: selected result#2 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tup.0#1
debug: Removing unused variable tup.1#1
debug: Removing unused variable tup.0#2
debug: Removing unused variable tup.1#2
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable a#1
debug: Removing unused variable b#1
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%16#0
debug: Removing unused variable m#0
debug: Removing unused variable n#0
debug: Removing unused variable arg.0#0
debug: Removing unused variable arg.1#0
debug: Removing unused variable arg.0#1
debug: Removing unused variable arg.1#1
debug: Removing unused variable zero#0
debug: Removing unused variable values.0#0
debug: Removing unused variable values.1#0
debug: Removing unused variable values.2#0
debug: Removing unused variable values.3#0
debug: Removing unused variable values.4#0
debug: Removing unused variable values.5#0
debug: Removing unused variable values.6#0
debug: Removing unused variable values.7#0
debug: Removing unused variable tmp%4#1
debug: Removing unused variable tmp%5#1
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#1
debug: Removing unused variable tmp%9#1
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%1#3
debug: Removing unused variable tmp%2#2
debug: Removing unused variable tmp%3#2
debug: Removing unused variable tmp%4#2
debug: Removing unused variable tmp%5#2
debug: Removing unused variable tmp%6#1
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%9#2
debug: Removing unused variable tmp%10#1
debug: Removing unused variable tmp%11#1
debug: Removing unused variable tmp%12#1
debug: Removing unused variable tmp%13#1
debug: Removing unused variable tmp%14#1
debug: Removing unused variable tmp%15#1
debug: Removing unused variable awst_tmp%2#0
debug: Removing unused variable awst_tmp%3#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%33#0
debug: Removing unused variable tmp%34#0
debug: Removing unused variable awst_tmp%4#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%0#3
debug: Removing unused variable tmp%36#0
debug: Removing unused variable tmp%37#0
debug: Removing unused variable tmp%38#0
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== 3u 3u) to 1u
debug: Simplified (== 3u 3u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (concat 0x48656c6c6f2c20 0x776f726c6421) to 0x48656c6c6f2c20776f726c6421
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (+ 1u 2u) to 3u
debug: Simplified (+ 3u 3u) to 6u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@6 with block@2 in block@33
debug: Merged linear block@6 into block@2
debug: Replaced predecessor block@33 with block@2 in block@34
debug: Merged linear block@33 into block@2
debug: Replaced predecessor block@34 with block@2 in block@9
debug: Merged linear block@34 into block@2
debug: Replaced predecessor block@9 with block@2 in block@10
debug: Merged linear block@9 into block@2
debug: Replaced predecessor block@10 with block@2 in block@11
debug: Merged linear block@10 into block@2
debug: Replaced predecessor block@11 with block@2 in block@12
debug: Merged linear block@11 into block@2
debug: Replaced predecessor block@12 with block@2 in block@13
debug: Merged linear block@12 into block@2
debug: Replaced predecessor block@13 with block@2 in block@14
debug: Merged linear block@13 into block@2
debug: Replaced predecessor block@14 with block@2 in block@15
debug: Merged linear block@14 into block@2
debug: Replaced predecessor block@18 with block@17 in block@19
debug: Merged linear block@18 into block@17
debug: Replaced predecessor block@19 with block@17 in block@20
debug: Merged linear block@19 into block@17
debug: Replaced predecessor block@20 with block@17 in block@21
debug: Merged linear block@20 into block@17
debug: Replaced predecessor block@21 with block@17 in block@22
debug: Merged linear block@21 into block@17
debug: Replaced predecessor block@22 with block@17 in block@23
debug: Merged linear block@22 into block@17
debug: Replaced predecessor block@23 with block@17 in block@24
debug: Merged linear block@23 into block@17
debug: Replaced predecessor block@24 with block@17 in block@25
debug: Merged linear block@24 into block@17
debug: Replaced predecessor block@25 with block@17 in block@26
debug: Merged linear block@25 into block@17
debug: Replaced predecessor block@26 with block@17 in block@27
debug: Merged linear block@26 into block@17
debug: Replaced predecessor block@27 with block@17 in block@28
debug: Merged linear block@27 into block@17
debug: Replaced predecessor block@28 with block@17 in block@29
debug: Merged linear block@28 into block@17
debug: Replaced predecessor block@29 with block@17 in block@30
debug: Merged linear block@29 into block@17
debug: Replaced predecessor block@30 with block@17 in block@31
debug: Merged linear block@30 into block@17
debug: Replaced predecessor block@31 with block@17 in block@32
debug: Merged linear block@31 into block@17
debug: Merged linear block@32 into block@17
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.addw2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.slicing
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: removing unused subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: removing unused subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: removing unused subroutine test_cases.tuple_support.tuple_support.addw2
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: removing unused subroutine test_cases.tuple_support.tuple_support.slicing
debug: removing unused subroutine test_cases.tuple_support.tuple_support.test_empty
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable result#0
debug: Removing unused variable a#0
debug: Removing unused variable b#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%1#2
debug: Removing unused variable tmp%2#1
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.tuple_support.tuple_support.TupleSupport at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.tuple_support.tuple_support.TupleSupport
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.tuple_support.tuple_support.TupleSupport
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.tuple_support.tuple_support.TupleSupport at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.tuple_support.tuple_support.TupleSupport at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.tuple_support.tuple_support.TupleSupport
debug: auto reserving slots in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init, []
tuple_support/tuple_support.py:138 debug: auto reserving slots in test_cases.tuple_support.tuple_support.add_three_values, []
debug: Slot allocation not required
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.tuple_support.tuple_support.TupleSupport
tuple_support/tuple_support.py:67 debug: auto reserving slots in test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: splitting critical edge block@0->block@2
debug: Replaced predecessor block@0 with block@18 in block@2
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing did_overflow#0 with [did_overflow#1]
debug: Coalescing c_mid#0 with [c_mid#1]
debug: Coalescing result#1 with [result#2, result#3]
debug: Coalescing _i#0 with [_i#1, _i#2]
debug: Coalescing resulted in 16 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@18
debug: branching to block@18 will be replaced with block@2
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_support.add_three_values
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.add_three_values using strategy 'root_operand'
debug: Coalescing total#0 with [total#1, total#2]
debug: Coalescing loop_counter%0#0 with [loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing resulted in 16 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.add_three_values
debug: loc: {value#1=None, values.0#0=values.0#0}
debug: pred: {value#1=values.0#0}
debug: ready: value#1
debug: to_do: value#1
debug: * avail value#1
debug: * avail values.0#0
debug: * to_do value#1
debug: loc: {value#1=None, values.1#0=values.1#0}
debug: pred: {value#1=values.1#0}
debug: ready: value#1
debug: to_do: value#1
debug: * avail value#1
debug: * avail values.1#0
debug: * to_do value#1
debug: loc: {value#1=None, values.2#0=values.2#0}
debug: pred: {value#1=values.2#0}
debug: ready: value#1
debug: to_do: value#1
debug: * avail value#1
debug: * avail values.2#0
debug: * to_do value#1
debug: Performing post-SSA optimizations at level 1
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to tuple_support/out/TupleSupport.ir/TupleSupport.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[4]: 'l-store-copy total#0 0'
debug: Replaced main_after_if_else@2.ops[6]: 'v-load total#0' with 'l-load total#0'
debug: Inserted main_after_if_else@2.ops[8]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_after_if_else@2.ops[10]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_after_if_else@2.ops[22]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_after_if_else@2.ops[24]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_after_if_else@2.ops[52]: 'l-store-copy did_overflow#0 0'
debug: Replaced main_after_if_else@2.ops[54]: 'v-load did_overflow#0' with 'l-load did_overflow#0'
debug: Inserted main_after_if_else@2.ops[56]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_after_if_else@2.ops[58]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_after_if_else@2.ops[62]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_after_if_else@2.ops[64]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_after_if_else@2.ops[68]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_after_if_else@2.ops[70]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_after_if_else@2.ops[74]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_after_if_else@2.ops[76]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_after_if_else@2.ops[31]: 'l-store-copy a.1#0 1'
debug: Replaced main_after_if_else@2.ops[34]: 'v-load a.1#0' with 'l-load a.1#0'
debug: Inserted main_after_if_else@2.ops[42]: 'l-store-copy c_mid#0 1'
debug: Replaced main_after_if_else@2.ops[45]: 'v-load c_mid#0' with 'l-load c_mid#0'
debug: Inserted main_after_if_else@2.ops[49]: 'l-store-copy hi_carry2#0 0'
debug: Replaced main_after_if_else@2.ops[52]: 'v-load hi_carry2#0' with 'l-load hi_carry2#0'
debug: Inserted main_after_if_else@2.ops[15]: 'l-store-copy result.1#0 1'
debug: Replaced main_after_if_else@2.ops[19]: 'v-load result.1#0' with 'l-load result.1#0'
debug: Inserted main_after_if_else@2.ops[17]: 'l-store-copy did_overflow#0 1'
debug: Replaced main_after_if_else@2.ops[22]: 'v-load did_overflow#0' with 'l-load did_overflow#0'
debug: Inserted main_after_if_else@2.ops[35]: 'l-store-copy a.0#0 1'
debug: Replaced main_after_if_else@2.ops[42]: 'v-load a.0#0' with 'l-load a.0#0'
debug: Inserted main_after_if_else@2.ops[47]: 'l-store-copy hi_carry1#0 1'
debug: Replaced main_after_if_else@2.ops[55]: 'v-load hi_carry1#0' with 'l-load hi_carry1#0'
debug: Inserted main_after_if_else@2.ops[41]: 'l-store-copy lo_carry#0 1'
debug: Replaced main_after_if_else@2.ops[51]: 'v-load lo_carry#0' with 'l-load lo_carry#0'
debug: Inserted main_after_if_else@2.ops[59]: 'l-store-copy c_hi#0 1'
debug: Replaced main_after_if_else@2.ops[69]: 'v-load c_hi#0' with 'l-load c_hi#0'
debug: Inserted main_after_if_else@2.ops[21]: 'l-store-copy result.1#0 2'
debug: Replaced main_after_if_else@2.ops[39]: 'v-load result.1#0' with 'l-load result.1#0'
debug: Inserted main_after_if_else@2.ops[54]: 'l-store-copy c_mid#0 2'
debug: Replaced main_after_if_else@2.ops[77]: 'v-load c_mid#0' with 'l-load c_mid#0'
debug: Inserted main_after_if_else@2.ops[24]: 'l-store-copy did_overflow#0 1'
debug: Replaced main_after_if_else@2.ops[46]: 'v-load did_overflow#0' with 'l-load did_overflow#0'
debug: Inserted main_after_if_else@2.ops[42]: 'l-store-copy c_lo#0 3'
debug: Replaced main_after_if_else@2.ops[85]: 'v-load c_lo#0' with 'l-load c_lo#0'
debug: Inserted main_for_header@15.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@15.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_after_for@17.ops[6]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_after_for@17.ops[8]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_after_for@17.ops[11]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_after_for@17.ops[13]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Found 3 edge set/s for test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init
debug: Found 2 edge set/s for test_cases.tuple_support.tuple_support.add_three_values
debug: Allocated 2 variable/s to x-stack: loop_counter%0#0, value#1
debug: shared x-stack for add_three_values_block@0 -> add_three_values_for_body@1: value#1, loop_counter%0#0
debug: shared x-stack for add_three_values_for_header_1@3 -> add_three_values_for_body@1: value#1, loop_counter%0#0
debug: shared x-stack for add_three_values_for_header_2@4 -> add_three_values_for_body@1: value#1, loop_counter%0#0
debug: test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init f-stack entry: ['result#1', '_i#0']
debug: test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init f-stack on first store: []
debug: test_cases.tuple_support.tuple_support.add_three_values f-stack entry: []
debug: test_cases.tuple_support.tuple_support.add_three_values f-stack on first store: ['total#0']
debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init() -> uint64:
tuple_support/tuple_support.py:138 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_support.add_three_values(values.0: uint64, values.1: uint64, values.2: uint64) -> uint64:
debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_support.TupleSupport.__algopy_entrypoint_with_init() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_for_body@16 into main_for_header@15
debug: removing explicit jump to fall-through block main_after_if_else@2
debug: removing explicit jump to fall-through block main_for_header@15
tuple_support/tuple_support.py:138 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_support.add_three_values(values.0: uint64, values.1: uint64, values.2: uint64) -> uint64:
debug: inlining single reference block add_three_values_block@0 into add_three_values
debug: inlining single reference block add_three_values_after_for@5 into add_three_values_for_body@1
debug: removing explicit jump to fall-through block add_three_values_for_body@1
tuple_support/tuple_support.py:67 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program() -> uint64:
tuple_support/tuple_support.py:67 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.000.ssa.ir
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.clear.000.ssa.ir
debug: optimizing approval program of test_cases.tuple_support.tuple_storage.NestedTuplesStorage at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__init__ for inlining
debug: marking single-use function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap for inlining
debug: marking single-use function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple for inlining
debug: marking single-use function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box for inlining
debug: marking single-use function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global for inlining
debug: marking single-use function test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__init__ in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>(0x0000000000000000) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:17:16-49, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Replacing redundant declaration let encoded_array%2#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>(0x0000000000000000) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:17:16-49, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0, encoded_array%2#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_default_create in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (&& tmp%4#0 tmp%6#0) to (&& tmp%4#0 tmp%5#0)
debug: Simplified (== tmp%8#0 NoOp) to (! tmp%8#0)
debug: Simplified (== tmp%13#0 NoOp) to (! tmp%13#0)
debug: Simplified (== tmp%15#0 0u) to (! tmp%15#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@13 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@14 with block@12 in block@15
debug: Merged linear block@14 into block@12
debug: Merged linear block@15 into block@12
debug: Merged linear block@13 into block@11
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@9
debug: Removing jump block block@10
debug: branching to block@9 will be replaced with block@11
debug: branching to block@10 will be replaced with block@11
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_storage.py:23:6 debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>(0x0000000000000000) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:25:47-80, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_storage.py:28:6 debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_storage.py:32:6 debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_storage.py:36:6 debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_storage.py:40:6 debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>(0x0000000000000000) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:17:16-49, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Replacing redundant declaration let encoded_array%2#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>(0x0000000000000000) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:17:16-49, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0, encoded_array%2#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>(0x0000000000000000) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:25:47-80, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%11#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@4 from goto tmp%10#0 ? block@5 : block@10 to goto block@5
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@11
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Replaced predecessor block@5 with block@4 in block@7
debug: Replaced predecessor block@5 with block@4 in block@8
debug: Replaced predecessor block@5 with block@4 in block@9
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@12
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__init__
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__ in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%11#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@6 from goto tmp%10#0 ? block@7 : block@12 to goto block@7
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@13
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@8
debug: Replaced predecessor block@7 with block@6 in block@9
debug: Replaced predecessor block@7 with block@6 in block@10
debug: Replaced predecessor block@7 with block@6 in block@11
debug: Replaced predecessor block@7 with block@6 in block@12
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@14
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%11#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@3 from goto tmp%10#0 ? block@4 : block@11 to goto block@4
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@4 with block@3 in block@5
debug: Replaced predecessor block@4 with block@3 in block@6
debug: Replaced predecessor block@4 with block@3 in block@7
debug: Replaced predecessor block@4 with block@3 in block@8
debug: Replaced predecessor block@4 with block@3 in block@11
debug: Merged linear block@4 into block@3
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.tuple_support.tuple_storage.NestedTuplesStorage at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.tuple_support.tuple_storage.NestedTuplesStorage
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.tuple_support.tuple_storage.NestedTuplesStorage
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.tuple_support.tuple_storage.NestedTuplesStorage at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(len+uint64[])%0#0, encoded_array%0#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint64[]),uint64)%0#0, encoded_for_storage%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%0#0, awst_tmp%0#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, awst_tmp%1#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded((len+uint64[]),uint64)%1#0, encoded_for_storage%1#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%1#0, awst_tmp%2#0
debug: selected aggregate%substring3%1#0 from equivalence set
debug: Found equivalence set: aggregate%item1%1#0, awst_tmp%3#0
debug: selected aggregate%item1%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%concat%2#0, aggregate%as_Encoded((len+uint64[]),uint64)%2#0, encoded_for_storage%2#0
debug: selected aggregate%concat%2#0 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%substring3%0#0
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%substring3%1#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%extract_uint16%0#0
debug: Removing unused variable aggregate%len%0#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%extract_uint16%1#0
debug: Removing unused variable aggregate%len%1#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0001
debug: Simplified (concat 0x0001 0x0000000000000000) to 0x00010000000000000000
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (concat 0x000a aggregate%val_as_bytes%0#0) to 0x000a0000000000000000
debug: Simplified (concat 0x000a0000000000000000 0x00010000000000000000) to 0x000a000000000000000000010000000000000000
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 maybe_value%0#0 2u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob aggregate%item1%0#0) to (extract3 maybe_value%0#0 2u 8u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 maybe_value%1#0 2u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob aggregate%item1%1#0) to (extract3 maybe_value%1#0 2u 8u)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%1#0 2u 8u) to ((extract 2 8) maybe_value%1#0)
debug: Simplified (extract3 maybe_value%1#0 2u 8u) to ((extract 2 8) maybe_value%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 10u) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:16:8-16, ir_type=bytes[8], name='aggregate%as_bytes%1', version=0)]
debug: Replacing redundant declaration let aggregate%val_as_bytes%1#0: bytes[8] = ((extract 2 8) maybe_value%0#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:20:26-34, ir_type=bytes, name='aggregate%extract%0', version=0)]
debug: Replacing redundant declaration let aggregate%as_bytes%3#0: bytes[8] = (itob 10u) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:16:8-16, ir_type=bytes[8], name='aggregate%as_bytes%1', version=0)]
debug: Replacing redundant declaration let aggregate%val_as_bytes%2#0: bytes[8] = ((extract 2 8) maybe_value%1#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:21:19-27, ir_type=bytes, name='aggregate%extract%1', version=0)]
debug: Found equivalence set: aggregate%as_bytes%1#0, aggregate%as_bytes%2#0, aggregate%as_bytes%3#0
debug: selected aggregate%as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, aggregate%val_as_bytes%1#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Found equivalence set: aggregate%extract%1#0, aggregate%val_as_bytes%2#0
debug: selected aggregate%extract%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
tuple_support/tuple_storage.py:20:27 debug: replacing app_global read with cached value for key: "tup"
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(len+uint64[])%0#0, encoded_array%0#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%0#0, awst_tmp%0#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, awst_tmp%1#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint64[]),uint64)%0#0, encoded_for_storage%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%1#0, awst_tmp%2#0
debug: selected aggregate%substring3%1#0 from equivalence set
debug: Found equivalence set: aggregate%item1%1#0, awst_tmp%3#0
debug: selected aggregate%item1%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded((len+uint64[]),uint64)%1#0, encoded_for_storage%1#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%substring3%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%substring3%1#0
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%extract_uint16%0#0
debug: Removing unused variable aggregate%len%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%extract_uint16%1#0
debug: Removing unused variable aggregate%len%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0001
debug: Simplified (concat 0x0001 0x0000000000000000) to 0x00010000000000000000
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 maybe_value%0#0 2u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob aggregate%item1%0#0) to (extract3 maybe_value%0#0 2u 8u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 maybe_value%1#0 2u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob aggregate%item1%1#0) to (extract3 maybe_value%1#0 2u 8u)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%1#0 2u 8u) to ((extract 2 8) maybe_value%1#0)
debug: Simplified (extract3 maybe_value%1#0 2u 8u) to ((extract 2 8) maybe_value%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = ((extract 2 8) maybe_value%0#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:25:25-33, ir_type=bytes, name='aggregate%extract%0', version=0)]
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 10u) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:25:8-22, ir_type=bytes[8], name='aggregate%as_bytes%1', version=0)]
debug: Replacing redundant declaration let aggregate%val_as_bytes%1#0: bytes[8] = ((extract 2 8) maybe_value%1#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:26:31-39, ir_type=bytes, name='aggregate%extract%1', version=0)]
debug: Found equivalence set: aggregate%extract%0#0, aggregate%val_as_bytes%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%1#0, aggregate%as_bytes%2#0
debug: selected aggregate%as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%extract%1#0, aggregate%val_as_bytes%1#0
debug: selected aggregate%extract%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
tuple_support/tuple_storage.py:26:32 debug: replacing app_global read with cached value for key: "tup"
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%substring3%0#0, tmp%0#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, tmp%1#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%2#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint64[]),uint64)%0#0, encoded_for_storage%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 maybe_value%0#0 2u)
debug: Simplified (concat 0x val#0) to val#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob aggregate%item1%0#0) to (extract3 maybe_value%0#0 2u 8u)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = ((extract 2 8) maybe_value%0#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:30:8-16, ir_type=bytes, name='aggregate%extract%0', version=0)]
debug: Found equivalence set: val#0, aggregate%head%0#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, aggregate%val_as_bytes%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%0#0
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%0#0, tmp%0#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, tmp%1#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%2#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint64[]),uint64)%0#0, encoded_for_storage%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 aggregate%box_get%0#0 2u)
debug: Simplified (concat 0x val#0) to val#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob aggregate%item1%0#0) to (extract3 aggregate%box_get%0#0 2u 8u)
debug: Simplified (extract3 aggregate%box_get%0#0 2u 8u) to ((extract 2 8) aggregate%box_get%0#0)
debug: Simplified (extract3 aggregate%box_get%0#0 2u 8u) to ((extract 2 8) aggregate%box_get%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = ((extract 2 8) aggregate%box_get%0#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:34:8-22, ir_type=bytes, name='aggregate%extract%0', version=0)]
debug: Found equivalence set: val#0, aggregate%head%0#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, aggregate%val_as_bytes%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%substring3%0#0, tmp%0#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, tmp%1#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%2#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint64[]),uint64)%0#0, encoded_for_storage%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 maybe_value%0#0 2u)
debug: Simplified (concat 0x val#0) to val#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob aggregate%item1%0#0) to (extract3 maybe_value%0#0 2u 8u)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = ((extract 2 8) maybe_value%0#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:38:8-23, ir_type=bytes, name='aggregate%extract%0', version=0)]
debug: Found equivalence set: val#0, aggregate%head%0#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, aggregate%val_as_bytes%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%substring3%0#0, tmp%1#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, tmp%2#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%3#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint64[]),uint64)%0#0, encoded_for_storage%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 maybe_value%0#0 2u)
debug: Simplified (concat 0x val#0) to val#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob aggregate%item1%0#0) to (extract3 maybe_value%0#0 2u 8u)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%0#0 2u 8u) to ((extract 2 8) maybe_value%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = ((extract 2 8) maybe_value%0#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:42:8-28, ir_type=bytes, name='aggregate%extract%0', version=0)]
debug: Found equivalence set: val#0, aggregate%head%0#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, aggregate%val_as_bytes%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.200.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable maybe_value%0#0
debug: Removing unused variable maybe_exists%0#0
debug: Removing unused variable aggregate%item1%0#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%item1%1#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 2 8) 0x000a000000000000000000010000000000000000) to 0x0000000000000000
debug: Simplified (concat 0x000a 0x0000000000000000) to 0x000a0000000000000000
debug: Simplified (concat 0x000a0000000000000000 0x00010000000000000000) to 0x000a000000000000000000010000000000000000
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, maybe_value%1#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, maybe_exists%1#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%item1%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%item1%1#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%0#0
debug: Replacing redundant declaration let aggregate%extract%1#0: bytes = ((extract 2 8) maybe_value%0#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:25:25-33, ir_type=bytes, name='aggregate%extract%0', version=0)]
debug: Found equivalence set: aggregate%extract%0#0, aggregate%extract%1#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let aggregate%head%4#0: bytes = (concat 0x000a aggregate%extract%0#0) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:25:8-22, ir_type=bytes, name='aggregate%head%2', version=0)]
debug: Found equivalence set: aggregate%head%2#0, aggregate%head%4#0
debug: selected aggregate%head%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let aggregate%concat%1#0: bytes = (concat aggregate%head%2#0 0x00010000000000000000) with copy of existing registers [Register(source_location=tuple_support/tuple_storage.py:25:8-22, ir_type=bytes, name='aggregate%concat%0', version=0)]
debug: Found equivalence set: aggregate%concat%0#0, aggregate%concat%1#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%item1%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%item1%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%item1%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%item1%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.201.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%concat%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.202.ssa.array.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.tuple_support.tuple_storage.NestedTuplesStorage at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.tuple_support.tuple_storage.NestedTuplesStorage
debug: auto reserving slots in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init, []
tuple_support/tuple_storage.py:23:6 debug: auto reserving slots in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing], []
tuple_support/tuple_storage.py:28:6 debug: auto reserving slots in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing], []
tuple_support/tuple_storage.py:32:6 debug: auto reserving slots in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing], []
tuple_support/tuple_storage.py:36:6 debug: auto reserving slots in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing], []
tuple_support/tuple_storage.py:40:6 debug: auto reserving slots in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing], []
debug: Slot allocation not required
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.tuple_support.tuple_storage.NestedTuplesStorage
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: splitting critical edge block@0->block@2
debug: Replaced predecessor block@0 with block@14 in block@2
debug: splitting critical edge block@4->block@6
debug: Replaced predecessor block@4 with block@15 in block@6
debug: splitting critical edge block@6->block@12
debug: Replaced predecessor block@6 with block@16 in block@12
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@14
debug: Removing jump block block@15
debug: Removing jump block block@16
debug: branching to block@14 will be replaced with block@2
debug: branching to block@15 will be replaced with block@6
debug: branching to block@16 will be replaced with block@12
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]
debug: Performing post-SSA optimizations at level 1
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to tuple_support/out/NestedTuplesStorage.ir/NestedTuplesStorage.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_call___init__@1.ops[19]: 'l-store-copy aggregate%head%6#0 0'
debug: Replaced main_call___init__@1.ops[21]: 'v-load aggregate%head%6#0' with 'l-load aggregate%head%6#0'
debug: Inserted main_call___init__@1.ops[9]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_call___init__@1.ops[12]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_call___init__@1.ops[16]: 'l-store-copy aggregate%extract%1#0 0'
debug: Replaced main_call___init__@1.ops[19]: 'v-load aggregate%extract%1#0' with 'l-load aggregate%extract%1#0'
debug: Inserted main_call___init__@1.ops[26]: 'l-store-copy aggregate%concat%2#0 0'
debug: Replaced main_call___init__@1.ops[29]: 'v-load aggregate%concat%2#0' with 'l-load aggregate%concat%2#0'
debug: Inserted main_call___init__@1.ops[11]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced main_call___init__@1.ops[15]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[4]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_bootstrap_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_bootstrap_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_bootstrap_route@5.ops[12]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_bootstrap_route@5.ops[14]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_bootstrap_route@5.ops[8]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_bootstrap_route@5.ops[11]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_bootstrap_route@5.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_bootstrap_route@5.ops[11]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_switch_case_next@6.ops[1]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_switch_case_next@6.ops[3]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_switch_case_next@6.ops[5]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_switch_case_next@6.ops[7]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_switch_case_next@6.ops[10]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_switch_case_next@6.ops[12]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_switch_case_next@6.ops[15]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_switch_case_next@6.ops[21]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main___algopy_default_create@13.ops[1]: 'l-store-copy tmp%13#0 0'
debug: Replaced main___algopy_default_create@13.ops[3]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main___algopy_default_create@13.ops[7]: 'l-store-copy tmp%15#0 0'
debug: Replaced main___algopy_default_create@13.ops[9]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main___algopy_default_create@13.ops[15]: 'l-store-copy tmp%17#0 0'
debug: Replaced main___algopy_default_create@13.ops[17]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main___algopy_default_create@13.ops[11]: 'l-store-copy tmp%16#0 0'
debug: Replaced main___algopy_default_create@13.ops[14]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main___algopy_default_create@13.ops[5]: 'l-store-copy tmp%14#0 0'
debug: Replaced main___algopy_default_create@13.ops[14]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted bootstrap_block@0.ops[13]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced bootstrap_block@0.ops[15]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted bootstrap_block@0.ops[26]: 'l-store-copy tmp%0#0 0'
debug: Replaced bootstrap_block@0.ops[28]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted bootstrap_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced bootstrap_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted bootstrap_block@0.ops[10]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced bootstrap_block@0.ops[13]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted bootstrap_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced bootstrap_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted bootstrap_block@0.ops[21]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced bootstrap_block@0.ops[27]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted bootstrap_block@0.ops[28]: 'l-store-copy aggregate%concat%0#0 1'
debug: Replaced bootstrap_block@0.ops[35]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted mutate_tuple_block@0.ops[31]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[33]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted mutate_tuple_block@0.ops[36]: 'l-store-copy add%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[38]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted mutate_tuple_block@0.ops[40]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[42]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted mutate_tuple_block@0.ops[52]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced mutate_tuple_block@0.ops[54]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted mutate_tuple_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced mutate_tuple_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted mutate_tuple_block@0.ops[45]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[48]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted mutate_tuple_block@0.ops[59]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[62]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted mutate_tuple_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced mutate_tuple_block@0.ops[11]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_block@0.ops[16]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[19]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_block@0.ops[18]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced mutate_tuple_block@0.ops[22]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted mutate_tuple_block@0.ops[12]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[16]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_block@0.ops[25]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[30]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted mutate_tuple_block@0.ops[31]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[35]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted mutate_tuple_block@0.ops[15]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced mutate_tuple_block@0.ops[23]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted mutate_tuple_block@0.ops[23]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced mutate_tuple_block@0.ops[29]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_block@0.ops[58]: 'l-store-copy replace%0#0 0'
debug: Replaced mutate_tuple_block@0.ops[66]: 'v-load replace%0#0' with 'l-load replace%0#0'
debug: Inserted mutate_tuple_block@0.ops[36]: 'l-store-copy concat%0#0 1'
debug: Replaced mutate_tuple_block@0.ops[56]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted mutate_tuple_block@0.ops[1]: 'l-store-copy val#0 0'
debug: Replaced mutate_tuple_block@0.ops[35]: 'v-load val#0' with 'l-load val#0'
debug: Inserted mutate_tuple_block@0.ops[32]: 'l-store-copy aggregate%extract%0#0 2'
debug: Replaced mutate_tuple_block@0.ops[64]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted mutate_box_block@0.ops[30]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced mutate_box_block@0.ops[32]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted mutate_box_block@0.ops[35]: 'l-store-copy add%0#0 0'
debug: Replaced mutate_box_block@0.ops[37]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted mutate_box_block@0.ops[39]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced mutate_box_block@0.ops[41]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted mutate_box_block@0.ops[51]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced mutate_box_block@0.ops[53]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted mutate_box_block@0.ops[4]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced mutate_box_block@0.ops[7]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted mutate_box_block@0.ops[44]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced mutate_box_block@0.ops[47]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted mutate_box_block@0.ops[6]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced mutate_box_block@0.ops[10]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted mutate_box_block@0.ops[15]: 'l-store-copy aggregate%box_get%0#0 0'
debug: Replaced mutate_box_block@0.ops[18]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted mutate_box_block@0.ops[17]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced mutate_box_block@0.ops[21]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted mutate_box_block@0.ops[11]: 'l-store-copy aggregate%box_get%0#0 0'
debug: Replaced mutate_box_block@0.ops[15]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted mutate_box_block@0.ops[24]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced mutate_box_block@0.ops[29]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted mutate_box_block@0.ops[30]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced mutate_box_block@0.ops[34]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted mutate_box_block@0.ops[14]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced mutate_box_block@0.ops[22]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted mutate_box_block@0.ops[22]: 'l-store-copy aggregate%box_get%0#0 2'
debug: Replaced mutate_box_block@0.ops[28]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted mutate_box_block@0.ops[66]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced mutate_box_block@0.ops[72]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted mutate_box_block@0.ops[57]: 'l-store-copy replace%0#0 0'
debug: Replaced mutate_box_block@0.ops[65]: 'v-load replace%0#0' with 'l-load replace%0#0'
debug: Inserted mutate_box_block@0.ops[35]: 'l-store-copy concat%0#0 1'
debug: Replaced mutate_box_block@0.ops[55]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted mutate_box_block@0.ops[1]: 'l-store-copy val#0 0'
debug: Replaced mutate_box_block@0.ops[34]: 'v-load val#0' with 'l-load val#0'
debug: Inserted mutate_box_block@0.ops[31]: 'l-store-copy aggregate%extract%0#0 2'
debug: Replaced mutate_box_block@0.ops[63]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted mutate_global_block@0.ops[31]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced mutate_global_block@0.ops[33]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted mutate_global_block@0.ops[36]: 'l-store-copy add%0#0 0'
debug: Replaced mutate_global_block@0.ops[38]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted mutate_global_block@0.ops[40]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced mutate_global_block@0.ops[42]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted mutate_global_block@0.ops[52]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced mutate_global_block@0.ops[54]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted mutate_global_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced mutate_global_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted mutate_global_block@0.ops[45]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced mutate_global_block@0.ops[48]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted mutate_global_block@0.ops[59]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced mutate_global_block@0.ops[62]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted mutate_global_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced mutate_global_block@0.ops[11]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_global_block@0.ops[16]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_global_block@0.ops[19]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_global_block@0.ops[18]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced mutate_global_block@0.ops[22]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted mutate_global_block@0.ops[12]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_global_block@0.ops[16]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_global_block@0.ops[25]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced mutate_global_block@0.ops[30]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted mutate_global_block@0.ops[31]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced mutate_global_block@0.ops[35]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted mutate_global_block@0.ops[15]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced mutate_global_block@0.ops[23]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted mutate_global_block@0.ops[23]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced mutate_global_block@0.ops[29]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_global_block@0.ops[58]: 'l-store-copy replace%0#0 0'
debug: Replaced mutate_global_block@0.ops[66]: 'v-load replace%0#0' with 'l-load replace%0#0'
debug: Inserted mutate_global_block@0.ops[36]: 'l-store-copy concat%0#0 1'
debug: Replaced mutate_global_block@0.ops[56]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted mutate_global_block@0.ops[1]: 'l-store-copy val#0 0'
debug: Replaced mutate_global_block@0.ops[35]: 'v-load val#0' with 'l-load val#0'
debug: Inserted mutate_global_block@0.ops[32]: 'l-store-copy aggregate%extract%0#0 2'
debug: Replaced mutate_global_block@0.ops[64]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted mutate_local_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced mutate_local_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted mutate_local_block@0.ops[35]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced mutate_local_block@0.ops[37]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted mutate_local_block@0.ops[40]: 'l-store-copy add%0#0 0'
debug: Replaced mutate_local_block@0.ops[42]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted mutate_local_block@0.ops[44]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced mutate_local_block@0.ops[46]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted mutate_local_block@0.ops[56]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced mutate_local_block@0.ops[58]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted mutate_local_block@0.ops[9]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced mutate_local_block@0.ops[12]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted mutate_local_block@0.ops[49]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced mutate_local_block@0.ops[52]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted mutate_local_block@0.ops[11]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced mutate_local_block@0.ops[15]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_local_block@0.ops[20]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_local_block@0.ops[23]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_local_block@0.ops[22]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced mutate_local_block@0.ops[26]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted mutate_local_block@0.ops[66]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced mutate_local_block@0.ops[70]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted mutate_local_block@0.ops[16]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_local_block@0.ops[20]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_local_block@0.ops[29]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced mutate_local_block@0.ops[34]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted mutate_local_block@0.ops[35]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced mutate_local_block@0.ops[39]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted mutate_local_block@0.ops[19]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced mutate_local_block@0.ops[27]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted mutate_local_block@0.ops[27]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced mutate_local_block@0.ops[33]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_local_block@0.ops[62]: 'l-store-copy replace%0#0 0'
debug: Replaced mutate_local_block@0.ops[70]: 'v-load replace%0#0' with 'l-load replace%0#0'
debug: Inserted mutate_local_block@0.ops[40]: 'l-store-copy concat%0#0 1'
debug: Replaced mutate_local_block@0.ops[60]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted mutate_local_block@0.ops[35]: 'l-store-copy aggregate%extract%0#0 1'
debug: Replaced mutate_local_block@0.ops[67]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted mutate_local_block@0.ops[1]: 'l-store-copy val#0 0'
debug: Replaced mutate_local_block@0.ops[40]: 'v-load val#0' with 'l-load val#0'
debug: Inserted mutate_local_block@0.ops[7]: 'l-store-copy tmp%0#0 1'
debug: Replaced mutate_local_block@0.ops[78]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Found 4 edge set/s for test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init
debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init() -> uint64:
tuple_support/tuple_storage.py:23:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]() -> void:
tuple_support/tuple_storage.py:28:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]() -> void:
tuple_support/tuple_storage.py:32:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]() -> void:
tuple_support/tuple_storage.py:36:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]() -> void:
tuple_support/tuple_storage.py:40:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]() -> void:
debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_if_else@12` with `err`
debug: replacing `b main_after_if_else@12` with `err`
debug: replacing `b main_after_if_else@12` with `err`
debug: replacing `b main_after_if_else@12` with `err`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
debug: inlining single reference block main_after_if_else@12 into main_switch_case_next@6
debug: removing jump-chain block main_mutate_tuple_route@8
debug: removing jump-chain block main_mutate_box_route@9
debug: removing jump-chain block main_mutate_global_route@10
debug: removing jump-chain block main_mutate_local_route@11
debug: branching to main_mutate_tuple_route@8 will be replaced with mutate_tuple
debug: branching to main_mutate_box_route@9 will be replaced with mutate_box
debug: branching to main_mutate_global_route@10 will be replaced with mutate_global
debug: branching to main_mutate_local_route@11 will be replaced with mutate_local
debug: removing explicit jump to fall-through block main_after_if_else@2
debug: removing explicit jump to fall-through block main_switch_case_next@6
tuple_support/tuple_storage.py:23:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap[routing]() -> void:
debug: inlining single reference block bootstrap_block@0 into bootstrap
tuple_support/tuple_storage.py:28:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple[routing]() -> void:
debug: inlining single reference block mutate_tuple_block@0 into mutate_tuple
tuple_support/tuple_storage.py:32:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box[routing]() -> void:
debug: inlining single reference block mutate_box_block@0 into mutate_box
tuple_support/tuple_storage.py:36:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global[routing]() -> void:
debug: inlining single reference block mutate_global_block@0 into mutate_global
tuple_support/tuple_storage.py:40:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local[routing]() -> void:
debug: inlining single reference block mutate_local_block@0 into mutate_local
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.approval.000.ssa.ir
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.clear.000.ssa.ir
debug: optimizing approval program of test_cases.tuple_support.tuple_comparisons.TupleComparisons at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval for inlining
debug: marking single-use function test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty for inlining
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_comparisons.py:6:9 debug: inlining call to test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
tuple_support/tuple_comparisons.py:7:9 debug: inlining call to test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%5#0, tmp#0
debug: selected tmp#0 from equivalence set
debug: Found equivalence set: tmp%12#0, tmp#1
debug: selected tmp#1 from equivalence set
debug: Found equivalence set: tmp%21#0, tmp#2
debug: selected tmp#2 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp#3
debug: Removing unused variable tmp#4
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (!= "abc" "abc") to 0u
debug: Simplified (== awst_tmp%0#0 awst_tmp%0#0) to 1u
debug: Simplified (|| 0u 1u) to 1u
debug: Simplified (== "abc" "abc") to 1u
debug: Simplified (!= awst_tmp%1#0 awst_tmp%1#0) to 0u
debug: Simplified (&& 1u 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (!= "abc" "abc") to 0u
debug: Simplified (== awst_tmp%2#0 awst_tmp%2#0) to 1u
debug: Simplified (|| 0u 1u) to 1u
debug: Simplified (== "abc" "abc") to 1u
debug: Simplified (!= awst_tmp%3#0 awst_tmp%3#0) to 0u
debug: Simplified (&& 1u 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (!= 1u 3u) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (&& 0u tmp%20#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Merged linear block@4 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%5#0, tmp#0
debug: selected tmp#0 from equivalence set
debug: Found equivalence set: tmp%12#0, tmp#1
debug: selected tmp#1 from equivalence set
debug: Found equivalence set: tmp%21#0, tmp#2
debug: selected tmp#2 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (!= "abc" "abc") to 0u
debug: Simplified (== awst_tmp%0#0 awst_tmp%0#0) to 1u
debug: Simplified (|| 0u 1u) to 1u
debug: Simplified (== "abc" "abc") to 1u
debug: Simplified (!= awst_tmp%1#0 awst_tmp%1#0) to 0u
debug: Simplified (&& 1u 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (!= "abc" "abc") to 0u
debug: Simplified (== awst_tmp%2#0 awst_tmp%2#0) to 1u
debug: Simplified (|| 0u 1u) to 1u
debug: Simplified (== "abc" "abc") to 1u
debug: Simplified (!= awst_tmp%3#0 awst_tmp%3#0) to 0u
debug: Simplified (&& 1u 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (!= 1u 3u) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (&& 0u tmp%20#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp#0
debug: Removing unused variable tmp#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking simple function test_cases.tuple_support.tuple_comparisons.log_and_return for inlining (complexity=2 <= threshold=3)
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Perform Subroutine Inlining
tuple_support/tuple_comparisons.py:18:9 debug: inlining call to test_cases.tuple_support.tuple_comparisons.log_and_return in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
tuple_support/tuple_comparisons.py:22:9 debug: inlining call to test_cases.tuple_support.tuple_comparisons.log_and_return in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
tuple_support/tuple_comparisons.py:28:9 debug: inlining call to test_cases.tuple_support.tuple_comparisons.log_and_return in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
tuple_support/tuple_comparisons.py:32:9 debug: inlining call to test_cases.tuple_support.tuple_comparisons.log_and_return in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
tuple_support/tuple_comparisons.py:36:50 debug: inlining call to test_cases.tuple_support.tuple_comparisons.log_and_return in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
tuple_support/tuple_comparisons.py:37:49 debug: inlining call to test_cases.tuple_support.tuple_comparisons.log_and_return in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable val#0
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable val#1
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable val#2
debug: Removing unused variable awst_tmp%2#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable val#3
debug: Removing unused variable awst_tmp%3#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp#1
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable val#4
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable val#5
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%20#0
debug: Removing unused variable tmp#2
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (!= 2u 46u) to 1u
debug: Simplified (|| 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@11
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@11 with block@0 in block@12
debug: Merged linear block@11 into block@0
debug: Merged linear block@12 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%16#0
debug: Removing unused variable tmp%17#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.tuple_support.tuple_comparisons.TupleComparisons at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.tuple_support.tuple_comparisons.TupleComparisons
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.tuple_support.tuple_comparisons.TupleComparisons
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.tuple_support.tuple_comparisons.TupleComparisons at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.tuple_support.tuple_comparisons.TupleComparisons at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.tuple_support.tuple_comparisons.TupleComparisons
tuple_support/tuple_comparisons.py:5 debug: auto reserving slots in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program, []
debug: Slot allocation not required
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.tuple_support.tuple_comparisons.TupleComparisons
tuple_support/tuple_comparisons.py:10 debug: auto reserving slots in test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program using strategy 'root_operand'
debug: Coalescing tmp%0#2 with [tmp%0#3, tmp%0#4, tmp%0#5, tmp%0#6, tmp%0#7]
debug: Coalescing resulted in 10 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to tuple_support/out/TupleComparisons.ir/TupleComparisons.clear.400.destructured.ir
debug: Inserted main_block@0.ops[2]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[4]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_block@0.ops[8]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[10]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_block@0.ops[14]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[16]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_block@0.ops[20]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[22]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_block@0.ops[26]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[28]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_block@0.ops[32]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[34]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
tuple_support/tuple_comparisons.py:5 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program() -> uint64:
tuple_support/tuple_comparisons.py:5 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
tuple_support/tuple_comparisons.py:10 debug: optimizing TEAL subroutine ops test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program() -> uint64:
tuple_support/tuple_comparisons.py:10 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.000.ssa.ir
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.clear.000.ssa.ir
debug: optimizing approval program of test_cases.tuple_support.nested_tuples.NestedTuples at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_rearrange for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_swap for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_intrinsics for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_nested_slicing for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_nested_mutation for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_nested_iteration for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.__init__ for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.run_tests for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.__init__ in test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: args.0#0, a#0
debug: selected args.0#0 from equivalence set
debug: Found equivalence set: args.1#0, b#0
debug: selected args.1#0 from equivalence set
debug: Found equivalence set: args.2.0#0, c#0
debug: selected args.2.0#0 from equivalence set
debug: Found equivalence set: args.2.1.0#0, d#0
debug: selected args.2.1.0#0 from equivalence set
debug: Found equivalence set: args.2.1.1#0, e#0
debug: selected args.2.1.1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: args.0#0, a#0
debug: selected args.0#0 from equivalence set
debug: Found equivalence set: args.1#0, b#0
debug: selected args.1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, nt.1.0#0, x#0
debug: selected nt.1.0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, nt.1.1#0, y#0
debug: selected nt.1.1#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable nt.0#0
debug: Removing unused variable nt.2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 42u 42u) to 1u
debug: Simplified (== nt.1.0#0 0u) to (! nt.1.0#0)
debug: Simplified (== nt.1.0#0 0u) to (! nt.1.0#0)
debug: Simplified (== nt.1.0#0 0u) to (! nt.1.0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: bool = (! nt.1.0#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:217:11-36, ir_type=bool, name='tmp%4', version=0)]
debug: Replacing redundant declaration let tmp%9#0: uint64 = (+ num1#0 num2#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:217:24-35, ir_type=uint64, name='tmp%5', version=0)]
debug: Replacing redundant declaration let tmp%11#0: bool = (! nt.1.0#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:217:11-36, ir_type=bool, name='tmp%4', version=0)]
debug: Replacing redundant declaration let tmp%12#0: uint64 = (+ num1#0 num2#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:217:24-35, ir_type=uint64, name='tmp%5', version=0)]
debug: Found equivalence set: tmp%4#0, tmp%8#0, tmp%11#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: tmp%5#0, tmp%9#0, tmp%12#0
debug: selected tmp%5#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Replacing redundant declaration let tmp%10#0: bool = (== nt.1.1#0 tmp%5#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:217:11-36, ir_type=bool, name='tmp%6', version=0)]
debug: Removing redundant assert of tmp%4#0
debug: Replacing redundant declaration let tmp%13#0: bool = (== nt.1.1#0 tmp%5#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:217:11-36, ir_type=bool, name='tmp%6', version=0)]
debug: Found equivalence set: tmp%6#0, tmp%10#0, tmp%13#0
debug: selected tmp%6#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Removing redundant assert of tmp%6#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable nt.0#0
debug: Removing unused variable nt.1#0
debug: Removing unused variable nt.2.0#0
debug: Removing unused variable nt.2.1.0#0
debug: Removing unused variable nt.2.1.1#0
debug: Removing unused variable nt.2.2#0
debug: Removing unused variable nt.3#0
debug: Removing unused variable nt.4#0
debug: Removing unused variable a#0
debug: Removing unused variable b.0#0
debug: Removing unused variable b.1.0#0
debug: Removing unused variable b.1.1#0
debug: Removing unused variable b.2#0
debug: Removing unused variable c#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 4u 4u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 5u 5u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== "a" "a") to 1u
debug: Simplified (== "b" "b") to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: one#0, s.1.0#0, t.0#0
debug: selected one#0 from equivalence set
debug: Found equivalence set: s.2.0#2, tmp#0, s2.0#0
debug: selected s.2.0#2 from equivalence set
debug: Found equivalence set: s.0.0#2, s0.0#0
debug: selected s.0.0#2 from equivalence set
debug: Found equivalence set: s.1.0#2, s1#0
debug: selected s.1.0#2 from equivalence set
debug: Found equivalence set: tmp%9#0, s1#1
debug: selected s1#1 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== one#0 one#0) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (select 0u 3u reassign#0) to (* reassign#0 3u)
debug: Simplified (== one#0 one#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let select%2#0: uint64 = (select 2u 5u reassign#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:269:19-39, ir_type=uint64, name='select%1', version=0)]
debug: Found equivalence set: select%1#0, select%2#0
debug: selected select%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, x.0.0#0
debug: selected x.0.0#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, x.0.0#1
debug: selected x.0.0#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: t.0#1, a#0
debug: selected t.0#1 from equivalence set
debug: Found equivalence set: t.1#1, b#0
debug: selected t.1#1 from equivalence set
debug: Found equivalence set: tmp%1#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: tmp%3#0, total#4
debug: selected total#4 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Removing unused variable y#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Replaced predecessor block@2 with block@1 in block@6
debug: Merged linear block@2 into block@1
debug: Replaced predecessor block@8 with block@7 in block@9
debug: Replaced predecessor block@8 with block@7 in block@10
debug: Replaced predecessor block@8 with block@7 in block@11
debug: Replaced predecessor block@8 with block@7 in block@12
debug: Merged linear block@8 into block@7
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_default_create in test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@21 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@22 with block@20 in block@23
debug: Merged linear block@22 into block@20
debug: Merged linear block@23 into block@20
debug: Merged linear block@21 into block@19
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@17
debug: Removing jump block block@18
debug: branching to block@17 will be replaced with block@19
debug: branching to block@18 will be replaced with block@19
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:61:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple in test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, pwl.parent.foo#0
debug: selected pwl.parent.foo#0 from equivalence set
debug: Found equivalence set: tmp%1#0, pwl.parent.foo_arc#0
debug: selected pwl.parent.foo_arc#0 from equivalence set
debug: Found equivalence set: tmp%2#0, pwl.parent.child.a#0
debug: selected pwl.parent.child.a#0 from equivalence set
debug: Found equivalence set: tmp%3#0, pwl.parent.child.b#0
debug: selected pwl.parent.child.b#0 from equivalence set
debug: Found equivalence set: tmp%4#0, pwl.parent.child.c#0
debug: selected pwl.parent.child.c#0 from equivalence set
debug: Found equivalence set: tmp%5#0, pwl.children#0
debug: selected pwl.children#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:65:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%1#1, tmp%1#0
debug: selected tmp%1#1 from equivalence set
debug: Found equivalence set: tmp%2#1, tmp%2#0
debug: selected tmp%2#1 from equivalence set
debug: Found equivalence set: tmp%3#1, tmp%3#0
debug: selected tmp%3#1 from equivalence set
debug: Found equivalence set: tmp%4#1, tmp%4#0
debug: selected tmp%4#1 from equivalence set
debug: Found equivalence set: tmp%5#1, tmp%5#0
debug: selected tmp%5#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: maybe_value%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:69:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box in test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key.a#0
debug: selected key.a#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key.b#0
debug: selected key.b#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64,uint64)%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:73:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box in test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key.a#0
debug: selected key.a#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key.b#0
debug: selected key.b#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, tmp%2#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64,uint64)%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:77:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key.a#0
debug: selected key.a#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key.b#0
debug: selected key.b#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%2#0
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%1#1, tmp%3#0
debug: selected tmp%1#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64,uint64)%0#0
debug: replacing redundant encode-of-decode with: storage_value%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:81:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box in test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key.a#0
debug: selected key.a#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key.b#0
debug: selected key.b#0 from equivalence set
debug: Found equivalence set: ternary_result%0.a#2, maybe_value.a#0, tmp%2#0
debug: selected maybe_value.a#0 from equivalence set
debug: Found equivalence set: ternary_result%0.b#2, maybe_value.b#0, tmp%3#0
debug: selected maybe_value.b#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, exists#0, tmp%4#0
debug: selected exists#0 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64,uint64)%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:86:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key.a#0
debug: selected key.a#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key.b#0
debug: selected key.b#0 from equivalence set
debug: Found equivalence set: tmp%0#1, ternary_result%0.a#1
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%1#1, ternary_result%0.b#1
debug: selected tmp%1#1 from equivalence set
debug: Found equivalence set: ternary_result%0.a#2, tmp%2#0
debug: selected ternary_result%0.a#2 from equivalence set
debug: Found equivalence set: ternary_result%0.b#2, tmp%3#0
debug: selected ternary_result%0.b#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64,uint64)%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:90:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: tmp%0#1, local#0
debug: selected local#0 from equivalence set
debug: Found equivalence set: tmp%2#1, ternary_result%0.a#1
debug: selected tmp%2#1 from equivalence set
debug: Found equivalence set: tmp%3#1, ternary_result%0.b#1
debug: selected tmp%3#1 from equivalence set
debug: Found equivalence set: ternary_result%0.a#2, tmp%1#0
debug: selected ternary_result%0.a#2 from equivalence set
debug: Found equivalence set: ternary_result%0.b#2, tmp%2#0
debug: selected ternary_result%0.b#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:95:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple in test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, twm.arr#0
debug: selected twm.arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, twm.arr#1
debug: selected twm.arr#1 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint64[])%1#0, twm.arr#2, tmp%0#0
debug: selected twm.arr#2 from equivalence set
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable twm.child.a#0
debug: Removing unused variable twm.child.b#0
debug: Removing unused variable twm.child.c#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:114:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method in test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arr2#1
debug: selected arr2#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:120:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.run_tests in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%4#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%5#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%6#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: tmp%7#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: tmp%8#0, e#0
debug: selected e#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x.0#0
debug: Removing unused variable x.1#0
debug: Removing unused variable y.0#0
debug: Removing unused variable y.1.0#0
debug: Removing unused variable y.1.1#0
debug: Removing unused variable z.0#0
debug: Removing unused variable z.1#0
debug: Removing unused variable z.2.0#0
debug: Removing unused variable z.2.1.0#0
debug: Removing unused variable z.2.1.1#0
debug: Removing unused variable z2.0#0
debug: Removing unused variable z2.1.0#0
debug: Removing unused variable z2.1.1#0
debug: Removing unused variable z2_1.0#0
debug: Removing unused variable z2_1.1#0
debug: Removing unused variable _x#0
debug: Removing unused variable z2_1_1#0
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "There" "There") to 1u
debug: Simplified (== b#0 0u) to (! b#0)
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== "Hi" "Hi") to 1u
debug: Simplified (== "There" "There") to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:149:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params in test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, args.0#0, s#0, tmp%4#0
debug: selected args.0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, args.1.0#0, b#0, tmp%3#0
debug: selected args.1.0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, args.1.1.0#0, u#0, tmp%5#0
debug: selected args.1.1.0#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:156:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple in test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, args.a#0, a#0, tmp%3#0
debug: selected args.a#0 from equivalence set
debug: Found equivalence set: tmp%1#0, args.b#0, b#0, tmp%4#0
debug: selected args.b#0 from equivalence set
debug: Found equivalence set: tmp%2#0, args.c#0, c#0, tmp%5#0
debug: selected args.c#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:161:6 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params in test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, args.foo#0, foo#0, tmp%5#0
debug: selected args.foo#0 from equivalence set
debug: Found equivalence set: tmp%1#0, args.foo_arc#0, foo_arc#0, tmp%6#0
debug: selected args.foo_arc#0 from equivalence set
debug: Found equivalence set: tmp%2#0, args.child.a#0, a#0, tmp%7#0
debug: selected args.child.a#0 from equivalence set
debug: Found equivalence set: tmp%3#0, args.child.b#0, b#0, tmp%8#0
debug: selected args.child.b#0 from equivalence set
debug: Found equivalence set: tmp%4#0, args.child.c#0, c#0, tmp%9#0
debug: selected args.child.c#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: ternary_result%0.a#2, maybe_value.a#0
debug: selected maybe_value.a#0 from equivalence set
debug: Found equivalence set: ternary_result%0.b#2, maybe_value.b#0
debug: selected maybe_value.b#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, exists#0
debug: selected exists#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, ternary_result%0.a#1
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, ternary_result%0.b#1
debug: selected tmp%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@2 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, local#0
debug: selected local#0 from equivalence set
debug: Found equivalence set: tmp%2#0, ternary_result%0.a#1
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%3#0, ternary_result%0.b#1
debug: selected tmp%3#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@2 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, twm.arr#0
debug: selected twm.arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, twm.arr#1
debug: selected twm.arr#1 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint64[])%1#0, twm.arr#2
debug: selected twm.arr#2 from equivalence set
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable twm.child.a#0
debug: Removing unused variable twm.child.b#0
debug: Removing unused variable twm.child.c#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arr2#1
debug: selected arr2#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:123:16 debug: inlining call to test_cases.tuple_support.nested_tuples.test_swap in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
tuple_support/nested_tuples.py:131:32 debug: inlining call to test_cases.tuple_support.nested_tuples.test_rearrange in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
tuple_support/nested_tuples.py:136:9 debug: inlining call to test_cases.tuple_support.nested_tuples.test_intrinsics in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
tuple_support/nested_tuples.py:137:9 debug: inlining call to test_cases.tuple_support.nested_tuples.test_nested_slicing in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
tuple_support/nested_tuples.py:140:9 debug: inlining call to test_cases.tuple_support.nested_tuples.test_nested_mutation in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
tuple_support/nested_tuples.py:144:9 debug: inlining call to test_cases.tuple_support.nested_tuples.test_nested_iteration in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
tuple_support/nested_tuples.py:146:9 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%0#1, ternary_result%0.0.0#0
debug: selected awst_tmp%0#1 from equivalence set
debug: Found equivalence set: awst_tmp%1#1, ternary_result%0.0.1#0
debug: selected awst_tmp%1#1 from equivalence set
debug: Found equivalence set: awst_tmp%2#0, ternary_result%0.1#0
debug: selected awst_tmp%2#0 from equivalence set
debug: Found equivalence set: ternary_result%0.0.0#2, result.0.0#0
debug: selected result.0.0#0 from equivalence set
debug: Found equivalence set: ternary_result%0.0.1#2, result.0.1#0
debug: selected result.0.1#0 from equivalence set
debug: Found equivalence set: ternary_result%0.1#2, result.1#0
debug: selected result.1#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result.0.1#0
debug: Removing unused variable result.1#0
debug: Removing unused variable x.0#0
debug: Removing unused variable x.1#0
debug: Removing unused variable args.0#0
debug: Removing unused variable args.1#0
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable y.0#0
debug: Removing unused variable y.1.0#0
debug: Removing unused variable y.1.1#0
debug: Removing unused variable z.0#0
debug: Removing unused variable z.1#0
debug: Removing unused variable z.2.0#0
debug: Removing unused variable z.2.1.0#0
debug: Removing unused variable z.2.1.1#0
debug: Removing unused variable z2.0#0
debug: Removing unused variable z2.1.0#0
debug: Removing unused variable z2.1.1#0
debug: Removing unused variable z2_1.0#0
debug: Removing unused variable z2_1.1#0
debug: Removing unused variable _x#0
debug: Removing unused variable z2_1_1#0
debug: Removing unused variable _a#0
debug: Removing unused variable args.0#1
debug: Removing unused variable args.1#1
debug: Removing unused variable args.2.0#0
debug: Removing unused variable args.2.1.0#0
debug: Removing unused variable args.2.1.1#0
debug: Removing unused variable _b#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable a#0
debug: Removing unused variable b#0
debug: Removing unused variable c#0
debug: Removing unused variable d#0
debug: Removing unused variable e#0
debug: Removing unused variable num1#0
debug: Removing unused variable num2#0
debug: Removing unused variable tmp%2#1
debug: Removing unused variable tmp%3#1
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable tmp%2#2
debug: Removing unused variable tmp%3#2
debug: Removing unused variable tmp%4#2
debug: Removing unused variable tmp%5#2
debug: Removing unused variable tmp%6#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "There" "There") to 1u
debug: Simplified (== "Hi" "Hi") to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== "There" "There") to 1u
debug: Simplified (== "Hi" "Hi") to 1u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== "There" "There") to 1u
debug: Don't know how to simplify 1 addw 2
debug: Simplified (+ 1u 2u) to 3u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== "Hi" "Hi") to 1u
debug: Simplified (== "There" "There") to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== awst_tmp%0#1 awst_tmp%0#1) to 1u
debug: Simplified (== awst_tmp%1#1 awst_tmp%1#1) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== awst_tmp%2#0 awst_tmp%2#0) to 1u
debug: Simplified (|| 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@23 from goto 1u ? block@24 : block@25 to goto block@24
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@11
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@11 with block@0 in block@12
debug: Merged linear block@11 into block@0
debug: Replaced predecessor block@22 with block@21 in block@23
debug: Merged linear block@22 into block@21
debug: Replaced predecessor block@23 with block@21 in block@24
debug: Merged linear block@23 into block@21
debug: Replaced predecessor block@24 with block@21 in block@26
debug: Merged linear block@24 into block@21
debug: Merged linear block@27 into block@26
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@25
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: args.0#0, s#0
debug: selected args.0#0 from equivalence set
debug: Found equivalence set: args.1.0#0, b#0
debug: selected args.1.0#0 from equivalence set
debug: Found equivalence set: args.1.1.0#0, u#0
debug: selected args.1.1.0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: args.a#0, a#0
debug: selected args.a#0 from equivalence set
debug: Found equivalence set: args.b#0, b#0
debug: selected args.b#0 from equivalence set
debug: Found equivalence set: args.c#0, c#0
debug: selected args.c#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: args.foo#0, foo#0
debug: selected args.foo#0 from equivalence set
debug: Found equivalence set: args.foo_arc#0, foo_arc#0
debug: selected args.foo_arc#0 from equivalence set
debug: Found equivalence set: args.child.a#0, a#0
debug: selected args.child.a#0 from equivalence set
debug: Found equivalence set: args.child.b#0, b#0
debug: selected args.child.b#0 from equivalence set
debug: Found equivalence set: args.child.c#0, c#0
debug: selected args.child.c#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%0#0, ternary_result%0.0.0#0
debug: selected awst_tmp%0#0 from equivalence set
debug: Found equivalence set: awst_tmp%1#0, ternary_result%0.0.1#0
debug: selected awst_tmp%1#0 from equivalence set
debug: Found equivalence set: awst_tmp%2#0, ternary_result%0.1#0
debug: selected awst_tmp%2#0 from equivalence set
debug: Found equivalence set: ternary_result%0.0.0#2, result.0.0#0
debug: selected result.0.0#0 from equivalence set
debug: Found equivalence set: ternary_result%0.0.1#2, result.0.1#0
debug: selected result.0.1#0 from equivalence set
debug: Found equivalence set: ternary_result%0.1#2, result.1#0
debug: selected result.1#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result.0.1#0
debug: Removing unused variable result.1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== awst_tmp%0#0 awst_tmp%0#0) to 1u
debug: Simplified (== awst_tmp%1#0 awst_tmp%1#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== awst_tmp%2#0 awst_tmp%2#0) to 1u
debug: Simplified (|| 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@2 to goto block@1
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@2
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@2 from goto tmp%4#0 ? block@3 : block@18 to goto block@3
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@19
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@6
debug: Replaced predecessor block@3 with block@2 in block@7
debug: Replaced predecessor block@3 with block@2 in block@8
debug: Replaced predecessor block@3 with block@2 in block@9
debug: Replaced predecessor block@3 with block@2 in block@10
debug: Replaced predecessor block@3 with block@2 in block@11
debug: Replaced predecessor block@3 with block@2 in block@12
debug: Replaced predecessor block@3 with block@2 in block@13
debug: Replaced predecessor block@3 with block@2 in block@14
debug: Replaced predecessor block@3 with block@2 in block@15
debug: Replaced predecessor block@3 with block@2 in block@16
debug: Replaced predecessor block@3 with block@2 in block@17
debug: Replaced predecessor block@3 with block@2 in block@18
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@20
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking trivial method test_cases.tuple_support.nested_tuples.test_rearrange as inlineable
debug: marking trivial method test_cases.tuple_support.nested_tuples.test_swap as inlineable
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_intrinsics for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_nested_slicing for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_nested_mutation for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.test_nested_iteration for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.build_nested for inlining
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested for inlining
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__ in test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@4 from goto tmp%4#0 ? block@5 : block@20 to goto block@5
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@21
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Replaced predecessor block@5 with block@4 in block@7
debug: Replaced predecessor block@5 with block@4 in block@8
debug: Replaced predecessor block@5 with block@4 in block@9
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Replaced predecessor block@5 with block@4 in block@11
debug: Replaced predecessor block@5 with block@4 in block@12
debug: Replaced predecessor block@5 with block@4 in block@13
debug: Replaced predecessor block@5 with block@4 in block@14
debug: Replaced predecessor block@5 with block@4 in block@15
debug: Replaced predecessor block@5 with block@4 in block@16
debug: Replaced predecessor block@5 with block@4 in block@17
debug: Replaced predecessor block@5 with block@4 in block@18
debug: Replaced predecessor block@5 with block@4 in block@19
debug: Replaced predecessor block@5 with block@4 in block@20
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@22
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%8#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@1 from goto tmp%4#0 ? block@2 : block@19 to goto block@2
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Replaced predecessor block@2 with block@1 in block@6
debug: Replaced predecessor block@2 with block@1 in block@7
debug: Replaced predecessor block@2 with block@1 in block@8
debug: Replaced predecessor block@2 with block@1 in block@9
debug: Replaced predecessor block@2 with block@1 in block@10
debug: Replaced predecessor block@2 with block@1 in block@11
debug: Replaced predecessor block@2 with block@1 in block@12
debug: Replaced predecessor block@2 with block@1 in block@13
debug: Replaced predecessor block@2 with block@1 in block@14
debug: Replaced predecessor block@2 with block@1 in block@15
debug: Replaced predecessor block@2 with block@1 in block@16
debug: Replaced predecessor block@2 with block@1 in block@19
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0, encoded_for_storage%0#0
debug: selected reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable pwl.children#0
debug: Removing unused variable pwl.parent.child.a#0
debug: Removing unused variable pwl.parent.child.b#0
debug: Removing unused variable pwl.parent.child.c#0
debug: Removing unused variable pwl.parent.foo#0
debug: Removing unused variable pwl.parent.foo_arc#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, tmp%6#0
debug: selected maybe_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable tmp%2#1
debug: Removing unused variable tmp%3#1
debug: Removing unused variable tmp%4#1
debug: Removing unused variable tmp%5#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, encoded_for_storage%0#0
debug: selected reinterpret_Encoded(uint64,uint64)%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, encoded_for_storage%0#0
debug: selected reinterpret_Encoded(uint64,uint64)%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key.a#0
debug: Removing unused variable key.b#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, encoded_for_storage%0#0
debug: selected reinterpret_Encoded(uint64,uint64)%0#0 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%4#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key.a#0
debug: Removing unused variable key.b#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, encoded_for_storage%0#0
debug: selected reinterpret_Encoded(uint64,uint64)%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key.a#0
debug: Removing unused variable key.b#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, encoded_for_storage%0#0
debug: selected reinterpret_Encoded(uint64,uint64)%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key.a#0
debug: Removing unused variable key.b#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:123:16 debug: inlining call to test_cases.tuple_support.nested_tuples.test_swap in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
tuple_support/nested_tuples.py:131:32 debug: inlining call to test_cases.tuple_support.nested_tuples.test_rearrange in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
tuple_support/nested_tuples.py:136:9 debug: inlining call to test_cases.tuple_support.nested_tuples.test_intrinsics in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
tuple_support/nested_tuples.py:137:9 debug: inlining call to test_cases.tuple_support.nested_tuples.test_nested_slicing in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
tuple_support/nested_tuples.py:140:9 debug: inlining call to test_cases.tuple_support.nested_tuples.test_nested_mutation in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
tuple_support/nested_tuples.py:144:9 debug: inlining call to test_cases.tuple_support.nested_tuples.test_nested_iteration in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
tuple_support/nested_tuples.py:146:9 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%0#1, result.0.0#0
debug: selected result.0.0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable args.0#0
debug: Removing unused variable args.1#0
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable _a#0
debug: Removing unused variable args.0#1
debug: Removing unused variable args.1#1
debug: Removing unused variable args.2.0#0
debug: Removing unused variable args.2.1.0#0
debug: Removing unused variable args.2.1.1#0
debug: Removing unused variable _b#0
debug: Removing unused variable a#0
debug: Removing unused variable b#0
debug: Removing unused variable c#0
debug: Removing unused variable d#0
debug: Removing unused variable e#0
debug: Removing unused variable num1#0
debug: Removing unused variable num2#0
debug: Removing unused variable tmp%16#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%20#0
debug: Removing unused variable tmp%0#4
debug: Removing unused variable tmp%1#3
debug: Removing unused variable tmp%2#4
debug: Removing unused variable tmp%3#1
debug: Removing unused variable tmp%4#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "There" "There") to 1u
debug: Simplified (== "Hi" "Hi") to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== "Hi" "Hi") to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== "There" "There") to 1u
debug: Don't know how to simplify 1 addw 2
debug: Simplified (+ 1u 2u) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@11
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@11 with block@0 in block@12
debug: Merged linear block@11 into block@0
debug: Replaced predecessor block@22 with block@21 in block@23
debug: Merged linear block@22 into block@21
debug: Replaced predecessor block@23 with block@21 in block@24
debug: Merged linear block@23 into block@21
debug: Replaced predecessor block@24 with block@21 in block@25
debug: Merged linear block@24 into block@21
debug: Merged linear block@25 into block@21
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0, tmp%6#0
debug: selected reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable args.a#0
debug: Removing unused variable args.b#0
debug: Removing unused variable args.c#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0, tmp%10#0
debug: selected reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable args.child.a#0
debug: Removing unused variable args.child.b#0
debug: Removing unused variable args.child.c#0
debug: Removing unused variable args.foo#0
debug: Removing unused variable args.foo_arc#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:174:18 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.build_nested in test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable awst_tmp%2#0
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable result.0.0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "hi" "hi") to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@3
debug: Merged linear block@5 into block@0
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
tuple_support/nested_tuples.py:168:9 debug: replacing app_global read with cached value for key: "build_nested_call_count"
tuple_support/nested_tuples.py:176:16 debug: replacing app_global read with cached value for key: "build_nested_call_count"
tuple_support/nested_tuples.py:173:9 debug: removing unobserved app_global write to key: "build_nested_call_count"
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: marking single-use function test_cases.tuple_support.nested_tuples.NestedTuples.build_nested for inlining
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
tuple_support/nested_tuples.py:174:18 debug: inlining call to test_cases.tuple_support.nested_tuples.NestedTuples.build_nested in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable tmp%2#1
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable result.0.0#0
debug: Removing unused variable awst_tmp%1#1
debug: Removing unused variable awst_tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== "hi" "hi") to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@22 with block@21 in block@23
debug: Merged linear block@22 into block@21
debug: Merged linear block@23 into block@21
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Unused subroutines removed
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%5#2
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.004.ssa.opt.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of test_cases.tuple_support.nested_tuples.NestedTuples at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.tuple_support.nested_tuples.NestedTuples
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.tuple_support.nested_tuples.NestedTuples
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.tuple_support.nested_tuples.NestedTuples at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, encoded_array%0#0
debug: selected aggregate%len_u16%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%3#0, aggregate%as_Encoded((len+uint64[]),(uint64,(len+uint8[]),(len+utf8[])))%0#0, encoded_for_storage%0#0
debug: selected aggregate%concat%3#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0004
debug: Simplified (concat 0x 0x0004) to 0x0004
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 4u 2u) to 6u
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (len 0x) to 0u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x000c
debug: Simplified (concat aggregate%val_as_bytes%0#0 0x000c) to 0x0000000000000000000c
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 12u 2u) to 14u
debug: Simplified (len "") to 0u
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0000
debug: Simplified (concat 0x0000 "") to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x000e
debug: Simplified (concat 0x0000000000000000000c 0x000e) to 0x0000000000000000000c000e
debug: Simplified (concat 0x0000000000000000000c000e 0x0000) to 0x0000000000000000000c000e0000
debug: Simplified (concat 0x0000000000000000000c000e0000 0x0000) to 0x0000000000000000000c000e00000000
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x0006
debug: Simplified (concat 0x0004 0x0006) to 0x00040006
debug: Simplified (concat 0x00040006 0x0000) to 0x000400060000
debug: Simplified (concat 0x000400060000 0x0000000000000000000c000e00000000) to 0x0004000600000000000000000000000c000e00000000
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:53:16-48, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0)]
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:53:16-48, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0)]
debug: Replacing redundant declaration let aggregate%as_bytes%4#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:53:16-48, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0)]
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%val_as_bytes%0#0, aggregate%head%1#0, aggregate%as_bytes%2#0, aggregate%as_bytes%4#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%item0%0#0, key.a#0
debug: selected key.a#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, key.b#0
debug: selected key.b#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64,uint64)%0#0, encoded_for_storage%1#0
debug: selected aggregate%head%1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 reinterpret_Encoded(uint64,uint64)%0#0 0u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 reinterpret_Encoded(uint64,uint64)%0#0 8u)
debug: Simplified (itob key.a#0) to (extract3 reinterpret_Encoded(uint64,uint64)%0#0 0u 8u)
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#0 0u 8u) to ((extract 0 8) reinterpret_Encoded(uint64,uint64)%0#0)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#0 8u 8u) to ((extract 8 8) reinterpret_Encoded(uint64,uint64)%0#0)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#0 0u 8u) to ((extract 0 8) reinterpret_Encoded(uint64,uint64)%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = ((extract 0 8) reinterpret_Encoded(uint64,uint64)%0#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:69:5-21, ir_type=bytes, name='aggregate%extract%0', version=0)]
debug: Found equivalence set: aggregate%extract%0#0, aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%3#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%0#0
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%item0%0#0, ternary_result%0.a#0
debug: selected aggregate%item0%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, ternary_result%0.b#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64,uint64)%0#0
debug: selected aggregate%head%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded((uint64,uint64),bool1)%0#0, tmp%5#0
debug: selected aggregate%head%3#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 maybe_value%0#0 0u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 maybe_value%0#0 8u)
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (concat 0x aggregate%head%1#0) to aggregate%head%1#0
debug: Simplified (extract3 maybe_value%0#0 0u 8u) to ((extract 0 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%0#0 8u 8u) to ((extract 8 8) maybe_value%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%item0%0#0, ternary_result%0.a#0
debug: selected aggregate%item0%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, ternary_result%0.b#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64,uint64)%0#0, tmp%4#0
debug: selected aggregate%head%1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 maybe_value%0#0 0u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 maybe_value%0#0 8u)
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (extract3 maybe_value%0#0 0u 8u) to ((extract 0 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%0#0 8u 8u) to ((extract 8 8) maybe_value%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%item0%0#0, ternary_result%0.a#0
debug: selected aggregate%item0%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, ternary_result%0.b#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64,uint64)%0#0, tmp%3#0
debug: selected aggregate%head%1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 maybe_value%0#0 0u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 maybe_value%0#0 8u)
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (extract3 maybe_value%0#0 0u 8u) to ((extract 0 8) maybe_value%0#0)
debug: Simplified (extract3 maybe_value%0#0 8u 8u) to ((extract 8 8) maybe_value%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(len+uint64[])%0#0, twm.arr#0
debug: selected twm.arr#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64[])%0#0, tmp%0#1
debug: selected aggregate%head%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(uint64[])%1#0, tmp%1#1
debug: selected aggregate%head%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%3#0, aggregate%as_Encoded((len+uint64[]),(uint64,(len+uint8[]),(len+utf8[])))%0#0, tmp%4#0
debug: selected aggregate%concat%3#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0001
debug: Simplified (concat 0x0001 0x0000000000000000) to 0x00010000000000000000
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified (concat 0x00010000000000000000 0x0000000000000001) // on error: max array length exceeded to 0x000100000000000000000000000000000001
debug: Simplified (extract_uint16 0x00010000000000000000 0u) to 1u
debug: Simplified (+ 1u 1u) to 2u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified ((replace2 0) 0x000100000000000000000000000000000001 0x0002) to 0x000200000000000000000000000000000001
debug: Simplified (concat 0x 0x0000000000000002) to 0x0000000000000002
debug: Simplified (concat 0x000200000000000000000000000000000001 0x0000000000000002) // on error: max array length exceeded to 0x0002000000000000000000000000000000010000000000000002
debug: Simplified (extract_uint16 0x000200000000000000000000000000000001 0u) to 2u
debug: Simplified (+ 2u 1u) to 3u
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x0003
debug: Simplified ((replace2 0) 0x0002000000000000000000000000000000010000000000000002 0x0003) to 0x0003000000000000000000000000000000010000000000000002
debug: Simplified (len 0x0003000000000000000000000000000000010000000000000002) to 26u
debug: Simplified (substring3 0x0003000000000000000000000000000000010000000000000002 2u 26u) to 0x000000000000000000000000000000010000000000000002
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0004
debug: Simplified (concat 0x 0x0004) to 0x0004
debug: Simplified (len 0x0003000000000000000000000000000000010000000000000002) to 26u
debug: Simplified (+ 4u 26u) to 30u
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (len 0x) to 0u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x000c
debug: Simplified (concat aggregate%val_as_bytes%0#0 0x000c) to 0x0000000000000000000c
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 12u 2u) to 14u
debug: Simplified (len "") to 0u
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0000
debug: Simplified (concat 0x0000 "") to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x000e
debug: Simplified (concat 0x0000000000000000000c 0x000e) to 0x0000000000000000000c000e
debug: Simplified (concat 0x0000000000000000000c000e 0x0000) to 0x0000000000000000000c000e0000
debug: Simplified (concat 0x0000000000000000000c000e0000 0x0000) to 0x0000000000000000000c000e00000000
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x001e
debug: Simplified (concat 0x0004 0x001e) to 0x0004001e
debug: Simplified (concat 0x0004001e 0x0003000000000000000000000000000000010000000000000002) to 0x0004001e0003000000000000000000000000000000010000000000000002
debug: Simplified (concat 0x0004001e0003000000000000000000000000000000010000000000000002 0x0000000000000000000c000e00000000) to 0x0004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000
debug: Simplified (concat 0x151f7c75 0x0004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000) to 0x151f7c750004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:95:5-21, ir_type=bytes[8], name='aggregate%val_as_bytes%0', version=0)]
debug: Replacing redundant declaration let aggregate%as_bytes%4#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:95:5-21, ir_type=bytes[8], name='aggregate%val_as_bytes%0', version=0)]
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%4#0, aggregate%as_bytes%2#0, aggregate%as_bytes%4#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%substring3%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: aggregate%item0%0#0, tmp%1#0
debug: selected aggregate%item0%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, tmp%2#0
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%item2%0#0, tmp%3#0
debug: selected aggregate%item2%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%4#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%4#0, awst_tmp%0#0
debug: selected aggregate%substring3%4#0 from equivalence set
debug: Found equivalence set: aggregate%item0%1#0, awst_tmp%1#0
debug: selected aggregate%item0%1#0 from equivalence set
debug: Found equivalence set: aggregate%item1%1#0, awst_tmp%2#0
debug: selected aggregate%item1%1#0 from equivalence set
debug: Found equivalence set: aggregate%item2%1#0, awst_tmp%3#0
debug: selected aggregate%item2%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%3#0, aggregate%as_Encoded((len+uint64[]),(uint64,(len+uint8[]),(len+utf8[])))%0#0, encoded_for_storage%0#0
debug: selected aggregate%concat%3#0 from equivalence set
debug: Copy propagation made 15 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%item0%0#0
debug: Removing unused variable aggregate%item1%0#0
debug: Removing unused variable aggregate%item2%0#0
debug: Removing unused variable aggregate%substring3%4#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%substring3%2#0
debug: Removing unused variable aggregate%substring3%3#0
debug: Removing unused variable aggregate%extract_uint16%6#0
debug: Removing unused variable aggregate%extract_uint16%7#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Removing unused variable aggregate%extract_uint16%3#0
debug: Removing unused variable aggregate%extract_uint16%4#0
debug: Removing unused variable aggregate%extract_uint16%5#0
debug: Removing unused variable aggregate%len%1#0
debug: Removing unused variable aggregate%substring3%1#0
debug: Removing unused variable aggregate%extract_uint16%2#0
debug: Removing unused variable aggregate%len%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 aggregate%substring3%5#0 0u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0004
debug: Simplified (concat 0x 0x0004) to 0x0004
debug: Simplified (itob aggregate%item0%1#0) to (extract3 aggregate%substring3%5#0 0u 8u)
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x000c
debug: Simplified (extract3 aggregate%substring3%5#0 0u 8u) to ((extract 0 8) aggregate%substring3%5#0)
debug: Simplified (extract3 aggregate%substring3%5#0 0u 8u) to ((extract 0 8) aggregate%substring3%5#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%extract_uint16%11#0: uint64 = (extract_uint16 aggregate%substring3%5#0 10u) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:118:19-27, ir_type=uint64, name='aggregate%extract_uint16%10', version=0)]
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = ((extract 0 8) aggregate%substring3%5#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:118:19-27, ir_type=bytes, name='aggregate%extract%1', version=0)]
debug: Found equivalence set: aggregate%extract_uint16%10#0, aggregate%extract_uint16%11#0
debug: selected aggregate%extract_uint16%10#0 from equivalence set
debug: Found equivalence set: aggregate%extract%1#0, aggregate%val_as_bytes%0#0, aggregate%head%2#0
debug: selected aggregate%extract%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
tuple_support/nested_tuples.py:118:20 debug: replacing app_global read with cached value for key: "twm"
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(len+uint64[])%0#0, x.0.0#0
debug: selected x.0.0#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64[])%0#0, tmp%0#2
debug: selected aggregate%head%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, tmp%1#2
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%1#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0001
debug: Simplified (concat 0x0001 0x0000000000000000) to 0x00010000000000000000
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified (concat 0x00010000000000000000 0x0000000000000001) // on error: max array length exceeded to 0x000100000000000000000000000000000001
debug: Simplified (extract_uint16 0x00010000000000000000 0u) to 1u
debug: Simplified (+ 1u 1u) to 2u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified ((replace2 0) 0x000100000000000000000000000000000001 0x0002) to 0x000200000000000000000000000000000001
debug: Simplified (extract_uint16 0x000200000000000000000000000000000001 0u) to 2u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (concat 0x151f7c75 0x80) to 0x151f7c7580
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
tuple_support/nested_tuples.py:168:9 debug: replacing app_global read with cached value for key: "build_nested_call_count"
tuple_support/nested_tuples.py:176:16 debug: replacing app_global read with cached value for key: "build_nested_call_count"
tuple_support/nested_tuples.py:173:9 debug: removing unobserved app_global write to key: "build_nested_call_count"
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%item0%0#0, args.0#0
debug: selected args.0#0 from equivalence set
debug: Found equivalence set: aggregate%item0%1#0, args.1.0#0
debug: selected args.1.0#0 from equivalence set
debug: Found equivalence set: aggregate%item0%2#0, args.1.1.0#0
debug: selected args.1.1.0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+utf8[]),uint64)%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%2#0, aggregate%as_Encoded((len+uint8[]),((len+utf8[]),uint64))%0#0, tmp%6#0
debug: selected aggregate%concat%2#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 aggregate%extract%0#0 0u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0004
debug: Simplified (concat 0x 0x0004) to 0x0004
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified (itob args.1.1.0#0) to (extract3 aggregate%extract%0#0 0u 8u)
debug: Simplified (extract3 aggregate%substring3%1#0 2u 8u) to ((extract 2 8) aggregate%substring3%1#0)
debug: Simplified (extract3 aggregate%extract%0#0 0u 8u) to ((extract 0 8) aggregate%extract%0#0)
debug: Simplified (extract3 aggregate%extract%0#0 0u 8u) to ((extract 0 8) aggregate%extract%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%extract_uint16%2#0: uint64 = (extract_uint16 reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 2u) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:149:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = ((extract 0 8) aggregate%extract%0#0) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:149:5-21, ir_type=bytes, name='aggregate%extract%1', version=0)]
debug: Found equivalence set: aggregate%extract_uint16%1#0, aggregate%extract_uint16%2#0
debug: selected aggregate%extract_uint16%1#0 from equivalence set
debug: Found equivalence set: aggregate%extract%1#0, aggregate%val_as_bytes%0#0
debug: selected aggregate%extract%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.200.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable aggregate%concat%1#0
debug: Removing unused variable aggregate%as_bytes%6#0
debug: Removing unused variable aggregate%offset_as_uint16%3#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%concat%2#0
debug: Removing unused variable aggregate%concat%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key.a#0
debug: Removing unused variable aggregate%extract%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%head%2#0
debug: selected aggregate%head%1#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%extract%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%extract%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%extract%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable twm.arr#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_uint16%0#0
debug: Removing unused variable add%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable twm.arr#1
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable concat%1#0
debug: Removing unused variable extract_uint16%1#0
debug: Removing unused variable add%1#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable as_u16_bytes%1#0
debug: Removing unused variable twm.arr#2
debug: Removing unused variable aggregate%total_length%0#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable aggregate%concat%1#0
debug: Removing unused variable aggregate%as_bytes%6#0
debug: Removing unused variable aggregate%offset_as_uint16%3#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable aggregate%concat%2#0
debug: Removing unused variable aggregate%concat%3#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, maybe_value%1#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, maybe_exists%1#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%item0%1#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%0#0
debug: Replacing redundant declaration let aggregate%extract_uint16%8#0: uint64 = (extract_uint16 maybe_value%0#0 2u) with copy of existing registers [Register(source_location=tuple_support/nested_tuples.py:116:15-23, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Found equivalence set: aggregate%extract_uint16%1#0, aggregate%extract_uint16%8#0
debug: selected aggregate%extract_uint16%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#4, maybe_value%0#0
debug: selected tmp%0#4 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable x.0.0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_uint16%0#0
debug: Removing unused variable add%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable x.0.0#1
debug: Removing unused variable aggregate%array_length%0#0
debug: Removing unused variable tmp%2#2
debug: Removing unused variable maybe_value%0#1
debug: Removing unused variable maybe_exists%0#1
debug: Removing unused variable maybe_exists%0#0
debug: Removing unused variable aggregate%encoded_bool%0#0
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable args.1.1.0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.201.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#4
debug: Removing unused variable tmp%6#1
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.202.ssa.array.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.simple_tup
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@3 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.tuple_support.nested_tuples.NestedTuples at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.tuple_support.nested_tuples.NestedTuples
debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init, []
tuple_support/nested_tuples.py:179 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.get_sender_inefficiently, []
tuple_support/nested_tuples.py:185 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.simple_tup, []
tuple_support/nested_tuples.py:191 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.echo, []
tuple_support/nested_tuples.py:247 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.test_nested_singles, []
tuple_support/nested_tuples.py:61:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing], []
tuple_support/nested_tuples.py:65:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing], []
tuple_support/nested_tuples.py:69:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing], []
tuple_support/nested_tuples.py:73:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing], []
tuple_support/nested_tuples.py:77:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing], []
tuple_support/nested_tuples.py:81:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing], []
tuple_support/nested_tuples.py:86:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing], []
tuple_support/nested_tuples.py:90:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing], []
tuple_support/nested_tuples.py:95:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing], []
tuple_support/nested_tuples.py:114:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing], []
tuple_support/nested_tuples.py:120:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing], []
tuple_support/nested_tuples.py:149:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing], []
tuple_support/nested_tuples.py:156:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing], []
tuple_support/nested_tuples.py:161:6 debug: auto reserving slots in test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing], []
debug: Slot allocation not required
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.tuple_support.nested_tuples.NestedTuples
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: splitting critical edge block@0->block@2
debug: Replaced predecessor block@0 with block@22 in block@2
debug: splitting critical edge block@4->block@20
debug: Replaced predecessor block@4 with block@23 in block@20
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@22
debug: Removing jump block block@23
debug: branching to block@22 will be replaced with block@2
debug: branching to block@23 will be replaced with block@20
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.get_sender_inefficiently using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.get_sender_inefficiently
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.simple_tup
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.simple_tup using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.simple_tup
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.echo
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.echo using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.echo
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.test_nested_singles
debug: splitting critical edge block@0->block@2
debug: Replaced predecessor block@0 with block@3 in block@2
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.test_nested_singles using strategy 'root_operand'
debug: Coalescing s.0.0#0 with [s.0.0#2, s.0.0#1]
debug: Coalescing s.2.0#0 with [s.2.0#2, s.2.0#1]
debug: Coalescing s.1.0#1 with [s.1.0#2]
debug: Coalescing resulted in 14 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.test_nested_singles
debug: loc: {s.1.0#1=None, one#0=one#0}
debug: pred: {s.1.0#1=one#0}
debug: ready: s.1.0#1
debug: to_do: s.1.0#1
debug: * avail s.1.0#1
debug: * avail one#0
debug: * to_do s.1.0#1
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: loc: {maybe_value.a#0=None, maybe_value.b#0=None, aggregate%item0%0#0=aggregate%item0%0#0, aggregate%item1%0#0=aggregate%item1%0#0}
debug: pred: {maybe_value.a#0=aggregate%item0%0#0, maybe_value.b#0=aggregate%item1%0#0}
debug: ready: maybe_value.a#0, maybe_value.b#0
debug: to_do: maybe_value.a#0, maybe_value.b#0
debug: * avail maybe_value.b#0
debug: * avail aggregate%item1%0#0
debug: * avail maybe_value.a#0
debug: * avail aggregate%item0%0#0
debug: * to_do maybe_value.b#0
debug: * to_do maybe_value.a#0
debug: loc: {maybe_value.a#0=None, maybe_value.b#0=None, ternary_result%0.a#1=ternary_result%0.a#1, ternary_result%0.b#1=ternary_result%0.b#1}
debug: pred: {maybe_value.a#0=ternary_result%0.a#1, maybe_value.b#0=ternary_result%0.b#1}
debug: ready: maybe_value.a#0, maybe_value.b#0
debug: to_do: maybe_value.a#0, maybe_value.b#0
debug: * avail maybe_value.b#0
debug: * avail ternary_result%0.b#1
debug: * avail maybe_value.a#0
debug: * avail ternary_result%0.a#1
debug: * to_do maybe_value.b#0
debug: * to_do maybe_value.a#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: loc: {ternary_result%0.a#2=None, ternary_result%0.b#2=None, aggregate%item0%0#0=aggregate%item0%0#0, aggregate%item1%0#0=aggregate%item1%0#0}
debug: pred: {ternary_result%0.a#2=aggregate%item0%0#0, ternary_result%0.b#2=aggregate%item1%0#0}
debug: ready: ternary_result%0.a#2, ternary_result%0.b#2
debug: to_do: ternary_result%0.a#2, ternary_result%0.b#2
debug: * avail ternary_result%0.b#2
debug: * avail aggregate%item1%0#0
debug: * avail ternary_result%0.a#2
debug: * avail aggregate%item0%0#0
debug: * to_do ternary_result%0.b#2
debug: * to_do ternary_result%0.a#2
debug: loc: {ternary_result%0.a#2=None, ternary_result%0.b#2=None, tmp%0#1=tmp%0#1, tmp%1#1=tmp%1#1}
debug: pred: {ternary_result%0.a#2=tmp%0#1, ternary_result%0.b#2=tmp%1#1}
debug: ready: ternary_result%0.a#2, ternary_result%0.b#2
debug: to_do: ternary_result%0.a#2, ternary_result%0.b#2
debug: * avail ternary_result%0.b#2
debug: * avail tmp%1#1
debug: * avail ternary_result%0.a#2
debug: * avail tmp%0#1
debug: * to_do ternary_result%0.b#2
debug: * to_do ternary_result%0.a#2
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: loc: {ternary_result%0.a#2=None, ternary_result%0.b#2=None, aggregate%item0%0#0=aggregate%item0%0#0, aggregate%item1%0#0=aggregate%item1%0#0}
debug: pred: {ternary_result%0.a#2=aggregate%item0%0#0, ternary_result%0.b#2=aggregate%item1%0#0}
debug: ready: ternary_result%0.a#2, ternary_result%0.b#2
debug: to_do: ternary_result%0.a#2, ternary_result%0.b#2
debug: * avail ternary_result%0.b#2
debug: * avail aggregate%item1%0#0
debug: * avail ternary_result%0.a#2
debug: * avail aggregate%item0%0#0
debug: * to_do ternary_result%0.b#2
debug: * to_do ternary_result%0.a#2
debug: loc: {ternary_result%0.a#2=None, ternary_result%0.b#2=None, tmp%2#1=tmp%2#1, tmp%3#1=tmp%3#1}
debug: pred: {ternary_result%0.a#2=tmp%2#1, ternary_result%0.b#2=tmp%3#1}
debug: ready: ternary_result%0.a#2, ternary_result%0.b#2
debug: to_do: ternary_result%0.a#2, ternary_result%0.b#2
debug: * avail ternary_result%0.b#2
debug: * avail tmp%3#1
debug: * avail ternary_result%0.a#2
debug: * avail tmp%2#1
debug: * to_do ternary_result%0.b#2
debug: * to_do ternary_result%0.a#2
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing] using strategy 'root_operand'
debug: Coalescing i#0 with [i#1, i#2]
debug: Coalescing resulted in 8 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing] using strategy 'root_operand'
debug: Coalescing arr2#0 with [arr2#1]
debug: Coalescing resulted in 3 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing] using strategy 'root_operand'
debug: Coalescing total#0 with [total#1, total#2, total#3, total#4]
debug: Coalescing loop_counter%0#0 with [loop_counter%0#1, loop_counter%0#2, loop_counter%0#3, loop_counter%0#4]
debug: Coalescing t.0#0 with [t.0#1, t.0#2, t.0#3, t.0#4]
debug: Coalescing t.1#0 with [t.1#1, t.1#2, t.1#3, t.1#4]
debug: Coalescing loop_counter%1#0 with [loop_counter%1#1, loop_counter%1#2, loop_counter%1#3, loop_counter%1#4]
debug: Coalescing a#2 with [a#3, a#4, a#5, a#6]
debug: Coalescing b#2 with [b#3, b#4, b#5, b#6]
debug: Coalescing resulted in 86 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]
debug: Performing post-SSA optimizations at level 1
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to tuple_support/out/NestedTuples.ir/NestedTuples.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[3]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_abi_routing@4.ops[5]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_abi_routing@4.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_abi_routing@4.ops[10]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_abi_routing@4.ops[12]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_abi_routing@4.ops[15]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_abi_routing@4.ops[31]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main___algopy_default_create@21.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main___algopy_default_create@21.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main___algopy_default_create@21.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced main___algopy_default_create@21.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@21.ops[15]: 'l-store-copy tmp%11#0 0'
debug: Replaced main___algopy_default_create@21.ops[17]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main___algopy_default_create@21.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced main___algopy_default_create@21.ops[14]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main___algopy_default_create@21.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main___algopy_default_create@21.ops[14]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted get_sender_inefficiently_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_sender_inefficiently_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_nested_singles_block@0.ops[7]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_nested_singles_block@0.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[7]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_nested_singles_after_if_else@2.ops[9]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[19]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_nested_singles_after_if_else@2.ops[21]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[26]: 'l-store-copy s1#1 0'
debug: Replaced test_nested_singles_after_if_else@2.ops[28]: 'v-load s1#1' with 'l-load s1#1'
debug: Inserted test_nested_singles_after_if_else@2.ops[31]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_nested_singles_after_if_else@2.ops[33]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[43]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_nested_singles_after_if_else@2.ops[45]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[3]: 'l-store-copy select%0#0 0'
debug: Replaced test_nested_singles_after_if_else@2.ops[6]: 'v-load select%0#0' with 'l-load select%0#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[16]: 'l-store-copy select%1#0 0'
debug: Replaced test_nested_singles_after_if_else@2.ops[19]: 'v-load select%1#0' with 'l-load select%1#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[41]: 'l-store-copy select%3#0 0'
debug: Replaced test_nested_singles_after_if_else@2.ops[44]: 'v-load select%3#0' with 'l-load select%3#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[20]: 'l-store-copy select%1#0 1'
debug: Replaced test_nested_singles_after_if_else@2.ops[32]: 'v-load select%1#0' with 'l-load select%1#0'
debug: Inserted test_nested_singles_after_if_else@2.ops[27]: 'l-store-copy s.1.0#1 1'
debug: Replaced test_nested_singles_after_if_else@2.ops[45]: 'v-load s.1.0#1' with 'l-load s.1.0#1'
debug: Inserted store_tuple_block@0.ops[1]: 'l-store-copy reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 0'
debug: Replaced store_tuple_block@0.ops[4]: 'v-load reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0' with 'l-load reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0'
debug: Inserted load_tuple_block@0.ops[10]: 'l-store-copy tmp%7#0 0'
debug: Replaced load_tuple_block@0.ops[12]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted load_tuple_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced load_tuple_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted load_tuple_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced load_tuple_block@0.ops[10]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted store_tuple_in_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced store_tuple_in_box_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted store_tuple_in_box_block@0.ops[9]: 'l-store-copy key.b#0 0'
debug: Replaced store_tuple_in_box_block@0.ops[11]: 'v-load key.b#0' with 'l-load key.b#0'
debug: Inserted store_tuple_in_box_block@0.ops[21]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced store_tuple_in_box_block@0.ops[24]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted store_tuple_in_box_block@0.ops[26]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced store_tuple_in_box_block@0.ops[29]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted store_tuple_in_box_block@0.ops[4]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced store_tuple_in_box_block@0.ops[7]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted store_tuple_in_box_block@0.ops[15]: 'l-store-copy tmp%0#1 0'
debug: Replaced store_tuple_in_box_block@0.ops[21]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted store_tuple_in_box_block@0.ops[20]: 'l-store-copy box_prefixed_key%0#0 1'
debug: Replaced store_tuple_in_box_block@0.ops[31]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted store_tuple_in_box_block@0.ops[8]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced store_tuple_in_box_block@0.ops[19]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted store_tuple_in_box_block@0.ops[6]: 'l-store-copy aggregate%extract%0#0 1'
debug: Replaced store_tuple_in_box_block@0.ops[28]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted is_tuple_in_box_block@0.ops[5]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced is_tuple_in_box_block@0.ops[7]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted is_tuple_in_box_block@0.ops[19]: 'l-store-copy tmp%4#0 0'
debug: Replaced is_tuple_in_box_block@0.ops[21]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted is_tuple_in_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced is_tuple_in_box_block@0.ops[4]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted is_tuple_in_box_block@0.ops[16]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced is_tuple_in_box_block@0.ops[19]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted is_tuple_in_box_block@0.ops[10]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced is_tuple_in_box_block@0.ops[15]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted load_tuple_from_box_block@0.ops[5]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced load_tuple_from_box_block@0.ops[7]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted load_tuple_from_box_block@0.ops[16]: 'l-store-copy tmp%5#0 0'
debug: Replaced load_tuple_from_box_block@0.ops[18]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted load_tuple_from_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced load_tuple_from_box_block@0.ops[4]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted load_tuple_from_box_block@0.ops[10]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced load_tuple_from_box_block@0.ops[13]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted load_tuple_from_box_block@0.ops[12]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced load_tuple_from_box_block@0.ops[17]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted maybe_load_tuple_from_box_block@0.ops[5]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced maybe_load_tuple_from_box_block@0.ops[7]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted maybe_load_tuple_from_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced maybe_load_tuple_from_box_block@0.ops[4]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted maybe_load_tuple_from_box_block@0.ops[10]: 'l-store-copy exists#0 1'
debug: Replaced maybe_load_tuple_from_box_block@0.ops[13]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted maybe_load_tuple_from_box_ternary_true@2.ops[7]: 'l-store-copy aggregate%item1%0#0 0'
debug: Replaced maybe_load_tuple_from_box_ternary_true@2.ops[9]: 'v-load aggregate%item1%0#0' with 'l-load aggregate%item1%0#0'
debug: Inserted maybe_load_tuple_from_box_ternary_true@2.ops[1]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced maybe_load_tuple_from_box_ternary_true@2.ops[5]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted maybe_load_tuple_from_box_ternary_true@2.ops[4]: 'l-store-copy aggregate%item0%0#0 1'
debug: Replaced maybe_load_tuple_from_box_ternary_true@2.ops[13]: 'v-load aggregate%item0%0#0' with 'l-load aggregate%item0%0#0'
debug: Inserted maybe_load_tuple_from_box_ternary_false@3.ops[3]: 'l-store-copy ternary_result%0.b#1 0'
debug: Replaced maybe_load_tuple_from_box_ternary_false@3.ops[5]: 'v-load ternary_result%0.b#1' with 'l-load ternary_result%0.b#1'
debug: Inserted maybe_load_tuple_from_box_ternary_false@3.ops[1]: 'l-store-copy ternary_result%0.a#1 0'
debug: Replaced maybe_load_tuple_from_box_ternary_false@3.ops[8]: 'v-load ternary_result%0.a#1' with 'l-load ternary_result%0.a#1'
debug: Inserted maybe_load_tuple_from_box_ternary_merge@4.ops[22]: 'l-store-copy tmp%6#0 0'
debug: Replaced maybe_load_tuple_from_box_ternary_merge@4.ops[24]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted maybe_load_tuple_from_box_ternary_merge@4.ops[5]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced maybe_load_tuple_from_box_ternary_merge@4.ops[8]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted maybe_load_tuple_from_box_ternary_merge@4.ops[15]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced maybe_load_tuple_from_box_ternary_merge@4.ops[18]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted maybe_load_tuple_from_box_ternary_merge@4.ops[20]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced maybe_load_tuple_from_box_ternary_merge@4.ops[23]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted maybe_load_tuple_from_box_ternary_merge@4.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced maybe_load_tuple_from_box_ternary_merge@4.ops[8]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted maybe_load_tuple_from_box_ternary_merge@4.ops[11]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced maybe_load_tuple_from_box_ternary_merge@4.ops[19]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted load_tuple_from_box_or_default_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced load_tuple_from_box_or_default_block@0.ops[4]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted load_tuple_from_box_or_default_block@0.ops[14]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced load_tuple_from_box_or_default_block@0.ops[17]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted load_tuple_from_box_or_default_block@0.ops[6]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced load_tuple_from_box_or_default_block@0.ops[13]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted load_tuple_from_box_or_default_ternary_true@2.ops[7]: 'l-store-copy aggregate%item1%0#0 0'
debug: Replaced load_tuple_from_box_or_default_ternary_true@2.ops[9]: 'v-load aggregate%item1%0#0' with 'l-load aggregate%item1%0#0'
debug: Inserted load_tuple_from_box_or_default_ternary_true@2.ops[1]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced load_tuple_from_box_or_default_ternary_true@2.ops[5]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted load_tuple_from_box_or_default_ternary_true@2.ops[4]: 'l-store-copy aggregate%item0%0#0 1'
debug: Replaced load_tuple_from_box_or_default_ternary_true@2.ops[13]: 'v-load aggregate%item0%0#0' with 'l-load aggregate%item0%0#0'
debug: Inserted load_tuple_from_box_or_default_ternary_merge@4.ops[13]: 'l-store-copy tmp%5#0 0'
debug: Replaced load_tuple_from_box_or_default_ternary_merge@4.ops[15]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted load_tuple_from_box_or_default_ternary_merge@4.ops[5]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced load_tuple_from_box_or_default_ternary_merge@4.ops[8]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted load_tuple_from_box_or_default_ternary_merge@4.ops[10]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced load_tuple_from_box_or_default_ternary_merge@4.ops[13]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted load_tuple_from_box_or_default_ternary_merge@4.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced load_tuple_from_box_or_default_ternary_merge@4.ops[8]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted load_tuple_from_local_state_or_default_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(len+utf8[])%0#0 0'
debug: Replaced load_tuple_from_local_state_or_default_block@0.ops[3]: 'v-load reinterpret_Encoded(len+utf8[])%0#0' with 'l-load reinterpret_Encoded(len+utf8[])%0#0'
debug: Inserted load_tuple_from_local_state_or_default_block@0.ops[5]: 'l-store-copy key#0 0'
debug: Replaced load_tuple_from_local_state_or_default_block@0.ops[7]: 'v-load key#0' with 'l-load key#0'
debug: Inserted load_tuple_from_local_state_or_default_block@0.ops[21]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced load_tuple_from_local_state_or_default_block@0.ops[24]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted load_tuple_from_local_state_or_default_block@0.ops[11]: 'l-store-copy tmp%1#1 0'
debug: Replaced load_tuple_from_local_state_or_default_block@0.ops[18]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted load_tuple_from_local_state_or_default_block@0.ops[9]: 'l-store-copy local#0 0'
debug: Replaced load_tuple_from_local_state_or_default_block@0.ops[21]: 'v-load local#0' with 'l-load local#0'
debug: Inserted load_tuple_from_local_state_or_default_ternary_true@2.ops[7]: 'l-store-copy aggregate%item1%0#0 0'
debug: Replaced load_tuple_from_local_state_or_default_ternary_true@2.ops[9]: 'v-load aggregate%item1%0#0' with 'l-load aggregate%item1%0#0'
debug: Inserted load_tuple_from_local_state_or_default_ternary_true@2.ops[1]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced load_tuple_from_local_state_or_default_ternary_true@2.ops[5]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted load_tuple_from_local_state_or_default_ternary_true@2.ops[4]: 'l-store-copy aggregate%item0%0#0 1'
debug: Replaced load_tuple_from_local_state_or_default_ternary_true@2.ops[13]: 'v-load aggregate%item0%0#0' with 'l-load aggregate%item0%0#0'
debug: Inserted load_tuple_from_local_state_or_default_ternary_merge@4.ops[13]: 'l-store-copy tmp%4#0 0'
debug: Replaced load_tuple_from_local_state_or_default_ternary_merge@4.ops[15]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted load_tuple_from_local_state_or_default_ternary_merge@4.ops[5]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced load_tuple_from_local_state_or_default_ternary_merge@4.ops[8]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted load_tuple_from_local_state_or_default_ternary_merge@4.ops[10]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced load_tuple_from_local_state_or_default_ternary_merge@4.ops[13]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted load_tuple_from_local_state_or_default_ternary_merge@4.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced load_tuple_from_local_state_or_default_ternary_merge@4.ops[8]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted mutate_local_tuple_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced mutate_local_tuple_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted mutate_local_tuple_for_body@3.ops[15]: 'l-store-copy tmp%3#1 0'
debug: Replaced mutate_local_tuple_for_body@3.ops[17]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted mutate_local_tuple_for_body@3.ops[3]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced mutate_local_tuple_for_body@3.ops[6]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted mutate_local_tuple_for_body@3.ops[12]: 'l-store-copy tmp%2#1 0'
debug: Replaced mutate_local_tuple_for_body@3.ops[15]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted mutate_local_tuple_for_body@3.ops[9]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced mutate_local_tuple_for_body@3.ops[15]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted mutate_local_tuple_for_body@3.ops[1]: 'l-store-copy i#0 0'
debug: Replaced mutate_local_tuple_for_body@3.ops[12]: 'v-load i#0' with 'l-load i#0'
debug: Inserted mutate_local_tuple_for_body@3.ops[13]: 'l-store-copy i#0 1'
debug: Replaced mutate_local_tuple_for_body@3.ops[24]: 'v-load i#0' with 'l-load i#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[19]: 'l-store-copy arr2#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[21]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[28]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[30]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[33]: 'l-store-copy add%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[35]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[37]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[39]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[53]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[55]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[70]: 'l-store-copy aggregate%substring3%6#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[72]: 'v-load aggregate%substring3%6#0' with 'l-load aggregate%substring3%6#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[82]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[84]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[96]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[98]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[100]: 'l-store-copy aggregate%as_bytes%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[102]: 'v-load aggregate%as_bytes%1#0' with 'l-load aggregate%as_bytes%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[104]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[106]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[123]: 'l-store-copy aggregate%length%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[125]: 'v-load aggregate%length%1#0' with 'l-load aggregate%length%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[127]: 'l-store-copy aggregate%as_bytes%3#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[129]: 'v-load aggregate%as_bytes%3#0' with 'l-load aggregate%as_bytes%3#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[131]: 'l-store-copy aggregate%length_uint16%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[133]: 'v-load aggregate%length_uint16%1#0' with 'l-load aggregate%length_uint16%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[139]: 'l-store-copy aggregate%as_bytes%4#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[141]: 'v-load aggregate%as_bytes%4#0' with 'l-load aggregate%as_bytes%4#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[147]: 'l-store-copy aggregate%head%4#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[149]: 'v-load aggregate%head%4#0' with 'l-load aggregate%head%4#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[152]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[154]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[160]: 'l-store-copy aggregate%as_bytes%5#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[162]: 'v-load aggregate%as_bytes%5#0' with 'l-load aggregate%as_bytes%5#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[168]: 'l-store-copy aggregate%head%5#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[170]: 'v-load aggregate%head%5#0' with 'l-load aggregate%head%5#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[173]: 'l-store-copy aggregate%concat%2#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[175]: 'v-load aggregate%concat%2#0' with 'l-load aggregate%concat%2#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[42]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[45]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[91]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[94]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[119]: 'l-store-copy aggregate%data_length%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[122]: 'v-load aggregate%data_length%1#0' with 'l-load aggregate%data_length%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[147]: 'l-store-copy aggregate%offset_as_uint16%2#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[150]: 'v-load aggregate%offset_as_uint16%2#0' with 'l-load aggregate%offset_as_uint16%2#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[169]: 'l-store-copy aggregate%offset_as_uint16%3#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[172]: 'v-load aggregate%offset_as_uint16%3#0' with 'l-load aggregate%offset_as_uint16%3#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[184]: 'l-store-copy aggregate%concat%3#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[187]: 'v-load aggregate%concat%3#0' with 'l-load aggregate%concat%3#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[16]: 'l-store-copy aggregate%extract_uint16%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[20]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[51]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[54]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[53]: 'l-store-copy aggregate%len%2#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[57]: 'v-load aggregate%len%2#0' with 'l-load aggregate%len%2#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[62]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[65]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[72]: 'l-store-copy aggregate%extract_uint16%10#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[76]: 'v-load aggregate%extract_uint16%10#0' with 'l-load aggregate%extract_uint16%10#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[84]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[87]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[86]: 'l-store-copy aggregate%len%3#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[90]: 'v-load aggregate%len%3#0' with 'l-load aggregate%len%3#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[10]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[14]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[15]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[20]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[27]: 'l-store-copy arr2#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[31]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[69]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[73]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[74]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[79]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[125]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[131]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[13]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[22]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[73]: 'l-store-copy aggregate%extract_uint16%9#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[82]: 'v-load aggregate%extract_uint16%9#0' with 'l-load aggregate%extract_uint16%9#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[82]: 'l-store-copy aggregate%substring3%5#0 2'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[91]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[85]: 'l-store-copy aggregate%extract_uint16%10#0 3'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[98]: 'v-load aggregate%extract_uint16%10#0' with 'l-load aggregate%extract_uint16%10#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[115]: 'l-store-copy aggregate%item1%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[128]: 'v-load aggregate%item1%1#0' with 'l-load aggregate%item1%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[145]: 'l-store-copy aggregate%item2%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[158]: 'v-load aggregate%item2%1#0' with 'l-load aggregate%item2%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[143]: 'l-store-copy aggregate%current_tail_offset%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[162]: 'v-load aggregate%current_tail_offset%1#0' with 'l-load aggregate%current_tail_offset%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[31]: 'l-store-copy concat%0#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[51]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[162]: 'l-store-copy aggregate%encoded_value%1#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[183]: 'v-load aggregate%encoded_value%1#0' with 'l-load aggregate%encoded_value%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[185]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[206]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[92]: 'l-store-copy aggregate%item1%1#0 2'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[116]: 'v-load aggregate%item1%1#0' with 'l-load aggregate%item1%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[22]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[56]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[138]: 'l-store-copy aggregate%head%3#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[175]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[25]: 'l-store-copy aggregate%extract_uint16%1#0 3'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[63]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[142]: 'l-store-copy aggregate%encoded_value%0#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[183]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[109]: 'l-store-copy aggregate%item2%1#0 1'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[152]: 'v-load aggregate%item2%1#0' with 'l-load aggregate%item2%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[56]: 'l-store-copy arr2#0 2'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[112]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[72]: 'l-store-copy aggregate%extract%1#0 2'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[139]: 'v-load aggregate%extract%1#0' with 'l-load aggregate%extract%1#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[120]: 'l-store-copy aggregate%current_tail_offset%0#0 3'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[196]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted mutate_tuple_in_storage_currently_supported_method_block@0.ops[114]: 'l-store-copy arr2#0 3'
debug: Replaced mutate_tuple_in_storage_currently_supported_method_block@0.ops[211]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted run_tests_block@0.ops[4]: 'l-store-copy nt.1.0#0 0'
debug: Replaced run_tests_block@0.ops[6]: 'v-load nt.1.0#0' with 'l-load nt.1.0#0'
debug: Inserted run_tests_block@0.ops[16]: 'l-store-copy tmp%7#0 0'
debug: Replaced run_tests_block@0.ops[18]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted run_tests_block@0.ops[12]: 'l-store-copy tmp%6#0 0'
debug: Replaced run_tests_block@0.ops[15]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted run_tests_block@0.ops[3]: 'l-store-copy nt.1.1#0 1'
debug: Replaced run_tests_block@0.ops[10]: 'v-load nt.1.1#0' with 'l-load nt.1.1#0'
debug: Inserted run_tests_block@0.ops[9]: 'l-store-copy tmp%4#0 1'
debug: Replaced run_tests_block@0.ops[16]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted run_tests_block@0.ops[17]: 'l-store-copy tmp%4#0 1'
debug: Replaced run_tests_block@0.ops[24]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted run_tests_block@0.ops[19]: 'l-store-copy tmp%6#0 2'
debug: Replaced run_tests_block@0.ops[27]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted run_tests_for_body@12.ops[3]: 'l-store-copy tmp%0#3 0'
debug: Replaced run_tests_for_body@12.ops[6]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted run_tests_for_body@17.ops[3]: 'l-store-copy tmp%2#3 0'
debug: Replaced run_tests_for_body@17.ops[6]: 'v-load tmp%2#3' with 'l-load tmp%2#3'
debug: Inserted run_tests_after_for@21.ops[3]: 'l-store-copy tmp%4#1 0'
debug: Replaced run_tests_after_for@21.ops[5]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted run_tests_after_for@21.ops[8]: 'l-store-copy tmp%5#1 0'
debug: Replaced run_tests_after_for@21.ops[10]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted nested_tuple_params_block@0.ops[1]: 'l-store-copy reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[3]: 'v-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0' with 'l-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0'
debug: Inserted nested_tuple_params_block@0.ops[15]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[17]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted nested_tuple_params_block@0.ops[27]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced nested_tuple_params_block@0.ops[29]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted nested_tuple_params_block@0.ops[40]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced nested_tuple_params_block@0.ops[42]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted nested_tuple_params_block@0.ops[47]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[49]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted nested_tuple_params_block@0.ops[54]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[56]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted nested_tuple_params_block@0.ops[58]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[60]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted nested_tuple_params_block@0.ops[62]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[64]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted nested_tuple_params_block@0.ops[67]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[69]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted nested_tuple_params_block@0.ops[78]: 'l-store-copy aggregate%length%1#0 0'
debug: Replaced nested_tuple_params_block@0.ops[80]: 'v-load aggregate%length%1#0' with 'l-load aggregate%length%1#0'
debug: Inserted nested_tuple_params_block@0.ops[82]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced nested_tuple_params_block@0.ops[84]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted nested_tuple_params_block@0.ops[86]: 'l-store-copy aggregate%length_uint16%1#0 0'
debug: Replaced nested_tuple_params_block@0.ops[88]: 'v-load aggregate%length_uint16%1#0' with 'l-load aggregate%length_uint16%1#0'
debug: Inserted nested_tuple_params_block@0.ops[95]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced nested_tuple_params_block@0.ops[97]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted nested_tuple_params_block@0.ops[103]: 'l-store-copy aggregate%as_bytes%4#0 0'
debug: Replaced nested_tuple_params_block@0.ops[105]: 'v-load aggregate%as_bytes%4#0' with 'l-load aggregate%as_bytes%4#0'
debug: Inserted nested_tuple_params_block@0.ops[111]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced nested_tuple_params_block@0.ops[113]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted nested_tuple_params_block@0.ops[116]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced nested_tuple_params_block@0.ops[118]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted nested_tuple_params_block@0.ops[125]: 'l-store-copy tmp%7#0 0'
debug: Replaced nested_tuple_params_block@0.ops[127]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted nested_tuple_params_block@0.ops[71]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[74]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted nested_tuple_params_block@0.ops[108]: 'l-store-copy aggregate%offset_as_uint16%2#0 0'
debug: Replaced nested_tuple_params_block@0.ops[111]: 'v-load aggregate%offset_as_uint16%2#0' with 'l-load aggregate%offset_as_uint16%2#0'
debug: Inserted nested_tuple_params_block@0.ops[123]: 'l-store-copy aggregate%concat%2#0 0'
debug: Replaced nested_tuple_params_block@0.ops[126]: 'v-load aggregate%concat%2#0' with 'l-load aggregate%concat%2#0'
debug: Inserted nested_tuple_params_block@0.ops[10]: 'l-store-copy aggregate%extract_uint16%1#0 0'
debug: Replaced nested_tuple_params_block@0.ops[14]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted nested_tuple_params_block@0.ops[22]: 'l-store-copy reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[25]: 'v-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0' with 'l-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0'
debug: Inserted nested_tuple_params_block@0.ops[24]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced nested_tuple_params_block@0.ops[28]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted nested_tuple_params_block@0.ops[37]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced nested_tuple_params_block@0.ops[40]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted nested_tuple_params_block@0.ops[39]: 'l-store-copy aggregate%len%1#0 1'
debug: Replaced nested_tuple_params_block@0.ops[43]: 'v-load aggregate%len%1#0' with 'l-load aggregate%len%1#0'
debug: Inserted nested_tuple_params_block@0.ops[4]: 'l-store-copy reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[8]: 'v-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0' with 'l-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0'
debug: Inserted nested_tuple_params_block@0.ops[9]: 'l-store-copy reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[14]: 'v-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0' with 'l-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0'
debug: Inserted nested_tuple_params_block@0.ops[35]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced nested_tuple_params_block@0.ops[39]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted nested_tuple_params_block@0.ops[38]: 'l-store-copy aggregate%extract_uint16%3#0 1'
debug: Replaced nested_tuple_params_block@0.ops[46]: 'v-load aggregate%extract_uint16%3#0' with 'l-load aggregate%extract_uint16%3#0'
debug: Inserted nested_tuple_params_block@0.ops[7]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced nested_tuple_params_block@0.ops[16]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted nested_tuple_params_block@0.ops[102]: 'l-store-copy aggregate%encoded_value%1#0 0'
debug: Replaced nested_tuple_params_block@0.ops[110]: 'v-load aggregate%encoded_value%1#0' with 'l-load aggregate%encoded_value%1#0'
debug: Inserted nested_tuple_params_block@0.ops[54]: 'l-store-copy args.1.0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[63]: 'v-load args.1.0#0' with 'l-load args.1.0#0'
debug: Inserted nested_tuple_params_block@0.ops[16]: 'l-store-copy reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 2'
debug: Replaced nested_tuple_params_block@0.ops[25]: 'v-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0' with 'l-load reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0'
debug: Inserted nested_tuple_params_block@0.ops[48]: 'l-store-copy aggregate%substring3%1#0 2'
debug: Replaced nested_tuple_params_block@0.ops[58]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted nested_tuple_params_block@0.ops[19]: 'l-store-copy aggregate%extract_uint16%1#0 3'
debug: Replaced nested_tuple_params_block@0.ops[32]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted nested_tuple_params_block@0.ops[67]: 'l-store-copy args.1.0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[80]: 'v-load args.1.0#0' with 'l-load args.1.0#0'
debug: Inserted nested_tuple_params_block@0.ops[93]: 'l-store-copy args.0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[106]: 'v-load args.0#0' with 'l-load args.0#0'
debug: Inserted nested_tuple_params_block@0.ops[118]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[139]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted nested_tuple_params_block@0.ops[91]: 'l-store-copy aggregate%current_tail_offset%0#0 0'
debug: Replaced nested_tuple_params_block@0.ops[121]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted nested_tuple_params_block@0.ops[65]: 'l-store-copy aggregate%extract%1#0 1'
debug: Replaced nested_tuple_params_block@0.ops[113]: 'v-load aggregate%extract%1#0' with 'l-load aggregate%extract%1#0'
debug: Inserted nested_tuple_params_block@0.ops[86]: 'l-store-copy aggregate%encoded_value%0#0 1'
debug: Replaced nested_tuple_params_block@0.ops[137]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted nested_tuple_params_block@0.ops[25]: 'l-store-copy args.0#0 2'
debug: Replaced nested_tuple_params_block@0.ops[96]: 'v-load args.0#0' with 'l-load args.0#0'
debug: Inserted named_tuple_block@0.ops[5]: 'l-store-copy tmp%7#0 0'
debug: Replaced named_tuple_block@0.ops[7]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted named_tuple_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 0'
debug: Replaced named_tuple_block@0.ops[4]: 'v-load reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0' with 'l-load reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0'
debug: Inserted nested_named_tuple_params_block@0.ops[5]: 'l-store-copy tmp%11#0 0'
debug: Replaced nested_named_tuple_params_block@0.ops[7]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted nested_named_tuple_params_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 0'
debug: Replaced nested_named_tuple_params_block@0.ops[4]: 'v-load reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0' with 'l-load reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0'
debug: Found 3 edge set/s for test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init
debug: Found 2 edge set/s for test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Allocated 1 variable/s to x-stack: s.1.0#1
debug: shared x-stack for test_nested_singles_if_body@1 -> test_nested_singles_after_if_else@2: s.1.0#1
debug: shared x-stack for test_nested_singles_block@3 -> test_nested_singles_after_if_else@2: s.1.0#1
debug: Found 2 edge set/s for test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]
debug: Allocated 2 variable/s to x-stack: maybe_value.a#0, maybe_value.b#0
debug: shared x-stack for maybe_load_tuple_from_box_ternary_true@2 -> maybe_load_tuple_from_box_ternary_merge@4: maybe_value.a#0, maybe_value.b#0
debug: shared x-stack for maybe_load_tuple_from_box_ternary_false@3 -> maybe_load_tuple_from_box_ternary_merge@4: maybe_value.a#0, maybe_value.b#0
debug: Found 2 edge set/s for test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]
debug: Allocated 2 variable/s to x-stack: ternary_result%0.a#2, ternary_result%0.b#2
debug: shared x-stack for load_tuple_from_box_or_default_ternary_true@2 -> load_tuple_from_box_or_default_ternary_merge@4: ternary_result%0.a#2, ternary_result%0.b#2
debug: shared x-stack for load_tuple_from_box_or_default_ternary_false@3 -> load_tuple_from_box_or_default_ternary_merge@4: ternary_result%0.a#2, ternary_result%0.b#2
debug: Found 2 edge set/s for test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]
debug: Allocated 2 variable/s to x-stack: ternary_result%0.a#2, ternary_result%0.b#2
debug: shared x-stack for load_tuple_from_local_state_or_default_ternary_true@2 -> load_tuple_from_local_state_or_default_ternary_merge@4: ternary_result%0.a#2, ternary_result%0.b#2
debug: shared x-stack for load_tuple_from_local_state_or_default_ternary_false@3 -> load_tuple_from_local_state_or_default_ternary_merge@4: ternary_result%0.a#2, ternary_result%0.b#2
debug: Found 2 edge set/s for test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]
debug: Found 4 edge set/s for test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]
debug: Allocated 4 variable/s to x-stack: b#2, loop_counter%0#0, loop_counter%1#0, t.1#0
debug: shared x-stack for run_tests_block@0 -> run_tests_for_body@12: t.1#0, loop_counter%0#0
debug: shared x-stack for run_tests_for_header_1@13 -> run_tests_for_body@12: t.1#0, loop_counter%0#0
debug: shared x-stack for run_tests_for_header_2@14 -> run_tests_for_body@12: t.1#0, loop_counter%0#0
debug: shared x-stack for run_tests_for_header_3@15 -> run_tests_for_body@12: t.1#0, loop_counter%0#0
debug: shared x-stack for run_tests_after_for@16 -> run_tests_for_body@17: b#2, loop_counter%1#0
debug: shared x-stack for run_tests_for_header_1@18 -> run_tests_for_body@17: b#2, loop_counter%1#0
debug: shared x-stack for run_tests_for_header_2@19 -> run_tests_for_body@17: b#2, loop_counter%1#0
debug: shared x-stack for run_tests_for_header_3@20 -> run_tests_for_body@17: b#2, loop_counter%1#0
debug: test_cases.tuple_support.nested_tuples.test_nested_singles f-stack entry: []
debug: test_cases.tuple_support.nested_tuples.test_nested_singles f-stack on first store: ['s.0.0#0', 's.2.0#0']
debug: test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing] f-stack entry: []
debug: test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing] f-stack on first store: ['exists#0', 'maybe_value%0#0']
debug: test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing] f-stack entry: []
debug: test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing] f-stack on first store: ['tmp%1#1', 'tmp%0#1', 'maybe_value%0#0']
debug: test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing] f-stack entry: []
debug: test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing] f-stack on first store: ['tmp%3#1', 'tmp%2#1', 'maybe_value%0#0']
debug: test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing] f-stack entry: []
debug: test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing] f-stack on first store: ['i#0']
debug: test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing] f-stack entry: ['a#2']
debug: test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing] f-stack on first store: ['total#0', 't.0#0']
debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init() -> uint64:
tuple_support/nested_tuples.py:179 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.get_sender_inefficiently() -> bytes:
tuple_support/nested_tuples.py:185 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.simple_tup(a: uint64, b: uint64) -> uint64, uint64:
tuple_support/nested_tuples.py:191 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.echo(s: bytes) -> bytes:
tuple_support/nested_tuples.py:247 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.test_nested_singles(one: uint64, reassign: uint64) -> void:
tuple_support/nested_tuples.py:61:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]() -> void:
tuple_support/nested_tuples.py:65:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]() -> void:
tuple_support/nested_tuples.py:69:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]() -> void:
tuple_support/nested_tuples.py:73:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]() -> void:
tuple_support/nested_tuples.py:77:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]() -> void:
tuple_support/nested_tuples.py:81:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]() -> void:
tuple_support/nested_tuples.py:86:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]() -> void:
tuple_support/nested_tuples.py:90:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]() -> void:
tuple_support/nested_tuples.py:95:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]() -> void:
tuple_support/nested_tuples.py:114:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]() -> void:
tuple_support/nested_tuples.py:120:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]() -> void:
tuple_support/nested_tuples.py:149:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]() -> void:
tuple_support/nested_tuples.py:156:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]() -> void:
tuple_support/nested_tuples.py:161:6 debug: optimizing TEAL subroutine ops test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]() -> void:
debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: replacing `b main_after_if_else@20` with `err`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
debug: inlining single reference block main_after_if_else@20 into main_after_if_else@2
debug: removing jump-chain block main_store_tuple_route@6
debug: removing jump-chain block main_load_tuple_route@7
debug: removing jump-chain block main_store_tuple_in_box_route@8
debug: removing jump-chain block main_is_tuple_in_box_route@9
debug: removing jump-chain block main_load_tuple_from_box_route@10
debug: removing jump-chain block main_maybe_load_tuple_from_box_route@11
debug: removing jump-chain block main_load_tuple_from_box_or_default_route@12
debug: removing jump-chain block main_load_tuple_from_local_state_or_default_route@13
debug: removing jump-chain block main_mutate_local_tuple_route@14
debug: removing jump-chain block main_mutate_tuple_in_storage_currently_supported_method_route@15
debug: removing jump-chain block main_run_tests_route@16
debug: removing jump-chain block main_nested_tuple_params_route@17
debug: removing jump-chain block main_named_tuple_route@18
debug: removing jump-chain block main_nested_named_tuple_params_route@19
debug: branching to main_store_tuple_route@6 will be replaced with store_tuple
debug: branching to main_load_tuple_route@7 will be replaced with load_tuple
debug: branching to main_store_tuple_in_box_route@8 will be replaced with store_tuple_in_box
debug: branching to main_is_tuple_in_box_route@9 will be replaced with is_tuple_in_box
debug: branching to main_load_tuple_from_box_route@10 will be replaced with load_tuple_from_box
debug: branching to main_maybe_load_tuple_from_box_route@11 will be replaced with maybe_load_tuple_from_box
debug: branching to main_load_tuple_from_box_or_default_route@12 will be replaced with load_tuple_from_box_or_default
debug: branching to main_load_tuple_from_local_state_or_default_route@13 will be replaced with load_tuple_from_local_state_or_default
debug: branching to main_mutate_local_tuple_route@14 will be replaced with mutate_local_tuple
debug: branching to main_mutate_tuple_in_storage_currently_supported_method_route@15 will be replaced with mutate_tuple_in_storage_currently_supported_method
debug: branching to main_run_tests_route@16 will be replaced with run_tests
debug: branching to main_nested_tuple_params_route@17 will be replaced with nested_tuple_params
debug: branching to main_named_tuple_route@18 will be replaced with named_tuple
debug: branching to main_nested_named_tuple_params_route@19 will be replaced with nested_named_tuple_params
debug: removing explicit jump to fall-through block main_after_if_else@2
tuple_support/nested_tuples.py:179 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.get_sender_inefficiently() -> bytes:
debug: inlining single reference block get_sender_inefficiently_block@0 into get_sender_inefficiently
tuple_support/nested_tuples.py:185 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.simple_tup(a: uint64, b: uint64) -> uint64, uint64:
debug: inlining single reference block simple_tup_block@0 into simple_tup
tuple_support/nested_tuples.py:191 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.echo(s: bytes) -> bytes:
debug: inlining single reference block echo_block@0 into echo
tuple_support/nested_tuples.py:247 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.test_nested_singles(one: uint64, reassign: uint64) -> void:
debug: inlining single reference block test_nested_singles_block@0 into test_nested_singles
debug: inlining single reference block test_nested_singles_block@3 into test_nested_singles
debug: removing explicit jump to fall-through block test_nested_singles_after_if_else@2
tuple_support/nested_tuples.py:61:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]() -> void:
debug: inlining single reference block store_tuple_block@0 into store_tuple
tuple_support/nested_tuples.py:65:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]() -> void:
debug: inlining single reference block load_tuple_block@0 into load_tuple
tuple_support/nested_tuples.py:69:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]() -> void:
debug: inlining single reference block store_tuple_in_box_block@0 into store_tuple_in_box
tuple_support/nested_tuples.py:73:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]() -> void:
debug: inlining single reference block is_tuple_in_box_block@0 into is_tuple_in_box
tuple_support/nested_tuples.py:77:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]() -> void:
debug: inlining single reference block load_tuple_from_box_block@0 into load_tuple_from_box
tuple_support/nested_tuples.py:81:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]() -> void:
debug: inlining single reference block maybe_load_tuple_from_box_block@0 into maybe_load_tuple_from_box
debug: inlining single reference block maybe_load_tuple_from_box_ternary_true@2 into maybe_load_tuple_from_box
debug: removing explicit jump to fall-through block maybe_load_tuple_from_box_ternary_merge@4
tuple_support/nested_tuples.py:86:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]() -> void:
debug: inlining single reference block load_tuple_from_box_or_default_block@0 into load_tuple_from_box_or_default
debug: inlining single reference block load_tuple_from_box_or_default_ternary_true@2 into load_tuple_from_box_or_default
debug: removing explicit jump to fall-through block load_tuple_from_box_or_default_ternary_merge@4
tuple_support/nested_tuples.py:90:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]() -> void:
debug: inlining single reference block load_tuple_from_local_state_or_default_block@0 into load_tuple_from_local_state_or_default
debug: inlining single reference block load_tuple_from_local_state_or_default_ternary_true@2 into load_tuple_from_local_state_or_default
debug: removing explicit jump to fall-through block load_tuple_from_local_state_or_default_ternary_merge@4
tuple_support/nested_tuples.py:95:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]() -> void:
debug: inlining single reference block mutate_local_tuple_block@0 into mutate_local_tuple
debug: inlining single reference block mutate_local_tuple_for_body@3 into mutate_local_tuple_for_header@2
debug: removing explicit jump to fall-through block mutate_local_tuple_for_header@2
tuple_support/nested_tuples.py:114:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]() -> void:
debug: inlining single reference block mutate_tuple_in_storage_currently_supported_method_block@0 into mutate_tuple_in_storage_currently_supported_method
tuple_support/nested_tuples.py:120:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]() -> void:
debug: inlining single reference block run_tests_block@0 into run_tests
debug: inlining single reference block run_tests_after_for@16 into run_tests_for_body@12
debug: inlining single reference block run_tests_after_for@21 into run_tests_for_body@17
debug: removing explicit jump to fall-through block run_tests_for_body@12
debug: removing explicit jump to fall-through block run_tests_for_body@17
tuple_support/nested_tuples.py:149:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]() -> void:
debug: inlining single reference block nested_tuple_params_block@0 into nested_tuple_params
tuple_support/nested_tuples.py:156:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]() -> void:
debug: inlining single reference block named_tuple_block@0 into named_tuple
tuple_support/nested_tuples.py:161:6 debug: optimizing TEAL subroutine blocks test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]() -> void:
debug: inlining single reference block nested_named_tuple_params_block@0 into nested_named_tuple_params
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing tuple_support/out/TupleSupport.approval.teal
info: Writing tuple_support/out/TupleSupport.clear.teal
info: Writing tuple_support/out/TupleSupport.approval.bin
info: Writing tuple_support/out/TupleSupport.clear.bin
info: Writing tuple_support/out/TupleSupport.approval.stats.txt
info: Writing tuple_support/out/TupleSupport.clear.stats.txt
info: Writing tuple_support/out/TupleSupport.approval.puya.map
info: Writing tuple_support/out/TupleSupport.clear.puya.map
info: Writing tuple_support/out/NestedTuplesStorage.arc32.json
info: Writing tuple_support/out/NestedTuplesStorage.arc56.json
info: Writing tuple_support/out/NestedTuplesStorage.approval.teal
info: Writing tuple_support/out/NestedTuplesStorage.clear.teal
info: Writing tuple_support/out/NestedTuplesStorage.approval.bin
info: Writing tuple_support/out/NestedTuplesStorage.clear.bin
info: Writing tuple_support/out/NestedTuplesStorage.approval.stats.txt
info: Writing tuple_support/out/NestedTuplesStorage.clear.stats.txt
info: Writing tuple_support/out/NestedTuplesStorage.approval.puya.map
info: Writing tuple_support/out/NestedTuplesStorage.clear.puya.map
info: Writing tuple_support/out/TupleComparisons.approval.teal
info: Writing tuple_support/out/TupleComparisons.clear.teal
info: Writing tuple_support/out/TupleComparisons.approval.bin
info: Writing tuple_support/out/TupleComparisons.clear.bin
info: Writing tuple_support/out/TupleComparisons.approval.stats.txt
info: Writing tuple_support/out/TupleComparisons.clear.stats.txt
info: Writing tuple_support/out/TupleComparisons.approval.puya.map
info: Writing tuple_support/out/TupleComparisons.clear.puya.map
info: Writing tuple_support/out/NestedTuples.arc32.json
info: Writing tuple_support/out/NestedTuples.arc56.json
info: Writing tuple_support/out/NestedTuples.approval.teal
info: Writing tuple_support/out/NestedTuples.clear.teal
info: Writing tuple_support/out/NestedTuples.approval.bin
info: Writing tuple_support/out/NestedTuples.clear.bin
info: Writing tuple_support/out/NestedTuples.approval.stats.txt
info: Writing tuple_support/out/NestedTuples.clear.stats.txt
info: Writing tuple_support/out/NestedTuples.approval.puya.map
info: Writing tuple_support/out/NestedTuples.clear.puya.map
info: writing tuple_support/out/client_NestedTuplesStorage.py
info: writing tuple_support/out/client_NestedTuples.py