main test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program:
    block@0: // L5
        let tmp%0#0: bool = 0u
        let awst_tmp%0#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(42u)
        let tmp%1#0: bool = 1u
        let tmp%2#0: bool = 1u
        let tmp%3#0: bool = 1u
        let awst_tmp%1#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(43u)
        let tmp%4#0: bool = 0u
        let tmp#0: bool = 0u
        let tmp%6#0: bool = 1u
        let tmp%7#0: bool = 0u
        let awst_tmp%2#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(44u)
        let tmp%8#0: bool = 1u
        let tmp%9#0: bool = 1u
        let tmp%10#0: bool = 1u
        let awst_tmp%3#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(45u)
        let tmp%11#0: bool = 0u
        let tmp#1: bool = 0u
        let tmp%13#0: bool = 1u
        let tmp%14#0: bool = 1u
        let tmp%15#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(46u)
        let tmp%16#0: bool = (!= 2u tmp%15#0)
        let tmp%17#0: bool = (|| 1u tmp%16#0)
        (assert tmp%17#0)
        let tmp%18#0: bool = 0u
        let tmp%19#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(47u)
        let tmp%20#0: bool = (== 2u tmp%19#0)
        let tmp#2: bool = 0u
        let tmp%22#0: bool = 1u
        let tmp%0#1: bool = 1u
        let tmp%1#1: bool = 1u
        return 1u

subroutine test_cases.tuple_support.tuple_comparisons.log_and_return(val: uint64) -> uint64:
    block@0: // L52
        let tmp%0#0: bytes = (itob val#0)
        (log tmp%0#0)
        return val#0