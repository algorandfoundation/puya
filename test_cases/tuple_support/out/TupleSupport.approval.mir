// Op                                                                      //                                                        Op Description                                                                                                Stack (out)                                                                                                                       X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// test_cases.tuple_support.tuple_support.TupleSupport.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                                      //                                                                                                                                                                      {txn}
    //                                                                     virtual: store app_id%0#0 to l-stack (no copy)            app_id%0#0
    //                                                                     virtual: load app_id%0#0 from l-stack (no copy)           app_id%0#0
    bnz main_entrypoint@2                                                  //
    // Implicit fall through to main_on_create@1                           //

main_on_create@1:
    callsub __init__                                                       //
    // Implicit fall through to main_entrypoint@2                          //

main_entrypoint@2:
    int 101                                                                //                                                                                                                                                                      101                                                                                                                                                                                                                                    UInt64(101)                                                                                          tuple_support/tuple_support.py:9
    int 102                                                                //                                                                                                                                                                      101,102                                                                                                                                                                                                                                UInt64(102)                                                                                          tuple_support/tuple_support.py:9
    int 103                                                                //                                                                                                                                                                      101,102,103                                                                                                                                                                                                                            UInt64(103)                                                                                          tuple_support/tuple_support.py:9
    callsub add_three_values                                               //                                                                                                                                                                      {add_three_values}                                                                                                                                                                                                                     add_three_values((UInt64(101), UInt64(102), UInt64(103)))                                            tuple_support/tuple_support.py:9
    //                                                                     virtual: store total#0 to l-stack (no copy)               total#0                                                                                                                                                                                                                                         total = add_three_values((UInt64(101), UInt64(102), UInt64(103)))                                    tuple_support/tuple_support.py:9
    //                                                                     virtual: load total#0 from l-stack (no copy)              total#0                                                                                                                                                                                                                                         total                                                                                                tuple_support/tuple_support.py:10
    itob                                                                   //                                                                                                                                                                      {itob}                                                                                                                                                                                                                                 total                                                                                                tuple_support/tuple_support.py:10
    //                                                                     virtual: store tmp%1#0 to l-stack (no copy)               tmp%1#0                                                                                                                                                                                                                                         total                                                                                                tuple_support/tuple_support.py:10
    //                                                                     virtual: load tmp%1#0 from l-stack (no copy)              tmp%1#0                                                                                                                                                                                                                                         log(total)                                                                                           tuple_support/tuple_support.py:10
    log                                                                    //                                                                                                                                                                                                                                                                                                                                                                                                             log(total)                                                                                           tuple_support/tuple_support.py:10
    int 1                                                                  //                                                                                                                                                                      1                                                                                                                                                                                                                                      UInt64(1)                                                                                            tuple_support/tuple_support.py:11
    int 2                                                                  //                                                                                                                                                                      1,2                                                                                                                                                                                                                                    UInt64(2)                                                                                            tuple_support/tuple_support.py:11
    addw                                                                   //                                                                                                                                                                      {addw}.0,{addw}.1                                                                                                                                                                                                                      op.addw(a, b)                                                                                        tuple_support/tuple_support.py:12
    //                                                                     virtual: store result.1#0 to l-stack (no copy)            result.1#0,{addw}.0                                                                                                                                                                                                                             op.addw(a, b)                                                                                        tuple_support/tuple_support.py:12
    //                                                                     virtual: store did_overflow#0 to l-stack (no copy)        did_overflow#0,result.1#0                                                                                                                                                                                                                       op.addw(a, b)                                                                                        tuple_support/tuple_support.py:12
    byte "state"                                                           //                                                                                                                                                                      did_overflow#0,result.1#0,"state"                                                                                                                                                                                                      self.state                                                                                           tuple_support/tuple_support.py:12
    dig 1                                                                  //                                                        load result.1#0 from l-stack (copy)                                                                           did_overflow#0,result.1#0,"state",result.1#0                                                                                                                                                                                           (did_overflow, self.state) = op.addw(a, b)                                                           tuple_support/tuple_support.py:12
    app_global_put                                                         //                                                                                                                                                                      did_overflow#0,result.1#0                                                                                                                                                                                                              (did_overflow, self.state) = op.addw(a, b)                                                           tuple_support/tuple_support.py:12
    dig 1                                                                  //                                                        load did_overflow#0 from l-stack (copy)                                                                       did_overflow#0,result.1#0,did_overflow#0                                                                                                                                                                                               not did_overflow                                                                                     tuple_support/tuple_support.py:13
    !                                                                      //                                                                                                                                                                      did_overflow#0,result.1#0,{!}                                                                                                                                                                                                          not did_overflow                                                                                     tuple_support/tuple_support.py:13
    //                                                                     virtual: store tmp%4#0 to l-stack (no copy)               did_overflow#0,result.1#0,tmp%4#0                                                                                                                                                                                                               not did_overflow                                                                                     tuple_support/tuple_support.py:13
    //                                                                     virtual: load tmp%4#0 from l-stack (no copy)              did_overflow#0,result.1#0,tmp%4#0                                                                                                                                                                                                               assert not did_overflow, "overflow!"                                                                 tuple_support/tuple_support.py:13
    assert // overflow!                                                    //                                                                                                                                                                      did_overflow#0,result.1#0                                                                                                                                                                                                              assert not did_overflow, "overflow!"                                                                 tuple_support/tuple_support.py:13
    byte "Hello, "                                                         //                                                                                                                                                                      did_overflow#0,result.1#0,"Hello, "                                                                                                                                                                                                    : support ths\n# foobar = ((a, b), (c, d)) # TODO: negative test for this\nlog(bytes_combine((Byt... tuple_support/tuple_support.py:31-33
    byte "world!"                                                          //                                                                                                                                                                      did_overflow#0,result.1#0,"Hello, ","world!"                                                                                                                                                                                           \n# foobar = ((a, b), (c, d)) # TODO: negative test for this\nlog(bytes_combine((Bytes(b"Hello, "... tuple_support/tuple_support.py:31-33
    callsub bytes_combine                                                  //                                                                                                                                                                      did_overflow#0,result.1#0,{bytes_combine}                                                                                                                                                                                              sert ab2 == ab # TODO: support ths\n# foobar = ((a, b), (c, d)) # TODO: negative test for this\nl... tuple_support/tuple_support.py:31-33
    //                                                                     virtual: store tmp%11#0 to l-stack (no copy)              did_overflow#0,result.1#0,tmp%11#0                                                                                                                                                                                                              sert ab2 == ab # TODO: support ths\n# foobar = ((a, b), (c, d)) # TODO: negative test for this\nl... tuple_support/tuple_support.py:31-33
    //                                                                     virtual: load tmp%11#0 from l-stack (no copy)             did_overflow#0,result.1#0,tmp%11#0                                                                                                                                                                                                              # assert ab2 == ab # TODO: support ths\n# foobar = ((a, b), (c, d)) # TODO: negative test for thi... tuple_support/tuple_support.py:31-33
    log                                                                    //                                                                                                                                                                      did_overflow#0,result.1#0                                                                                                                                                                                                              # assert ab2 == ab # TODO: support ths\n# foobar = ((a, b), (c, d)) # TODO: negative test for thi... tuple_support/tuple_support.py:31-33
    int 18446744073709551615                                               //                                                                                                                                                                      did_overflow#0,result.1#0,18446744073709551615                                                                                                                                                                                         UInt64(2**64 - 1)                                                                                    tuple_support/tuple_support.py:34
    int 18446744073709551615                                               //                                                                                                                                                                      did_overflow#0,result.1#0,18446744073709551615,18446744073709551615                                                                                                                                                                    UInt64(2**64 - 1)                                                                                    tuple_support/tuple_support.py:34
    addw                                                                   //                                                                                                                                                                      did_overflow#0,result.1#0,{addw}.0,{addw}.1                                                                                                                                                                                            op.addw(max_uint64, max_uint64)                                                                      tuple_support/tuple_support.py:35
    //                                                                     virtual: store tmp%13#0 to l-stack (no copy)              did_overflow#0,result.1#0,tmp%13#0,{addw}.0                                                                                                                                                                                                     op.addw(max_uint64, max_uint64)                                                                      tuple_support/tuple_support.py:35
    //                                                                     virtual: store tmp%12#0 to l-stack (no copy)              did_overflow#0,result.1#0,tmp%13#0,tmp%12#0                                                                                                                                                                                                     op.addw(max_uint64, max_uint64)                                                                      tuple_support/tuple_support.py:35
    //                                                                     virtual: load tmp%12#0 from l-stack (no copy)             did_overflow#0,result.1#0,tmp%13#0,tmp%12#0                                                                                                                                                                                                     addw2(op.addw(max_uint64, max_uint64), op.addw(a, b))                                                tuple_support/tuple_support.py:35
    //                                                                     virtual: load tmp%13#0 from l-stack (no copy)             did_overflow#0,result.1#0,tmp%12#0,tmp%13#0                                                                                                                                                                                                     addw2(op.addw(max_uint64, max_uint64), op.addw(a, b))                                                tuple_support/tuple_support.py:35
    uncover 3                                                              //                                                        load did_overflow#0 from l-stack (no copy)                                                                    result.1#0,tmp%12#0,tmp%13#0,did_overflow#0                                                                                                                                                                                            addw2(op.addw(max_uint64, max_uint64), op.addw(a, b))                                                tuple_support/tuple_support.py:35
    uncover 3                                                              //                                                        load result.1#0 from l-stack (no copy)                                                                        tmp%12#0,tmp%13#0,did_overflow#0,result.1#0                                                                                                                                                                                            addw2(op.addw(max_uint64, max_uint64), op.addw(a, b))                                                tuple_support/tuple_support.py:35
    callsub addw2                                                          //                                                                                                                                                                      {addw2}.0,{addw2}.1,{addw2}.2                                                                                                                                                                                                          addw2(op.addw(max_uint64, max_uint64), op.addw(a, b))                                                tuple_support/tuple_support.py:35
    cover 2                                                                //                                                        store lo#0 to l-stack (no copy)                                                                               lo#0,{addw2}.0,{addw2}.1                                                                                                                                                                                                               addw2(op.addw(max_uint64, max_uint64), op.addw(a, b))                                                tuple_support/tuple_support.py:35
    swap                                                                   //                                                        store mid#0 to l-stack (no copy)                                                                              lo#0,mid#0,{addw2}.0                                                                                                                                                                                                                   addw2(op.addw(max_uint64, max_uint64), op.addw(a, b))                                                tuple_support/tuple_support.py:35
    //                                                                     virtual: store hi#0 to l-stack (no copy)                  lo#0,mid#0,hi#0                                                                                                                                                                                                                                 addw2(op.addw(max_uint64, max_uint64), op.addw(a, b))                                                tuple_support/tuple_support.py:35
    //                                                                     virtual: load hi#0 from l-stack (no copy)                 lo#0,mid#0,hi#0                                                                                                                                                                                                                                 hi                                                                                                   tuple_support/tuple_support.py:36
    itob                                                                   //                                                                                                                                                                      lo#0,mid#0,{itob}                                                                                                                                                                                                                      hi                                                                                                   tuple_support/tuple_support.py:36
    //                                                                     virtual: store tmp%19#0 to l-stack (no copy)              lo#0,mid#0,tmp%19#0                                                                                                                                                                                                                             hi                                                                                                   tuple_support/tuple_support.py:36
    //                                                                     virtual: load tmp%19#0 from l-stack (no copy)             lo#0,mid#0,tmp%19#0                                                                                                                                                                                                                             log(hi)                                                                                              tuple_support/tuple_support.py:36
    log                                                                    //                                                                                                                                                                      lo#0,mid#0                                                                                                                                                                                                                             log(hi)                                                                                              tuple_support/tuple_support.py:36
    //                                                                     virtual: load mid#0 from l-stack (no copy)                lo#0,mid#0                                                                                                                                                                                                                                      mid                                                                                                  tuple_support/tuple_support.py:37
    itob                                                                   //                                                                                                                                                                      lo#0,{itob}                                                                                                                                                                                                                            mid                                                                                                  tuple_support/tuple_support.py:37
    //                                                                     virtual: store tmp%20#0 to l-stack (no copy)              lo#0,tmp%20#0                                                                                                                                                                                                                                   mid                                                                                                  tuple_support/tuple_support.py:37
    //                                                                     virtual: load tmp%20#0 from l-stack (no copy)             lo#0,tmp%20#0                                                                                                                                                                                                                                   log(mid)                                                                                             tuple_support/tuple_support.py:37
    log                                                                    //                                                                                                                                                                      lo#0                                                                                                                                                                                                                                   log(mid)                                                                                             tuple_support/tuple_support.py:37
    //                                                                     virtual: load lo#0 from l-stack (no copy)                 lo#0                                                                                                                                                                                                                                            lo                                                                                                   tuple_support/tuple_support.py:38
    itob                                                                   //                                                                                                                                                                      {itob}                                                                                                                                                                                                                                 lo                                                                                                   tuple_support/tuple_support.py:38
    //                                                                     virtual: store tmp%21#0 to l-stack (no copy)              tmp%21#0                                                                                                                                                                                                                                        lo                                                                                                   tuple_support/tuple_support.py:38
    //                                                                     virtual: load tmp%21#0 from l-stack (no copy)             tmp%21#0                                                                                                                                                                                                                                        log(lo)                                                                                              tuple_support/tuple_support.py:38
    log                                                                    //                                                                                                                                                                                                                                                                                                                                                                                                             log(lo)                                                                                              tuple_support/tuple_support.py:38
    byte "na"                                                              //                                                                                                                                                                      "na"                                                                                                                                                                                                                                   b"na"                                                                                                tuple_support/tuple_support.py:39
    int 5                                                                  //                                                                                                                                                                      "na",5                                                                                                                                                                                                                                 UInt64(5)                                                                                            tuple_support/tuple_support.py:39
    callsub bytes_multiply                                                 //                                                                                                                                                                      {bytes_multiply}                                                                                                                                                                                                                       bytes_multiply((Bytes(b"na"), UInt64(5)))                                                            tuple_support/tuple_support.py:39
    //                                                                     virtual: store tmp%22#0 to l-stack (no copy)              tmp%22#0                                                                                                                                                                                                                                        bytes_multiply((Bytes(b"na"), UInt64(5)))                                                            tuple_support/tuple_support.py:39
    //                                                                     virtual: load tmp%22#0 from l-stack (no copy)             tmp%22#0                                                                                                                                                                                                                                        log(bytes_multiply((Bytes(b"na"), UInt64(5))))                                                       tuple_support/tuple_support.py:39
    log                                                                    //                                                                                                                                                                                                                                                                                                                                                                                                             log(bytes_multiply((Bytes(b"na"), UInt64(5))))                                                       tuple_support/tuple_support.py:39
    int 0                                                                  //                                                                                                                                                                      0                                                                                                                                                                                                                                      UInt64(0)                                                                                            tuple_support/tuple_support.py:40
    callsub test_tuple_swap                                                //                                                                                                                                                                                                                                                                                                                                                                                                             test_tuple_swap(zero=UInt64(0))                                                                      tuple_support/tuple_support.py:40
    int 1                                                                  //                                                                                                                                                                      1                                                                                                                                                                                                                                      UInt64(1)                                                                                            tuple_support/tuple_support.py:43
    int 2                                                                  //                                                                                                                                                                      1,2                                                                                                                                                                                                                                    UInt64(2)                                                                                            tuple_support/tuple_support.py:44
    int 3                                                                  //                                                                                                                                                                      1,2,3                                                                                                                                                                                                                                  UInt64(3)                                                                                            tuple_support/tuple_support.py:45
    int 4                                                                  //                                                                                                                                                                      1,2,3,4                                                                                                                                                                                                                                UInt64(4)                                                                                            tuple_support/tuple_support.py:46
    int 5                                                                  //                                                                                                                                                                      1,2,3,4,5                                                                                                                                                                                                                              UInt64(5)                                                                                            tuple_support/tuple_support.py:47
    int 6                                                                  //                                                                                                                                                                      1,2,3,4,5,6                                                                                                                                                                                                                            UInt64(6)                                                                                            tuple_support/tuple_support.py:48
    int 7                                                                  //                                                                                                                                                                      1,2,3,4,5,6,7                                                                                                                                                                                                                          UInt64(7)                                                                                            tuple_support/tuple_support.py:49
    int 8                                                                  //                                                                                                                                                                      1,2,3,4,5,6,7,8                                                                                                                                                                                                                        UInt64(8)                                                                                            tuple_support/tuple_support.py:50
    callsub slicing                                                        //                                                                                                                                                                                                                                                                                                                                                                                                             slicing(\n(\nUInt64(1),\nUInt64(2),\nUInt64(3),\nUInt64(4),\nUInt64(5),\nUInt64(6),\nUInt64(7),\n... tuple_support/tuple_support.py:41-52
    int 3                                                                  //                                                                                                                                                                      3                                                                                                                                                                                                                                      a + b                                                                                                tuple_support/tuple_support.py:53
    return                                                                 //                                                                                                                                                                                                                                                                                                                                                                                                             return a + b                                                                                         tuple_support/tuple_support.py:53


// test_cases.tuple_support.tuple_support.add_three_values(values.0: uint64, values.1: uint64, values.2: uint64) -> uint64:
add_three_values:
    proto 3 1                                                              //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 |                                                                                                                                                                                                 @subroutine\ndef add_three_values(values: tuple[UInt64, UInt64, UInt64]) -> UInt64:                  tuple_support/tuple_support.py:75-76
    byte ""                                                                //                                                        allocate 1 to stack                                                                                           (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4 |

add_three_values_block@0:
    int 0                                                                  //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4 | 0                                                                                                                                                                         UInt64(0)                                                                                            tuple_support/tuple_support.py:77
    //                                                                     virtual: store total#0 to f-stack                         (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 |                                                                                                                                                                            total = UInt64(0)                                                                                    tuple_support/tuple_support.py:77
    int 0                                                                  //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | 0
    //                                                                     virtual: store tuple_index%0#0 to x-stack (no copy)       (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 |
    frame_dig -3                                                           //                                                        load values.0#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 | values.0#0
    swap                                                                   //                                                        store value#3 to x-stack (no copy)                                                                            (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) value#3,tuple_index%0#0 |
    b add_three_values_for_body@4                                          //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) value#3,tuple_index%0#0 |                                value#3, tuple_index%0#0

add_three_values_for_header_1@2:
    frame_dig 0                                                            //                                                        load tuple_index%0#4 from f-stack                                                                             (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | tuple_index%0#4
    //                                                                     virtual: store tuple_index%0#0 to x-stack (no copy)       (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 |
    frame_dig -2                                                           //                                                        load values.1#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 | values.1#0
    swap                                                                   //                                                        store value#3 to x-stack (no copy)                                                                            (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) value#3,tuple_index%0#0 |
    b add_three_values_for_body@4                                          //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) value#3,tuple_index%0#0 |                                value#3, tuple_index%0#0

add_three_values_for_header_2@3:
    frame_dig 0                                                            //                                                        load tuple_index%0#4 from f-stack                                                                             (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | tuple_index%0#4
    //                                                                     virtual: store tuple_index%0#0 to x-stack (no copy)       (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 |
    frame_dig -1                                                           //                                                        load values.2#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 | values.2#0
    swap                                                                   //                                                        store value#3 to x-stack (no copy)                                                                            (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) value#3,tuple_index%0#0 |
    // Implicit fall through to add_three_values_for_body@4                //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) value#3,tuple_index%0#0 |                                value#3, tuple_index%0#0

add_three_values_for_body@4:
    frame_dig 1                                                            //                                                        load total#0 from f-stack                                                                                     (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) value#3,tuple_index%0#0 | total#0                        value#3, tuple_index%0#0                                                                             total += value                                                                                       tuple_support/tuple_support.py:79
    uncover 2                                                              //                                                        load value#3 from x-stack                                                                                     (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 | total#0,value#3                                                                                                                             total += value                                                                                       tuple_support/tuple_support.py:79
    +                                                                      //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 | {+}                                                                                                                                         total += value                                                                                       tuple_support/tuple_support.py:79
    dup                                                                    //                                                        store total#0 to l-stack (copy)                                                                               (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 | total#0,total#0                                                                                                                             total += value                                                                                       tuple_support/tuple_support.py:79
    frame_bury 1                                                           //                                                        store total#0 to f-stack                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | (𝕏) tuple_index%0#0 | total#0                                                                                                                                     total += value                                                                                       tuple_support/tuple_support.py:79
    swap                                                                   //                                                        load tuple_index%0#0 from x-stack                                                                             (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | total#0,tuple_index%0#0
    dup                                                                    //                                                        store tuple_index%0#0 to l-stack (copy)                                                                       (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | total#0,tuple_index%0#0,tuple_index%0#0
    int 1                                                                  //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | total#0,tuple_index%0#0,tuple_index%0#0,1
    +                                                                      //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | total#0,tuple_index%0#0,{+}
    frame_bury 0                                                           //                                                        store tuple_index%0#4 to f-stack                                                                              (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | total#0,tuple_index%0#0
    //                                                                     virtual: load tuple_index%0#0 from l-stack (no copy)      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | total#0,tuple_index%0#0                                                                                                                                                    for value in values:                                                                                 tuple_support/tuple_support.py:78
    switch add_three_values_for_header_1@2 add_three_values_for_header_2@3 //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | total#0                                                                                                                                                           for value in values:                                                                                 tuple_support/tuple_support.py:78
    //                                                                     virtual: load total#0 from l-stack (no copy)              (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#4,total#0 | total#0                                                                                                                                                                    for value in values:                                                                                 tuple_support/tuple_support.py:78
    frame_bury 0
    retsub                                                                 //                                                                                                                                                                      total#0                                                                                                                                                                                                                                return total                                                                                         tuple_support/tuple_support.py:81


// test_cases.tuple_support.tuple_support.bytes_combine(arg.0: bytes, arg.1: bytes) -> bytes:
bytes_combine:
    proto 2 1                                                              //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 |                                                                                                                                                                                                                  @subroutine\ndef bytes_combine(arg: tuple[Bytes, Bytes]) -> Bytes:                                   tuple_support/tuple_support.py:59-60

bytes_combine_block@0:
    frame_dig -2                                                           //                                                        load arg.0#0 from parameters                                                                                  (𝕡) arg.0#0,arg.1#0 | arg.0#0                                                                                                                                                                                                          result = a + b                                                                                       tuple_support/tuple_support.py:62
    frame_dig -1                                                           //                                                        load arg.1#0 from parameters                                                                                  (𝕡) arg.0#0,arg.1#0 | arg.0#0,arg.1#0                                                                                                                                                                                                  result = a + b                                                                                       tuple_support/tuple_support.py:62
    concat                                                                 //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | {concat}                                                                                                                                                                                                         a + b                                                                                                tuple_support/tuple_support.py:62
    //                                                                     virtual: store result#0 to l-stack (no copy)              (𝕡) arg.0#0,arg.1#0 | result#0                                                                                                                                                                                                                  result = a + b                                                                                       tuple_support/tuple_support.py:62
    //                                                                     virtual: load result#0 from l-stack (no copy)             (𝕡) arg.0#0,arg.1#0 | result#0                                                                                                                                                                                                                  return result                                                                                        tuple_support/tuple_support.py:63
    retsub                                                                 //                                                                                                                                                                      result#0                                                                                                                                                                                                                               return result                                                                                        tuple_support/tuple_support.py:63


// test_cases.tuple_support.tuple_support.addw2(a.0: uint64, a.1: uint64, b.0: uint64, b.1: uint64) -> uint64, uint64, uint64:
addw2:
    proto 4 3                                                              //                                                                                                                                                                      (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 |                                                                                                                                                                                                          @subroutine\ndef addw2(a: tuple[UInt64, UInt64], b: tuple[UInt64, UInt64]) -> tuple[UInt64, UInt6... tuple_support/tuple_support.py:84-85

addw2_block@0:
    frame_dig -3                                                           //                                                        load a.1#0 from parameters                                                                                    (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a.1#0                                                                                                                                                                                                    op.addw(a_lo, b_lo)                                                                                  tuple_support/tuple_support.py:88
    frame_dig -1                                                           //                                                        load b.1#0 from parameters                                                                                    (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a.1#0,b.1#0                                                                                                                                                                                              op.addw(a_lo, b_lo)                                                                                  tuple_support/tuple_support.py:88
    addw                                                                   //                                                                                                                                                                      (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | {addw}.0,{addw}.1                                                                                                                                                                                        op.addw(a_lo, b_lo)                                                                                  tuple_support/tuple_support.py:88
    swap                                                                   //                                                        store c_lo#0 to l-stack (no copy)                                                                             (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,{addw}.0                                                                                                                                                                                          op.addw(a_lo, b_lo)                                                                                  tuple_support/tuple_support.py:88
    //                                                                     virtual: store lo_carry#0 to l-stack (no copy)            (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0                                                                                                                                                                                                 op.addw(a_lo, b_lo)                                                                                  tuple_support/tuple_support.py:88
    frame_dig -4                                                           //                                                        load a.0#0 from parameters                                                                                    (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,a.0#0                                                                                                                                                                                  op.addw(a_hi, b_hi)                                                                                  tuple_support/tuple_support.py:89
    frame_dig -2                                                           //                                                        load b.0#0 from parameters                                                                                    (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,a.0#0,b.0#0                                                                                                                                                                            op.addw(a_hi, b_hi)                                                                                  tuple_support/tuple_support.py:89
    addw                                                                   //                                                                                                                                                                      (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,{addw}.0,{addw}.1                                                                                                                                                                      op.addw(a_hi, b_hi)                                                                                  tuple_support/tuple_support.py:89
    //                                                                     virtual: store c_mid#0 to l-stack (no copy)               (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,c_mid#0,{addw}.0                                                                                                                                                                                op.addw(a_hi, b_hi)                                                                                  tuple_support/tuple_support.py:89
    //                                                                     virtual: store hi_carry1#0 to l-stack (no copy)           (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,hi_carry1#0,c_mid#0                                                                                                                                                                             op.addw(a_hi, b_hi)                                                                                  tuple_support/tuple_support.py:89
    //                                                                     virtual: load c_mid#0 from l-stack (no copy)              (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,hi_carry1#0,c_mid#0                                                                                                                                                                             op.addw(c_mid, lo_carry)                                                                             tuple_support/tuple_support.py:90
    uncover 2                                                              //                                                        load lo_carry#0 from l-stack (no copy)                                                                        (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,hi_carry1#0,c_mid#0,lo_carry#0                                                                                                                                                                    op.addw(c_mid, lo_carry)                                                                             tuple_support/tuple_support.py:90
    addw                                                                   //                                                                                                                                                                      (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,hi_carry1#0,{addw}.0,{addw}.1                                                                                                                                                                     op.addw(c_mid, lo_carry)                                                                             tuple_support/tuple_support.py:90
    cover 2                                                                //                                                        store c_mid#0 to l-stack (no copy)                                                                            (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,hi_carry1#0,{addw}.0                                                                                                                                                                      op.addw(c_mid, lo_carry)                                                                             tuple_support/tuple_support.py:90
    //                                                                     virtual: store hi_carry2#0 to l-stack (no copy)           (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,hi_carry1#0,hi_carry2#0                                                                                                                                                                            op.addw(c_mid, lo_carry)                                                                             tuple_support/tuple_support.py:90
    //                                                                     virtual: load hi_carry1#0 from l-stack (no copy)          (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,hi_carry2#0,hi_carry1#0                                                                                                                                                                            op.addw(hi_carry1, hi_carry2)                                                                        tuple_support/tuple_support.py:91
    //                                                                     virtual: load hi_carry2#0 from l-stack (no copy)          (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,hi_carry1#0,hi_carry2#0                                                                                                                                                                            op.addw(hi_carry1, hi_carry2)                                                                        tuple_support/tuple_support.py:91
    addw                                                                   //                                                                                                                                                                      (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,{addw}.0,{addw}.1                                                                                                                                                                         op.addw(hi_carry1, hi_carry2)                                                                        tuple_support/tuple_support.py:91
    swap                                                                   //                                                        store c_hi#0 to l-stack (no copy)                                                                             (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0,{addw}.0                                                                                                                                                                           op.addw(hi_carry1, hi_carry2)                                                                        tuple_support/tuple_support.py:91
    //                                                                     virtual: store did_overflow#0 to l-stack (no copy)        (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0,did_overflow#0                                                                                                                                                                              op.addw(hi_carry1, hi_carry2)                                                                        tuple_support/tuple_support.py:91
    //                                                                     virtual: load did_overflow#0 from l-stack (no copy)       (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0,did_overflow#0                                                                                                                                                                              not did_overflow                                                                                     tuple_support/tuple_support.py:92
    !                                                                      //                                                                                                                                                                      (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0,{!}                                                                                                                                                                                not did_overflow                                                                                     tuple_support/tuple_support.py:92
    //                                                                     virtual: store tmp%8#0 to l-stack (no copy)               (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0,tmp%8#0                                                                                                                                                                                     not did_overflow                                                                                     tuple_support/tuple_support.py:92
    //                                                                     virtual: load tmp%8#0 from l-stack (no copy)              (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0,tmp%8#0                                                                                                                                                                                     assert not did_overflow, "is such a thing even possible? 👽"                                          tuple_support/tuple_support.py:92
    assert // is such a thing even possible? 👽                             //                                                                                                                                                                      (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0                                                                                                                                                                                    assert not did_overflow, "is such a thing even possible? 👽"                                          tuple_support/tuple_support.py:92
    //                                                                     virtual: load c_hi#0 from l-stack (no copy)               (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0                                                                                                                                                                                             return c_hi, c_mid, c_lo                                                                             tuple_support/tuple_support.py:93
    swap                                                                   //                                                        load c_mid#0 from l-stack (no copy)                                                                           (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_hi#0,c_mid#0                                                                                                                                                                                    return c_hi, c_mid, c_lo                                                                             tuple_support/tuple_support.py:93
    uncover 2                                                              //                                                        load c_lo#0 from l-stack (no copy)                                                                            (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_hi#0,c_mid#0,c_lo#0                                                                                                                                                                                    return c_hi, c_mid, c_lo                                                                             tuple_support/tuple_support.py:93
    retsub                                                                 //                                                                                                                                                                      c_hi#0,c_mid#0,c_lo#0                                                                                                                                                                                                                  return c_hi, c_mid, c_lo                                                                             tuple_support/tuple_support.py:93


// test_cases.tuple_support.tuple_support.bytes_multiply(arg.0: bytes, arg.1: uint64) -> bytes:
bytes_multiply:
    proto 2 1                                                              //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 |                                                                                                                                                                                                                  @subroutine\ndef bytes_multiply(arg: tuple[Bytes, UInt64]) -> Bytes:                                 tuple_support/tuple_support.py:66-67

bytes_multiply_block@0:
    byte ""                                                                //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | ""                                                                                                                                                                                                               Bytes()                                                                                              tuple_support/tuple_support.py:69
    //                                                                     virtual: store result#0 to f-stack                        (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0 |                                                                                                                                                                                                            result = Bytes()                                                                                     tuple_support/tuple_support.py:69
    int 0                                                                  //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0 | 0                                                                                                                                                                                                 urange(count)                                                                                        tuple_support/tuple_support.py:70
    //                                                                     virtual: store range_item%0#0 to l-stack (no copy)        (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0 | range_item%0#0                                                                                                                                                                                             _i                                                                                                   tuple_support/tuple_support.py:70
    //                                                                     virtual: load range_item%0#0 from l-stack (no copy)       (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0 | range_item%0#0
    //                                                                     virtual: store _i#0 to f-stack                            (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 |
    // Implicit fall through to bytes_multiply_for_header@1                //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 |

bytes_multiply_for_header@1:
    frame_dig 1                                                            //                                                        load _i#0 from f-stack                                                                                        (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | _i#0                                                                                                                                                                                         urange(count)                                                                                        tuple_support/tuple_support.py:70
    frame_dig -1                                                           //                                                        load arg.1#0 from parameters                                                                                  (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | _i#0,arg.1#0                                                                                                                                                                                 urange(count)                                                                                        tuple_support/tuple_support.py:70
    <                                                                      //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | {<}                                                                                                                                                                                          urange(count)                                                                                        tuple_support/tuple_support.py:70
    //                                                                     virtual: store continue_looping%1#0 to l-stack (no copy)  (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | continue_looping%1#0                                                                                                                                                                                  urange(count)                                                                                        tuple_support/tuple_support.py:70
    //                                                                     virtual: load continue_looping%1#0 from l-stack (no copy) (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | continue_looping%1#0                                                                                                                                                                                  for _i in urange(count):                                                                             tuple_support/tuple_support.py:70
    bz bytes_multiply_after_for@5                                          //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 |                                                                                                                                                                                              for _i in urange(count):                                                                             tuple_support/tuple_support.py:70
    // Implicit fall through to bytes_multiply_for_body@2                  //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 |                                                                                                                                                                                              for _i in urange(count):                                                                             tuple_support/tuple_support.py:70

bytes_multiply_for_body@2:
    frame_dig 0                                                            //                                                        load result#0 from f-stack                                                                                    (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | result#0                                                                                                                                                                                     result += b                                                                                          tuple_support/tuple_support.py:71
    frame_dig -2                                                           //                                                        load arg.0#0 from parameters                                                                                  (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | result#0,arg.0#0                                                                                                                                                                             result += b                                                                                          tuple_support/tuple_support.py:71
    concat                                                                 //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | {concat}                                                                                                                                                                                     result += b                                                                                          tuple_support/tuple_support.py:71
    frame_bury 0                                                           //                                                        store result#0 to f-stack                                                                                     (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 |                                                                                                                                                                                              result += b                                                                                          tuple_support/tuple_support.py:71
    frame_dig 1                                                            //                                                        load _i#0 from f-stack                                                                                        (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | _i#0                                                                                                                                                                                         for _i in urange(count):                                                                             tuple_support/tuple_support.py:70
    int 1                                                                  //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | _i#0,1                                                                                                                                                                                       urange(count)                                                                                        tuple_support/tuple_support.py:70
    +                                                                      //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | {+}                                                                                                                                                                                          urange(count)                                                                                        tuple_support/tuple_support.py:70
    //                                                                     virtual: store range_item%0#0 to l-stack (no copy)        (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | range_item%0#0                                                                                                                                                                                        for _i in urange(count):                                                                             tuple_support/tuple_support.py:70
    //                                                                     virtual: load range_item%0#0 from l-stack (no copy)       (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | range_item%0#0
    frame_bury 1                                                           //                                                        store _i#0 to f-stack                                                                                         (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 |
    b bytes_multiply_for_header@1                                          //                                                                                                                                                                      (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 |

bytes_multiply_after_for@5:
    frame_dig 0                                                            //                                                        load result#0 from f-stack                                                                                    (𝕡) arg.0#0,arg.1#0 | (𝕗) result#0,_i#0 | result#0                                                                                                                                                                                     return result                                                                                        tuple_support/tuple_support.py:72
    frame_bury 0
    retsub                                                                 //                                                                                                                                                                      result#0                                                                                                                                                                                                                               return result                                                                                        tuple_support/tuple_support.py:72


// test_cases.tuple_support.tuple_support.test_tuple_swap(zero: uint64) -> void:
test_tuple_swap:
    proto 1 0                                                              //                                                                                                                                                                      (𝕡) zero#0 |                                                                                                                                                                                                                           @subroutine\ndef test_tuple_swap(zero: UInt64) -> None:                                              tuple_support/tuple_support.py:96-97

test_tuple_swap_block@0:
    frame_dig -1                                                           //                                                        load zero#0 from parameters                                                                                   (𝕡) zero#0 | zero#0                                                                                                                                                                                                                    a = zero + 1                                                                                         tuple_support/tuple_support.py:98
    int 1                                                                  //                                                                                                                                                                      (𝕡) zero#0 | zero#0,1                                                                                                                                                                                                                  1                                                                                                    tuple_support/tuple_support.py:98
    +                                                                      //                                                                                                                                                                      (𝕡) zero#0 | {+}                                                                                                                                                                                                                       zero + 1                                                                                             tuple_support/tuple_support.py:98
    //                                                                     virtual: store a#0 to l-stack (no copy)                   (𝕡) zero#0 | a#0                                                                                                                                                                                                                                a = zero + 1                                                                                         tuple_support/tuple_support.py:98
    frame_dig -1                                                           //                                                        load zero#0 from parameters                                                                                   (𝕡) zero#0 | a#0,zero#0                                                                                                                                                                                                                b = zero + 2                                                                                         tuple_support/tuple_support.py:99
    int 2                                                                  //                                                                                                                                                                      (𝕡) zero#0 | a#0,zero#0,2                                                                                                                                                                                                              2                                                                                                    tuple_support/tuple_support.py:99
    +                                                                      //                                                                                                                                                                      (𝕡) zero#0 | a#0,{+}                                                                                                                                                                                                                   zero + 2                                                                                             tuple_support/tuple_support.py:99
    //                                                                     virtual: store b#0 to l-stack (no copy)                   (𝕡) zero#0 | a#0,b#0                                                                                                                                                                                                                            b = zero + 2                                                                                         tuple_support/tuple_support.py:99
    //                                                                     virtual: load b#0 from l-stack (no copy)                  (𝕡) zero#0 | a#0,b#0                                                                                                                                                                                                                            a == 2, "a should be two"                                                                            tuple_support/tuple_support.py:101
    int 2                                                                  //                                                                                                                                                                      (𝕡) zero#0 | a#0,b#0,2                                                                                                                                                                                                                 2                                                                                                    tuple_support/tuple_support.py:101
    ==                                                                     //                                                                                                                                                                      (𝕡) zero#0 | a#0,{==}                                                                                                                                                                                                                  a == 2, "a should be two"                                                                            tuple_support/tuple_support.py:101
    //                                                                     virtual: store tmp%0#0 to l-stack (no copy)               (𝕡) zero#0 | a#0,tmp%0#0                                                                                                                                                                                                                        a == 2, "a should be two"                                                                            tuple_support/tuple_support.py:101
    //                                                                     virtual: load tmp%0#0 from l-stack (no copy)              (𝕡) zero#0 | a#0,tmp%0#0                                                                                                                                                                                                                        assert a == 2, "a should be two"                                                                     tuple_support/tuple_support.py:101
    assert // a should be two                                              //                                                                                                                                                                      (𝕡) zero#0 | a#0                                                                                                                                                                                                                       assert a == 2, "a should be two"                                                                     tuple_support/tuple_support.py:101
    //                                                                     virtual: load a#0 from l-stack (no copy)                  (𝕡) zero#0 | a#0                                                                                                                                                                                                                                b == 1, "b should be one"                                                                            tuple_support/tuple_support.py:102
    int 1                                                                  //                                                                                                                                                                      (𝕡) zero#0 | a#0,1                                                                                                                                                                                                                     1                                                                                                    tuple_support/tuple_support.py:102
    ==                                                                     //                                                                                                                                                                      (𝕡) zero#0 | {==}                                                                                                                                                                                                                      b == 1, "b should be one"                                                                            tuple_support/tuple_support.py:102
    //                                                                     virtual: store tmp%1#0 to l-stack (no copy)               (𝕡) zero#0 | tmp%1#0                                                                                                                                                                                                                            b == 1, "b should be one"                                                                            tuple_support/tuple_support.py:102
    //                                                                     virtual: load tmp%1#0 from l-stack (no copy)              (𝕡) zero#0 | tmp%1#0                                                                                                                                                                                                                            assert b == 1, "b should be one"                                                                     tuple_support/tuple_support.py:102
    assert // b should be one                                              //                                                                                                                                                                      (𝕡) zero#0 |                                                                                                                                                                                                                           assert b == 1, "b should be one"                                                                     tuple_support/tuple_support.py:102
    retsub                                                                 //


// test_cases.tuple_support.tuple_support.slicing(values.0: uint64, values.1: uint64, values.2: uint64, values.3: uint64, values.4: uint64, values.5: uint64, values.6: uint64, values.7: uint64) -> void:
slicing:
    proto 8 0                                                              //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 |                                                                                                                                          @subroutine\ndef slicing(values: tuple[UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UI... tuple_support/tuple_support.py:105-106

slicing_block@0:
    frame_dig -8                                                           //                                                        load values.0#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | values.0#0                                                                                                                               add_three_values(one_to_three)                                                                       tuple_support/tuple_support.py:108
    frame_dig -7                                                           //                                                        load values.1#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | values.0#0,values.1#0                                                                                                                    add_three_values(one_to_three)                                                                       tuple_support/tuple_support.py:108
    frame_dig -6                                                           //                                                        load values.2#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | values.0#0,values.1#0,values.2#0                                                                                                         add_three_values(one_to_three)                                                                       tuple_support/tuple_support.py:108
    callsub add_three_values                                               //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | {add_three_values}                                                                                                                       add_three_values(one_to_three)                                                                       tuple_support/tuple_support.py:108
    //                                                                     virtual: store tmp%0#0 to l-stack (no copy)               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0                                                                                                                                           add_three_values(one_to_three)                                                                       tuple_support/tuple_support.py:108
    frame_dig -8                                                           //                                                        load values.0#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,values.0#0                                                                                                                       values[0] + values[1]                                                                                tuple_support/tuple_support.py:108
    frame_dig -7                                                           //                                                        load values.1#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,values.0#0,values.1#0                                                                                                            values[0] + values[1]                                                                                tuple_support/tuple_support.py:108
    +                                                                      //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,{+}                                                                                                                              values[0] + values[1]                                                                                tuple_support/tuple_support.py:108
    //                                                                     virtual: store tmp%1#0 to l-stack (no copy)               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,tmp%1#0                                                                                                                                   values[0] + values[1]                                                                                tuple_support/tuple_support.py:108
    //                                                                     virtual: load tmp%1#0 from l-stack (no copy)              (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,tmp%1#0                                                                                                                                   values[0] + values[1] + values[2]                                                                    tuple_support/tuple_support.py:108
    frame_dig -6                                                           //                                                        load values.2#0 from parameters                                                                               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,tmp%1#0,values.2#0                                                                                                               values[0] + values[1] + values[2]                                                                    tuple_support/tuple_support.py:108
    +                                                                      //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,{+}                                                                                                                              values[0] + values[1] + values[2]                                                                    tuple_support/tuple_support.py:108
    //                                                                     virtual: store tmp%2#0 to l-stack (no copy)               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,tmp%2#0                                                                                                                                   values[0] + values[1] + values[2]                                                                    tuple_support/tuple_support.py:108
    //                                                                     virtual: load tmp%0#0 from l-stack (no copy)              (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%2#0,tmp%0#0                                                                                                                                   add_three_values(one_to_three) == values[0] + values[1] + values[2]                                  tuple_support/tuple_support.py:108
    //                                                                     virtual: load tmp%2#0 from l-stack (no copy)              (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%0#0,tmp%2#0                                                                                                                                   add_three_values(one_to_three) == values[0] + values[1] + values[2]                                  tuple_support/tuple_support.py:108
    ==                                                                     //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | {==}                                                                                                                                     add_three_values(one_to_three) == values[0] + values[1] + values[2]                                  tuple_support/tuple_support.py:108
    //                                                                     virtual: store tmp%3#0 to l-stack (no copy)               (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%3#0                                                                                                                                           add_three_values(one_to_three) == values[0] + values[1] + values[2]                                  tuple_support/tuple_support.py:108
    //                                                                     virtual: load tmp%3#0 from l-stack (no copy)              (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | tmp%3#0                                                                                                                                           assert add_three_values(one_to_three) == values[0] + values[1] + values[2]                           tuple_support/tuple_support.py:108
    assert                                                                 //                                                                                                                                                                      (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 |                                                                                                                                          assert add_three_values(one_to_three) == values[0] + values[1] + values[2]                           tuple_support/tuple_support.py:108
    retsub                                                                 //


// test_cases.tuple_support.tuple_support.TupleSupport.__init__() -> void:
__init__:
    proto 0 0                                                              //                                                                                                                                                                                                                                                                                                                                                                                                             def __init__(self) -> None:                                                                          tuple_support/tuple_support.py:5

__init___block@0:
    byte "state"                                                           //                                                                                                                                                                      "state"                                                                                                                                                                                                                                self.state                                                                                           tuple_support/tuple_support.py:6
    int 0                                                                  //                                                                                                                                                                      "state",0                                                                                                                                                                                                                              UInt64(0)                                                                                            tuple_support/tuple_support.py:6
    app_global_put                                                         //                                                                                                                                                                                                                                                                                                                                                                                                             self.state = UInt64(0)                                                                               tuple_support/tuple_support.py:6
    retsub                                                                 //

