// Op                                                                                           Stack (out)
// test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init() -> uint64:
main:
    txn ApplicationID                                                                           tmp%0#0
    bz main_call___init__@1 ; b main_after_if_else@2

main_call___init__@1:
    // tuple_support/nested_tuples.py:20
    // self.build_nested_call_count = UInt64(0)
    byte "build_nested_call_count"                                                              "build_nested_call_count"
    int 0                                                                                       "build_nested_call_count",0
    app_global_put
    b main_after_if_else@2

main_after_if_else@2:
    // tuple_support/nested_tuples.py:18
    // class NestedTuples(ARC4Contract):
    txn NumAppArgs                                                                              tmp%0#2
    bz main_bare_routing@9 ; b main_abi_routing@4

main_abi_routing@4:
    // tuple_support/nested_tuples.py:18
    // class NestedTuples(ARC4Contract):
    txna ApplicationArgs 0                                                                      tmp%2#0
    method run_tests()bool                                                                      tmp%2#0,Method(run_tests()bool)
    method nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))              tmp%2#0,Method(run_tests()bool),Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))
    method named_tuple((uint64,byte[],string))(uint64,byte[],string)                            tmp%2#0,Method(run_tests()bool),Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))),Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))
    method nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)) tmp%2#0,Method(run_tests()bool),Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))),Method(named_tuple((uint64,byte[],string))(uint64,byte[],string)),Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))
    l-load tmp%2#0 4                                                                            Method(run_tests()bool),Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))),Method(named_tuple((uint64,byte[],string))(uint64,byte[],string)),Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string))),tmp%2#0
    match main_run_tests_route@5 main_nested_tuple_params_route@6 main_named_tuple_route@7 main_nested_named_tuple_params_route@8 ; b main_after_if_else@11 

main_run_tests_route@5:
    // tuple_support/nested_tuples.py:22
    // @arc4.abimethod()
    txn OnCompletion                                                                            tmp%3#0
    !                                                                                           tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                           tmp%5#0
    assert // can only call when not creating
    callsub run_tests                                                                           to_encode%0#0
    byte 0x00                                                                                   to_encode%0#0,0x00
    int 0                                                                                       to_encode%0#0,0x00,0
    l-load to_encode%0#0 2                                                                      0x00,0,to_encode%0#0
    setbit                                                                                      encoded_bool%0#0
    byte 0x151f7c75                                                                             encoded_bool%0#0,0x151f7c75
    l-load encoded_bool%0#0 1                                                                   0x151f7c75,encoded_bool%0#0
    concat                                                                                      tmp%7#0
    log
    int 1                                                                                       tmp%0#0
    x-store tmp%0#0                                                                             (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_nested_tuple_params_route@6:
    // tuple_support/nested_tuples.py:51
    // @arc4.abimethod()
    txn OnCompletion                                                                            tmp%8#0
    !                                                                                           tmp%9#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                           tmp%10#0
    assert // can only call when not creating
    // tuple_support/nested_tuples.py:18
    // class NestedTuples(ARC4Contract):
    txna ApplicationArgs 1                                                                      tmp%12#0
    l-load-copy tmp%12#0 0                                                                      tmp%12#0,tmp%12#0 (copy)
    int 0                                                                                       tmp%12#0,tmp%12#0 (copy),0
    extract_uint16                                                                              tmp%12#0,item_start_offset%0#0
    l-load-copy tmp%12#0 1                                                                      tmp%12#0,item_start_offset%0#0,tmp%12#0 (copy)
    int 2                                                                                       tmp%12#0,item_start_offset%0#0,tmp%12#0 (copy),2
    extract_uint16                                                                              tmp%12#0,item_start_offset%0#0,item_end_offset%0#0
    l-load-copy tmp%12#0 2                                                                      tmp%12#0,item_start_offset%0#0,item_end_offset%0#0,tmp%12#0 (copy)
    l-load item_start_offset%0#0 2                                                              tmp%12#0,item_end_offset%0#0,tmp%12#0 (copy),item_start_offset%0#0
    l-load-copy item_end_offset%0#0 2                                                           tmp%12#0,item_end_offset%0#0,tmp%12#0 (copy),item_start_offset%0#0,item_end_offset%0#0 (copy)
    substring3                                                                                  tmp%12#0,item_end_offset%0#0,item0%0#0
    extract 2 0                                                                                 tmp%12#0,item_end_offset%0#0,args.0#0
    l-load-copy tmp%12#0 2                                                                      tmp%12#0,item_end_offset%0#0,args.0#0,tmp%12#0 (copy)
    len                                                                                         tmp%12#0,item_end_offset%0#0,args.0#0,item_end_offset%1#0
    l-load tmp%12#0 3                                                                           item_end_offset%0#0,args.0#0,item_end_offset%1#0,tmp%12#0
    l-load item_end_offset%0#0 3                                                                args.0#0,item_end_offset%1#0,tmp%12#0,item_end_offset%0#0
    l-load item_end_offset%1#0 2                                                                args.0#0,tmp%12#0,item_end_offset%0#0,item_end_offset%1#0
    substring3                                                                                  args.0#0,item1%0#0
    l-load-copy item1%0#0 0                                                                     args.0#0,item1%0#0,item1%0#0 (copy)
    int 0                                                                                       args.0#0,item1%0#0,item1%0#0 (copy),0
    extract_uint16                                                                              args.0#0,item1%0#0,item_start_offset%2#0
    l-load-copy item1%0#0 1                                                                     args.0#0,item1%0#0,item_start_offset%2#0,item1%0#0 (copy)
    len                                                                                         args.0#0,item1%0#0,item_start_offset%2#0,item_end_offset%2#0
    l-load-copy item1%0#0 2                                                                     args.0#0,item1%0#0,item_start_offset%2#0,item_end_offset%2#0,item1%0#0 (copy)
    l-load item_start_offset%2#0 2                                                              args.0#0,item1%0#0,item_end_offset%2#0,item1%0#0 (copy),item_start_offset%2#0
    l-load item_end_offset%2#0 2                                                                args.0#0,item1%0#0,item1%0#0 (copy),item_start_offset%2#0,item_end_offset%2#0
    substring3                                                                                  args.0#0,item1%0#0,item0%1#0
    extract 2 0                                                                                 args.0#0,item1%0#0,args.1.0#0
    l-load item1%0#0 1                                                                          args.0#0,args.1.0#0,item1%0#0
    extract 2 8 // on error: Index access is out of bounds                                      args.0#0,args.1.0#0,item1%1#0
    extract 0 8 // on error: Index access is out of bounds                                      args.0#0,args.1.0#0,item0%2#0
    btoi                                                                                        args.0#0,args.1.0#0,args.1.1.0#0
    // tuple_support/nested_tuples.py:51
    // @arc4.abimethod()
    l-load-copy args.1.0#0 1                                                                    args.0#0,args.1.0#0,args.1.1.0#0,args.1.0#0 (copy)
    len                                                                                         args.0#0,args.1.0#0,args.1.1.0#0,length%0#0
    itob                                                                                        args.0#0,args.1.0#0,args.1.1.0#0,as_bytes%0#0
    extract 6 2                                                                                 args.0#0,args.1.0#0,args.1.1.0#0,length_uint16%0#0
    l-load args.1.0#0 2                                                                         args.0#0,args.1.1.0#0,length_uint16%0#0,args.1.0#0
    concat                                                                                      args.0#0,args.1.1.0#0,encoded_value%0#0
    l-load-copy args.0#0 2                                                                      args.0#0,args.1.1.0#0,encoded_value%0#0,args.0#0 (copy)
    len                                                                                         args.0#0,args.1.1.0#0,encoded_value%0#0,length%1#0
    itob                                                                                        args.0#0,args.1.1.0#0,encoded_value%0#0,as_bytes%1#0
    extract 6 2                                                                                 args.0#0,args.1.1.0#0,encoded_value%0#0,length_uint16%1#0
    l-load args.0#0 3                                                                           args.1.1.0#0,encoded_value%0#0,length_uint16%1#0,args.0#0
    concat                                                                                      args.1.1.0#0,encoded_value%0#0,encoded_value%1#0
    l-load args.1.1.0#0 2                                                                       encoded_value%0#0,encoded_value%1#0,args.1.1.0#0
    itob                                                                                        encoded_value%0#0,encoded_value%1#0,val_as_bytes%0#0
    byte 0x000a                                                                                 encoded_value%0#0,encoded_value%1#0,val_as_bytes%0#0,0x000a
    l-load val_as_bytes%0#0 1                                                                   encoded_value%0#0,encoded_value%1#0,0x000a,val_as_bytes%0#0
    concat                                                                                      encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0
    l-load encoded_value%1#0 1                                                                  encoded_value%0#0,encoded_tuple_buffer%2#0,encoded_value%1#0
    concat                                                                                      encoded_value%0#0,encoded_tuple_buffer%3#0
    l-load-copy encoded_value%0#0 1                                                             encoded_value%0#0,encoded_tuple_buffer%3#0,encoded_value%0#0 (copy)
    len                                                                                         encoded_value%0#0,encoded_tuple_buffer%3#0,data_length%1#0
    int 4                                                                                       encoded_value%0#0,encoded_tuple_buffer%3#0,data_length%1#0,4
    l-load data_length%1#0 1                                                                    encoded_value%0#0,encoded_tuple_buffer%3#0,4,data_length%1#0
    +                                                                                           encoded_value%0#0,encoded_tuple_buffer%3#0,current_tail_offset%3#0
    itob                                                                                        encoded_value%0#0,encoded_tuple_buffer%3#0,as_bytes%4#0
    extract 6 2                                                                                 encoded_value%0#0,encoded_tuple_buffer%3#0,offset_as_uint16%2#0
    byte 0x0004                                                                                 encoded_value%0#0,encoded_tuple_buffer%3#0,offset_as_uint16%2#0,0x0004
    l-load offset_as_uint16%2#0 1                                                               encoded_value%0#0,encoded_tuple_buffer%3#0,0x0004,offset_as_uint16%2#0
    concat                                                                                      encoded_value%0#0,encoded_tuple_buffer%3#0,encoded_tuple_buffer%6#0
    l-load encoded_value%0#0 2                                                                  encoded_tuple_buffer%3#0,encoded_tuple_buffer%6#0,encoded_value%0#0
    concat                                                                                      encoded_tuple_buffer%3#0,encoded_tuple_buffer%7#0
    l-load encoded_tuple_buffer%3#0 1                                                           encoded_tuple_buffer%7#0,encoded_tuple_buffer%3#0
    concat                                                                                      encoded_tuple_buffer%8#0
    byte 0x151f7c75                                                                             encoded_tuple_buffer%8#0,0x151f7c75
    l-load encoded_tuple_buffer%8#0 1                                                           0x151f7c75,encoded_tuple_buffer%8#0
    concat                                                                                      tmp%13#0
    log
    int 1                                                                                       tmp%0#0
    x-store tmp%0#0                                                                             (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_named_tuple_route@7:
    // tuple_support/nested_tuples.py:58
    // @arc4.abimethod()
    txn OnCompletion                                                                            tmp%14#0
    !                                                                                           tmp%15#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                           tmp%16#0
    assert // can only call when not creating
    // tuple_support/nested_tuples.py:18
    // class NestedTuples(ARC4Contract):
    txna ApplicationArgs 1                                                                      tmp%18#0
    l-load-copy tmp%18#0 0                                                                      tmp%18#0,tmp%18#0 (copy)
    extract 0 8 // on error: Index access is out of bounds                                      tmp%18#0,item0%3#0
    btoi                                                                                        tmp%18#0,args.a#0
    l-load-copy tmp%18#0 1                                                                      tmp%18#0,args.a#0,tmp%18#0 (copy)
    int 8                                                                                       tmp%18#0,args.a#0,tmp%18#0 (copy),8
    extract_uint16                                                                              tmp%18#0,args.a#0,item_start_offset%3#0
    l-load-copy tmp%18#0 2                                                                      tmp%18#0,args.a#0,item_start_offset%3#0,tmp%18#0 (copy)
    int 10                                                                                      tmp%18#0,args.a#0,item_start_offset%3#0,tmp%18#0 (copy),10
    extract_uint16                                                                              tmp%18#0,args.a#0,item_start_offset%3#0,item_end_offset%3#0
    l-load-copy tmp%18#0 3                                                                      tmp%18#0,args.a#0,item_start_offset%3#0,item_end_offset%3#0,tmp%18#0 (copy)
    l-load item_start_offset%3#0 2                                                              tmp%18#0,args.a#0,item_end_offset%3#0,tmp%18#0 (copy),item_start_offset%3#0
    l-load-copy item_end_offset%3#0 2                                                           tmp%18#0,args.a#0,item_end_offset%3#0,tmp%18#0 (copy),item_start_offset%3#0,item_end_offset%3#0 (copy)
    substring3                                                                                  tmp%18#0,args.a#0,item_end_offset%3#0,item1%2#0
    extract 2 0                                                                                 tmp%18#0,args.a#0,item_end_offset%3#0,args.b#0
    l-load-copy tmp%18#0 3                                                                      tmp%18#0,args.a#0,item_end_offset%3#0,args.b#0,tmp%18#0 (copy)
    len                                                                                         tmp%18#0,args.a#0,item_end_offset%3#0,args.b#0,item_end_offset%4#0
    l-load tmp%18#0 4                                                                           args.a#0,item_end_offset%3#0,args.b#0,item_end_offset%4#0,tmp%18#0
    l-load item_end_offset%3#0 3                                                                args.a#0,args.b#0,item_end_offset%4#0,tmp%18#0,item_end_offset%3#0
    l-load item_end_offset%4#0 2                                                                args.a#0,args.b#0,tmp%18#0,item_end_offset%3#0,item_end_offset%4#0
    substring3                                                                                  args.a#0,args.b#0,item2%0#0
    extract 2 0                                                                                 args.a#0,args.b#0,args.c#0
    // tuple_support/nested_tuples.py:58
    // @arc4.abimethod()
    l-load args.a#0 2                                                                           args.b#0,args.c#0,args.a#0
    itob                                                                                        args.b#0,args.c#0,val_as_bytes%1#0
    l-load-copy args.b#0 2                                                                      args.b#0,args.c#0,val_as_bytes%1#0,args.b#0 (copy)
    len                                                                                         args.b#0,args.c#0,val_as_bytes%1#0,length%2#0
    itob                                                                                        args.b#0,args.c#0,val_as_bytes%1#0,as_bytes%5#0
    extract 6 2                                                                                 args.b#0,args.c#0,val_as_bytes%1#0,length_uint16%2#0
    l-load args.b#0 3                                                                           args.c#0,val_as_bytes%1#0,length_uint16%2#0,args.b#0
    concat                                                                                      args.c#0,val_as_bytes%1#0,encoded_value%2#0
    l-load-copy args.c#0 2                                                                      args.c#0,val_as_bytes%1#0,encoded_value%2#0,args.c#0 (copy)
    len                                                                                         args.c#0,val_as_bytes%1#0,encoded_value%2#0,length%3#0
    itob                                                                                        args.c#0,val_as_bytes%1#0,encoded_value%2#0,as_bytes%6#0
    extract 6 2                                                                                 args.c#0,val_as_bytes%1#0,encoded_value%2#0,length_uint16%3#0
    l-load args.c#0 3                                                                           val_as_bytes%1#0,encoded_value%2#0,length_uint16%3#0,args.c#0
    concat                                                                                      val_as_bytes%1#0,encoded_value%2#0,encoded_value%3#0
    l-load val_as_bytes%1#0 2                                                                   encoded_value%2#0,encoded_value%3#0,val_as_bytes%1#0
    byte 0x000c                                                                                 encoded_value%2#0,encoded_value%3#0,val_as_bytes%1#0,0x000c
    concat                                                                                      encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0
    l-load-copy encoded_value%2#0 2                                                             encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0,encoded_value%2#0 (copy)
    len                                                                                         encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0,data_length%3#0
    int 12                                                                                      encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0,data_length%3#0,12
    l-load data_length%3#0 1                                                                    encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0,12,data_length%3#0
    +                                                                                           encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0,current_tail_offset%6#0
    itob                                                                                        encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0,as_bytes%8#0
    extract 6 2                                                                                 encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0,offset_as_uint16%4#0
    l-load encoded_tuple_buffer%11#0 1                                                          encoded_value%2#0,encoded_value%3#0,offset_as_uint16%4#0,encoded_tuple_buffer%11#0
    l-load offset_as_uint16%4#0 1                                                               encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%11#0,offset_as_uint16%4#0
    concat                                                                                      encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%12#0
    l-load encoded_value%2#0 2                                                                  encoded_value%3#0,encoded_tuple_buffer%12#0,encoded_value%2#0
    concat                                                                                      encoded_value%3#0,encoded_tuple_buffer%13#0
    l-load encoded_value%3#0 1                                                                  encoded_tuple_buffer%13#0,encoded_value%3#0
    concat                                                                                      encoded_tuple_buffer%14#0
    byte 0x151f7c75                                                                             encoded_tuple_buffer%14#0,0x151f7c75
    l-load encoded_tuple_buffer%14#0 1                                                          0x151f7c75,encoded_tuple_buffer%14#0
    concat                                                                                      tmp%19#0
    log
    int 1                                                                                       tmp%0#0
    x-store tmp%0#0                                                                             (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_nested_named_tuple_params_route@8:
    // tuple_support/nested_tuples.py:63
    // @arc4.abimethod()
    txn OnCompletion                                                                            tmp%20#0
    !                                                                                           tmp%21#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                           tmp%22#0
    assert // can only call when not creating
    // tuple_support/nested_tuples.py:18
    // class NestedTuples(ARC4Contract):
    txna ApplicationArgs 1                                                                      tmp%24#0
    l-load-copy tmp%24#0 0                                                                      tmp%24#0,tmp%24#0 (copy)
    extract 0 8 // on error: Index access is out of bounds                                      tmp%24#0,item0%4#0
    btoi                                                                                        tmp%24#0,args.foo#0
    l-load-copy tmp%24#0 1                                                                      tmp%24#0,args.foo#0,tmp%24#0 (copy)
    extract 8 8 // on error: Index access is out of bounds                                      tmp%24#0,args.foo#0,args.foo_arc#0
    l-load-copy tmp%24#0 2                                                                      tmp%24#0,args.foo#0,args.foo_arc#0,tmp%24#0 (copy)
    int 16                                                                                      tmp%24#0,args.foo#0,args.foo_arc#0,tmp%24#0 (copy),16
    extract_uint16                                                                              tmp%24#0,args.foo#0,args.foo_arc#0,item_start_offset%5#0
    l-load-copy tmp%24#0 3                                                                      tmp%24#0,args.foo#0,args.foo_arc#0,item_start_offset%5#0,tmp%24#0 (copy)
    len                                                                                         tmp%24#0,args.foo#0,args.foo_arc#0,item_start_offset%5#0,item_end_offset%5#0
    l-load tmp%24#0 4                                                                           args.foo#0,args.foo_arc#0,item_start_offset%5#0,item_end_offset%5#0,tmp%24#0
    l-load item_start_offset%5#0 2                                                              args.foo#0,args.foo_arc#0,item_end_offset%5#0,tmp%24#0,item_start_offset%5#0
    l-load item_end_offset%5#0 2                                                                args.foo#0,args.foo_arc#0,tmp%24#0,item_start_offset%5#0,item_end_offset%5#0
    substring3                                                                                  args.foo#0,args.foo_arc#0,item2%1#0
    l-load-copy item2%1#0 0                                                                     args.foo#0,args.foo_arc#0,item2%1#0,item2%1#0 (copy)
    extract 0 8 // on error: Index access is out of bounds                                      args.foo#0,args.foo_arc#0,item2%1#0,item0%5#0
    btoi                                                                                        args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0
    l-load-copy item2%1#0 1                                                                     args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item2%1#0 (copy)
    int 8                                                                                       args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item2%1#0 (copy),8
    extract_uint16                                                                              args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_start_offset%6#0
    l-load-copy item2%1#0 2                                                                     args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_start_offset%6#0,item2%1#0 (copy)
    int 10                                                                                      args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_start_offset%6#0,item2%1#0 (copy),10
    extract_uint16                                                                              args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_start_offset%6#0,item_end_offset%6#0
    l-load-copy item2%1#0 3                                                                     args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_start_offset%6#0,item_end_offset%6#0,item2%1#0 (copy)
    l-load item_start_offset%6#0 2                                                              args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_end_offset%6#0,item2%1#0 (copy),item_start_offset%6#0
    l-load-copy item_end_offset%6#0 2                                                           args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_end_offset%6#0,item2%1#0 (copy),item_start_offset%6#0,item_end_offset%6#0 (copy)
    substring3                                                                                  args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_end_offset%6#0,item1%4#0
    extract 2 0                                                                                 args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_end_offset%6#0,args.child.b#0
    l-load-copy item2%1#0 3                                                                     args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_end_offset%6#0,args.child.b#0,item2%1#0 (copy)
    len                                                                                         args.foo#0,args.foo_arc#0,item2%1#0,args.child.a#0,item_end_offset%6#0,args.child.b#0,item_end_offset%7#0
    l-load item2%1#0 4                                                                          args.foo#0,args.foo_arc#0,args.child.a#0,item_end_offset%6#0,args.child.b#0,item_end_offset%7#0,item2%1#0
    l-load item_end_offset%6#0 3                                                                args.foo#0,args.foo_arc#0,args.child.a#0,args.child.b#0,item_end_offset%7#0,item2%1#0,item_end_offset%6#0
    l-load item_end_offset%7#0 2                                                                args.foo#0,args.foo_arc#0,args.child.a#0,args.child.b#0,item2%1#0,item_end_offset%6#0,item_end_offset%7#0
    substring3                                                                                  args.foo#0,args.foo_arc#0,args.child.a#0,args.child.b#0,item2%2#0
    extract 2 0                                                                                 args.foo#0,args.foo_arc#0,args.child.a#0,args.child.b#0,args.child.c#0
    // tuple_support/nested_tuples.py:63
    // @arc4.abimethod()
    l-load args.foo#0 4                                                                         args.foo_arc#0,args.child.a#0,args.child.b#0,args.child.c#0,args.foo#0
    itob                                                                                        args.foo_arc#0,args.child.a#0,args.child.b#0,args.child.c#0,val_as_bytes%2#0
    l-load args.child.a#0 3                                                                     args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%2#0,args.child.a#0
    itob                                                                                        args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0
    l-load-copy args.child.b#0 3                                                                args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,args.child.b#0 (copy)
    len                                                                                         args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,length%4#0
    itob                                                                                        args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,as_bytes%9#0
    extract 6 2                                                                                 args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,length_uint16%4#0
    l-load args.child.b#0 4                                                                     args.foo_arc#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,length_uint16%4#0,args.child.b#0
    concat                                                                                      args.foo_arc#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,encoded_value%4#0
    l-load-copy args.child.c#0 3                                                                args.foo_arc#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,encoded_value%4#0,args.child.c#0 (copy)
    len                                                                                         args.foo_arc#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,encoded_value%4#0,length%5#0
    itob                                                                                        args.foo_arc#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,encoded_value%4#0,as_bytes%10#0
    extract 6 2                                                                                 args.foo_arc#0,args.child.c#0,val_as_bytes%2#0,val_as_bytes%3#0,encoded_value%4#0,length_uint16%5#0
    l-load args.child.c#0 4                                                                     args.foo_arc#0,val_as_bytes%2#0,val_as_bytes%3#0,encoded_value%4#0,length_uint16%5#0,args.child.c#0
    concat                                                                                      args.foo_arc#0,val_as_bytes%2#0,val_as_bytes%3#0,encoded_value%4#0,encoded_value%5#0
    l-load val_as_bytes%3#0 2                                                                   args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,val_as_bytes%3#0
    byte 0x000c                                                                                 args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,val_as_bytes%3#0,0x000c
    concat                                                                                      args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0
    l-load-copy encoded_value%4#0 2                                                             args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0,encoded_value%4#0 (copy)
    len                                                                                         args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0,data_length%5#0
    int 12                                                                                      args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0,data_length%5#0,12
    l-load data_length%5#0 1                                                                    args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0,12,data_length%5#0
    +                                                                                           args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0,current_tail_offset%9#0
    itob                                                                                        args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0,as_bytes%12#0
    extract 6 2                                                                                 args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0,offset_as_uint16%6#0
    l-load encoded_tuple_buffer%17#0 1                                                          args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,offset_as_uint16%6#0,encoded_tuple_buffer%17#0
    l-load offset_as_uint16%6#0 1                                                               args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%17#0,offset_as_uint16%6#0
    concat                                                                                      args.foo_arc#0,val_as_bytes%2#0,encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%18#0
    l-load encoded_value%4#0 2                                                                  args.foo_arc#0,val_as_bytes%2#0,encoded_value%5#0,encoded_tuple_buffer%18#0,encoded_value%4#0
    concat                                                                                      args.foo_arc#0,val_as_bytes%2#0,encoded_value%5#0,encoded_tuple_buffer%19#0
    l-load encoded_value%5#0 1                                                                  args.foo_arc#0,val_as_bytes%2#0,encoded_tuple_buffer%19#0,encoded_value%5#0
    concat                                                                                      args.foo_arc#0,val_as_bytes%2#0,encoded_tuple_buffer%20#0
    l-load val_as_bytes%2#0 1                                                                   args.foo_arc#0,encoded_tuple_buffer%20#0,val_as_bytes%2#0
    l-load args.foo_arc#0 2                                                                     encoded_tuple_buffer%20#0,val_as_bytes%2#0,args.foo_arc#0
    concat                                                                                      encoded_tuple_buffer%20#0,encoded_tuple_buffer%23#0
    byte 0x0012                                                                                 encoded_tuple_buffer%20#0,encoded_tuple_buffer%23#0,0x0012
    concat                                                                                      encoded_tuple_buffer%20#0,encoded_tuple_buffer%24#0
    l-load encoded_tuple_buffer%20#0 1                                                          encoded_tuple_buffer%24#0,encoded_tuple_buffer%20#0
    concat                                                                                      encoded_tuple_buffer%25#0
    byte 0x151f7c75                                                                             encoded_tuple_buffer%25#0,0x151f7c75
    l-load encoded_tuple_buffer%25#0 1                                                          0x151f7c75,encoded_tuple_buffer%25#0
    concat                                                                                      tmp%25#0
    log
    int 1                                                                                       tmp%0#0
    x-store tmp%0#0                                                                             (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_bare_routing@9:
    // tuple_support/nested_tuples.py:18
    // class NestedTuples(ARC4Contract):
    txn OnCompletion                                                                            tmp%26#0
    bz main___algopy_default_create@10 ; b main_after_if_else@11

main___algopy_default_create@10:
    txn ApplicationID                                                                           tmp%27#0
    !                                                                                           tmp%28#0
    assert // can only call when creating
    int 1                                                                                       tmp%0#0
    x-store tmp%0#0                                                                             (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_after_if_else@11:
    // tuple_support/nested_tuples.py:18
    // class NestedTuples(ARC4Contract):
    int 0                                                                                       tmp%0#0
    x-store tmp%0#0                                                                             (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@12: (ùïè) tmp%0#0 |
    x-load tmp%0#0                                                                              tmp%0#0
    return


// test_cases.tuple_support.nested_tuples.NestedTuples.run_tests() -> uint64:
run_tests:
    allocate 1 to stack                                                                         (ùïó) a#5 |
    // tuple_support/nested_tuples.py:38
    // test_intrinsics(UInt64(1), UInt64(2))
    int 1                                                                                       (ùïó) a#5 | 1
    int 2                                                                                       (ùïó) a#5 | 1,2
    // tuple_support/nested_tuples.py:98
    // nt = (UInt64(1), op.addw(num1, num2), UInt64(42))
    addw                                                                                        (ùïó) a#5 | nt.1.0#0,nt.1.1#0
    // tuple_support/nested_tuples.py:101
    // assert nt[1] == (0, num1 + num2)  # type: ignore[comparison-overlap]
    l-load nt.1.0#0 1                                                                           (ùïó) a#5 | nt.1.1#0,nt.1.0#0
    !                                                                                           (ùïó) a#5 | nt.1.1#0,tmp%4#1
    l-load nt.1.1#0 1                                                                           (ùïó) a#5 | tmp%4#1,nt.1.1#0
    int 3                                                                                       (ùïó) a#5 | tmp%4#1,nt.1.1#0,3
    ==                                                                                          (ùïó) a#5 | tmp%4#1,tmp%6#1
    l-load-copy tmp%4#1 1                                                                       (ùïó) a#5 | tmp%4#1,tmp%6#1,tmp%4#1 (copy)
    l-load-copy tmp%6#1 1                                                                       (ùïó) a#5 | tmp%4#1,tmp%6#1,tmp%4#1 (copy),tmp%6#1 (copy)
    &&                                                                                          (ùïó) a#5 | tmp%4#1,tmp%6#1,tmp%7#1
    assert                                                                                      (ùïó) a#5 | tmp%4#1,tmp%6#1
    // tuple_support/nested_tuples.py:102
    // assert nt[1][:1] == (0,)  # type: ignore[comparison-overlap]
    l-load tmp%4#1 1                                                                            (ùïó) a#5 | tmp%6#1,tmp%4#1
    assert                                                                                      (ùïó) a#5 | tmp%6#1
    // tuple_support/nested_tuples.py:103
    // assert nt[1][1:] == (num1 + num2,)
    l-load tmp%6#1 0                                                                            (ùïó) a#5 | tmp%6#1
    assert                                                                                      (ùïó) a#5 |
    // tuple_support/nested_tuples.py:40
    // test_nested_singles(UInt64(1), reassign=True)
    int 1                                                                                       (ùïó) a#5 | 1
    int 1                                                                                       (ùïó) a#5 | 1,1
    callsub test_nested_singles                                                                 (ùïó) a#5 |
    // tuple_support/nested_tuples.py:41
    // test_nested_singles(UInt64(1), reassign=False)
    int 1                                                                                       (ùïó) a#5 | 1
    int 0                                                                                       (ùïó) a#5 | 1,0
    callsub test_nested_singles                                                                 (ùïó) a#5 |
    // tuple_support/nested_tuples.py:179
    // total = UInt64(0)
    int 0                                                                                       (ùïó) a#5 | 0
    f-store total#0                                                                             (ùïó) a#5,total#0 |
    int 0                                                                                       (ùïó) a#5,total#0 | loop_counter%0#0
    x-store loop_counter%0#0                                                                    (ùïó) a#5,total#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:177
    // x = UInt64(1)
    int 1                                                                                       (ùïó) a#5,total#0 | (ùïè) loop_counter%0#0 | 1
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    f-store t.0#0                                                                               (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:178
    // y = UInt64(2)
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | t.1#0
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    x-store t.1#0                                                                               (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |
    b run_tests_for_body@12                                                                     (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |

run_tests_for_body@12:                                                                          (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |
    // tuple_support/nested_tuples.py:183
    // total += a + b
    f-load t.0#0                                                                                (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 | t.0#0
    x-load t.1#0                                                                                (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | t.0#0,t.1#0
    +                                                                                           (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | tmp%0#4
    f-load total#0                                                                              (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | tmp%0#4,total#0
    l-load tmp%0#4 1                                                                            (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | total#0,tmp%0#4
    +                                                                                           (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | total#0
    f-store total#0                                                                             (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    x-load loop_counter%0#0                                                                     (ùïó) a#5,total#0,t.0#0 | loop_counter%0#0
    switch run_tests_for_header_1@14 run_tests_for_header_2@15 run_tests_for_header_3@16 ; b run_tests_after_for@17 (ùïó) a#5,total#0,t.0#0 | 

run_tests_for_header_1@14:                                                                      (ùïó) a#5,total#0,t.0#0 |
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | loop_counter%0#0
    x-store loop_counter%0#0                                                                    (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:178
    // y = UInt64(2)
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | 2
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    f-store t.0#0                                                                               (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:177
    // x = UInt64(1)
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | t.1#0
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    x-store t.1#0                                                                               (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |
    b run_tests_for_body@12                                                                     (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |

run_tests_for_header_2@15:                                                                      (ùïó) a#5,total#0,t.0#0 |
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | loop_counter%0#0
    x-store loop_counter%0#0                                                                    (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:177
    // x = UInt64(1)
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | 1
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    f-store t.0#0                                                                               (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:177
    // x = UInt64(1)
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | t.1#0
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    x-store t.1#0                                                                               (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |
    b run_tests_for_body@12                                                                     (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |

run_tests_for_header_3@16:                                                                      (ùïó) a#5,total#0,t.0#0 |
    int 3                                                                                       (ùïó) a#5,total#0,t.0#0 | loop_counter%0#0
    x-store loop_counter%0#0                                                                    (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:178
    // y = UInt64(2)
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | 2
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    f-store t.0#0                                                                               (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 |
    // tuple_support/nested_tuples.py:178
    // y = UInt64(2)
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%0#0 | t.1#0
    // tuple_support/nested_tuples.py:181
    // for t in ((x, y), (y, x), (x, x), (y, y)):
    x-store t.1#0                                                                               (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |
    b run_tests_for_body@12                                                                     (ùïó) a#5,total#0,t.0#0 | (ùïè) t.1#0,loop_counter%0#0 |

run_tests_after_for@17:                                                                         (ùïó) a#5,total#0,t.0#0 |
    int 0                                                                                       (ùïó) a#5,total#0,t.0#0 | loop_counter%1#0
    x-store loop_counter%1#0                                                                    (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:177
    // x = UInt64(1)
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | 1
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    f-store a#5                                                                                 (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:178
    // y = UInt64(2)
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | b#4
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    x-store b#4                                                                                 (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |
    b run_tests_for_body@18                                                                     (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |

run_tests_for_body@18:                                                                          (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |
    // tuple_support/nested_tuples.py:186
    // total += a + b
    f-load a#5                                                                                  (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 | a#5
    x-load b#4                                                                                  (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | a#5,b#4
    +                                                                                           (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | tmp%1#4
    f-load total#0                                                                              (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | tmp%1#4,total#0
    l-load tmp%1#4 1                                                                            (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | total#0,tmp%1#4
    +                                                                                           (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | total#0
    f-store total#0                                                                             (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    x-load loop_counter%1#0                                                                     (ùïó) a#5,total#0,t.0#0 | loop_counter%1#0
    switch run_tests_for_header_1@20 run_tests_for_header_2@21 run_tests_for_header_3@22 ; b run_tests_after_for@23 (ùïó) a#5,total#0,t.0#0 | 

run_tests_for_header_1@20:                                                                      (ùïó) a#5,total#0,t.0#0 |
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | loop_counter%1#0
    x-store loop_counter%1#0                                                                    (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:178
    // y = UInt64(2)
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | 2
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    f-store a#5                                                                                 (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:177
    // x = UInt64(1)
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | b#4
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    x-store b#4                                                                                 (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |
    b run_tests_for_body@18                                                                     (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |

run_tests_for_header_2@21:                                                                      (ùïó) a#5,total#0,t.0#0 |
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | loop_counter%1#0
    x-store loop_counter%1#0                                                                    (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:177
    // x = UInt64(1)
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | 1
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    f-store a#5                                                                                 (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:177
    // x = UInt64(1)
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | b#4
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    x-store b#4                                                                                 (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |
    b run_tests_for_body@18                                                                     (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |

run_tests_for_header_3@22:                                                                      (ùïó) a#5,total#0,t.0#0 |
    int 3                                                                                       (ùïó) a#5,total#0,t.0#0 | loop_counter%1#0
    x-store loop_counter%1#0                                                                    (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:178
    // y = UInt64(2)
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | 2
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    f-store a#5                                                                                 (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 |
    // tuple_support/nested_tuples.py:178
    // y = UInt64(2)
    int 2                                                                                       (ùïó) a#5,total#0,t.0#0 | (ùïè) loop_counter%1#0 | b#4
    // tuple_support/nested_tuples.py:185
    // for a, b in ((x, y), (y, x), (x, x), (y, y)):
    x-store b#4                                                                                 (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |
    b run_tests_for_body@18                                                                     (ùïó) a#5,total#0,t.0#0 | (ùïè) b#4,loop_counter%1#0 |

run_tests_after_for@23:                                                                         (ùïó) a#5,total#0,t.0#0 |
    // tuple_support/nested_tuples.py:188
    // assert total // 8 == 3
    f-load total#0                                                                              (ùïó) a#5,total#0,t.0#0 | total#0
    int 8                                                                                       (ùïó) a#5,total#0,t.0#0 | total#0,8
    /                                                                                           (ùïó) a#5,total#0,t.0#0 | tmp%2#3
    int 3                                                                                       (ùïó) a#5,total#0,t.0#0 | tmp%2#3,3
    ==                                                                                          (ùïó) a#5,total#0,t.0#0 | tmp%3#3
    assert                                                                                      (ùïó) a#5,total#0,t.0#0 |
    // tuple_support/nested_tuples.py:75
    // self.build_nested_call_count = UInt64(0)
    byte "build_nested_call_count"                                                              (ùïó) a#5,total#0,t.0#0 | "build_nested_call_count"
    int 0                                                                                       (ùïó) a#5,total#0,t.0#0 | "build_nested_call_count",0
    app_global_put                                                                              (ùïó) a#5,total#0,t.0#0 |
    // tuple_support/nested_tuples.py:70
    // self.build_nested_call_count += 1
    int 0                                                                                       (ùïó) a#5,total#0,t.0#0 | 0
    byte "build_nested_call_count"                                                              (ùïó) a#5,total#0,t.0#0 | 0,"build_nested_call_count"
    app_global_get_ex                                                                           (ùïó) a#5,total#0,t.0#0 | maybe_value%0#0,maybe_exists%0#0
    assert // check self.build_nested_call_count exists                                         (ùïó) a#5,total#0,t.0#0 | maybe_value%0#0
    l-load maybe_value%0#0 0                                                                    (ùïó) a#5,total#0,t.0#0 | maybe_value%0#0
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | maybe_value%0#0,1
    +                                                                                           (ùïó) a#5,total#0,t.0#0 | new_state_value%0#0
    byte "build_nested_call_count"                                                              (ùïó) a#5,total#0,t.0#0 | new_state_value%0#0,"build_nested_call_count"
    l-load new_state_value%0#0 1                                                                (ùïó) a#5,total#0,t.0#0 | "build_nested_call_count",new_state_value%0#0
    app_global_put                                                                              (ùïó) a#5,total#0,t.0#0 |
    // tuple_support/nested_tuples.py:78
    // assert self.build_nested_call_count == 1
    int 0                                                                                       (ùïó) a#5,total#0,t.0#0 | 0
    byte "build_nested_call_count"                                                              (ùïó) a#5,total#0,t.0#0 | 0,"build_nested_call_count"
    app_global_get_ex                                                                           (ùïó) a#5,total#0,t.0#0 | maybe_value%0#0,maybe_exists%0#0
    assert // check self.build_nested_call_count exists                                         (ùïó) a#5,total#0,t.0#0 | maybe_value%0#0
    l-load maybe_value%0#0 0                                                                    (ùïó) a#5,total#0,t.0#0 | maybe_value%0#0
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | maybe_value%0#0,1
    ==                                                                                          (ùïó) a#5,total#0,t.0#0 | tmp%6#1
    assert                                                                                      (ùïó) a#5,total#0,t.0#0 |
    // tuple_support/nested_tuples.py:49
    // return True
    int 1                                                                                       (ùïó) a#5,total#0,t.0#0 | 1
    retsub                                                                                      1


// test_cases.tuple_support.nested_tuples.test_nested_singles(one: uint64, reassign: uint64) -> void:
test_nested_singles:                                                                            (ùï°) one#0,reassign#0 |
    // tuple_support/nested_tuples.py:134
    // (UInt64(0),),
    int 0                                                                                       (ùï°) one#0,reassign#0 | 0
    // tuple_support/nested_tuples.py:133-137
    // s = (
    //     (UInt64(0),),
    //     (one,),
    //     (UInt64(2),),
    // )
    f-store s.0.0#0                                                                             (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0 |
    // tuple_support/nested_tuples.py:136
    // (UInt64(2),),
    int 2                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0 | 2
    // tuple_support/nested_tuples.py:133-137
    // s = (
    //     (UInt64(0),),
    //     (one,),
    //     (UInt64(2),),
    // )
    f-store s.2.0#0                                                                             (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0 |
    // tuple_support/nested_tuples.py:140
    // assert s[1][0] == 1
    p-load one#0                                                                                (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0 | one#0 (copy)
    int 1                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0 | one#0 (copy),1
    ==                                                                                          (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0 | tmp%2#0
    assert                                                                                      (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0 |
    p-load one#0                                                                                (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0 | s.1.0#1
    f-store s.1.0#1                                                                             (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |
    // tuple_support/nested_tuples.py:145
    // if reassign:
    p-load reassign#0                                                                           (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | reassign#0 (copy)
    bz test_nested_singles_after_if_else@2 ; b test_nested_singles_if_body@1                    (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |

test_nested_singles_if_body@1:                                                                  (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |
    // tuple_support/nested_tuples.py:147
    // (UInt64(3),),
    int 3                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | 3
    // tuple_support/nested_tuples.py:146-150
    // s = (
    //     (UInt64(3),),
    //     (UInt64(4),),
    //     (UInt64(5),),
    // )
    f-store s.0.0#0                                                                             (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |
    // tuple_support/nested_tuples.py:148
    // (UInt64(4),),
    int 4                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | 4
    // tuple_support/nested_tuples.py:146-150
    // s = (
    //     (UInt64(3),),
    //     (UInt64(4),),
    //     (UInt64(5),),
    // )
    f-store s.1.0#1                                                                             (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |
    // tuple_support/nested_tuples.py:149
    // (UInt64(5),),
    int 5                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | 5
    // tuple_support/nested_tuples.py:146-150
    // s = (
    //     (UInt64(3),),
    //     (UInt64(4),),
    //     (UInt64(5),),
    // )
    f-store s.2.0#0                                                                             (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |
    b test_nested_singles_after_if_else@2                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |

test_nested_singles_after_if_else@2:                                                            (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |
    // tuple_support/nested_tuples.py:151
    // assert s[0][0] == (3 if reassign else 0)
    p-load reassign#0                                                                           (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | reassign#0 (copy)
    int 3                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | reassign#0 (copy),3
    *                                                                                           (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%6#0
    f-load s.0.0#0                                                                              (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%6#0,s.0.0#0
    l-load tmp%6#0 1                                                                            (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.0.0#0,tmp%6#0
    ==                                                                                          (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%7#0
    assert                                                                                      (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |
    // tuple_support/nested_tuples.py:153
    // assert tmp == (5 if reassign else 2)
    int 2                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | 2
    int 5                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | 2,5
    p-load reassign#0                                                                           (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | 2,5,reassign#0 (copy)
    select                                                                                      (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%8#0
    f-load s.2.0#0                                                                              (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%8#0,s.2.0#0
    l-load-copy tmp%8#0 1                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%8#0,s.2.0#0,tmp%8#0 (copy)
    ==                                                                                          (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%8#0,tmp%9#0
    assert                                                                                      (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%8#0
    // tuple_support/nested_tuples.py:157
    // s1 += one
    f-load s.1.0#1                                                                              (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%8#0,s.1.0#1
    l-store-copy s.1.0#1 1                                                                      (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,tmp%8#0,s.1.0#1 (copy)
    p-load one#0                                                                                (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,tmp%8#0,s.1.0#1 (copy),one#0 (copy)
    +                                                                                           (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,tmp%8#0,s1#1
    // tuple_support/nested_tuples.py:158
    // assert s1 == (5 if reassign else 2)
    l-load tmp%8#0 1                                                                            (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,s1#1,tmp%8#0
    ==                                                                                          (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,tmp%12#0
    assert                                                                                      (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1
    // tuple_support/nested_tuples.py:159
    // assert s[1][0] == (4 if reassign else 1)
    int 1                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,1
    int 4                                                                                       (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,1,4
    p-load reassign#0                                                                           (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,1,4,reassign#0 (copy)
    select                                                                                      (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,tmp%13#0
    l-load s.1.0#1 1                                                                            (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%13#0,s.1.0#1
    l-load tmp%13#0 1                                                                           (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | s.1.0#1,tmp%13#0
    ==                                                                                          (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 | tmp%14#0
    assert                                                                                      (ùï°) one#0,reassign#0 | (ùïó) s.0.0#0,s.2.0#0,s.1.0#1 |
    retsub


