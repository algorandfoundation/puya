// Op                                                                                               Stack (out)
// test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                                           tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // tuple_support/nested_tuples.py:46
        // self.build_nested_call_count = UInt64(0)
        byte "build_nested_call_count"                                                              "build_nested_call_count"
        int 0                                                                                       "build_nested_call_count",0
        app_global_put
        // tuple_support/nested_tuples.py:48
        // self.twm = TupleWithMutable(
        byte "twm"                                                                                  "twm"
        byte 0x0004000600000000000000000000000c000e00000000                                         "twm",0x0004000600000000000000000000000c000e00000000
        // tuple_support/nested_tuples.py:48-55
        // self.twm = TupleWithMutable(
        //     arr=arc4.DynamicArray[arc4.UInt64](),
        //     child=Child(
        //         a=UInt64(),
        //         b=Bytes(),
        //         c=String(),
        //     ),
        // )
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txn NumAppArgs                                                                              tmp%0#2
        bz main_bare_routing@16 ; b main_abi_routing@4

    main_abi_routing@4:
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txna ApplicationArgs 0                                                                      tmp%2#0
        method store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)
        method load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]) tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))
        method store_tuple_in_box((uint64,uint64))void                                              tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void)
        method is_tuple_in_box((uint64,uint64))bool                                                 tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool)
        method load_tuple_from_box((uint64,uint64))(uint64,uint64)                                  tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool),Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))
        method mutate_local_tuple()(uint64[],(uint64,byte[],string))                                tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool),Method(load_tuple_from_box((uint64,uint64))(uint64,uint64)),Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))
        method mutate_tuple_in_storage_currently_supported_method()void                             tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool),Method(load_tuple_from_box((uint64,uint64))(uint64,uint64)),Method(mutate_local_tuple()(uint64[],(uint64,byte[],string))),Method(mutate_tuple_in_storage_currently_supported_method()void)
        method run_tests()bool                                                                      tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool),Method(load_tuple_from_box((uint64,uint64))(uint64,uint64)),Method(mutate_local_tuple()(uint64[],(uint64,byte[],string))),Method(mutate_tuple_in_storage_currently_supported_method()void),Method(run_tests()bool)
        method nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))              tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool),Method(load_tuple_from_box((uint64,uint64))(uint64,uint64)),Method(mutate_local_tuple()(uint64[],(uint64,byte[],string))),Method(mutate_tuple_in_storage_currently_supported_method()void),Method(run_tests()bool),Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))
        method named_tuple((uint64,byte[],string))(uint64,byte[],string)                            tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool),Method(load_tuple_from_box((uint64,uint64))(uint64,uint64)),Method(mutate_local_tuple()(uint64[],(uint64,byte[],string))),Method(mutate_tuple_in_storage_currently_supported_method()void),Method(run_tests()bool),Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))),Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))
        method nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)) tmp%2#0,Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool),Method(load_tuple_from_box((uint64,uint64))(uint64,uint64)),Method(mutate_local_tuple()(uint64[],(uint64,byte[],string))),Method(mutate_tuple_in_storage_currently_supported_method()void),Method(run_tests()bool),Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))),Method(named_tuple((uint64,byte[],string))(uint64,byte[],string)),Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))
        l-load tmp%2#0 11                                                                           Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void),Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])),Method(store_tuple_in_box((uint64,uint64))void),Method(is_tuple_in_box((uint64,uint64))bool),Method(load_tuple_from_box((uint64,uint64))(uint64,uint64)),Method(mutate_local_tuple()(uint64[],(uint64,byte[],string))),Method(mutate_tuple_in_storage_currently_supported_method()void),Method(run_tests()bool),Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))),Method(named_tuple((uint64,byte[],string))(uint64,byte[],string)),Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string))),tmp%2#0
        match main_store_tuple_route@5 main_load_tuple_route@6 main_store_tuple_in_box_route@7 main_is_tuple_in_box_route@8 main_load_tuple_from_box_route@9 main_mutate_local_tuple_route@10 main_mutate_tuple_in_storage_currently_supported_method_route@11 main_run_tests_route@12 main_nested_tuple_params_route@13 main_named_tuple_route@14 main_nested_named_tuple_params_route@15 ; b main_after_if_else@18 

    main_store_tuple_route@5:
        // tuple_support/nested_tuples.py:57
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%3#0
        !                                                                                           tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%5#0
        assert // can only call when not creating
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txna ApplicationArgs 1                                                                      tmp%7#0
        l-load-copy tmp%7#0 0                                                                       tmp%7#0,tmp%7#0 (copy)
        int 0                                                                                       tmp%7#0,tmp%7#0 (copy),0
        extract_uint16                                                                              tmp%7#0,item_start_offset%0#0
        l-load-copy tmp%7#0 1                                                                       tmp%7#0,item_start_offset%0#0,tmp%7#0 (copy)
        int 2                                                                                       tmp%7#0,item_start_offset%0#0,tmp%7#0 (copy),2
        extract_uint16                                                                              tmp%7#0,item_start_offset%0#0,item_end_offset%0#0
        l-load-copy tmp%7#0 2                                                                       tmp%7#0,item_start_offset%0#0,item_end_offset%0#0,tmp%7#0 (copy)
        l-load item_start_offset%0#0 2                                                              tmp%7#0,item_end_offset%0#0,tmp%7#0 (copy),item_start_offset%0#0
        l-load-copy item_end_offset%0#0 2                                                           tmp%7#0,item_end_offset%0#0,tmp%7#0 (copy),item_start_offset%0#0,item_end_offset%0#0 (copy)
        substring3                                                                                  tmp%7#0,item_end_offset%0#0,item0%0#0
        l-load-copy item0%0#0 0                                                                     tmp%7#0,item_end_offset%0#0,item0%0#0,item0%0#0 (copy)
        int 0                                                                                       tmp%7#0,item_end_offset%0#0,item0%0#0,item0%0#0 (copy),0
        extract_uint64                                                                              tmp%7#0,item_end_offset%0#0,item0%0#0,item0%2#0
        l-load-copy item0%0#0 1                                                                     tmp%7#0,item_end_offset%0#0,item0%0#0,item0%2#0,item0%0#0 (copy)
        extract 8 8 // on error: Index access is out of bounds                                      tmp%7#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0
        l-load-copy item0%0#0 2                                                                     tmp%7#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item0%0#0 (copy)
        int 16                                                                                      tmp%7#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item0%0#0 (copy),16
        extract_uint16                                                                              tmp%7#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item_start_offset%1#0
        l-load-copy item0%0#0 3                                                                     tmp%7#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item_start_offset%1#0,item0%0#0 (copy)
        len                                                                                         tmp%7#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item_start_offset%1#0,item_end_offset%1#0
        l-load item0%0#0 4                                                                          tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item_start_offset%1#0,item_end_offset%1#0,item0%0#0
        l-load item_start_offset%1#0 2                                                              tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item_end_offset%1#0,item0%0#0,item_start_offset%1#0
        l-load item_end_offset%1#0 2                                                                tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%0#0,item_start_offset%1#0,item_end_offset%1#0
        substring3                                                                                  tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0
        l-load-copy item2%0#0 0                                                                     tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item2%0#0 (copy)
        int 0                                                                                       tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item2%0#0 (copy),0
        extract_uint64                                                                              tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0
        l-load-copy item2%0#0 1                                                                     tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item2%0#0 (copy)
        int 8                                                                                       tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item2%0#0 (copy),8
        extract_uint16                                                                              tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0
        l-load-copy item2%0#0 2                                                                     tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0,item2%0#0 (copy)
        int 10                                                                                      tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0,item2%0#0 (copy),10
        extract_uint16                                                                              tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0,item_end_offset%2#0
        l-load-copy item2%0#0 3                                                                     tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0,item_end_offset%2#0,item2%0#0 (copy)
        l-load item_start_offset%2#0 2                                                              tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item2%0#0 (copy),item_start_offset%2#0
        l-load-copy item_end_offset%2#0 2                                                           tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item2%0#0 (copy),item_start_offset%2#0,item_end_offset%2#0 (copy)
        substring3                                                                                  tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item1%1#0
        extract 2 0                                                                                 tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item1%2#0
        l-load-copy item2%0#0 3                                                                     tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item1%2#0,item2%0#0 (copy)
        len                                                                                         tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item1%2#0,item_end_offset%3#0
        l-load item2%0#0 4                                                                          tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item_end_offset%2#0,item1%2#0,item_end_offset%3#0,item2%0#0
        l-load item_end_offset%2#0 3                                                                tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item_end_offset%3#0,item2%0#0,item_end_offset%2#0
        l-load item_end_offset%3#0 2                                                                tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%0#0,item_end_offset%2#0,item_end_offset%3#0
        substring3                                                                                  tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%1#0
        extract 2 0                                                                                 tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0
        l-load-copy tmp%7#0 6                                                                       tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,tmp%7#0 (copy)
        len                                                                                         tmp%7#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item_end_offset%4#0
        l-load tmp%7#0 7                                                                            item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item_end_offset%4#0,tmp%7#0
        l-load item_end_offset%0#0 7                                                                item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item_end_offset%4#0,tmp%7#0,item_end_offset%0#0
        l-load item_end_offset%4#0 2                                                                item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,tmp%7#0,item_end_offset%0#0,item_end_offset%4#0
        substring3                                                                                  item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item1%3#0
        // tuple_support/nested_tuples.py:57
        // @arc4.abimethod()
        l-load item0%2#0 5                                                                          item1%0#0,item0%4#0,item1%2#0,item2%2#0,item1%3#0,item0%2#0
        l-load item1%0#0 5                                                                          item0%4#0,item1%2#0,item2%2#0,item1%3#0,item0%2#0,item1%0#0
        l-load item0%4#0 5                                                                          item1%2#0,item2%2#0,item1%3#0,item0%2#0,item1%0#0,item0%4#0
        l-load item1%2#0 5                                                                          item2%2#0,item1%3#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0
        l-load item2%2#0 5                                                                          item1%3#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0
        l-load item1%3#0 5                                                                          item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item1%3#0
        callsub store_tuple
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_load_tuple_route@6:
        // tuple_support/nested_tuples.py:61
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%8#0
        !                                                                                           tmp%9#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%10#0
        assert // can only call when not creating
        callsub load_tuple                                                                          elements_to_encode%0#0,elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0
        l-load elements_to_encode%0#0 5                                                             elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0,elements_to_encode%0#0
        itob                                                                                        elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1
        l-load elements_to_encode%2#0 4                                                             elements_to_encode%1#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,elements_to_encode%2#0
        itob                                                                                        elements_to_encode%1#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0
        l-load-copy elements_to_encode%3#0 4                                                        elements_to_encode%1#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,elements_to_encode%3#0 (copy)
        len                                                                                         elements_to_encode%1#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,length%0#1
        itob                                                                                        elements_to_encode%1#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,as_bytes%0#0
        extract 6 2                                                                                 elements_to_encode%1#0,elements_to_encode%3#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,length_uint16%0#1
        l-load elements_to_encode%3#0 5                                                             elements_to_encode%1#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,length_uint16%0#1,elements_to_encode%3#0
        concat                                                                                      elements_to_encode%1#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,encoded_value%0#1
        l-load-copy elements_to_encode%4#0 4                                                        elements_to_encode%1#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,encoded_value%0#1,elements_to_encode%4#0 (copy)
        len                                                                                         elements_to_encode%1#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,encoded_value%0#1,length%1#1
        itob                                                                                        elements_to_encode%1#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,encoded_value%0#1,as_bytes%1#0
        extract 6 2                                                                                 elements_to_encode%1#0,elements_to_encode%4#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,encoded_value%0#1,length_uint16%1#1
        l-load elements_to_encode%4#0 5                                                             elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,encoded_value%0#1,length_uint16%1#1,elements_to_encode%4#0
        concat                                                                                      elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,val_as_bytes%1#0,encoded_value%0#1,encoded_value%1#1
        l-load val_as_bytes%1#0 2                                                                   elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,val_as_bytes%1#0
        byte 0x000c                                                                                 elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,val_as_bytes%1#0,0x000c
        concat                                                                                      elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1
        l-load-copy encoded_value%0#1 2                                                             elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1,encoded_value%0#1 (copy)
        len                                                                                         elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1,data_length%0#1
        int 12                                                                                      elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1,data_length%0#1,12
        l-load data_length%0#1 1                                                                    elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1,12,data_length%0#1
        +                                                                                           elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1,current_tail_offset%1#1
        itob                                                                                        elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1,as_bytes%3#1
        extract 6 2                                                                                 elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1,offset_as_uint16%1#1
        l-load encoded_tuple_buffer%2#1 1                                                           elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,offset_as_uint16%1#1,encoded_tuple_buffer%2#1
        l-load offset_as_uint16%1#1 1                                                               elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%2#1,offset_as_uint16%1#1
        concat                                                                                      elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%0#1,encoded_value%1#1,encoded_tuple_buffer%3#1
        l-load encoded_value%0#1 2                                                                  elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%1#1,encoded_tuple_buffer%3#1,encoded_value%0#1
        concat                                                                                      elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_value%1#1,encoded_tuple_buffer%4#1
        l-load encoded_value%1#1 1                                                                  elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_tuple_buffer%4#1,encoded_value%1#1
        concat                                                                                      elements_to_encode%1#0,elements_to_encode%5#0,val_as_bytes%0#1,encoded_tuple_buffer%5#1
        l-load val_as_bytes%0#1 1                                                                   elements_to_encode%1#0,elements_to_encode%5#0,encoded_tuple_buffer%5#1,val_as_bytes%0#1
        l-load elements_to_encode%1#0 3                                                             elements_to_encode%5#0,encoded_tuple_buffer%5#1,val_as_bytes%0#1,elements_to_encode%1#0
        concat                                                                                      elements_to_encode%5#0,encoded_tuple_buffer%5#1,encoded_tuple_buffer%8#1
        byte 0x0012                                                                                 elements_to_encode%5#0,encoded_tuple_buffer%5#1,encoded_tuple_buffer%8#1,0x0012
        concat                                                                                      elements_to_encode%5#0,encoded_tuple_buffer%5#1,encoded_tuple_buffer%9#1
        l-load encoded_tuple_buffer%5#1 1                                                           elements_to_encode%5#0,encoded_tuple_buffer%9#1,encoded_tuple_buffer%5#1
        concat                                                                                      elements_to_encode%5#0,encoded_tuple_buffer%10#1
        l-load-copy encoded_tuple_buffer%10#1 0                                                     elements_to_encode%5#0,encoded_tuple_buffer%10#1,encoded_tuple_buffer%10#1 (copy)
        len                                                                                         elements_to_encode%5#0,encoded_tuple_buffer%10#1,data_length%3#1
        int 4                                                                                       elements_to_encode%5#0,encoded_tuple_buffer%10#1,data_length%3#1,4
        l-load data_length%3#1 1                                                                    elements_to_encode%5#0,encoded_tuple_buffer%10#1,4,data_length%3#1
        +                                                                                           elements_to_encode%5#0,encoded_tuple_buffer%10#1,current_tail_offset%6#0
        itob                                                                                        elements_to_encode%5#0,encoded_tuple_buffer%10#1,as_bytes%6#0
        extract 6 2                                                                                 elements_to_encode%5#0,encoded_tuple_buffer%10#1,offset_as_uint16%4#0
        byte 0x0004                                                                                 elements_to_encode%5#0,encoded_tuple_buffer%10#1,offset_as_uint16%4#0,0x0004
        l-load offset_as_uint16%4#0 1                                                               elements_to_encode%5#0,encoded_tuple_buffer%10#1,0x0004,offset_as_uint16%4#0
        concat                                                                                      elements_to_encode%5#0,encoded_tuple_buffer%10#1,encoded_tuple_buffer%13#0
        l-load encoded_tuple_buffer%10#1 1                                                          elements_to_encode%5#0,encoded_tuple_buffer%13#0,encoded_tuple_buffer%10#1
        concat                                                                                      elements_to_encode%5#0,encoded_tuple_buffer%14#0
        l-load elements_to_encode%5#0 1                                                             encoded_tuple_buffer%14#0,elements_to_encode%5#0
        concat                                                                                      encoded_tuple_buffer%15#0
        byte 0x151f7c75                                                                             encoded_tuple_buffer%15#0,0x151f7c75
        l-load encoded_tuple_buffer%15#0 1                                                          0x151f7c75,encoded_tuple_buffer%15#0
        concat                                                                                      tmp%12#0
        log
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_store_tuple_in_box_route@7:
        // tuple_support/nested_tuples.py:65
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%13#0
        !                                                                                           tmp%14#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%15#0
        assert // can only call when not creating
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txna ApplicationArgs 1                                                                      reinterpret_bytes[16]%0#0
        l-load-copy reinterpret_bytes[16]%0#0 0                                                     reinterpret_bytes[16]%0#0,reinterpret_bytes[16]%0#0 (copy)
        int 0                                                                                       reinterpret_bytes[16]%0#0,reinterpret_bytes[16]%0#0 (copy),0
        extract_uint64                                                                              reinterpret_bytes[16]%0#0,item0%6#0
        l-load reinterpret_bytes[16]%0#0 1                                                          item0%6#0,reinterpret_bytes[16]%0#0
        int 8                                                                                       item0%6#0,reinterpret_bytes[16]%0#0,8
        extract_uint64                                                                              item0%6#0,item1%5#0
        // tuple_support/nested_tuples.py:65
        // @arc4.abimethod()
        l-load item0%6#0 1                                                                          item1%5#0,item0%6#0
        l-load item1%5#0 1                                                                          item0%6#0,item1%5#0
        callsub store_tuple_in_box
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_is_tuple_in_box_route@8:
        // tuple_support/nested_tuples.py:69
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%17#0
        !                                                                                           tmp%18#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%19#0
        assert // can only call when not creating
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txna ApplicationArgs 1                                                                      reinterpret_bytes[16]%1#0
        l-load-copy reinterpret_bytes[16]%1#0 0                                                     reinterpret_bytes[16]%1#0,reinterpret_bytes[16]%1#0 (copy)
        int 0                                                                                       reinterpret_bytes[16]%1#0,reinterpret_bytes[16]%1#0 (copy),0
        extract_uint64                                                                              reinterpret_bytes[16]%1#0,item0%8#0
        l-load reinterpret_bytes[16]%1#0 1                                                          item0%8#0,reinterpret_bytes[16]%1#0
        int 8                                                                                       item0%8#0,reinterpret_bytes[16]%1#0,8
        extract_uint64                                                                              item0%8#0,item1%7#0
        // tuple_support/nested_tuples.py:69
        // @arc4.abimethod()
        l-load item0%8#0 1                                                                          item1%7#0,item0%8#0
        l-load item1%7#0 1                                                                          item0%8#0,item1%7#0
        callsub is_tuple_in_box                                                                     to_encode%0#0
        byte 0x00                                                                                   to_encode%0#0,0x00
        int 0                                                                                       to_encode%0#0,0x00,0
        l-load to_encode%0#0 2                                                                      0x00,0,to_encode%0#0
        setbit                                                                                      encoded_bool%0#0
        byte 0x151f7c75                                                                             encoded_bool%0#0,0x151f7c75
        l-load encoded_bool%0#0 1                                                                   0x151f7c75,encoded_bool%0#0
        concat                                                                                      tmp%21#0
        log
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_load_tuple_from_box_route@9:
        // tuple_support/nested_tuples.py:73
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%22#0
        !                                                                                           tmp%23#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%24#0
        assert // can only call when not creating
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txna ApplicationArgs 1                                                                      reinterpret_bytes[16]%2#0
        l-load-copy reinterpret_bytes[16]%2#0 0                                                     reinterpret_bytes[16]%2#0,reinterpret_bytes[16]%2#0 (copy)
        int 0                                                                                       reinterpret_bytes[16]%2#0,reinterpret_bytes[16]%2#0 (copy),0
        extract_uint64                                                                              reinterpret_bytes[16]%2#0,item0%10#0
        l-load reinterpret_bytes[16]%2#0 1                                                          item0%10#0,reinterpret_bytes[16]%2#0
        int 8                                                                                       item0%10#0,reinterpret_bytes[16]%2#0,8
        extract_uint64                                                                              item0%10#0,item1%9#0
        // tuple_support/nested_tuples.py:73
        // @arc4.abimethod()
        l-load item0%10#0 1                                                                         item1%9#0,item0%10#0
        l-load item1%9#0 1                                                                          item0%10#0,item1%9#0
        callsub load_tuple_from_box                                                                 elements_to_encode%6#0,elements_to_encode%7#0
        l-load elements_to_encode%6#0 1                                                             elements_to_encode%7#0,elements_to_encode%6#0
        itob                                                                                        elements_to_encode%7#0,val_as_bytes%2#0
        l-load elements_to_encode%7#0 1                                                             val_as_bytes%2#0,elements_to_encode%7#0
        itob                                                                                        val_as_bytes%2#0,val_as_bytes%3#0
        l-load val_as_bytes%2#0 1                                                                   val_as_bytes%3#0,val_as_bytes%2#0
        l-load val_as_bytes%3#0 1                                                                   val_as_bytes%2#0,val_as_bytes%3#0
        concat                                                                                      encoded_tuple_buffer%18#0
        byte 0x151f7c75                                                                             encoded_tuple_buffer%18#0,0x151f7c75
        l-load encoded_tuple_buffer%18#0 1                                                          0x151f7c75,encoded_tuple_buffer%18#0
        concat                                                                                      tmp%26#0
        log
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_mutate_local_tuple_route@10:
        // tuple_support/nested_tuples.py:77
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%27#0
        !                                                                                           tmp%28#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%29#0
        assert // can only call when not creating
        callsub mutate_local_tuple                                                                  elements_to_encode%8#0,elements_to_encode%9#0,elements_to_encode%10#0,elements_to_encode%11#0
        l-load elements_to_encode%9#0 2                                                             elements_to_encode%8#0,elements_to_encode%10#0,elements_to_encode%11#0,elements_to_encode%9#0
        itob                                                                                        elements_to_encode%8#0,elements_to_encode%10#0,elements_to_encode%11#0,val_as_bytes%4#0
        l-load-copy elements_to_encode%10#0 2                                                       elements_to_encode%8#0,elements_to_encode%10#0,elements_to_encode%11#0,val_as_bytes%4#0,elements_to_encode%10#0 (copy)
        len                                                                                         elements_to_encode%8#0,elements_to_encode%10#0,elements_to_encode%11#0,val_as_bytes%4#0,length%2#0
        itob                                                                                        elements_to_encode%8#0,elements_to_encode%10#0,elements_to_encode%11#0,val_as_bytes%4#0,as_bytes%7#0
        extract 6 2                                                                                 elements_to_encode%8#0,elements_to_encode%10#0,elements_to_encode%11#0,val_as_bytes%4#0,length_uint16%2#0
        l-load elements_to_encode%10#0 3                                                            elements_to_encode%8#0,elements_to_encode%11#0,val_as_bytes%4#0,length_uint16%2#0,elements_to_encode%10#0
        concat                                                                                      elements_to_encode%8#0,elements_to_encode%11#0,val_as_bytes%4#0,encoded_value%2#0
        l-load-copy elements_to_encode%11#0 2                                                       elements_to_encode%8#0,elements_to_encode%11#0,val_as_bytes%4#0,encoded_value%2#0,elements_to_encode%11#0 (copy)
        len                                                                                         elements_to_encode%8#0,elements_to_encode%11#0,val_as_bytes%4#0,encoded_value%2#0,length%3#0
        itob                                                                                        elements_to_encode%8#0,elements_to_encode%11#0,val_as_bytes%4#0,encoded_value%2#0,as_bytes%8#0
        extract 6 2                                                                                 elements_to_encode%8#0,elements_to_encode%11#0,val_as_bytes%4#0,encoded_value%2#0,length_uint16%3#0
        l-load elements_to_encode%11#0 3                                                            elements_to_encode%8#0,val_as_bytes%4#0,encoded_value%2#0,length_uint16%3#0,elements_to_encode%11#0
        concat                                                                                      elements_to_encode%8#0,val_as_bytes%4#0,encoded_value%2#0,encoded_value%3#0
        l-load val_as_bytes%4#0 2                                                                   elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,val_as_bytes%4#0
        byte 0x000c                                                                                 elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,val_as_bytes%4#0,0x000c
        concat                                                                                      elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0
        l-load-copy encoded_value%2#0 2                                                             elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0,encoded_value%2#0 (copy)
        len                                                                                         elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0,data_length%5#0
        int 12                                                                                      elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0,data_length%5#0,12
        l-load data_length%5#0 1                                                                    elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0,12,data_length%5#0
        +                                                                                           elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0,current_tail_offset%10#0
        itob                                                                                        elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0,as_bytes%10#0
        extract 6 2                                                                                 elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0,offset_as_uint16%6#0
        l-load encoded_tuple_buffer%21#0 1                                                          elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,offset_as_uint16%6#0,encoded_tuple_buffer%21#0
        l-load offset_as_uint16%6#0 1                                                               elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%21#0,offset_as_uint16%6#0
        concat                                                                                      elements_to_encode%8#0,encoded_value%2#0,encoded_value%3#0,encoded_tuple_buffer%22#0
        l-load encoded_value%2#0 2                                                                  elements_to_encode%8#0,encoded_value%3#0,encoded_tuple_buffer%22#0,encoded_value%2#0
        concat                                                                                      elements_to_encode%8#0,encoded_value%3#0,encoded_tuple_buffer%23#0
        l-load encoded_value%3#0 1                                                                  elements_to_encode%8#0,encoded_tuple_buffer%23#0,encoded_value%3#0
        concat                                                                                      elements_to_encode%8#0,encoded_tuple_buffer%24#0
        l-load-copy elements_to_encode%8#0 1                                                        elements_to_encode%8#0,encoded_tuple_buffer%24#0,elements_to_encode%8#0 (copy)
        len                                                                                         elements_to_encode%8#0,encoded_tuple_buffer%24#0,data_length%7#0
        int 4                                                                                       elements_to_encode%8#0,encoded_tuple_buffer%24#0,data_length%7#0,4
        l-load data_length%7#0 1                                                                    elements_to_encode%8#0,encoded_tuple_buffer%24#0,4,data_length%7#0
        +                                                                                           elements_to_encode%8#0,encoded_tuple_buffer%24#0,current_tail_offset%13#0
        itob                                                                                        elements_to_encode%8#0,encoded_tuple_buffer%24#0,as_bytes%12#0
        extract 6 2                                                                                 elements_to_encode%8#0,encoded_tuple_buffer%24#0,offset_as_uint16%8#0
        byte 0x0004                                                                                 elements_to_encode%8#0,encoded_tuple_buffer%24#0,offset_as_uint16%8#0,0x0004
        l-load offset_as_uint16%8#0 1                                                               elements_to_encode%8#0,encoded_tuple_buffer%24#0,0x0004,offset_as_uint16%8#0
        concat                                                                                      elements_to_encode%8#0,encoded_tuple_buffer%24#0,encoded_tuple_buffer%27#0
        l-load elements_to_encode%8#0 2                                                             encoded_tuple_buffer%24#0,encoded_tuple_buffer%27#0,elements_to_encode%8#0
        concat                                                                                      encoded_tuple_buffer%24#0,encoded_tuple_buffer%28#0
        l-load encoded_tuple_buffer%24#0 1                                                          encoded_tuple_buffer%28#0,encoded_tuple_buffer%24#0
        concat                                                                                      encoded_tuple_buffer%29#0
        byte 0x151f7c75                                                                             encoded_tuple_buffer%29#0,0x151f7c75
        l-load encoded_tuple_buffer%29#0 1                                                          0x151f7c75,encoded_tuple_buffer%29#0
        concat                                                                                      tmp%31#0
        log
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_mutate_tuple_in_storage_currently_supported_method_route@11:
        // tuple_support/nested_tuples.py:96
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%32#0
        !                                                                                           tmp%33#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%34#0
        assert // can only call when not creating
        callsub mutate_tuple_in_storage_currently_supported_method
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_run_tests_route@12:
        // tuple_support/nested_tuples.py:102
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%36#0
        !                                                                                           tmp%37#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%38#0
        assert // can only call when not creating
        callsub run_tests                                                                           to_encode%1#0
        byte 0x00                                                                                   to_encode%1#0,0x00
        int 0                                                                                       to_encode%1#0,0x00,0
        l-load to_encode%1#0 2                                                                      0x00,0,to_encode%1#0
        setbit                                                                                      encoded_bool%1#0
        byte 0x151f7c75                                                                             encoded_bool%1#0,0x151f7c75
        l-load encoded_bool%1#0 1                                                                   0x151f7c75,encoded_bool%1#0
        concat                                                                                      tmp%40#0
        log
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_nested_tuple_params_route@13:
        // tuple_support/nested_tuples.py:131
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%41#0
        !                                                                                           tmp%42#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%43#0
        assert // can only call when not creating
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txna ApplicationArgs 1                                                                      tmp%45#0
        l-load-copy tmp%45#0 0                                                                      tmp%45#0,tmp%45#0 (copy)
        int 0                                                                                       tmp%45#0,tmp%45#0 (copy),0
        extract_uint16                                                                              tmp%45#0,item_start_offset%5#0
        l-load-copy tmp%45#0 1                                                                      tmp%45#0,item_start_offset%5#0,tmp%45#0 (copy)
        int 2                                                                                       tmp%45#0,item_start_offset%5#0,tmp%45#0 (copy),2
        extract_uint16                                                                              tmp%45#0,item_start_offset%5#0,item_end_offset%5#0
        l-load-copy tmp%45#0 2                                                                      tmp%45#0,item_start_offset%5#0,item_end_offset%5#0,tmp%45#0 (copy)
        l-load item_start_offset%5#0 2                                                              tmp%45#0,item_end_offset%5#0,tmp%45#0 (copy),item_start_offset%5#0
        l-load-copy item_end_offset%5#0 2                                                           tmp%45#0,item_end_offset%5#0,tmp%45#0 (copy),item_start_offset%5#0,item_end_offset%5#0 (copy)
        substring3                                                                                  tmp%45#0,item_end_offset%5#0,item0%11#0
        extract 2 0                                                                                 tmp%45#0,item_end_offset%5#0,args.0#0
        l-load-copy tmp%45#0 2                                                                      tmp%45#0,item_end_offset%5#0,args.0#0,tmp%45#0 (copy)
        len                                                                                         tmp%45#0,item_end_offset%5#0,args.0#0,item_end_offset%6#0
        l-load tmp%45#0 3                                                                           item_end_offset%5#0,args.0#0,item_end_offset%6#0,tmp%45#0
        l-load item_end_offset%5#0 3                                                                args.0#0,item_end_offset%6#0,tmp%45#0,item_end_offset%5#0
        l-load item_end_offset%6#0 2                                                                args.0#0,tmp%45#0,item_end_offset%5#0,item_end_offset%6#0
        substring3                                                                                  args.0#0,item1%10#0
        l-load-copy item1%10#0 0                                                                    args.0#0,item1%10#0,item1%10#0 (copy)
        int 0                                                                                       args.0#0,item1%10#0,item1%10#0 (copy),0
        extract_uint16                                                                              args.0#0,item1%10#0,item_start_offset%7#0
        l-load-copy item1%10#0 1                                                                    args.0#0,item1%10#0,item_start_offset%7#0,item1%10#0 (copy)
        len                                                                                         args.0#0,item1%10#0,item_start_offset%7#0,item_end_offset%7#0
        l-load-copy item1%10#0 2                                                                    args.0#0,item1%10#0,item_start_offset%7#0,item_end_offset%7#0,item1%10#0 (copy)
        l-load item_start_offset%7#0 2                                                              args.0#0,item1%10#0,item_end_offset%7#0,item1%10#0 (copy),item_start_offset%7#0
        l-load item_end_offset%7#0 2                                                                args.0#0,item1%10#0,item1%10#0 (copy),item_start_offset%7#0,item_end_offset%7#0
        substring3                                                                                  args.0#0,item1%10#0,item0%13#0
        extract 2 0                                                                                 args.0#0,item1%10#0,args.1.0#0
        l-load item1%10#0 1                                                                         args.0#0,args.1.0#0,item1%10#0
        extract 2 8 // on error: Index access is out of bounds                                      args.0#0,args.1.0#0,item1%11#0
        int 0                                                                                       args.0#0,args.1.0#0,item1%11#0,0
        extract_uint64                                                                              args.0#0,args.1.0#0,args.1.1.0#0
        // tuple_support/nested_tuples.py:131
        // @arc4.abimethod()
        l-load-copy args.1.0#0 1                                                                    args.0#0,args.1.0#0,args.1.1.0#0,args.1.0#0 (copy)
        len                                                                                         args.0#0,args.1.0#0,args.1.1.0#0,length%4#0
        itob                                                                                        args.0#0,args.1.0#0,args.1.1.0#0,as_bytes%13#0
        extract 6 2                                                                                 args.0#0,args.1.0#0,args.1.1.0#0,length_uint16%4#0
        l-load args.1.0#0 2                                                                         args.0#0,args.1.1.0#0,length_uint16%4#0,args.1.0#0
        concat                                                                                      args.0#0,args.1.1.0#0,encoded_value%4#0
        l-load-copy args.0#0 2                                                                      args.0#0,args.1.1.0#0,encoded_value%4#0,args.0#0 (copy)
        len                                                                                         args.0#0,args.1.1.0#0,encoded_value%4#0,length%5#0
        itob                                                                                        args.0#0,args.1.1.0#0,encoded_value%4#0,as_bytes%14#0
        extract 6 2                                                                                 args.0#0,args.1.1.0#0,encoded_value%4#0,length_uint16%5#0
        l-load args.0#0 3                                                                           args.1.1.0#0,encoded_value%4#0,length_uint16%5#0,args.0#0
        concat                                                                                      args.1.1.0#0,encoded_value%4#0,encoded_value%5#0
        l-load args.1.1.0#0 2                                                                       encoded_value%4#0,encoded_value%5#0,args.1.1.0#0
        itob                                                                                        encoded_value%4#0,encoded_value%5#0,val_as_bytes%5#0
        byte 0x000a                                                                                 encoded_value%4#0,encoded_value%5#0,val_as_bytes%5#0,0x000a
        l-load val_as_bytes%5#0 1                                                                   encoded_value%4#0,encoded_value%5#0,0x000a,val_as_bytes%5#0
        concat                                                                                      encoded_value%4#0,encoded_value%5#0,encoded_tuple_buffer%32#0
        l-load encoded_value%5#0 1                                                                  encoded_value%4#0,encoded_tuple_buffer%32#0,encoded_value%5#0
        concat                                                                                      encoded_value%4#0,encoded_tuple_buffer%33#0
        l-load-copy encoded_value%4#0 1                                                             encoded_value%4#0,encoded_tuple_buffer%33#0,encoded_value%4#0 (copy)
        len                                                                                         encoded_value%4#0,encoded_tuple_buffer%33#0,data_length%10#0
        int 4                                                                                       encoded_value%4#0,encoded_tuple_buffer%33#0,data_length%10#0,4
        l-load data_length%10#0 1                                                                   encoded_value%4#0,encoded_tuple_buffer%33#0,4,data_length%10#0
        +                                                                                           encoded_value%4#0,encoded_tuple_buffer%33#0,current_tail_offset%18#0
        itob                                                                                        encoded_value%4#0,encoded_tuple_buffer%33#0,as_bytes%17#0
        extract 6 2                                                                                 encoded_value%4#0,encoded_tuple_buffer%33#0,offset_as_uint16%11#0
        byte 0x0004                                                                                 encoded_value%4#0,encoded_tuple_buffer%33#0,offset_as_uint16%11#0,0x0004
        l-load offset_as_uint16%11#0 1                                                              encoded_value%4#0,encoded_tuple_buffer%33#0,0x0004,offset_as_uint16%11#0
        concat                                                                                      encoded_value%4#0,encoded_tuple_buffer%33#0,encoded_tuple_buffer%36#0
        l-load encoded_value%4#0 2                                                                  encoded_tuple_buffer%33#0,encoded_tuple_buffer%36#0,encoded_value%4#0
        concat                                                                                      encoded_tuple_buffer%33#0,encoded_tuple_buffer%37#0
        l-load encoded_tuple_buffer%33#0 1                                                          encoded_tuple_buffer%37#0,encoded_tuple_buffer%33#0
        concat                                                                                      encoded_tuple_buffer%38#0
        byte 0x151f7c75                                                                             encoded_tuple_buffer%38#0,0x151f7c75
        l-load encoded_tuple_buffer%38#0 1                                                          0x151f7c75,encoded_tuple_buffer%38#0
        concat                                                                                      tmp%46#0
        log
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_named_tuple_route@14:
        // tuple_support/nested_tuples.py:138
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%47#0
        !                                                                                           tmp%48#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%49#0
        assert // can only call when not creating
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txna ApplicationArgs 1                                                                      tmp%51#0
        l-load-copy tmp%51#0 0                                                                      tmp%51#0,tmp%51#0 (copy)
        int 0                                                                                       tmp%51#0,tmp%51#0 (copy),0
        extract_uint64                                                                              tmp%51#0,args.a#0
        l-load-copy tmp%51#0 1                                                                      tmp%51#0,args.a#0,tmp%51#0 (copy)
        int 8                                                                                       tmp%51#0,args.a#0,tmp%51#0 (copy),8
        extract_uint16                                                                              tmp%51#0,args.a#0,item_start_offset%8#0
        l-load-copy tmp%51#0 2                                                                      tmp%51#0,args.a#0,item_start_offset%8#0,tmp%51#0 (copy)
        int 10                                                                                      tmp%51#0,args.a#0,item_start_offset%8#0,tmp%51#0 (copy),10
        extract_uint16                                                                              tmp%51#0,args.a#0,item_start_offset%8#0,item_end_offset%8#0
        l-load-copy tmp%51#0 3                                                                      tmp%51#0,args.a#0,item_start_offset%8#0,item_end_offset%8#0,tmp%51#0 (copy)
        l-load item_start_offset%8#0 2                                                              tmp%51#0,args.a#0,item_end_offset%8#0,tmp%51#0 (copy),item_start_offset%8#0
        l-load-copy item_end_offset%8#0 2                                                           tmp%51#0,args.a#0,item_end_offset%8#0,tmp%51#0 (copy),item_start_offset%8#0,item_end_offset%8#0 (copy)
        substring3                                                                                  tmp%51#0,args.a#0,item_end_offset%8#0,item1%12#0
        extract 2 0                                                                                 tmp%51#0,args.a#0,item_end_offset%8#0,args.b#0
        l-load-copy tmp%51#0 3                                                                      tmp%51#0,args.a#0,item_end_offset%8#0,args.b#0,tmp%51#0 (copy)
        len                                                                                         tmp%51#0,args.a#0,item_end_offset%8#0,args.b#0,item_end_offset%9#0
        l-load tmp%51#0 4                                                                           args.a#0,item_end_offset%8#0,args.b#0,item_end_offset%9#0,tmp%51#0
        l-load item_end_offset%8#0 3                                                                args.a#0,args.b#0,item_end_offset%9#0,tmp%51#0,item_end_offset%8#0
        l-load item_end_offset%9#0 2                                                                args.a#0,args.b#0,tmp%51#0,item_end_offset%8#0,item_end_offset%9#0
        substring3                                                                                  args.a#0,args.b#0,item2%3#0
        extract 2 0                                                                                 args.a#0,args.b#0,args.c#0
        // tuple_support/nested_tuples.py:138
        // @arc4.abimethod()
        l-load args.a#0 2                                                                           args.b#0,args.c#0,args.a#0
        itob                                                                                        args.b#0,args.c#0,val_as_bytes%6#0
        l-load-copy args.b#0 2                                                                      args.b#0,args.c#0,val_as_bytes%6#0,args.b#0 (copy)
        len                                                                                         args.b#0,args.c#0,val_as_bytes%6#0,length%6#0
        itob                                                                                        args.b#0,args.c#0,val_as_bytes%6#0,as_bytes%18#0
        extract 6 2                                                                                 args.b#0,args.c#0,val_as_bytes%6#0,length_uint16%6#0
        l-load args.b#0 3                                                                           args.c#0,val_as_bytes%6#0,length_uint16%6#0,args.b#0
        concat                                                                                      args.c#0,val_as_bytes%6#0,encoded_value%6#0
        l-load-copy args.c#0 2                                                                      args.c#0,val_as_bytes%6#0,encoded_value%6#0,args.c#0 (copy)
        len                                                                                         args.c#0,val_as_bytes%6#0,encoded_value%6#0,length%7#0
        itob                                                                                        args.c#0,val_as_bytes%6#0,encoded_value%6#0,as_bytes%19#0
        extract 6 2                                                                                 args.c#0,val_as_bytes%6#0,encoded_value%6#0,length_uint16%7#0
        l-load args.c#0 3                                                                           val_as_bytes%6#0,encoded_value%6#0,length_uint16%7#0,args.c#0
        concat                                                                                      val_as_bytes%6#0,encoded_value%6#0,encoded_value%7#0
        l-load val_as_bytes%6#0 2                                                                   encoded_value%6#0,encoded_value%7#0,val_as_bytes%6#0
        byte 0x000c                                                                                 encoded_value%6#0,encoded_value%7#0,val_as_bytes%6#0,0x000c
        concat                                                                                      encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0
        l-load-copy encoded_value%6#0 2                                                             encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0,encoded_value%6#0 (copy)
        len                                                                                         encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0,data_length%12#0
        int 12                                                                                      encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0,data_length%12#0,12
        l-load data_length%12#0 1                                                                   encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0,12,data_length%12#0
        +                                                                                           encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0,current_tail_offset%21#0
        itob                                                                                        encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0,as_bytes%21#0
        extract 6 2                                                                                 encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0,offset_as_uint16%13#0
        l-load encoded_tuple_buffer%41#0 1                                                          encoded_value%6#0,encoded_value%7#0,offset_as_uint16%13#0,encoded_tuple_buffer%41#0
        l-load offset_as_uint16%13#0 1                                                              encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%41#0,offset_as_uint16%13#0
        concat                                                                                      encoded_value%6#0,encoded_value%7#0,encoded_tuple_buffer%42#0
        l-load encoded_value%6#0 2                                                                  encoded_value%7#0,encoded_tuple_buffer%42#0,encoded_value%6#0
        concat                                                                                      encoded_value%7#0,encoded_tuple_buffer%43#0
        l-load encoded_value%7#0 1                                                                  encoded_tuple_buffer%43#0,encoded_value%7#0
        concat                                                                                      encoded_tuple_buffer%44#0
        byte 0x151f7c75                                                                             encoded_tuple_buffer%44#0,0x151f7c75
        l-load encoded_tuple_buffer%44#0 1                                                          0x151f7c75,encoded_tuple_buffer%44#0
        concat                                                                                      tmp%52#0
        log
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_nested_named_tuple_params_route@15:
        // tuple_support/nested_tuples.py:143
        // @arc4.abimethod()
        txn OnCompletion                                                                            tmp%53#0
        !                                                                                           tmp%54#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                           tmp%55#0
        assert // can only call when not creating
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txna ApplicationArgs 1                                                                      tmp%57#0
        l-load-copy tmp%57#0 0                                                                      tmp%57#0,tmp%57#0 (copy)
        int 0                                                                                       tmp%57#0,tmp%57#0 (copy),0
        extract_uint64                                                                              tmp%57#0,args.foo#0
        l-load-copy tmp%57#0 1                                                                      tmp%57#0,args.foo#0,tmp%57#0 (copy)
        extract 8 8 // on error: Index access is out of bounds                                      tmp%57#0,args.foo#0,args.foo_arc#0
        l-load-copy tmp%57#0 2                                                                      tmp%57#0,args.foo#0,args.foo_arc#0,tmp%57#0 (copy)
        int 16                                                                                      tmp%57#0,args.foo#0,args.foo_arc#0,tmp%57#0 (copy),16
        extract_uint16                                                                              tmp%57#0,args.foo#0,args.foo_arc#0,item_start_offset%10#0
        l-load-copy tmp%57#0 3                                                                      tmp%57#0,args.foo#0,args.foo_arc#0,item_start_offset%10#0,tmp%57#0 (copy)
        len                                                                                         tmp%57#0,args.foo#0,args.foo_arc#0,item_start_offset%10#0,item_end_offset%10#0
        l-load tmp%57#0 4                                                                           args.foo#0,args.foo_arc#0,item_start_offset%10#0,item_end_offset%10#0,tmp%57#0
        l-load item_start_offset%10#0 2                                                             args.foo#0,args.foo_arc#0,item_end_offset%10#0,tmp%57#0,item_start_offset%10#0
        l-load item_end_offset%10#0 2                                                               args.foo#0,args.foo_arc#0,tmp%57#0,item_start_offset%10#0,item_end_offset%10#0
        substring3                                                                                  args.foo#0,args.foo_arc#0,item2%5#0
        l-load-copy item2%5#0 0                                                                     args.foo#0,args.foo_arc#0,item2%5#0,item2%5#0 (copy)
        int 0                                                                                       args.foo#0,args.foo_arc#0,item2%5#0,item2%5#0 (copy),0
        extract_uint64                                                                              args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0
        l-load-copy item2%5#0 1                                                                     args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item2%5#0 (copy)
        int 8                                                                                       args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item2%5#0 (copy),8
        extract_uint16                                                                              args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_start_offset%11#0
        l-load-copy item2%5#0 2                                                                     args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_start_offset%11#0,item2%5#0 (copy)
        int 10                                                                                      args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_start_offset%11#0,item2%5#0 (copy),10
        extract_uint16                                                                              args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_start_offset%11#0,item_end_offset%11#0
        l-load-copy item2%5#0 3                                                                     args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_start_offset%11#0,item_end_offset%11#0,item2%5#0 (copy)
        l-load item_start_offset%11#0 2                                                             args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_end_offset%11#0,item2%5#0 (copy),item_start_offset%11#0
        l-load-copy item_end_offset%11#0 2                                                          args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_end_offset%11#0,item2%5#0 (copy),item_start_offset%11#0,item_end_offset%11#0 (copy)
        substring3                                                                                  args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_end_offset%11#0,item1%15#0
        extract 2 0                                                                                 args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_end_offset%11#0,args.child.b#0
        l-load-copy item2%5#0 3                                                                     args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_end_offset%11#0,args.child.b#0,item2%5#0 (copy)
        len                                                                                         args.foo#0,args.foo_arc#0,item2%5#0,args.child.a#0,item_end_offset%11#0,args.child.b#0,item_end_offset%12#0
        l-load item2%5#0 4                                                                          args.foo#0,args.foo_arc#0,args.child.a#0,item_end_offset%11#0,args.child.b#0,item_end_offset%12#0,item2%5#0
        l-load item_end_offset%11#0 3                                                               args.foo#0,args.foo_arc#0,args.child.a#0,args.child.b#0,item_end_offset%12#0,item2%5#0,item_end_offset%11#0
        l-load item_end_offset%12#0 2                                                               args.foo#0,args.foo_arc#0,args.child.a#0,args.child.b#0,item2%5#0,item_end_offset%11#0,item_end_offset%12#0
        substring3                                                                                  args.foo#0,args.foo_arc#0,args.child.a#0,args.child.b#0,item2%6#0
        extract 2 0                                                                                 args.foo#0,args.foo_arc#0,args.child.a#0,args.child.b#0,args.child.c#0
        // tuple_support/nested_tuples.py:143
        // @arc4.abimethod()
        l-load args.foo#0 4                                                                         args.foo_arc#0,args.child.a#0,args.child.b#0,args.child.c#0,args.foo#0
        itob                                                                                        args.foo_arc#0,args.child.a#0,args.child.b#0,args.child.c#0,val_as_bytes%7#0
        l-load args.child.a#0 3                                                                     args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%7#0,args.child.a#0
        itob                                                                                        args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0
        l-load-copy args.child.b#0 3                                                                args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,args.child.b#0 (copy)
        len                                                                                         args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,length%8#0
        itob                                                                                        args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,as_bytes%22#0
        extract 6 2                                                                                 args.foo_arc#0,args.child.b#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,length_uint16%8#0
        l-load args.child.b#0 4                                                                     args.foo_arc#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,length_uint16%8#0,args.child.b#0
        concat                                                                                      args.foo_arc#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,encoded_value%8#0
        l-load-copy args.child.c#0 3                                                                args.foo_arc#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,encoded_value%8#0,args.child.c#0 (copy)
        len                                                                                         args.foo_arc#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,encoded_value%8#0,length%9#0
        itob                                                                                        args.foo_arc#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,encoded_value%8#0,as_bytes%23#0
        extract 6 2                                                                                 args.foo_arc#0,args.child.c#0,val_as_bytes%7#0,val_as_bytes%8#0,encoded_value%8#0,length_uint16%9#0
        l-load args.child.c#0 4                                                                     args.foo_arc#0,val_as_bytes%7#0,val_as_bytes%8#0,encoded_value%8#0,length_uint16%9#0,args.child.c#0
        concat                                                                                      args.foo_arc#0,val_as_bytes%7#0,val_as_bytes%8#0,encoded_value%8#0,encoded_value%9#0
        l-load val_as_bytes%8#0 2                                                                   args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,val_as_bytes%8#0
        byte 0x000c                                                                                 args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,val_as_bytes%8#0,0x000c
        concat                                                                                      args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0
        l-load-copy encoded_value%8#0 2                                                             args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0,encoded_value%8#0 (copy)
        len                                                                                         args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0,data_length%14#0
        int 12                                                                                      args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0,data_length%14#0,12
        l-load data_length%14#0 1                                                                   args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0,12,data_length%14#0
        +                                                                                           args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0,current_tail_offset%24#0
        itob                                                                                        args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0,as_bytes%25#0
        extract 6 2                                                                                 args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0,offset_as_uint16%15#0
        l-load encoded_tuple_buffer%47#0 1                                                          args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,offset_as_uint16%15#0,encoded_tuple_buffer%47#0
        l-load offset_as_uint16%15#0 1                                                              args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%47#0,offset_as_uint16%15#0
        concat                                                                                      args.foo_arc#0,val_as_bytes%7#0,encoded_value%8#0,encoded_value%9#0,encoded_tuple_buffer%48#0
        l-load encoded_value%8#0 2                                                                  args.foo_arc#0,val_as_bytes%7#0,encoded_value%9#0,encoded_tuple_buffer%48#0,encoded_value%8#0
        concat                                                                                      args.foo_arc#0,val_as_bytes%7#0,encoded_value%9#0,encoded_tuple_buffer%49#0
        l-load encoded_value%9#0 1                                                                  args.foo_arc#0,val_as_bytes%7#0,encoded_tuple_buffer%49#0,encoded_value%9#0
        concat                                                                                      args.foo_arc#0,val_as_bytes%7#0,encoded_tuple_buffer%50#0
        l-load val_as_bytes%7#0 1                                                                   args.foo_arc#0,encoded_tuple_buffer%50#0,val_as_bytes%7#0
        l-load args.foo_arc#0 2                                                                     encoded_tuple_buffer%50#0,val_as_bytes%7#0,args.foo_arc#0
        concat                                                                                      encoded_tuple_buffer%50#0,encoded_tuple_buffer%53#0
        byte 0x0012                                                                                 encoded_tuple_buffer%50#0,encoded_tuple_buffer%53#0,0x0012
        concat                                                                                      encoded_tuple_buffer%50#0,encoded_tuple_buffer%54#0
        l-load encoded_tuple_buffer%50#0 1                                                          encoded_tuple_buffer%54#0,encoded_tuple_buffer%50#0
        concat                                                                                      encoded_tuple_buffer%55#0
        byte 0x151f7c75                                                                             encoded_tuple_buffer%55#0,0x151f7c75
        l-load encoded_tuple_buffer%55#0 1                                                          0x151f7c75,encoded_tuple_buffer%55#0
        concat                                                                                      tmp%58#0
        log
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_bare_routing@16:
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        txn OnCompletion                                                                            tmp%59#0
        bz main___algopy_default_create@17 ; b main_after_if_else@18

    main___algopy_default_create@17:
        txn ApplicationID                                                                           tmp%60#0
        !                                                                                           tmp%61#0
        assert // can only call when creating
        int 1                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_after_if_else@18:
        // tuple_support/nested_tuples.py:44
        // class NestedTuples(ARC4Contract):
        int 0                                                                                       test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19 

    main_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__@19:
        v-load tmp%0#0                                                                              tmp%0#0
        return


// test_cases.tuple_support.nested_tuples.test_nested_singles(one: uint64, reassign: uint64) -> void:
subroutine test_nested_singles:
    test_nested_singles_block@0:                                                                    (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:214
        // (UInt64(0),),
        int 0                                                                                       (𝕡) one#0,reassign#0 | 0
        // tuple_support/nested_tuples.py:213-217
        // s = (
        //     (UInt64(0),),
        //     (one,),
        //     (UInt64(2),),
        // )
        v-store s.0.0#0                                                                             (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:216
        // (UInt64(2),),
        int 2                                                                                       (𝕡) one#0,reassign#0 | 2
        // tuple_support/nested_tuples.py:213-217
        // s = (
        //     (UInt64(0),),
        //     (one,),
        //     (UInt64(2),),
        // )
        v-store s.2.0#0                                                                             (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:220
        // assert s[1][0] == 1
        p-load one#0                                                                                (𝕡) one#0,reassign#0 | one#0 (copy)
        int 1                                                                                       (𝕡) one#0,reassign#0 | one#0 (copy),1
        ==                                                                                          (𝕡) one#0,reassign#0 | tmp%2#0
        assert                                                                                      (𝕡) one#0,reassign#0 |
        p-load one#0                                                                                (𝕡) one#0,reassign#0 | one#0 (copy)
        v-store s.1.0#1                                                                             (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:225
        // if reassign:
        p-load reassign#0                                                                           (𝕡) one#0,reassign#0 | reassign#0 (copy)
        bz test_nested_singles_after_if_else@2 ; b test_nested_singles_if_body@1                    (𝕡) one#0,reassign#0 |

    test_nested_singles_if_body@1:                                                                  (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:227
        // (UInt64(3),),
        int 3                                                                                       (𝕡) one#0,reassign#0 | 3
        // tuple_support/nested_tuples.py:226-230
        // s = (
        //     (UInt64(3),),
        //     (UInt64(4),),
        //     (UInt64(5),),
        // )
        v-store s.0.0#0                                                                             (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:228
        // (UInt64(4),),
        int 4                                                                                       (𝕡) one#0,reassign#0 | 4
        // tuple_support/nested_tuples.py:226-230
        // s = (
        //     (UInt64(3),),
        //     (UInt64(4),),
        //     (UInt64(5),),
        // )
        v-store s.1.0#1                                                                             (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:229
        // (UInt64(5),),
        int 5                                                                                       (𝕡) one#0,reassign#0 | 5
        // tuple_support/nested_tuples.py:226-230
        // s = (
        //     (UInt64(3),),
        //     (UInt64(4),),
        //     (UInt64(5),),
        // )
        v-store s.2.0#0                                                                             (𝕡) one#0,reassign#0 |
        b test_nested_singles_after_if_else@2                                                       (𝕡) one#0,reassign#0 |

    test_nested_singles_after_if_else@2:                                                            (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:231
        // assert s[0][0] == (3 if reassign else 0)
        p-load reassign#0                                                                           (𝕡) one#0,reassign#0 | reassign#0 (copy)
        int 3                                                                                       (𝕡) one#0,reassign#0 | reassign#0 (copy),3
        *                                                                                           (𝕡) one#0,reassign#0 | select%0#0
        v-load s.0.0#0                                                                              (𝕡) one#0,reassign#0 | select%0#0,s.0.0#0
        l-load select%0#0 1                                                                         (𝕡) one#0,reassign#0 | s.0.0#0,select%0#0
        ==                                                                                          (𝕡) one#0,reassign#0 | tmp%6#0
        assert                                                                                      (𝕡) one#0,reassign#0 |
        // tuple_support/nested_tuples.py:233
        // assert tmp == (5 if reassign else 2)
        int 2                                                                                       (𝕡) one#0,reassign#0 | 2
        int 5                                                                                       (𝕡) one#0,reassign#0 | 2,5
        p-load reassign#0                                                                           (𝕡) one#0,reassign#0 | 2,5,reassign#0 (copy)
        select                                                                                      (𝕡) one#0,reassign#0 | select%1#0
        v-load s.2.0#0                                                                              (𝕡) one#0,reassign#0 | select%1#0,s.2.0#0
        l-load-copy select%1#0 1                                                                    (𝕡) one#0,reassign#0 | select%1#0,s.2.0#0,select%1#0 (copy)
        ==                                                                                          (𝕡) one#0,reassign#0 | select%1#0,tmp%7#0
        assert                                                                                      (𝕡) one#0,reassign#0 | select%1#0
        // tuple_support/nested_tuples.py:237
        // s1 += one
        v-load s.1.0#1                                                                              (𝕡) one#0,reassign#0 | select%1#0,s.1.0#1
        l-store-copy s.1.0#1 1                                                                      (𝕡) one#0,reassign#0 | s.1.0#1,select%1#0,s.1.0#1 (copy)
        p-load one#0                                                                                (𝕡) one#0,reassign#0 | s.1.0#1,select%1#0,s.1.0#1 (copy),one#0 (copy)
        +                                                                                           (𝕡) one#0,reassign#0 | s.1.0#1,select%1#0,s1#1
        // tuple_support/nested_tuples.py:238
        // assert s1 == (5 if reassign else 2)
        l-load select%1#0 1                                                                         (𝕡) one#0,reassign#0 | s.1.0#1,s1#1,select%1#0
        ==                                                                                          (𝕡) one#0,reassign#0 | s.1.0#1,tmp%9#0
        assert                                                                                      (𝕡) one#0,reassign#0 | s.1.0#1
        // tuple_support/nested_tuples.py:239
        // assert s[1][0] == (4 if reassign else 1)
        int 1                                                                                       (𝕡) one#0,reassign#0 | s.1.0#1,1
        int 4                                                                                       (𝕡) one#0,reassign#0 | s.1.0#1,1,4
        p-load reassign#0                                                                           (𝕡) one#0,reassign#0 | s.1.0#1,1,4,reassign#0 (copy)
        select                                                                                      (𝕡) one#0,reassign#0 | s.1.0#1,select%3#0
        l-load s.1.0#1 1                                                                            (𝕡) one#0,reassign#0 | select%3#0,s.1.0#1
        l-load select%3#0 1                                                                         (𝕡) one#0,reassign#0 | s.1.0#1,select%3#0
        ==                                                                                          (𝕡) one#0,reassign#0 | tmp%10#0
        assert                                                                                      (𝕡) one#0,reassign#0 |
        retsub


// test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple(pwl.parent.foo: uint64, pwl.parent.foo_arc: bytes, pwl.parent.child.a: uint64, pwl.parent.child.b: bytes, pwl.parent.child.c: bytes, pwl.children: bytes) -> void:
subroutine store_tuple:
    store_tuple_block@0:                                                                            (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 |
        // tuple_support/nested_tuples.py:58
        // def store_tuple(self, pwl: ParentWithList) -> None:
        p-load pwl.parent.foo#0                                                                     (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | pwl.parent.foo#0 (copy)
        itob                                                                                        (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0
        p-load pwl.parent.child.a#0                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,pwl.parent.child.a#0 (copy)
        itob                                                                                        (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0
        p-load pwl.parent.child.b#0                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,pwl.parent.child.b#0 (copy)
        len                                                                                         (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,length%0#0
        itob                                                                                        (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,as_bytes%0#0
        extract 6 2                                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,length_uint16%0#0
        p-load pwl.parent.child.b#0                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,length_uint16%0#0,pwl.parent.child.b#0 (copy)
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,encoded_value%0#0
        p-load pwl.parent.child.c#0                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,encoded_value%0#0,pwl.parent.child.c#0 (copy)
        len                                                                                         (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,encoded_value%0#0,length%1#0
        itob                                                                                        (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,encoded_value%0#0,as_bytes%1#0
        extract 6 2                                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,encoded_value%0#0,length_uint16%1#0
        p-load pwl.parent.child.c#0                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,encoded_value%0#0,length_uint16%1#0,pwl.parent.child.c#0 (copy)
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,val_as_bytes%1#0,encoded_value%0#0,encoded_value%1#0
        l-load val_as_bytes%1#0 2                                                                   (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,val_as_bytes%1#0
        byte 0x000c                                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,val_as_bytes%1#0,0x000c
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0
        l-load-copy encoded_value%0#0 2                                                             (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,encoded_value%0#0 (copy)
        len                                                                                         (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,data_length%0#0
        int 12                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,data_length%0#0,12
        l-load data_length%0#0 1                                                                    (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,12,data_length%0#0
        +                                                                                           (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,current_tail_offset%1#0
        itob                                                                                        (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,as_bytes%3#0
        extract 6 2                                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,offset_as_uint16%1#0
        l-load encoded_tuple_buffer%2#0 1                                                           (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,offset_as_uint16%1#0,encoded_tuple_buffer%2#0
        l-load offset_as_uint16%1#0 1                                                               (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,offset_as_uint16%1#0
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0
        l-load encoded_value%0#0 2                                                                  (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,encoded_value%0#0
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_value%1#0,encoded_tuple_buffer%4#0
        l-load encoded_value%1#0 1                                                                  (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_tuple_buffer%4#0,encoded_value%1#0
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | val_as_bytes%0#0,encoded_tuple_buffer%5#0
        l-load val_as_bytes%0#0 1                                                                   (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%5#0,val_as_bytes%0#0
        p-load pwl.parent.foo_arc#0                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%5#0,val_as_bytes%0#0,pwl.parent.foo_arc#0 (copy)
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%5#0,encoded_tuple_buffer%8#0
        byte 0x0012                                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%5#0,encoded_tuple_buffer%8#0,0x0012
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%5#0,encoded_tuple_buffer%9#0
        l-load encoded_tuple_buffer%5#0 1                                                           (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%9#0,encoded_tuple_buffer%5#0
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0
        // tuple_support/nested_tuples.py:59
        // self.pwl = pwl
        l-load-copy encoded_tuple_buffer%10#0 0                                                     (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,encoded_tuple_buffer%10#0 (copy)
        len                                                                                         (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,data_length%3#0
        int 4                                                                                       (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,data_length%3#0,4
        l-load data_length%3#0 1                                                                    (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,4,data_length%3#0
        +                                                                                           (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,current_tail_offset%6#0
        itob                                                                                        (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,as_bytes%6#0
        extract 6 2                                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,offset_as_uint16%4#0
        byte 0x0004                                                                                 (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,offset_as_uint16%4#0,0x0004
        l-load offset_as_uint16%4#0 1                                                               (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,0x0004,offset_as_uint16%4#0
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%10#0,encoded_tuple_buffer%13#0
        l-load encoded_tuple_buffer%10#0 1                                                          (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%13#0,encoded_tuple_buffer%10#0
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%14#0
        p-load pwl.children#0                                                                       (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%14#0,pwl.children#0 (copy)
        concat                                                                                      (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%15#0
        byte "pwl"                                                                                  (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | encoded_tuple_buffer%15#0,"pwl"
        l-load encoded_tuple_buffer%15#0 1                                                          (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 | "pwl",encoded_tuple_buffer%15#0
        app_global_put                                                                              (𝕡) pwl.parent.foo#0,pwl.parent.foo_arc#0,pwl.parent.child.a#0,pwl.parent.child.b#0,pwl.parent.child.c#0,pwl.children#0 |
        retsub


// test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple() -> uint64, bytes, uint64, bytes, bytes, bytes:
subroutine load_tuple:
    load_tuple_block@0:
        // tuple_support/nested_tuples.py:63
        // return self.pwl
        int 0                                                                                       0
        byte "pwl"                                                                                  0,"pwl"
        app_global_get_ex                                                                           maybe_value%0#0,maybe_exists%0#0
        l-store-copy maybe_exists%0#0 1                                                             maybe_exists%0#0,maybe_value%0#0,maybe_exists%0#0 (copy)
        v-store maybe_exists%0#0                                                                    maybe_exists%0#0,maybe_value%0#0
        v-store maybe_value%0#0                                                                     maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                   maybe_exists%0#0
        bz load_tuple_ternary_false@2 ; b load_tuple_ternary_true@1

    load_tuple_ternary_true@1:
        // tuple_support/nested_tuples.py:63
        // return self.pwl
        v-load maybe_value%0#0                                                                      maybe_value%0#0
        l-store-copy maybe_value%0#0 0                                                              maybe_value%0#0,maybe_value%0#0 (copy)
        int 0                                                                                       maybe_value%0#0,maybe_value%0#0 (copy),0
        extract_uint16                                                                              maybe_value%0#0,item_start_offset%0#0
        l-load-copy maybe_value%0#0 1                                                               maybe_value%0#0,item_start_offset%0#0,maybe_value%0#0 (copy)
        int 2                                                                                       maybe_value%0#0,item_start_offset%0#0,maybe_value%0#0 (copy),2
        extract_uint16                                                                              maybe_value%0#0,item_start_offset%0#0,item_end_offset%0#0
        l-load-copy maybe_value%0#0 2                                                               maybe_value%0#0,item_start_offset%0#0,item_end_offset%0#0,maybe_value%0#0 (copy)
        l-load item_start_offset%0#0 2                                                              maybe_value%0#0,item_end_offset%0#0,maybe_value%0#0 (copy),item_start_offset%0#0
        l-load-copy item_end_offset%0#0 2                                                           maybe_value%0#0,item_end_offset%0#0,maybe_value%0#0 (copy),item_start_offset%0#0,item_end_offset%0#0 (copy)
        substring3                                                                                  maybe_value%0#0,item_end_offset%0#0,item0%0#0
        l-load-copy item0%0#0 0                                                                     maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%0#0 (copy)
        int 0                                                                                       maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%0#0 (copy),0
        extract_uint64                                                                              maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%2#0
        l-load-copy item0%0#0 1                                                                     maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%2#0,item0%0#0 (copy)
        extract 8 8 // on error: Index access is out of bounds                                      maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0
        l-load-copy item0%0#0 2                                                                     maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item0%0#0 (copy)
        int 16                                                                                      maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item0%0#0 (copy),16
        extract_uint16                                                                              maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item_start_offset%1#0
        l-load-copy item0%0#0 3                                                                     maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item_start_offset%1#0,item0%0#0 (copy)
        len                                                                                         maybe_value%0#0,item_end_offset%0#0,item0%0#0,item0%2#0,item1%0#0,item_start_offset%1#0,item_end_offset%1#0
        l-load item0%0#0 4                                                                          maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item_start_offset%1#0,item_end_offset%1#0,item0%0#0
        l-load item_start_offset%1#0 2                                                              maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item_end_offset%1#0,item0%0#0,item_start_offset%1#0
        l-load item_end_offset%1#0 2                                                                maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%0#0,item_start_offset%1#0,item_end_offset%1#0
        substring3                                                                                  maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0
        l-load-copy item2%0#0 0                                                                     maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item2%0#0 (copy)
        int 0                                                                                       maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item2%0#0 (copy),0
        extract_uint64                                                                              maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0
        l-load-copy item2%0#0 1                                                                     maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item2%0#0 (copy)
        int 8                                                                                       maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item2%0#0 (copy),8
        extract_uint16                                                                              maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0
        l-load-copy item2%0#0 2                                                                     maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0,item2%0#0 (copy)
        int 10                                                                                      maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0,item2%0#0 (copy),10
        extract_uint16                                                                              maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0,item_end_offset%2#0
        l-load-copy item2%0#0 3                                                                     maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_start_offset%2#0,item_end_offset%2#0,item2%0#0 (copy)
        l-load item_start_offset%2#0 2                                                              maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item2%0#0 (copy),item_start_offset%2#0
        l-load-copy item_end_offset%2#0 2                                                           maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item2%0#0 (copy),item_start_offset%2#0,item_end_offset%2#0 (copy)
        substring3                                                                                  maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item1%1#0
        extract 2 0                                                                                 maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item1%2#0
        l-load-copy item2%0#0 3                                                                     maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item1%2#0,item2%0#0 (copy)
        len                                                                                         maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item2%0#0,item0%4#0,item_end_offset%2#0,item1%2#0,item_end_offset%3#0
        l-load item2%0#0 4                                                                          maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item_end_offset%2#0,item1%2#0,item_end_offset%3#0,item2%0#0
        l-load item_end_offset%2#0 3                                                                maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item_end_offset%3#0,item2%0#0,item_end_offset%2#0
        l-load item_end_offset%3#0 2                                                                maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%0#0,item_end_offset%2#0,item_end_offset%3#0
        substring3                                                                                  maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%1#0
        extract 2 0                                                                                 maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0
        l-load-copy maybe_value%0#0 6                                                               maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,maybe_value%0#0 (copy)
        len                                                                                         maybe_value%0#0,item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item_end_offset%4#0
        l-load maybe_value%0#0 7                                                                    item_end_offset%0#0,item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item_end_offset%4#0,maybe_value%0#0
        l-load item_end_offset%0#0 7                                                                item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item_end_offset%4#0,maybe_value%0#0,item_end_offset%0#0
        l-load item_end_offset%4#0 2                                                                item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,maybe_value%0#0,item_end_offset%0#0,item_end_offset%4#0
        substring3                                                                                  item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0,item1%3#0
        v-store ternary_result%0.children#1                                                         item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0
        l-load item2%2#0 0                                                                          item0%2#0,item1%0#0,item0%4#0,item1%2#0,item2%2#0
        v-store ternary_result%0.parent.child.c#1                                                   item0%2#0,item1%0#0,item0%4#0,item1%2#0
        l-load item1%2#0 0                                                                          item0%2#0,item1%0#0,item0%4#0,item1%2#0
        v-store ternary_result%0.parent.child.b#1                                                   item0%2#0,item1%0#0,item0%4#0
        l-load item0%4#0 0                                                                          item0%2#0,item1%0#0,item0%4#0
        v-store ternary_result%0.parent.child.a#1                                                   item0%2#0,item1%0#0
        l-load item1%0#0 0                                                                          item0%2#0,item1%0#0
        v-store ternary_result%0.parent.foo_arc#1                                                   item0%2#0
        l-load item0%2#0 0                                                                          item0%2#0
        v-store ternary_result%0.parent.foo#1
        b load_tuple_ternary_merge@3

    load_tuple_ternary_false@2:
        // tuple_support/nested_tuples.py:63
        // return self.pwl
        undefined                                                                                   undefined
        v-store ternary_result%0.parent.foo#1
        undefined                                                                                   undefined
        v-store ternary_result%0.parent.foo_arc#1
        undefined                                                                                   undefined
        v-store ternary_result%0.parent.child.a#1
        undefined                                                                                   undefined
        v-store ternary_result%0.parent.child.b#1
        undefined                                                                                   undefined
        v-store ternary_result%0.parent.child.c#1
        undefined                                                                                   undefined
        v-store ternary_result%0.children#1
        b load_tuple_ternary_merge@3

    load_tuple_ternary_merge@3:
        // tuple_support/nested_tuples.py:63
        // return self.pwl
        v-load maybe_exists%0#0                                                                     maybe_exists%0#0
        assert // check self.pwl exists
        v-load ternary_result%0.parent.foo#1                                                        ternary_result%0.parent.foo#1
        v-load ternary_result%0.parent.foo_arc#1                                                    ternary_result%0.parent.foo#1,ternary_result%0.parent.foo_arc#1
        v-load ternary_result%0.parent.child.a#1                                                    ternary_result%0.parent.foo#1,ternary_result%0.parent.foo_arc#1,ternary_result%0.parent.child.a#1
        v-load ternary_result%0.parent.child.b#1                                                    ternary_result%0.parent.foo#1,ternary_result%0.parent.foo_arc#1,ternary_result%0.parent.child.a#1,ternary_result%0.parent.child.b#1
        v-load ternary_result%0.parent.child.c#1                                                    ternary_result%0.parent.foo#1,ternary_result%0.parent.foo_arc#1,ternary_result%0.parent.child.a#1,ternary_result%0.parent.child.b#1,ternary_result%0.parent.child.c#1
        v-load ternary_result%0.children#1                                                          ternary_result%0.parent.foo#1,ternary_result%0.parent.foo_arc#1,ternary_result%0.parent.child.a#1,ternary_result%0.parent.child.b#1,ternary_result%0.parent.child.c#1,ternary_result%0.children#1
        retsub                                                                                      ternary_result%0.parent.foo#1,ternary_result%0.parent.foo_arc#1,ternary_result%0.parent.child.a#1,ternary_result%0.parent.child.b#1,ternary_result%0.parent.child.c#1,ternary_result%0.children#1


// test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box(key.a: uint64, key.b: uint64) -> void:
subroutine store_tuple_in_box:
    store_tuple_in_box_block@0:                                                                     (𝕡) key.a#0,key.b#0 |
        // tuple_support/nested_tuples.py:67
        // self.box[key] = key._replace(b=key.b + 1)
        p-load key.b#0                                                                              (𝕡) key.a#0,key.b#0 | key.b#0 (copy)
        int 1                                                                                       (𝕡) key.a#0,key.b#0 | key.b#0 (copy),1
        +                                                                                           (𝕡) key.a#0,key.b#0 | tmp%0#0
        // tuple_support/nested_tuples.py:66
        // def store_tuple_in_box(self, key: SimpleTup) -> None:
        p-load key.a#0                                                                              (𝕡) key.a#0,key.b#0 | tmp%0#0,key.a#0 (copy)
        itob                                                                                        (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0
        p-load key.b#0                                                                              (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0,key.b#0 (copy)
        itob                                                                                        (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0,val_as_bytes%1#0
        // tuple_support/nested_tuples.py:67
        // self.box[key] = key._replace(b=key.b + 1)
        l-load-copy val_as_bytes%0#0 1                                                              (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0,val_as_bytes%1#0,val_as_bytes%0#0 (copy)
        l-load val_as_bytes%1#0 1                                                                   (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0,val_as_bytes%0#0 (copy),val_as_bytes%1#0
        concat                                                                                      (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0,encoded_tuple_buffer%2#0
        byte "box"                                                                                  (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0,encoded_tuple_buffer%2#0,"box"
        l-load encoded_tuple_buffer%2#0 1                                                           (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0,"box",encoded_tuple_buffer%2#0
        concat                                                                                      (𝕡) key.a#0,key.b#0 | tmp%0#0,val_as_bytes%0#0,box_prefixed_key%0#0
        l-load tmp%0#0 2                                                                            (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0,box_prefixed_key%0#0,tmp%0#0
        itob                                                                                        (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0,box_prefixed_key%0#0,val_as_bytes%3#0
        l-load val_as_bytes%0#0 2                                                                   (𝕡) key.a#0,key.b#0 | box_prefixed_key%0#0,val_as_bytes%3#0,val_as_bytes%0#0
        l-load val_as_bytes%3#0 1                                                                   (𝕡) key.a#0,key.b#0 | box_prefixed_key%0#0,val_as_bytes%0#0,val_as_bytes%3#0
        concat                                                                                      (𝕡) key.a#0,key.b#0 | box_prefixed_key%0#0,encoded_tuple_buffer%5#0
        l-load box_prefixed_key%0#0 1                                                               (𝕡) key.a#0,key.b#0 | encoded_tuple_buffer%5#0,box_prefixed_key%0#0
        l-load encoded_tuple_buffer%5#0 1                                                           (𝕡) key.a#0,key.b#0 | box_prefixed_key%0#0,encoded_tuple_buffer%5#0
        box_put                                                                                     (𝕡) key.a#0,key.b#0 |
        retsub


// test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box(key.a: uint64, key.b: uint64) -> uint64:
subroutine is_tuple_in_box:
    is_tuple_in_box_block@0:                                                                        (𝕡) key.a#0,key.b#0 |
        // tuple_support/nested_tuples.py:70
        // def is_tuple_in_box(self, key: SimpleTup) -> bool:
        p-load key.a#0                                                                              (𝕡) key.a#0,key.b#0 | key.a#0 (copy)
        itob                                                                                        (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0
        p-load key.b#0                                                                              (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0,key.b#0 (copy)
        itob                                                                                        (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0,val_as_bytes%1#0
        // tuple_support/nested_tuples.py:71
        // return key in self.box
        l-load val_as_bytes%0#0 1                                                                   (𝕡) key.a#0,key.b#0 | val_as_bytes%1#0,val_as_bytes%0#0
        l-load val_as_bytes%1#0 1                                                                   (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0,val_as_bytes%1#0
        concat                                                                                      (𝕡) key.a#0,key.b#0 | encoded_tuple_buffer%2#0
        byte "box"                                                                                  (𝕡) key.a#0,key.b#0 | encoded_tuple_buffer%2#0,"box"
        l-load encoded_tuple_buffer%2#0 1                                                           (𝕡) key.a#0,key.b#0 | "box",encoded_tuple_buffer%2#0
        concat                                                                                      (𝕡) key.a#0,key.b#0 | box_prefixed_key%0#0
        box_len                                                                                     (𝕡) key.a#0,key.b#0 | _%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                  (𝕡) key.a#0,key.b#0 | maybe_exists%0#0,_%0#0
        pop 1                                                                                       (𝕡) key.a#0,key.b#0 | maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                   (𝕡) key.a#0,key.b#0 | maybe_exists%0#0
        retsub                                                                                      maybe_exists%0#0


// test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box(key.a: uint64, key.b: uint64) -> uint64, uint64:
subroutine load_tuple_from_box:
    load_tuple_from_box_block@0:                                                                    (𝕡) key.a#0,key.b#0 |
        // tuple_support/nested_tuples.py:74
        // def load_tuple_from_box(self, key: SimpleTup) -> SimpleTup:
        p-load key.a#0                                                                              (𝕡) key.a#0,key.b#0 | key.a#0 (copy)
        itob                                                                                        (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0
        p-load key.b#0                                                                              (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0,key.b#0 (copy)
        itob                                                                                        (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0,val_as_bytes%1#0
        // tuple_support/nested_tuples.py:75
        // return self.box[key]
        l-load val_as_bytes%0#0 1                                                                   (𝕡) key.a#0,key.b#0 | val_as_bytes%1#0,val_as_bytes%0#0
        l-load val_as_bytes%1#0 1                                                                   (𝕡) key.a#0,key.b#0 | val_as_bytes%0#0,val_as_bytes%1#0
        concat                                                                                      (𝕡) key.a#0,key.b#0 | encoded_tuple_buffer%2#0
        byte "box"                                                                                  (𝕡) key.a#0,key.b#0 | encoded_tuple_buffer%2#0,"box"
        l-load encoded_tuple_buffer%2#0 1                                                           (𝕡) key.a#0,key.b#0 | "box",encoded_tuple_buffer%2#0
        concat                                                                                      (𝕡) key.a#0,key.b#0 | box_prefixed_key%0#0
        box_get                                                                                     (𝕡) key.a#0,key.b#0 | maybe_value%0#0,maybe_exists%0#0
        l-store-copy maybe_exists%0#0 1                                                             (𝕡) key.a#0,key.b#0 | maybe_exists%0#0,maybe_value%0#0,maybe_exists%0#0 (copy)
        v-store maybe_exists%0#0                                                                    (𝕡) key.a#0,key.b#0 | maybe_exists%0#0,maybe_value%0#0
        v-store maybe_value%0#0                                                                     (𝕡) key.a#0,key.b#0 | maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                   (𝕡) key.a#0,key.b#0 | maybe_exists%0#0
        bz load_tuple_from_box_ternary_false@2 ; b load_tuple_from_box_ternary_true@1               (𝕡) key.a#0,key.b#0 |

    load_tuple_from_box_ternary_true@1:                                                             (𝕡) key.a#0,key.b#0 |
        // tuple_support/nested_tuples.py:75
        // return self.box[key]
        v-load maybe_value%0#0                                                                      (𝕡) key.a#0,key.b#0 | maybe_value%0#0
        l-store-copy maybe_value%0#0 0                                                              (𝕡) key.a#0,key.b#0 | maybe_value%0#0,maybe_value%0#0 (copy)
        int 0                                                                                       (𝕡) key.a#0,key.b#0 | maybe_value%0#0,maybe_value%0#0 (copy),0
        extract_uint64                                                                              (𝕡) key.a#0,key.b#0 | maybe_value%0#0,item0%1#0
        l-load maybe_value%0#0 1                                                                    (𝕡) key.a#0,key.b#0 | item0%1#0,maybe_value%0#0
        int 8                                                                                       (𝕡) key.a#0,key.b#0 | item0%1#0,maybe_value%0#0,8
        extract_uint64                                                                              (𝕡) key.a#0,key.b#0 | item0%1#0,item1%1#0
        v-store ternary_result%0.b#1                                                                (𝕡) key.a#0,key.b#0 | item0%1#0
        l-load item0%1#0 0                                                                          (𝕡) key.a#0,key.b#0 | item0%1#0
        v-store ternary_result%0.a#1                                                                (𝕡) key.a#0,key.b#0 |
        b load_tuple_from_box_ternary_merge@3                                                       (𝕡) key.a#0,key.b#0 |

    load_tuple_from_box_ternary_false@2:                                                            (𝕡) key.a#0,key.b#0 |
        // tuple_support/nested_tuples.py:75
        // return self.box[key]
        undefined                                                                                   (𝕡) key.a#0,key.b#0 | undefined
        v-store ternary_result%0.a#1                                                                (𝕡) key.a#0,key.b#0 |
        undefined                                                                                   (𝕡) key.a#0,key.b#0 | undefined
        v-store ternary_result%0.b#1                                                                (𝕡) key.a#0,key.b#0 |
        b load_tuple_from_box_ternary_merge@3                                                       (𝕡) key.a#0,key.b#0 |

    load_tuple_from_box_ternary_merge@3:                                                            (𝕡) key.a#0,key.b#0 |
        // tuple_support/nested_tuples.py:75
        // return self.box[key]
        v-load maybe_exists%0#0                                                                     (𝕡) key.a#0,key.b#0 | maybe_exists%0#0
        assert // check self.box entry exists                                                       (𝕡) key.a#0,key.b#0 |
        v-load ternary_result%0.a#1                                                                 (𝕡) key.a#0,key.b#0 | ternary_result%0.a#1
        v-load ternary_result%0.b#1                                                                 (𝕡) key.a#0,key.b#0 | ternary_result%0.a#1,ternary_result%0.b#1
        retsub                                                                                      ternary_result%0.a#1,ternary_result%0.b#1


// test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple() -> bytes, uint64, bytes, bytes:
subroutine mutate_local_tuple:
    mutate_local_tuple_block@0:
        // tuple_support/nested_tuples.py:89
        // for i in urange(3):
        int 0                                                                                       0
        v-store i#0
        b mutate_local_tuple_for_header@1

    mutate_local_tuple_for_header@1:
        // tuple_support/nested_tuples.py:89
        // for i in urange(3):
        v-load i#0                                                                                  i#0
        int 3                                                                                       i#0,3
        <                                                                                           continue_looping%0#0
        bz mutate_local_tuple_after_for@4 ; b mutate_local_tuple_for_body@2

    mutate_local_tuple_for_body@2:
        // tuple_support/nested_tuples.py:90
        // assert twm.arr[i] == i
        v-load i#0                                                                                  i#0
        l-store-copy i#0 0                                                                          i#0,i#0 (copy)
        int 8                                                                                       i#0,i#0 (copy),8
        *                                                                                           i#0,item_offset%0#0
        byte 0x000000000000000000000000000000010000000000000002                                     i#0,item_offset%0#0,0x000000000000000000000000000000010000000000000002
        l-load item_offset%0#0 1                                                                    i#0,0x000000000000000000000000000000010000000000000002,item_offset%0#0
        int 8                                                                                       i#0,0x000000000000000000000000000000010000000000000002,item_offset%0#0,8
        extract3 // on error: Index access is out of bounds                                         i#0,reinterpret_biguint%0#0
        l-load-copy i#0 1                                                                           i#0,reinterpret_biguint%0#0,i#0 (copy)
        itob                                                                                        i#0,reinterpret_biguint%0#0,tmp%0#0
        l-load reinterpret_biguint%0#0 1                                                            i#0,tmp%0#0,reinterpret_biguint%0#0
        l-load tmp%0#0 1                                                                            i#0,reinterpret_biguint%0#0,tmp%0#0
        b==                                                                                         i#0,tmp%1#0
        assert                                                                                      i#0
        // tuple_support/nested_tuples.py:89
        // for i in urange(3):
        l-load i#0 0                                                                                i#0
        int 1                                                                                       i#0,1
        +                                                                                           i#0
        v-store i#0
        b mutate_local_tuple_for_header@1

    mutate_local_tuple_after_for@4:
        // tuple_support/nested_tuples.py:88
        // twm.arr.append(arc4.UInt64(2))
        byte 0x0003000000000000000000000000000000010000000000000002                                 0x0003000000000000000000000000000000010000000000000002
        // tuple_support/nested_tuples.py:82
        // a=UInt64(),
        int 0                                                                                       0x0003000000000000000000000000000000010000000000000002,0
        // tuple_support/nested_tuples.py:83
        // b=Bytes(),
        byte 0x                                                                                     0x0003000000000000000000000000000000010000000000000002,0,0x
        // tuple_support/nested_tuples.py:84
        // c=String(),
        byte ""                                                                                     0x0003000000000000000000000000000000010000000000000002,0,0x,""
        // tuple_support/nested_tuples.py:94
        // return twm
        retsub                                                                                      0x0003000000000000000000000000000000010000000000000002,0,0x,""


// test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method() -> void:
subroutine mutate_tuple_in_storage_currently_supported_method:
    mutate_tuple_in_storage_currently_supported_method_block@0:
        // tuple_support/nested_tuples.py:98
        // arr2 = self.twm.arr.copy()
        int 0                                                                                       0
        byte "twm"                                                                                  0,"twm"
        app_global_get_ex                                                                           maybe_value%0#0,maybe_exists%0#0
        l-store-copy maybe_exists%0#0 1                                                             maybe_exists%0#0,maybe_value%0#0,maybe_exists%0#0 (copy)
        v-store maybe_exists%0#0                                                                    maybe_exists%0#0,maybe_value%0#0
        v-store maybe_value%0#0                                                                     maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                   maybe_exists%0#0
        bz mutate_tuple_in_storage_currently_supported_method_ternary_false@2 ; b mutate_tuple_in_storage_currently_supported_method_ternary_true@1 

    mutate_tuple_in_storage_currently_supported_method_ternary_true@1:
        // tuple_support/nested_tuples.py:98
        // arr2 = self.twm.arr.copy()
        v-load maybe_value%0#0                                                                      maybe_value%0#0
        l-store-copy maybe_value%0#0 0                                                              maybe_value%0#0,maybe_value%0#0 (copy)
        int 0                                                                                       maybe_value%0#0,maybe_value%0#0 (copy),0
        extract_uint16                                                                              maybe_value%0#0,item_start_offset%0#0
        l-load-copy maybe_value%0#0 1                                                               maybe_value%0#0,item_start_offset%0#0,maybe_value%0#0 (copy)
        int 2                                                                                       maybe_value%0#0,item_start_offset%0#0,maybe_value%0#0 (copy),2
        extract_uint16                                                                              maybe_value%0#0,item_start_offset%0#0,item_end_offset%0#0
        l-load maybe_value%0#0 2                                                                    item_start_offset%0#0,item_end_offset%0#0,maybe_value%0#0
        l-load item_start_offset%0#0 2                                                              item_end_offset%0#0,maybe_value%0#0,item_start_offset%0#0
        l-load item_end_offset%0#0 2                                                                maybe_value%0#0,item_start_offset%0#0,item_end_offset%0#0
        substring3                                                                                  item0%0#0
        v-store arr2#0
        b mutate_tuple_in_storage_currently_supported_method_ternary_merge@3

    mutate_tuple_in_storage_currently_supported_method_ternary_false@2:
        // tuple_support/nested_tuples.py:98
        // arr2 = self.twm.arr.copy()
        undefined                                                                                   ternary_result%0.arr#1
        v-store arr2#0
        b mutate_tuple_in_storage_currently_supported_method_ternary_merge@3

    mutate_tuple_in_storage_currently_supported_method_ternary_merge@3:
        // tuple_support/nested_tuples.py:98
        // arr2 = self.twm.arr.copy()
        v-load maybe_exists%0#0                                                                     maybe_exists%0#0
        assert // check self.twm exists
        // tuple_support/nested_tuples.py:99
        // arr2.append(arc4.UInt64(1))
        v-load arr2#0                                                                               arr2#0
        extract 2 0                                                                                 expr_value_trimmed%0#0
        byte 0x0000000000000001                                                                     expr_value_trimmed%0#0,0x0000000000000001
        concat                                                                                      concatenated%0#0
        l-load-copy concatenated%0#0 0                                                              concatenated%0#0,concatenated%0#0 (copy)
        len                                                                                         concatenated%0#0,byte_len%0#0
        int 8                                                                                       concatenated%0#0,byte_len%0#0,8
        /                                                                                           concatenated%0#0,len_%0#0
        itob                                                                                        concatenated%0#0,as_bytes%0#0
        extract 6 2                                                                                 concatenated%0#0,len_16_bit%0#0
        l-load concatenated%0#0 1                                                                   len_16_bit%0#0,concatenated%0#0
        concat                                                                                      arr2#0
        v-store arr2#0
        // tuple_support/nested_tuples.py:100
        // self.twm = self.twm._replace(arr=arr2.copy())
        int 0                                                                                       0
        byte "twm"                                                                                  0,"twm"
        app_global_get_ex                                                                           maybe_value%1#0,maybe_exists%1#0
        l-store-copy maybe_exists%1#0 1                                                             maybe_exists%1#0,maybe_value%1#0,maybe_exists%1#0 (copy)
        v-store maybe_exists%1#0                                                                    maybe_exists%1#0,maybe_value%1#0
        v-store maybe_value%1#0                                                                     maybe_exists%1#0
        l-load maybe_exists%1#0 0                                                                   maybe_exists%1#0
        bz mutate_tuple_in_storage_currently_supported_method_ternary_false@5 ; b mutate_tuple_in_storage_currently_supported_method_ternary_true@4 

    mutate_tuple_in_storage_currently_supported_method_ternary_true@4:
        // tuple_support/nested_tuples.py:100
        // self.twm = self.twm._replace(arr=arr2.copy())
        v-load maybe_value%1#0                                                                      maybe_value%1#0
        l-store-copy maybe_value%1#0 0                                                              maybe_value%1#0,maybe_value%1#0 (copy)
        int 2                                                                                       maybe_value%1#0,maybe_value%1#0 (copy),2
        extract_uint16                                                                              maybe_value%1#0,item_end_offset%4#0
        l-load-copy maybe_value%1#0 1                                                               maybe_value%1#0,item_end_offset%4#0,maybe_value%1#0 (copy)
        len                                                                                         maybe_value%1#0,item_end_offset%4#0,item_end_offset%5#0
        l-load maybe_value%1#0 2                                                                    item_end_offset%4#0,item_end_offset%5#0,maybe_value%1#0
        l-load item_end_offset%4#0 2                                                                item_end_offset%5#0,maybe_value%1#0,item_end_offset%4#0
        l-load item_end_offset%5#0 2                                                                maybe_value%1#0,item_end_offset%4#0,item_end_offset%5#0
        substring3                                                                                  item1%3#0
        l-load-copy item1%3#0 0                                                                     item1%3#0,item1%3#0 (copy)
        int 0                                                                                       item1%3#0,item1%3#0 (copy),0
        extract_uint64                                                                              item1%3#0,item0%5#0
        l-load-copy item1%3#0 1                                                                     item1%3#0,item0%5#0,item1%3#0 (copy)
        int 8                                                                                       item1%3#0,item0%5#0,item1%3#0 (copy),8
        extract_uint16                                                                              item1%3#0,item0%5#0,item_start_offset%6#0
        l-load-copy item1%3#0 2                                                                     item1%3#0,item0%5#0,item_start_offset%6#0,item1%3#0 (copy)
        int 10                                                                                      item1%3#0,item0%5#0,item_start_offset%6#0,item1%3#0 (copy),10
        extract_uint16                                                                              item1%3#0,item0%5#0,item_start_offset%6#0,item_end_offset%6#0
        l-load-copy item1%3#0 3                                                                     item1%3#0,item0%5#0,item_start_offset%6#0,item_end_offset%6#0,item1%3#0 (copy)
        l-load item_start_offset%6#0 2                                                              item1%3#0,item0%5#0,item_end_offset%6#0,item1%3#0 (copy),item_start_offset%6#0
        l-load-copy item_end_offset%6#0 2                                                           item1%3#0,item0%5#0,item_end_offset%6#0,item1%3#0 (copy),item_start_offset%6#0,item_end_offset%6#0 (copy)
        substring3                                                                                  item1%3#0,item0%5#0,item_end_offset%6#0,item1%4#0
        extract 2 0                                                                                 item1%3#0,item0%5#0,item_end_offset%6#0,item1%5#0
        l-load-copy item1%3#0 3                                                                     item1%3#0,item0%5#0,item_end_offset%6#0,item1%5#0,item1%3#0 (copy)
        len                                                                                         item1%3#0,item0%5#0,item_end_offset%6#0,item1%5#0,item_end_offset%7#0
        l-load item1%3#0 4                                                                          item0%5#0,item_end_offset%6#0,item1%5#0,item_end_offset%7#0,item1%3#0
        l-load item_end_offset%6#0 3                                                                item0%5#0,item1%5#0,item_end_offset%7#0,item1%3#0,item_end_offset%6#0
        l-load item_end_offset%7#0 2                                                                item0%5#0,item1%5#0,item1%3#0,item_end_offset%6#0,item_end_offset%7#0
        substring3                                                                                  item0%5#0,item1%5#0,item2%2#0
        extract 2 0                                                                                 item0%5#0,item1%5#0,item2%3#0
        v-store ternary_result%1.child.c#1                                                          item0%5#0,item1%5#0
        l-load item1%5#0 0                                                                          item0%5#0,item1%5#0
        v-store ternary_result%1.child.b#1                                                          item0%5#0
        l-load item0%5#0 0                                                                          item0%5#0
        v-store ternary_result%1.child.a#1
        b mutate_tuple_in_storage_currently_supported_method_ternary_merge@6

    mutate_tuple_in_storage_currently_supported_method_ternary_false@5:
        // tuple_support/nested_tuples.py:100
        // self.twm = self.twm._replace(arr=arr2.copy())
        undefined                                                                                   undefined
        v-store ternary_result%1.child.a#1
        undefined                                                                                   undefined
        v-store ternary_result%1.child.b#1
        undefined                                                                                   undefined
        v-store ternary_result%1.child.c#1
        b mutate_tuple_in_storage_currently_supported_method_ternary_merge@6

    mutate_tuple_in_storage_currently_supported_method_ternary_merge@6:
        // tuple_support/nested_tuples.py:100
        // self.twm = self.twm._replace(arr=arr2.copy())
        v-load maybe_exists%1#0                                                                     maybe_exists%1#0
        assert // check self.twm exists
        v-load ternary_result%1.child.a#1                                                           ternary_result%1.child.a#1
        itob                                                                                        val_as_bytes%0#0
        v-load ternary_result%1.child.b#1                                                           val_as_bytes%0#0,ternary_result%1.child.b#1
        l-store-copy ternary_result%1.child.b#1 0                                                   val_as_bytes%0#0,ternary_result%1.child.b#1,ternary_result%1.child.b#1 (copy)
        len                                                                                         val_as_bytes%0#0,ternary_result%1.child.b#1,length%0#0
        itob                                                                                        val_as_bytes%0#0,ternary_result%1.child.b#1,as_bytes%1#0
        extract 6 2                                                                                 val_as_bytes%0#0,ternary_result%1.child.b#1,length_uint16%0#0
        l-load ternary_result%1.child.b#1 1                                                         val_as_bytes%0#0,length_uint16%0#0,ternary_result%1.child.b#1
        concat                                                                                      val_as_bytes%0#0,encoded_value%0#0
        v-load ternary_result%1.child.c#1                                                           val_as_bytes%0#0,encoded_value%0#0,ternary_result%1.child.c#1
        l-store-copy ternary_result%1.child.c#1 0                                                   val_as_bytes%0#0,encoded_value%0#0,ternary_result%1.child.c#1,ternary_result%1.child.c#1 (copy)
        len                                                                                         val_as_bytes%0#0,encoded_value%0#0,ternary_result%1.child.c#1,length%1#0
        itob                                                                                        val_as_bytes%0#0,encoded_value%0#0,ternary_result%1.child.c#1,as_bytes%2#0
        extract 6 2                                                                                 val_as_bytes%0#0,encoded_value%0#0,ternary_result%1.child.c#1,length_uint16%1#0
        l-load ternary_result%1.child.c#1 1                                                         val_as_bytes%0#0,encoded_value%0#0,length_uint16%1#0,ternary_result%1.child.c#1
        concat                                                                                      val_as_bytes%0#0,encoded_value%0#0,encoded_value%1#0
        l-load val_as_bytes%0#0 2                                                                   encoded_value%0#0,encoded_value%1#0,val_as_bytes%0#0
        byte 0x000c                                                                                 encoded_value%0#0,encoded_value%1#0,val_as_bytes%0#0,0x000c
        concat                                                                                      encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0
        l-load-copy encoded_value%0#0 2                                                             encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,encoded_value%0#0 (copy)
        len                                                                                         encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,data_length%0#0
        int 12                                                                                      encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,data_length%0#0,12
        l-load data_length%0#0 1                                                                    encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,12,data_length%0#0
        +                                                                                           encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,current_tail_offset%1#0
        itob                                                                                        encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,as_bytes%4#0
        extract 6 2                                                                                 encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,offset_as_uint16%1#0
        l-load encoded_tuple_buffer%2#0 1                                                           encoded_value%0#0,encoded_value%1#0,offset_as_uint16%1#0,encoded_tuple_buffer%2#0
        l-load offset_as_uint16%1#0 1                                                               encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,offset_as_uint16%1#0
        concat                                                                                      encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0
        l-load encoded_value%0#0 2                                                                  encoded_value%1#0,encoded_tuple_buffer%3#0,encoded_value%0#0
        concat                                                                                      encoded_value%1#0,encoded_tuple_buffer%4#0
        l-load encoded_value%1#0 1                                                                  encoded_tuple_buffer%4#0,encoded_value%1#0
        concat                                                                                      encoded_tuple_buffer%5#0
        v-load arr2#0                                                                               encoded_tuple_buffer%5#0,arr2#0
        l-store-copy arr2#0 0                                                                       encoded_tuple_buffer%5#0,arr2#0,arr2#0 (copy)
        len                                                                                         encoded_tuple_buffer%5#0,arr2#0,data_length%2#0
        int 4                                                                                       encoded_tuple_buffer%5#0,arr2#0,data_length%2#0,4
        l-load data_length%2#0 1                                                                    encoded_tuple_buffer%5#0,arr2#0,4,data_length%2#0
        +                                                                                           encoded_tuple_buffer%5#0,arr2#0,current_tail_offset%4#0
        itob                                                                                        encoded_tuple_buffer%5#0,arr2#0,as_bytes%6#0
        extract 6 2                                                                                 encoded_tuple_buffer%5#0,arr2#0,offset_as_uint16%3#0
        byte 0x0004                                                                                 encoded_tuple_buffer%5#0,arr2#0,offset_as_uint16%3#0,0x0004
        l-load offset_as_uint16%3#0 1                                                               encoded_tuple_buffer%5#0,arr2#0,0x0004,offset_as_uint16%3#0
        concat                                                                                      encoded_tuple_buffer%5#0,arr2#0,encoded_tuple_buffer%8#0
        l-load arr2#0 1                                                                             encoded_tuple_buffer%5#0,encoded_tuple_buffer%8#0,arr2#0
        concat                                                                                      encoded_tuple_buffer%5#0,encoded_tuple_buffer%9#0
        l-load encoded_tuple_buffer%5#0 1                                                           encoded_tuple_buffer%9#0,encoded_tuple_buffer%5#0
        concat                                                                                      encoded_tuple_buffer%10#0
        byte "twm"                                                                                  encoded_tuple_buffer%10#0,"twm"
        l-load encoded_tuple_buffer%10#0 1                                                          "twm",encoded_tuple_buffer%10#0
        app_global_put
        retsub


// test_cases.tuple_support.nested_tuples.NestedTuples.run_tests() -> uint64:
subroutine run_tests:
    run_tests_block@0:
        // tuple_support/nested_tuples.py:118
        // test_intrinsics(UInt64(1), UInt64(2))
        int 1                                                                                       1
        int 2                                                                                       1,2
        // tuple_support/nested_tuples.py:178
        // nt = (UInt64(1), op.addw(num1, num2), UInt64(42))
        addw                                                                                        nt.1.0#0,nt.1.1#0
        // tuple_support/nested_tuples.py:181
        // assert nt[1] == (0, num1 + num2)  # type: ignore[comparison-overlap]
        l-load nt.1.0#0 1                                                                           nt.1.1#0,nt.1.0#0
        !                                                                                           nt.1.1#0,tmp%4#1
        l-load nt.1.1#0 1                                                                           tmp%4#1,nt.1.1#0
        int 3                                                                                       tmp%4#1,nt.1.1#0,3
        ==                                                                                          tmp%4#1,tmp%6#1
        l-load-copy tmp%4#1 1                                                                       tmp%4#1,tmp%6#1,tmp%4#1 (copy)
        l-load-copy tmp%6#1 1                                                                       tmp%4#1,tmp%6#1,tmp%4#1 (copy),tmp%6#1 (copy)
        &&                                                                                          tmp%4#1,tmp%6#1,tmp%7#1
        assert                                                                                      tmp%4#1,tmp%6#1
        // tuple_support/nested_tuples.py:182
        // assert nt[1][:1] == (0,)  # type: ignore[comparison-overlap]
        l-load tmp%4#1 1                                                                            tmp%6#1,tmp%4#1
        assert                                                                                      tmp%6#1
        // tuple_support/nested_tuples.py:183
        // assert nt[1][1:] == (num1 + num2,)
        l-load tmp%6#1 0                                                                            tmp%6#1
        assert
        // tuple_support/nested_tuples.py:120
        // test_nested_singles(UInt64(1), reassign=True)
        int 1                                                                                       1
        int 1                                                                                       1,1
        callsub test_nested_singles
        // tuple_support/nested_tuples.py:121
        // test_nested_singles(UInt64(1), reassign=False)
        int 1                                                                                       1
        int 0                                                                                       1,0
        callsub test_nested_singles
        // tuple_support/nested_tuples.py:259
        // total = UInt64(0)
        int 0                                                                                       0
        v-store total#0
        int 0                                                                                       0
        v-store loop_counter%0#0
        // tuple_support/nested_tuples.py:257
        // x = UInt64(1)
        int 1                                                                                       1
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-store t.0#0
        // tuple_support/nested_tuples.py:258
        // y = UInt64(2)
        int 2                                                                                       2
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-store t.1#0
        b run_tests_for_body@12

    run_tests_for_body@12:
        // tuple_support/nested_tuples.py:263
        // total += a + b
        v-load t.0#0                                                                                t.0#0
        v-load t.1#0                                                                                t.0#0,t.1#0
        +                                                                                           tmp%0#3
        v-load total#0                                                                              tmp%0#3,total#0
        l-load tmp%0#3 1                                                                            total#0,tmp%0#3
        +                                                                                           total#0
        v-store total#0
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-load loop_counter%0#0                                                                     loop_counter%0#0
        switch run_tests_for_header_1@13 run_tests_for_header_2@14 run_tests_for_header_3@15 ; b run_tests_after_for@16 

    run_tests_for_header_1@13:
        int 1                                                                                       1
        v-store loop_counter%0#0
        // tuple_support/nested_tuples.py:258
        // y = UInt64(2)
        int 2                                                                                       2
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-store t.0#0
        // tuple_support/nested_tuples.py:257
        // x = UInt64(1)
        int 1                                                                                       1
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-store t.1#0
        b run_tests_for_body@12

    run_tests_for_header_2@14:
        int 2                                                                                       2
        v-store loop_counter%0#0
        // tuple_support/nested_tuples.py:257
        // x = UInt64(1)
        int 1                                                                                       1
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-store t.0#0
        // tuple_support/nested_tuples.py:257
        // x = UInt64(1)
        int 1                                                                                       1
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-store t.1#0
        b run_tests_for_body@12

    run_tests_for_header_3@15:
        int 3                                                                                       3
        v-store loop_counter%0#0
        // tuple_support/nested_tuples.py:258
        // y = UInt64(2)
        int 2                                                                                       2
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-store t.0#0
        // tuple_support/nested_tuples.py:258
        // y = UInt64(2)
        int 2                                                                                       2
        // tuple_support/nested_tuples.py:261
        // for t in ((x, y), (y, x), (x, x), (y, y)):
        v-store t.1#0
        b run_tests_for_body@12

    run_tests_after_for@16:
        int 0                                                                                       0
        v-store loop_counter%1#0
        // tuple_support/nested_tuples.py:257
        // x = UInt64(1)
        int 1                                                                                       1
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-store a#2
        // tuple_support/nested_tuples.py:258
        // y = UInt64(2)
        int 2                                                                                       2
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-store b#2
        b run_tests_for_body@17

    run_tests_for_body@17:
        // tuple_support/nested_tuples.py:266
        // total += a + b
        v-load a#2                                                                                  a#2
        v-load b#2                                                                                  a#2,b#2
        +                                                                                           tmp%1#3
        v-load total#0                                                                              tmp%1#3,total#0
        l-load tmp%1#3 1                                                                            total#0,tmp%1#3
        +                                                                                           total#0
        v-store total#0
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-load loop_counter%1#0                                                                     loop_counter%1#0
        switch run_tests_for_header_1@18 run_tests_for_header_2@19 run_tests_for_header_3@20 ; b run_tests_after_for@21 

    run_tests_for_header_1@18:
        int 1                                                                                       1
        v-store loop_counter%1#0
        // tuple_support/nested_tuples.py:258
        // y = UInt64(2)
        int 2                                                                                       2
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-store a#2
        // tuple_support/nested_tuples.py:257
        // x = UInt64(1)
        int 1                                                                                       1
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-store b#2
        b run_tests_for_body@17

    run_tests_for_header_2@19:
        int 2                                                                                       2
        v-store loop_counter%1#0
        // tuple_support/nested_tuples.py:257
        // x = UInt64(1)
        int 1                                                                                       1
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-store a#2
        // tuple_support/nested_tuples.py:257
        // x = UInt64(1)
        int 1                                                                                       1
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-store b#2
        b run_tests_for_body@17

    run_tests_for_header_3@20:
        int 3                                                                                       3
        v-store loop_counter%1#0
        // tuple_support/nested_tuples.py:258
        // y = UInt64(2)
        int 2                                                                                       2
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-store a#2
        // tuple_support/nested_tuples.py:258
        // y = UInt64(2)
        int 2                                                                                       2
        // tuple_support/nested_tuples.py:265
        // for a, b in ((x, y), (y, x), (x, x), (y, y)):
        v-store b#2
        b run_tests_for_body@17

    run_tests_after_for@21:
        // tuple_support/nested_tuples.py:268
        // assert total // 8 == 3
        v-load total#0                                                                              total#0
        int 8                                                                                       total#0,8
        /                                                                                           tmp%2#3
        int 3                                                                                       tmp%2#3,3
        ==                                                                                          tmp%3#3
        assert
        // tuple_support/nested_tuples.py:155
        // self.build_nested_call_count = UInt64(0)
        byte "build_nested_call_count"                                                              "build_nested_call_count"
        int 0                                                                                       "build_nested_call_count",0
        app_global_put
        // tuple_support/nested_tuples.py:150
        // self.build_nested_call_count += 1
        int 0                                                                                       0
        byte "build_nested_call_count"                                                              0,"build_nested_call_count"
        app_global_get_ex                                                                           maybe_value%0#0,maybe_exists%0#0
        assert // check self.build_nested_call_count exists                                         maybe_value%0#0
        l-load maybe_value%0#0 0                                                                    maybe_value%0#0
        int 1                                                                                       maybe_value%0#0,1
        +                                                                                           materialized_values%0#0
        byte "build_nested_call_count"                                                              materialized_values%0#0,"build_nested_call_count"
        l-load materialized_values%0#0 1                                                            "build_nested_call_count",materialized_values%0#0
        app_global_put
        // tuple_support/nested_tuples.py:158
        // assert self.build_nested_call_count == 1
        int 0                                                                                       0
        byte "build_nested_call_count"                                                              0,"build_nested_call_count"
        app_global_get_ex                                                                           maybe_value%0#0,maybe_exists%0#0
        assert // check self.build_nested_call_count exists                                         maybe_value%0#0
        l-load maybe_value%0#0 0                                                                    maybe_value%0#0
        int 1                                                                                       maybe_value%0#0,1
        ==                                                                                          tmp%6#1
        assert
        // tuple_support/nested_tuples.py:129
        // return True
        int 1                                                                                       1
        retsub                                                                                      1


