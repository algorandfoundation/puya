contract TupleComparisons
{
  approval_program(): bool
  {
    test_cases.tuple_support.tuple_comparisons::test_tuple_cmp_eval()
    return true
  }
  
  clear_state_program(): bool
  {
    return true
  }
}

subroutine test_tuple_cmp_eval(): void
{
  assert(true)
  assert(||(1u != 3u, 2u != test_cases.tuple_support.tuple_comparisons::log_and_return(43u)))
  tmp: bool = &&(1u == 3u, 2u == test_cases.tuple_support.tuple_comparisons::log_and_return(44u))
  assert(!(tmp))
}

subroutine log_and_return(val: uint64): uint64
{
  log(itob(val))
  return val
}