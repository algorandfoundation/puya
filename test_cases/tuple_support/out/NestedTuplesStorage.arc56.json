{
    "name": "NestedTuplesStorage",
    "structs": {
        "TupleWithMutable": [
            {
                "name": "arr",
                "type": "uint64[]"
            },
            {
                "name": "bar",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "bootstrap",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mutate_tuple",
            "args": [
                {
                    "type": "uint64",
                    "name": "val"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mutate_box",
            "args": [
                {
                    "type": "uint64",
                    "name": "val"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mutate_global",
            "args": [
                {
                    "type": "uint64",
                    "name": "val"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mutate_local",
            "args": [
                {
                    "type": "uint64",
                    "name": "val"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "glob": {
                    "keyType": "AVMString",
                    "valueType": "TupleWithMutable",
                    "key": "Z2xvYg=="
                },
                "tup": {
                    "keyType": "AVMString",
                    "valueType": "TupleWithMutable",
                    "key": "dHVw"
                }
            },
            "local": {
                "loc": {
                    "keyType": "AVMString",
                    "valueType": "TupleWithMutable",
                    "key": "bG9j"
                }
            },
            "box": {
                "box": {
                    "keyType": "AVMString",
                    "valueType": "TupleWithMutable",
                    "key": "Ym94"
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        122
                    ],
                    "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
                },
                {
                    "pc": [
                        261
                    ],
                    "errorMessage": "check self.box exists"
                },
                {
                    "pc": [
                        314
                    ],
                    "errorMessage": "check self.glob exists"
                },
                {
                    "pc": [
                        368
                    ],
                    "errorMessage": "check self.loc exists for account"
                },
                {
                    "pc": [
                        75,
                        180,
                        212
                    ],
                    "errorMessage": "check self.tup exists"
                },
                {
                    "pc": [
                        232,
                        281,
                        334,
                        388
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        176
                    ],
                    "errorMessage": "this contract does not implement the given ABI method for call NoOp"
                },
                {
                    "pc": [
                        136
                    ],
                    "errorMessage": "this contract does not implement the given ABI method for call OptIn"
                },
                {
                    "pc": [
                        140
                    ],
                    "errorMessage": "this contract does not implement the given ABI method for create NoOp"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmBwN0dXACAAoDYm94BGdsb2IDbG9jFAAKAAAAAAAAAAAAAQAAAAAAAAAACgABAAAAAAAAAAAxGEAAGCgnBWcrJwVnIihlRFcCCClMUCcGUChMZzEYFDEZI5AIjQwAEwAPAAEAAAAAAAAAAAAAAAAAAAAAAAAAgAS+x22HNhoAjgEAKQAxGxRDggQErMJTrgToRJQMBGIi7xoEGyabUDYaAI4EAB4AUACEALYAIihlRFcCCClMUCcGUCq8SCpLAb8xACcETwJmI0M2GgEiKGVESSJZSwEVSwJOAlJMVwIISwFPA1BPAiJZIwgWVwYCXAApTwJQTFAoTGcjQzYaASq+REkiWUsBFUsCTgJSTFcCCEsBTwNQTwIiWSMIFlcGAlwAKU8CUExQKrxIKky/I0M2GgEiK2VESSJZSwEVSwJOAlJMVwIISwFPA1BPAiJZIwgWVwYCXAApTwJQTFArTGcjQzYaATEASSInBGNESSJZSwEVSwJOAlJMVwIISwFPBFBPAiJZIwgWVwYCXAApTwJQTFAnBExmI0M=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}