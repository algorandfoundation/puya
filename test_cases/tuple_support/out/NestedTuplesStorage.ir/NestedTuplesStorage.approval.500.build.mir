// Op                                                                                                      Stack (out)
// test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                                                  tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                     tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // tuple_support/tuple_storage.py:16
        // self.tup = TupleWithMutable(
        byte "tup"                                                                                         "tup"
        byte 0x000a000000000000000000010000000000000000                                                    "tup",0x000a000000000000000000010000000000000000
        // tuple_support/tuple_storage.py:16-19
        // self.tup = TupleWithMutable(
        //     arr=arc4.DynamicArray(arc4.UInt64(0)),
        //     bar=UInt64(),
        // )
        app_global_put
        // tuple_support/tuple_storage.py:20
        // self.glob.value = self.tup._replace(arr=arc4.DynamicArray(arc4.UInt64(0)))
        byte "glob"                                                                                        "glob"
        byte 0x000a000000000000000000010000000000000000                                                    "glob",0x000a000000000000000000010000000000000000
        app_global_put
        // tuple_support/tuple_storage.py:21
        // self.tup = self.tup._replace(arr=arc4.DynamicArray(arc4.UInt64(0)))
        int 0                                                                                              0
        byte "tup"                                                                                         0,"tup"
        app_global_get_ex                                                                                  maybe_value%1#0,maybe_exists%1#0
        v-store maybe_exists%1#0                                                                           maybe_value%1#0
        v-store maybe_value%1#0
        v-load maybe_exists%1#0                                                                            maybe_exists%1#0
        assert // check self.tup exists
        v-load maybe_value%1#0                                                                             maybe_value%1#0
        extract 2 8                                                                                        aggregate%extract%1#0
        v-store aggregate%extract%1#0
        byte 0x000a                                                                                        0x000a
        v-load aggregate%extract%1#0                                                                       0x000a,aggregate%extract%1#0
        concat                                                                                             aggregate%head%6#0
        v-store aggregate%head%6#0
        v-load aggregate%head%6#0                                                                          aggregate%head%6#0
        // tuple_support/tuple_storage.py:17
        // arr=arc4.DynamicArray(arc4.UInt64(0)),
        byte 0x00010000000000000000                                                                        aggregate%head%6#0,0x00010000000000000000
        // tuple_support/tuple_storage.py:21
        // self.tup = self.tup._replace(arr=arc4.DynamicArray(arc4.UInt64(0)))
        concat                                                                                             aggregate%concat%2#0
        v-store aggregate%concat%2#0
        byte "tup"                                                                                         "tup"
        v-load aggregate%concat%2#0                                                                        "tup",aggregate%concat%2#0
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // tuple_support/tuple_storage.py:11
        // class NestedTuplesStorage(arc4.ARC4Contract):
        txn NumAppArgs                                                                                     tmp%0#2
        v-store tmp%0#2
        v-load tmp%0#2                                                                                     tmp%0#2
        bz main_bare_routing@10 ; b main_abi_routing@4

    main_abi_routing@4:
        // tuple_support/tuple_storage.py:11
        // class NestedTuplesStorage(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                             tmp%2#0
        v-store tmp%2#0
        method bootstrap()void                                                                             Method(bootstrap()void)
        method mutate_tuple(uint64)void                                                                    Method(bootstrap()void),Method(mutate_tuple(uint64)void)
        method mutate_box(uint64)void                                                                      Method(bootstrap()void),Method(mutate_tuple(uint64)void),Method(mutate_box(uint64)void)
        method mutate_global(uint64)void                                                                   Method(bootstrap()void),Method(mutate_tuple(uint64)void),Method(mutate_box(uint64)void),Method(mutate_global(uint64)void)
        method mutate_local(uint64)void                                                                    Method(bootstrap()void),Method(mutate_tuple(uint64)void),Method(mutate_box(uint64)void),Method(mutate_global(uint64)void),Method(mutate_local(uint64)void)
        v-load tmp%2#0                                                                                     Method(bootstrap()void),Method(mutate_tuple(uint64)void),Method(mutate_box(uint64)void),Method(mutate_global(uint64)void),Method(mutate_local(uint64)void),tmp%2#0
        match main_bootstrap_route@5 main_mutate_tuple_route@6 main_mutate_box_route@7 main_mutate_global_route@8 main_mutate_local_route@9 ; b main_after_if_else@12 

    main_bootstrap_route@5:
        // tuple_support/tuple_storage.py:23
        // @arc4.abimethod(allow_actions=["OptIn"])
        txn OnCompletion                                                                                   tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                     tmp%3#0
        int OptIn                                                                                          tmp%3#0,OptIn
        ==                                                                                                 tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                     tmp%4#0
        assert // OnCompletion is not OptIn
        txn ApplicationID                                                                                  tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                     tmp%5#0
        assert // can only call when not creating
        callsub bootstrap
        int 1                                                                                              1
        v-store test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 
        v-load test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@13 

    main_mutate_tuple_route@6:
        // tuple_support/tuple_storage.py:28
        // @arc4.abimethod()
        txn OnCompletion                                                                                   tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                     tmp%7#0
        !                                                                                                  tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                     tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                  tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                     tmp%9#0
        assert // can only call when not creating
        // tuple_support/tuple_storage.py:11
        // class NestedTuplesStorage(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                             reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        // tuple_support/tuple_storage.py:28
        // @arc4.abimethod()
        v-load reinterpret_Encoded(uint64)%0#0                                                             reinterpret_Encoded(uint64)%0#0
        callsub mutate_tuple
        int 1                                                                                              1
        v-store test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 
        v-load test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@13 

    main_mutate_box_route@7:
        // tuple_support/tuple_storage.py:32
        // @arc4.abimethod()
        txn OnCompletion                                                                                   tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                                    tmp%11#0
        !                                                                                                  tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                                    tmp%12#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                  tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                                    tmp%13#0
        assert // can only call when not creating
        // tuple_support/tuple_storage.py:11
        // class NestedTuplesStorage(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                             reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        // tuple_support/tuple_storage.py:32
        // @arc4.abimethod()
        v-load reinterpret_Encoded(uint64)%1#0                                                             reinterpret_Encoded(uint64)%1#0
        callsub mutate_box
        int 1                                                                                              1
        v-store test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 
        v-load test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@13 

    main_mutate_global_route@8:
        // tuple_support/tuple_storage.py:36
        // @arc4.abimethod()
        txn OnCompletion                                                                                   tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                    tmp%15#0
        !                                                                                                  tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                    tmp%16#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                  tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                    tmp%17#0
        assert // can only call when not creating
        // tuple_support/tuple_storage.py:11
        // class NestedTuplesStorage(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                             reinterpret_Encoded(uint64)%2#0
        v-store reinterpret_Encoded(uint64)%2#0
        // tuple_support/tuple_storage.py:36
        // @arc4.abimethod()
        v-load reinterpret_Encoded(uint64)%2#0                                                             reinterpret_Encoded(uint64)%2#0
        callsub mutate_global
        int 1                                                                                              1
        v-store test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 
        v-load test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@13 

    main_mutate_local_route@9:
        // tuple_support/tuple_storage.py:40
        // @arc4.abimethod()
        txn OnCompletion                                                                                   tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                                    tmp%19#0
        !                                                                                                  tmp%20#0
        v-store tmp%20#0
        v-load tmp%20#0                                                                                    tmp%20#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                  tmp%21#0
        v-store tmp%21#0
        v-load tmp%21#0                                                                                    tmp%21#0
        assert // can only call when not creating
        // tuple_support/tuple_storage.py:11
        // class NestedTuplesStorage(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                             reinterpret_Encoded(uint64)%3#0
        v-store reinterpret_Encoded(uint64)%3#0
        // tuple_support/tuple_storage.py:40
        // @arc4.abimethod()
        v-load reinterpret_Encoded(uint64)%3#0                                                             reinterpret_Encoded(uint64)%3#0
        callsub mutate_local
        int 1                                                                                              1
        v-store test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 
        v-load test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@13 

    main_bare_routing@10:
        // tuple_support/tuple_storage.py:11
        // class NestedTuplesStorage(arc4.ARC4Contract):
        txn OnCompletion                                                                                   tmp%23#0
        v-store tmp%23#0
        v-load tmp%23#0                                                                                    tmp%23#0
        bz main___algopy_default_create@11 ; b main_after_if_else@12

    main___algopy_default_create@11:
        txn ApplicationID                                                                                  tmp%24#0
        v-store tmp%24#0
        v-load tmp%24#0                                                                                    tmp%24#0
        !                                                                                                  tmp%25#0
        v-store tmp%25#0
        v-load tmp%25#0                                                                                    tmp%25#0
        assert // can only call when creating
        int 1                                                                                              1
        v-store test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 
        v-load test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@13 

    main_after_if_else@12:
        // tuple_support/tuple_storage.py:11
        // class NestedTuplesStorage(arc4.ARC4Contract):
        int 0                                                                                              0
        v-store test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 
        v-load test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0 test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@13 

    main_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@13:
        v-load tmp%0#0                                                                                     tmp%0#0
        return


// test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap() -> void:
subroutine bootstrap:
    bootstrap_block@0:
        // tuple_support/tuple_storage.py:25
        // self.box.value = self.tup._replace(arr=arc4.DynamicArray(arc4.UInt64(0)))
        int 0                                                                                              0
        byte "tup"                                                                                         0,"tup"
        app_global_get_ex                                                                                  maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                           maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                                            maybe_exists%0#0
        assert // check self.tup exists
        v-load maybe_value%0#0                                                                             maybe_value%0#0
        extract 2 8                                                                                        aggregate%extract%0#0
        v-store aggregate%extract%0#0
        byte 0x000a                                                                                        0x000a
        v-load aggregate%extract%0#0                                                                       0x000a,aggregate%extract%0#0
        concat                                                                                             aggregate%head%2#0
        v-store aggregate%head%2#0
        v-load aggregate%head%2#0                                                                          aggregate%head%2#0
        byte 0x00010000000000000000                                                                        aggregate%head%2#0,0x00010000000000000000
        concat                                                                                             aggregate%concat%0#0
        v-store aggregate%concat%0#0
        byte "box"                                                                                         "box"
        box_del                                                                                            {box_del}
        pop 1
        byte "box"                                                                                         "box"
        v-load aggregate%concat%0#0                                                                        "box",aggregate%concat%0#0
        box_put
        // tuple_support/tuple_storage.py:26
        // self.loc[Txn.sender] = self.tup._replace(arr=arc4.DynamicArray(arc4.UInt64(0)))
        txn Sender                                                                                         tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                     tmp%0#0
        byte "loc"                                                                                         tmp%0#0,"loc"
        v-load aggregate%concat%0#0                                                                        tmp%0#0,"loc",aggregate%concat%0#0
        app_local_put
        retsub


// test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple(val: bytes) -> void:
subroutine mutate_tuple:
    mutate_tuple_block@0:                                                                                  (𝕡) val#0 |
        // tuple_support/tuple_storage.py:30
        // self.tup.arr.append(val)
        int 0                                                                                              (𝕡) val#0 | 0
        byte "tup"                                                                                         (𝕡) val#0 | 0,"tup"
        app_global_get_ex                                                                                  (𝕡) val#0 | maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                           (𝕡) val#0 | maybe_value%0#0
        v-store maybe_value%0#0                                                                            (𝕡) val#0 |
        v-load maybe_exists%0#0                                                                            (𝕡) val#0 | maybe_exists%0#0
        assert // check self.tup exists                                                                    (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        int 0                                                                                              (𝕡) val#0 | maybe_value%0#0,0
        extract_uint16                                                                                     (𝕡) val#0 | aggregate%extract_uint16%0#0
        v-store aggregate%extract_uint16%0#0                                                               (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        len                                                                                                (𝕡) val#0 | aggregate%len%0#0
        v-store aggregate%len%0#0                                                                          (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        v-load aggregate%extract_uint16%0#0                                                                (𝕡) val#0 | maybe_value%0#0,aggregate%extract_uint16%0#0
        v-load aggregate%len%0#0                                                                           (𝕡) val#0 | maybe_value%0#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        substring3                                                                                         (𝕡) val#0 | aggregate%substring3%0#0
        v-store aggregate%substring3%0#0                                                                   (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        extract 2 8                                                                                        (𝕡) val#0 | aggregate%extract%0#0
        v-store aggregate%extract%0#0                                                                      (𝕡) val#0 |
        v-load aggregate%substring3%0#0                                                                    (𝕡) val#0 | aggregate%substring3%0#0
        p-load val#0                                                                                       (𝕡) val#0 | aggregate%substring3%0#0,val#0 (copy)
        concat // on error: max array length exceeded                                                      (𝕡) val#0 | aggregate%concat%0#0
        v-store aggregate%concat%0#0                                                                       (𝕡) val#0 |
        v-load aggregate%concat%0#0                                                                        (𝕡) val#0 | aggregate%concat%0#0
        int 0                                                                                              (𝕡) val#0 | aggregate%concat%0#0,0
        extract_uint16                                                                                     (𝕡) val#0 | aggregate%extract_uint16%1#0
        v-store aggregate%extract_uint16%1#0                                                               (𝕡) val#0 |
        v-load aggregate%extract_uint16%1#0                                                                (𝕡) val#0 | aggregate%extract_uint16%1#0
        int 1                                                                                              (𝕡) val#0 | aggregate%extract_uint16%1#0,1
        +                                                                                                  (𝕡) val#0 | aggregate%add%0#0
        v-store aggregate%add%0#0                                                                          (𝕡) val#0 |
        v-load aggregate%add%0#0                                                                           (𝕡) val#0 | aggregate%add%0#0
        itob                                                                                               (𝕡) val#0 | aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0                                                                     (𝕡) val#0 |
        v-load aggregate%as_bytes%0#0                                                                      (𝕡) val#0 | aggregate%as_bytes%0#0
        extract 6 2                                                                                        (𝕡) val#0 | aggregate%as_u16_bytes%0#0
        v-store aggregate%as_u16_bytes%0#0                                                                 (𝕡) val#0 |
        v-load aggregate%concat%0#0                                                                        (𝕡) val#0 | aggregate%concat%0#0
        v-load aggregate%as_u16_bytes%0#0                                                                  (𝕡) val#0 | aggregate%concat%0#0,aggregate%as_u16_bytes%0#0
        replace2 0                                                                                         (𝕡) val#0 | aggregate%replace%0#0
        v-store aggregate%replace%0#0                                                                      (𝕡) val#0 |
        byte 0x000a                                                                                        (𝕡) val#0 | 0x000a
        v-load aggregate%extract%0#0                                                                       (𝕡) val#0 | 0x000a,aggregate%extract%0#0
        concat                                                                                             (𝕡) val#0 | aggregate%head%2#0
        v-store aggregate%head%2#0                                                                         (𝕡) val#0 |
        v-load aggregate%head%2#0                                                                          (𝕡) val#0 | aggregate%head%2#0
        v-load aggregate%replace%0#0                                                                       (𝕡) val#0 | aggregate%head%2#0,aggregate%replace%0#0
        concat                                                                                             (𝕡) val#0 | aggregate%concat%1#0
        v-store aggregate%concat%1#0                                                                       (𝕡) val#0 |
        byte "tup"                                                                                         (𝕡) val#0 | "tup"
        v-load aggregate%concat%1#0                                                                        (𝕡) val#0 | "tup",aggregate%concat%1#0
        app_global_put                                                                                     (𝕡) val#0 |
        retsub


// test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box(val: bytes) -> void:
subroutine mutate_box:
    mutate_box_block@0:                                                                                    (𝕡) val#0 |
        // tuple_support/tuple_storage.py:34
        // self.box.value.arr.append(val)
        byte "box"                                                                                         (𝕡) val#0 | "box"
        box_get                                                                                            (𝕡) val#0 | aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                      (𝕡) val#0 | aggregate%box_get%0#0
        v-store aggregate%box_get%0#0                                                                      (𝕡) val#0 |
        v-load aggregate%box_get%1#0                                                                       (𝕡) val#0 | aggregate%box_get%1#0
        assert // check self.box exists                                                                    (𝕡) val#0 |
        v-load aggregate%box_get%0#0                                                                       (𝕡) val#0 | aggregate%box_get%0#0
        int 0                                                                                              (𝕡) val#0 | aggregate%box_get%0#0,0
        extract_uint16                                                                                     (𝕡) val#0 | aggregate%extract_uint16%0#0
        v-store aggregate%extract_uint16%0#0                                                               (𝕡) val#0 |
        v-load aggregate%box_get%0#0                                                                       (𝕡) val#0 | aggregate%box_get%0#0
        len                                                                                                (𝕡) val#0 | aggregate%len%0#0
        v-store aggregate%len%0#0                                                                          (𝕡) val#0 |
        v-load aggregate%box_get%0#0                                                                       (𝕡) val#0 | aggregate%box_get%0#0
        v-load aggregate%extract_uint16%0#0                                                                (𝕡) val#0 | aggregate%box_get%0#0,aggregate%extract_uint16%0#0
        v-load aggregate%len%0#0                                                                           (𝕡) val#0 | aggregate%box_get%0#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        substring3                                                                                         (𝕡) val#0 | aggregate%substring3%0#0
        v-store aggregate%substring3%0#0                                                                   (𝕡) val#0 |
        v-load aggregate%box_get%0#0                                                                       (𝕡) val#0 | aggregate%box_get%0#0
        extract 2 8                                                                                        (𝕡) val#0 | aggregate%extract%0#0
        v-store aggregate%extract%0#0                                                                      (𝕡) val#0 |
        v-load aggregate%substring3%0#0                                                                    (𝕡) val#0 | aggregate%substring3%0#0
        p-load val#0                                                                                       (𝕡) val#0 | aggregate%substring3%0#0,val#0 (copy)
        concat // on error: max array length exceeded                                                      (𝕡) val#0 | aggregate%concat%0#0
        v-store aggregate%concat%0#0                                                                       (𝕡) val#0 |
        v-load aggregate%concat%0#0                                                                        (𝕡) val#0 | aggregate%concat%0#0
        int 0                                                                                              (𝕡) val#0 | aggregate%concat%0#0,0
        extract_uint16                                                                                     (𝕡) val#0 | aggregate%extract_uint16%1#0
        v-store aggregate%extract_uint16%1#0                                                               (𝕡) val#0 |
        v-load aggregate%extract_uint16%1#0                                                                (𝕡) val#0 | aggregate%extract_uint16%1#0
        int 1                                                                                              (𝕡) val#0 | aggregate%extract_uint16%1#0,1
        +                                                                                                  (𝕡) val#0 | aggregate%add%0#0
        v-store aggregate%add%0#0                                                                          (𝕡) val#0 |
        v-load aggregate%add%0#0                                                                           (𝕡) val#0 | aggregate%add%0#0
        itob                                                                                               (𝕡) val#0 | aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0                                                                     (𝕡) val#0 |
        v-load aggregate%as_bytes%0#0                                                                      (𝕡) val#0 | aggregate%as_bytes%0#0
        extract 6 2                                                                                        (𝕡) val#0 | aggregate%as_u16_bytes%0#0
        v-store aggregate%as_u16_bytes%0#0                                                                 (𝕡) val#0 |
        v-load aggregate%concat%0#0                                                                        (𝕡) val#0 | aggregate%concat%0#0
        v-load aggregate%as_u16_bytes%0#0                                                                  (𝕡) val#0 | aggregate%concat%0#0,aggregate%as_u16_bytes%0#0
        replace2 0                                                                                         (𝕡) val#0 | aggregate%replace%0#0
        v-store aggregate%replace%0#0                                                                      (𝕡) val#0 |
        byte 0x000a                                                                                        (𝕡) val#0 | 0x000a
        v-load aggregate%extract%0#0                                                                       (𝕡) val#0 | 0x000a,aggregate%extract%0#0
        concat                                                                                             (𝕡) val#0 | aggregate%head%2#0
        v-store aggregate%head%2#0                                                                         (𝕡) val#0 |
        v-load aggregate%head%2#0                                                                          (𝕡) val#0 | aggregate%head%2#0
        v-load aggregate%replace%0#0                                                                       (𝕡) val#0 | aggregate%head%2#0,aggregate%replace%0#0
        concat                                                                                             (𝕡) val#0 | aggregate%concat%1#0
        v-store aggregate%concat%1#0                                                                       (𝕡) val#0 |
        byte "box"                                                                                         (𝕡) val#0 | "box"
        box_del                                                                                            (𝕡) val#0 | {box_del}
        pop 1                                                                                              (𝕡) val#0 |
        byte "box"                                                                                         (𝕡) val#0 | "box"
        v-load aggregate%concat%1#0                                                                        (𝕡) val#0 | "box",aggregate%concat%1#0
        box_put                                                                                            (𝕡) val#0 |
        retsub


// test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global(val: bytes) -> void:
subroutine mutate_global:
    mutate_global_block@0:                                                                                 (𝕡) val#0 |
        // tuple_support/tuple_storage.py:38
        // self.glob.value.arr.append(val)
        int 0                                                                                              (𝕡) val#0 | 0
        byte "glob"                                                                                        (𝕡) val#0 | 0,"glob"
        app_global_get_ex                                                                                  (𝕡) val#0 | maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                           (𝕡) val#0 | maybe_value%0#0
        v-store maybe_value%0#0                                                                            (𝕡) val#0 |
        v-load maybe_exists%0#0                                                                            (𝕡) val#0 | maybe_exists%0#0
        assert // check self.glob exists                                                                   (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        int 0                                                                                              (𝕡) val#0 | maybe_value%0#0,0
        extract_uint16                                                                                     (𝕡) val#0 | aggregate%extract_uint16%0#0
        v-store aggregate%extract_uint16%0#0                                                               (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        len                                                                                                (𝕡) val#0 | aggregate%len%0#0
        v-store aggregate%len%0#0                                                                          (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        v-load aggregate%extract_uint16%0#0                                                                (𝕡) val#0 | maybe_value%0#0,aggregate%extract_uint16%0#0
        v-load aggregate%len%0#0                                                                           (𝕡) val#0 | maybe_value%0#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        substring3                                                                                         (𝕡) val#0 | aggregate%substring3%0#0
        v-store aggregate%substring3%0#0                                                                   (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        extract 2 8                                                                                        (𝕡) val#0 | aggregate%extract%0#0
        v-store aggregate%extract%0#0                                                                      (𝕡) val#0 |
        v-load aggregate%substring3%0#0                                                                    (𝕡) val#0 | aggregate%substring3%0#0
        p-load val#0                                                                                       (𝕡) val#0 | aggregate%substring3%0#0,val#0 (copy)
        concat // on error: max array length exceeded                                                      (𝕡) val#0 | aggregate%concat%0#0
        v-store aggregate%concat%0#0                                                                       (𝕡) val#0 |
        v-load aggregate%concat%0#0                                                                        (𝕡) val#0 | aggregate%concat%0#0
        int 0                                                                                              (𝕡) val#0 | aggregate%concat%0#0,0
        extract_uint16                                                                                     (𝕡) val#0 | aggregate%extract_uint16%1#0
        v-store aggregate%extract_uint16%1#0                                                               (𝕡) val#0 |
        v-load aggregate%extract_uint16%1#0                                                                (𝕡) val#0 | aggregate%extract_uint16%1#0
        int 1                                                                                              (𝕡) val#0 | aggregate%extract_uint16%1#0,1
        +                                                                                                  (𝕡) val#0 | aggregate%add%0#0
        v-store aggregate%add%0#0                                                                          (𝕡) val#0 |
        v-load aggregate%add%0#0                                                                           (𝕡) val#0 | aggregate%add%0#0
        itob                                                                                               (𝕡) val#0 | aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0                                                                     (𝕡) val#0 |
        v-load aggregate%as_bytes%0#0                                                                      (𝕡) val#0 | aggregate%as_bytes%0#0
        extract 6 2                                                                                        (𝕡) val#0 | aggregate%as_u16_bytes%0#0
        v-store aggregate%as_u16_bytes%0#0                                                                 (𝕡) val#0 |
        v-load aggregate%concat%0#0                                                                        (𝕡) val#0 | aggregate%concat%0#0
        v-load aggregate%as_u16_bytes%0#0                                                                  (𝕡) val#0 | aggregate%concat%0#0,aggregate%as_u16_bytes%0#0
        replace2 0                                                                                         (𝕡) val#0 | aggregate%replace%0#0
        v-store aggregate%replace%0#0                                                                      (𝕡) val#0 |
        byte 0x000a                                                                                        (𝕡) val#0 | 0x000a
        v-load aggregate%extract%0#0                                                                       (𝕡) val#0 | 0x000a,aggregate%extract%0#0
        concat                                                                                             (𝕡) val#0 | aggregate%head%2#0
        v-store aggregate%head%2#0                                                                         (𝕡) val#0 |
        v-load aggregate%head%2#0                                                                          (𝕡) val#0 | aggregate%head%2#0
        v-load aggregate%replace%0#0                                                                       (𝕡) val#0 | aggregate%head%2#0,aggregate%replace%0#0
        concat                                                                                             (𝕡) val#0 | aggregate%concat%1#0
        v-store aggregate%concat%1#0                                                                       (𝕡) val#0 |
        byte "glob"                                                                                        (𝕡) val#0 | "glob"
        v-load aggregate%concat%1#0                                                                        (𝕡) val#0 | "glob",aggregate%concat%1#0
        app_global_put                                                                                     (𝕡) val#0 |
        retsub


// test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local(val: bytes) -> void:
subroutine mutate_local:
    mutate_local_block@0:                                                                                  (𝕡) val#0 |
        // tuple_support/tuple_storage.py:42
        // self.loc[Txn.sender].arr.append(val)
        txn Sender                                                                                         (𝕡) val#0 | tmp%0#0
        v-store tmp%0#0                                                                                    (𝕡) val#0 |
        v-load tmp%0#0                                                                                     (𝕡) val#0 | tmp%0#0
        int 0                                                                                              (𝕡) val#0 | tmp%0#0,0
        byte "loc"                                                                                         (𝕡) val#0 | tmp%0#0,0,"loc"
        app_local_get_ex                                                                                   (𝕡) val#0 | maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                           (𝕡) val#0 | maybe_value%0#0
        v-store maybe_value%0#0                                                                            (𝕡) val#0 |
        v-load maybe_exists%0#0                                                                            (𝕡) val#0 | maybe_exists%0#0
        assert // check self.loc exists for account                                                        (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        int 0                                                                                              (𝕡) val#0 | maybe_value%0#0,0
        extract_uint16                                                                                     (𝕡) val#0 | aggregate%extract_uint16%0#0
        v-store aggregate%extract_uint16%0#0                                                               (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        len                                                                                                (𝕡) val#0 | aggregate%len%0#0
        v-store aggregate%len%0#0                                                                          (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        v-load aggregate%extract_uint16%0#0                                                                (𝕡) val#0 | maybe_value%0#0,aggregate%extract_uint16%0#0
        v-load aggregate%len%0#0                                                                           (𝕡) val#0 | maybe_value%0#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        substring3                                                                                         (𝕡) val#0 | aggregate%substring3%0#0
        v-store aggregate%substring3%0#0                                                                   (𝕡) val#0 |
        v-load maybe_value%0#0                                                                             (𝕡) val#0 | maybe_value%0#0
        extract 2 8                                                                                        (𝕡) val#0 | aggregate%extract%0#0
        v-store aggregate%extract%0#0                                                                      (𝕡) val#0 |
        v-load aggregate%substring3%0#0                                                                    (𝕡) val#0 | aggregate%substring3%0#0
        p-load val#0                                                                                       (𝕡) val#0 | aggregate%substring3%0#0,val#0 (copy)
        concat // on error: max array length exceeded                                                      (𝕡) val#0 | aggregate%concat%0#0
        v-store aggregate%concat%0#0                                                                       (𝕡) val#0 |
        v-load aggregate%concat%0#0                                                                        (𝕡) val#0 | aggregate%concat%0#0
        int 0                                                                                              (𝕡) val#0 | aggregate%concat%0#0,0
        extract_uint16                                                                                     (𝕡) val#0 | aggregate%extract_uint16%1#0
        v-store aggregate%extract_uint16%1#0                                                               (𝕡) val#0 |
        v-load aggregate%extract_uint16%1#0                                                                (𝕡) val#0 | aggregate%extract_uint16%1#0
        int 1                                                                                              (𝕡) val#0 | aggregate%extract_uint16%1#0,1
        +                                                                                                  (𝕡) val#0 | aggregate%add%0#0
        v-store aggregate%add%0#0                                                                          (𝕡) val#0 |
        v-load aggregate%add%0#0                                                                           (𝕡) val#0 | aggregate%add%0#0
        itob                                                                                               (𝕡) val#0 | aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0                                                                     (𝕡) val#0 |
        v-load aggregate%as_bytes%0#0                                                                      (𝕡) val#0 | aggregate%as_bytes%0#0
        extract 6 2                                                                                        (𝕡) val#0 | aggregate%as_u16_bytes%0#0
        v-store aggregate%as_u16_bytes%0#0                                                                 (𝕡) val#0 |
        v-load aggregate%concat%0#0                                                                        (𝕡) val#0 | aggregate%concat%0#0
        v-load aggregate%as_u16_bytes%0#0                                                                  (𝕡) val#0 | aggregate%concat%0#0,aggregate%as_u16_bytes%0#0
        replace2 0                                                                                         (𝕡) val#0 | aggregate%replace%0#0
        v-store aggregate%replace%0#0                                                                      (𝕡) val#0 |
        byte 0x000a                                                                                        (𝕡) val#0 | 0x000a
        v-load aggregate%extract%0#0                                                                       (𝕡) val#0 | 0x000a,aggregate%extract%0#0
        concat                                                                                             (𝕡) val#0 | aggregate%head%2#0
        v-store aggregate%head%2#0                                                                         (𝕡) val#0 |
        v-load aggregate%head%2#0                                                                          (𝕡) val#0 | aggregate%head%2#0
        v-load aggregate%replace%0#0                                                                       (𝕡) val#0 | aggregate%head%2#0,aggregate%replace%0#0
        concat                                                                                             (𝕡) val#0 | aggregate%concat%1#0
        v-store aggregate%concat%1#0                                                                       (𝕡) val#0 |
        v-load tmp%0#0                                                                                     (𝕡) val#0 | tmp%0#0
        byte "loc"                                                                                         (𝕡) val#0 | tmp%0#0,"loc"
        v-load aggregate%concat%1#0                                                                        (𝕡) val#0 | tmp%0#0,"loc",aggregate%concat%1#0
        app_local_put                                                                                      (𝕡) val#0 |
        retsub


