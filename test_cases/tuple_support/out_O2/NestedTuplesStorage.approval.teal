#pragma version 10
#pragma typetrack false

// test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1
    bytecblock "tup" 0x000a "box" "glob" "loc" 0x000a000000000000000000010000000000000000 0x00010000000000000000
    txn ApplicationID
    bnz after_if_else@2
    bytec_0 // "tup"
    bytec 5 // 0x000a000000000000000000010000000000000000
    app_global_put
    bytec_3 // "glob"
    bytec 5 // 0x000a000000000000000000010000000000000000
    app_global_put
    intc_0 // 0
    bytec_0 // "tup"
    app_global_get_ex
    assert // check self.tup exists
    extract 2 8
    bytec_1 // 0x000a
    swap
    concat
    bytec 6 // 0x00010000000000000000
    concat
    bytec_0 // "tup"
    swap
    app_global_put

after_if_else@2:
    txn ApplicationID
    !
    txn OnCompletion
    intc_1 // 1
    shl
    +
    switch call_NoOp create_NoOp call_OptIn *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
    err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

call_OptIn:
    pushbytes 0xbec76d87 // method "bootstrap()void"
    txna ApplicationArgs 0
    match bootstrap_route@12
    err // this contract does not implement the given ABI method for call OptIn

bootstrap_route@12:
    intc_0 // 0
    bytec_0 // "tup"
    app_global_get_ex
    assert // check self.tup exists
    extract 2 8
    bytec_1 // 0x000a
    swap
    concat
    bytec 6 // 0x00010000000000000000
    concat
    bytec_2 // "box"
    box_del
    pop
    bytec_2 // "box"
    dig 1
    box_put
    txn Sender
    bytec 4 // "loc"
    uncover 2
    app_local_put
    intc_1 // 1
    return

create_NoOp:
    txn NumAppArgs
    !
    return // on error: this contract does not implement the given ABI method for create NoOp

call_NoOp:
    pushbytess 0xacc253ae 0xe844940c 0x6222ef1a 0x1b269b50 // method "mutate_tuple(uint64)void", method "mutate_box(uint64)void", method "mutate_global(uint64)void", method "mutate_local(uint64)void"
    txna ApplicationArgs 0
    match mutate_tuple_route@5 mutate_box_route@6 mutate_global_route@7 mutate_local_route@8
    err // this contract does not implement the given ABI method for call NoOp

mutate_local_route@8:
    txna ApplicationArgs 1
    txn Sender
    dup
    intc_0 // 0
    bytec 4 // "loc"
    app_local_get_ex
    assert // check self.loc exists for account
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    len
    dig 2
    cover 2
    substring3
    swap
    extract 2 8
    dig 1
    uncover 4
    concat // on error: max array length exceeded
    uncover 2
    intc_0 // 0
    extract_uint16
    intc_1 // 1
    +
    itob
    extract 6 2
    replace2 0
    bytec_1 // 0x000a
    uncover 2
    concat
    swap
    concat
    bytec 4 // "loc"
    swap
    app_local_put
    intc_1 // 1
    return

mutate_global_route@7:
    txna ApplicationArgs 1
    intc_0 // 0
    bytec_3 // "glob"
    app_global_get_ex
    assert // check self.glob exists
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    len
    dig 2
    cover 2
    substring3
    swap
    extract 2 8
    dig 1
    uncover 3
    concat // on error: max array length exceeded
    uncover 2
    intc_0 // 0
    extract_uint16
    intc_1 // 1
    +
    itob
    extract 6 2
    replace2 0
    bytec_1 // 0x000a
    uncover 2
    concat
    swap
    concat
    bytec_3 // "glob"
    swap
    app_global_put
    intc_1 // 1
    return

mutate_box_route@6:
    txna ApplicationArgs 1
    bytec_2 // "box"
    box_get
    assert // check self.box exists
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    len
    dig 2
    cover 2
    substring3
    swap
    extract 2 8
    dig 1
    uncover 3
    concat // on error: max array length exceeded
    uncover 2
    intc_0 // 0
    extract_uint16
    intc_1 // 1
    +
    itob
    extract 6 2
    replace2 0
    bytec_1 // 0x000a
    uncover 2
    concat
    swap
    concat
    bytec_2 // "box"
    box_del
    pop
    bytec_2 // "box"
    swap
    box_put
    intc_1 // 1
    return

mutate_tuple_route@5:
    txna ApplicationArgs 1
    intc_0 // 0
    bytec_0 // "tup"
    app_global_get_ex
    assert // check self.tup exists
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    len
    dig 2
    cover 2
    substring3
    swap
    extract 2 8
    dig 1
    uncover 3
    concat // on error: max array length exceeded
    uncover 2
    intc_0 // 0
    extract_uint16
    intc_1 // 1
    +
    itob
    extract 6 2
    replace2 0
    bytec_1 // 0x000a
    uncover 2
    concat
    swap
    concat
    bytec_0 // "tup"
    swap
    app_global_put
    intc_1 // 1
    return
