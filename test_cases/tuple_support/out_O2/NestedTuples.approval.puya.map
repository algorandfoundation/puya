{
  "version": 3,
  "sources": [
    "../nested_tuples.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBQ;AAA+B;AAA/B;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AA6CK;;AAAA;AAAA;AAAA;;AAAA;AA7CL;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AA6CK;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAxCL;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAwCK;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAjCL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAiCK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA7BA;;AAAA;AAAA;AAAA;;AAAA;AAgBmB;AAAW;AA4Dd;AAGV;AAAA;AAAA;AAAa;AAAb;AAAA;AAAA;AAAP;AACA;AAAA;AACA;AA4EQ;AAAR;;;AAFI;AAIA;;AAHA;AAGA;AAES;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AAFR;;;;;;;;;AAJQ;AAQA;;AAPA;AAOA;AACS;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AADR;;;;;;;;AAGW;AAAS;;AAAT;AAAc;AAAd;AAAP;AAjHI;AAA+B;AAA/B;AALA;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAA;AAAA;AAAA;AAQO;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAP;AAxDH;;;;;;;AAAA;AAAA;;;AA4JG;AAOA;;AAPA;AAOA;;;;;AARA;AAQA;;AARA;AAQA;;;;;AAPA;AAOA;;AARA;AAQA;;;;;AAPA;AAGA;;AAHA;AAGA;;;;;AAJA;AAIA;;AAJA;AAIA;;;;;AAHA;AAGA;;AAJA;AAIA;;;;AAnKR;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 2 0 3"
    },
    "7": {
      "op": "bytecblock \"build_nested_call_count\" 0x151f7c75 0x000c"
    },
    "41": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "a#4"
      ]
    },
    "43": {
      "op": "dupn 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "45": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "47": {
      "op": "bnz main_after_if_else@2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "50": {
      "op": "bytec_0 // \"build_nested_call_count\""
    },
    "51": {
      "op": "intc_2 // 0"
    },
    "52": {
      "op": "app_global_put"
    },
    "53": {
      "block": "main_after_if_else@2",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%0#2"
      ]
    },
    "55": {
      "op": "bz main_bare_routing@9",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "58": {
      "op": "pushbytess 0x9e5a3ba7 0xcea0521b 0x373f5b24 0xec593096 // method \"run_tests()bool\", method \"nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))\", method \"named_tuple((uint64,byte[],string))(uint64,byte[],string)\", method \"nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string))\""
    },
    "80": {
      "op": "txna ApplicationArgs 0"
    },
    "83": {
      "op": "match main_run_tests_route@5 main_nested_tuple_params_route@6 main_named_tuple_route@7 main_nested_named_tuple_params_route@8"
    },
    "93": {
      "block": "main_after_if_else@11",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "intc_2 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "94": {
      "op": "return"
    },
    "95": {
      "block": "main_nested_named_tuple_params_route@8",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%20#0"
      ]
    },
    "97": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%21#0"
      ]
    },
    "98": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "99": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%22#0"
      ]
    },
    "101": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "102": {
      "op": "txna ApplicationArgs 1"
    },
    "105": {
      "op": "dup",
      "defined_out": [
        "tmp%24#0",
        "tmp%24#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "tmp%24#0 (copy)"
      ]
    },
    "106": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%4#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "item0%4#0"
      ]
    },
    "109": {
      "op": "btoi",
      "defined_out": [
        "args.foo#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "args.foo#0"
      ]
    },
    "110": {
      "op": "dig 1",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "args.foo#0",
        "tmp%24#0 (copy)"
      ]
    },
    "112": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "args.foo#0",
        "args.foo_arc#0"
      ]
    },
    "115": {
      "op": "dig 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%24#0 (copy)"
      ]
    },
    "117": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%24#0",
        "tmp%24#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%24#0 (copy)",
        "16"
      ]
    },
    "119": {
      "op": "extract_uint16",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%5#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%5#0"
      ]
    },
    "120": {
      "op": "dig 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%5#0",
        "tmp%24#0 (copy)"
      ]
    },
    "122": {
      "op": "len",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item_end_offset%5#0",
        "item_start_offset%5#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%24#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%5#0",
        "item_end_offset%5#0"
      ]
    },
    "123": {
      "op": "uncover 4",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%5#0",
        "item_end_offset%5#0",
        "tmp%24#0"
      ]
    },
    "125": {
      "op": "cover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%24#0",
        "item_start_offset%5#0",
        "item_end_offset%5#0"
      ]
    },
    "127": {
      "op": "substring3",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0"
      ]
    },
    "128": {
      "op": "dup",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item2%1#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item2%1#0 (copy)"
      ]
    },
    "129": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item0%5#0",
        "item2%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item0%5#0"
      ]
    },
    "132": {
      "op": "btoi",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0"
      ]
    },
    "133": {
      "op": "dig 1",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item2%1#0 (copy)"
      ]
    },
    "135": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item2%1#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item2%1#0 (copy)",
        "8"
      ]
    },
    "137": {
      "op": "extract_uint16",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item_start_offset%6#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_start_offset%6#0"
      ]
    },
    "138": {
      "op": "dig 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_start_offset%6#0",
        "item2%1#0 (copy)"
      ]
    },
    "140": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item2%1#0 (copy)",
        "item_start_offset%6#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_start_offset%6#0",
        "item2%1#0 (copy)",
        "10"
      ]
    },
    "142": {
      "op": "extract_uint16",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item_end_offset%6#0",
        "item_start_offset%6#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_start_offset%6#0",
        "item_end_offset%6#0"
      ]
    },
    "143": {
      "op": "dig 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_start_offset%6#0",
        "item_end_offset%6#0",
        "item2%1#0 (copy)"
      ]
    },
    "145": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_end_offset%6#0",
        "item2%1#0 (copy)",
        "item_start_offset%6#0"
      ]
    },
    "147": {
      "op": "dig 2",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item2%1#0 (copy)",
        "item_end_offset%6#0",
        "item_end_offset%6#0 (copy)",
        "item_start_offset%6#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_end_offset%6#0",
        "item2%1#0 (copy)",
        "item_start_offset%6#0",
        "item_end_offset%6#0 (copy)"
      ]
    },
    "149": {
      "op": "substring3",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item1%4#0",
        "item2%1#0",
        "item_end_offset%6#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_end_offset%6#0",
        "item1%4#0"
      ]
    },
    "150": {
      "op": "extract 2 0",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item_end_offset%6#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_end_offset%6#0",
        "args.child.b#0"
      ]
    },
    "153": {
      "op": "dig 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_end_offset%6#0",
        "args.child.b#0",
        "item2%1#0 (copy)"
      ]
    },
    "155": {
      "op": "len",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "item_end_offset%6#0",
        "item_end_offset%7#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%1#0",
        "args.child.a#0",
        "item_end_offset%6#0",
        "args.child.b#0",
        "item_end_offset%7#0"
      ]
    },
    "156": {
      "op": "uncover 4",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "item_end_offset%6#0",
        "args.child.b#0",
        "item_end_offset%7#0",
        "item2%1#0"
      ]
    },
    "158": {
      "op": "uncover 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "item_end_offset%7#0",
        "item2%1#0",
        "item_end_offset%6#0"
      ]
    },
    "160": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "item2%1#0",
        "item_end_offset%6#0",
        "item_end_offset%7#0"
      ]
    },
    "162": {
      "op": "substring3",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "item2%2#0"
      ]
    },
    "163": {
      "op": "extract 2 0",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo#0",
        "args.foo_arc#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0"
      ]
    },
    "166": {
      "op": "uncover 4",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo#0"
      ]
    },
    "168": {
      "op": "itob",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%2#0"
      ]
    },
    "169": {
      "op": "uncover 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "args.child.a#0"
      ]
    },
    "171": {
      "op": "itob",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "172": {
      "op": "dig 3",
      "defined_out": [
        "args.child.b#0",
        "args.child.b#0 (copy)",
        "args.child.c#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "args.child.b#0 (copy)"
      ]
    },
    "174": {
      "op": "len",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "length%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "length%4#0"
      ]
    },
    "175": {
      "op": "itob",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "as_bytes%9#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "as_bytes%9#0"
      ]
    },
    "176": {
      "op": "extract 6 2",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "length_uint16%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "length_uint16%4#0"
      ]
    },
    "179": {
      "op": "uncover 4",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "length_uint16%4#0",
        "args.child.b#0"
      ]
    },
    "181": {
      "op": "concat",
      "defined_out": [
        "args.child.c#0",
        "args.foo_arc#0",
        "encoded_value%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%4#0"
      ]
    },
    "182": {
      "op": "dig 3",
      "defined_out": [
        "args.child.c#0",
        "args.child.c#0 (copy)",
        "args.foo_arc#0",
        "encoded_value%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%4#0",
        "args.child.c#0 (copy)"
      ]
    },
    "184": {
      "op": "len",
      "defined_out": [
        "args.child.c#0",
        "args.foo_arc#0",
        "encoded_value%4#0",
        "length%5#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%4#0",
        "length%5#0"
      ]
    },
    "185": {
      "op": "itob",
      "defined_out": [
        "args.child.c#0",
        "args.foo_arc#0",
        "as_bytes%10#0",
        "encoded_value%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%4#0",
        "as_bytes%10#0"
      ]
    },
    "186": {
      "op": "extract 6 2",
      "defined_out": [
        "args.child.c#0",
        "args.foo_arc#0",
        "encoded_value%4#0",
        "length_uint16%5#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%4#0",
        "length_uint16%5#0"
      ]
    },
    "189": {
      "op": "uncover 4",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%4#0",
        "length_uint16%5#0",
        "args.child.c#0"
      ]
    },
    "191": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ]
    },
    "192": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%3#0"
      ]
    },
    "194": {
      "op": "bytec_2 // 0x000c",
      "defined_out": [
        "0x000c",
        "args.foo_arc#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%3#0",
        "0x000c"
      ]
    },
    "195": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "196": {
      "op": "dig 2",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%4#0",
        "encoded_value%4#0 (copy)",
        "encoded_value%5#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%4#0 (copy)"
      ]
    },
    "198": {
      "op": "len",
      "defined_out": [
        "args.foo_arc#0",
        "data_length%5#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%17#0",
        "data_length%5#0"
      ]
    },
    "199": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "args.foo_arc#0",
        "data_length%5#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%17#0",
        "data_length%5#0",
        "12"
      ]
    },
    "201": {
      "op": "+",
      "defined_out": [
        "args.foo_arc#0",
        "current_tail_offset%9#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%17#0",
        "current_tail_offset%9#0"
      ]
    },
    "202": {
      "op": "itob",
      "defined_out": [
        "args.foo_arc#0",
        "as_bytes%12#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%17#0",
        "as_bytes%12#0"
      ]
    },
    "203": {
      "op": "extract 6 2",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%17#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "offset_as_uint16%6#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%17#0",
        "offset_as_uint16%6#0"
      ]
    },
    "206": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%18#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "207": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%18#0",
        "encoded_value%4#0"
      ]
    },
    "209": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%19#0",
        "encoded_value%5#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "210": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%19#0",
        "encoded_value%5#0"
      ]
    },
    "211": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%20#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "212": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.foo_arc#0",
        "encoded_tuple_buffer%20#0",
        "val_as_bytes%2#0"
      ]
    },
    "213": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%20#0",
        "val_as_bytes%2#0",
        "args.foo_arc#0"
      ]
    },
    "215": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "encoded_tuple_buffer%23#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%20#0",
        "encoded_tuple_buffer%23#0"
      ]
    },
    "216": {
      "op": "pushbytes 0x0012",
      "defined_out": [
        "0x0012",
        "encoded_tuple_buffer%20#0",
        "encoded_tuple_buffer%23#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%20#0",
        "encoded_tuple_buffer%23#0",
        "0x0012"
      ]
    },
    "220": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "encoded_tuple_buffer%24#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%20#0",
        "encoded_tuple_buffer%24#0"
      ]
    },
    "221": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%24#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "222": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%25#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%25#0"
      ]
    },
    "223": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%25#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%25#0",
        "0x151f7c75"
      ]
    },
    "224": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "0x151f7c75",
        "encoded_tuple_buffer%25#0"
      ]
    },
    "225": {
      "op": "concat",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%25#0"
      ]
    },
    "226": {
      "op": "log",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "227": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "228": {
      "op": "return"
    },
    "229": {
      "block": "main_named_tuple_route@7",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%14#0"
      ]
    },
    "231": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%15#0"
      ]
    },
    "232": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "233": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%16#0"
      ]
    },
    "235": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "236": {
      "op": "txna ApplicationArgs 1"
    },
    "239": {
      "op": "dup",
      "defined_out": [
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ]
    },
    "240": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%3#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "item0%3#0"
      ]
    },
    "243": {
      "op": "btoi",
      "defined_out": [
        "args.a#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0"
      ]
    },
    "244": {
      "op": "dig 1",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "tmp%18#0 (copy)"
      ]
    },
    "246": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "args.a#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "tmp%18#0 (copy)",
        "8"
      ]
    },
    "248": {
      "op": "extract_uint16",
      "defined_out": [
        "args.a#0",
        "item_start_offset%3#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_start_offset%3#0"
      ]
    },
    "249": {
      "op": "dig 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_start_offset%3#0",
        "tmp%18#0 (copy)"
      ]
    },
    "251": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "args.a#0",
        "item_start_offset%3#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_start_offset%3#0",
        "tmp%18#0 (copy)",
        "10"
      ]
    },
    "253": {
      "op": "extract_uint16",
      "defined_out": [
        "args.a#0",
        "item_end_offset%3#0",
        "item_start_offset%3#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0"
      ]
    },
    "254": {
      "op": "dig 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0",
        "tmp%18#0 (copy)"
      ]
    },
    "256": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_end_offset%3#0",
        "tmp%18#0 (copy)",
        "item_start_offset%3#0"
      ]
    },
    "258": {
      "op": "dig 2",
      "defined_out": [
        "args.a#0",
        "item_end_offset%3#0",
        "item_end_offset%3#0 (copy)",
        "item_start_offset%3#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_end_offset%3#0",
        "tmp%18#0 (copy)",
        "item_start_offset%3#0",
        "item_end_offset%3#0 (copy)"
      ]
    },
    "260": {
      "op": "substring3",
      "defined_out": [
        "args.a#0",
        "item1%2#0",
        "item_end_offset%3#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_end_offset%3#0",
        "item1%2#0"
      ]
    },
    "261": {
      "op": "extract 2 0",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "item_end_offset%3#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_end_offset%3#0",
        "args.b#0"
      ]
    },
    "264": {
      "op": "dig 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_end_offset%3#0",
        "args.b#0",
        "tmp%18#0 (copy)"
      ]
    },
    "266": {
      "op": "len",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "item_end_offset%3#0",
        "item_end_offset%4#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%18#0",
        "args.a#0",
        "item_end_offset%3#0",
        "args.b#0",
        "item_end_offset%4#0"
      ]
    },
    "267": {
      "op": "uncover 4",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.a#0",
        "item_end_offset%3#0",
        "args.b#0",
        "item_end_offset%4#0",
        "tmp%18#0"
      ]
    },
    "269": {
      "op": "uncover 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.a#0",
        "args.b#0",
        "item_end_offset%4#0",
        "tmp%18#0",
        "item_end_offset%3#0"
      ]
    },
    "271": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.a#0",
        "args.b#0",
        "tmp%18#0",
        "item_end_offset%3#0",
        "item_end_offset%4#0"
      ]
    },
    "273": {
      "op": "substring3",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "item2%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.a#0",
        "args.b#0",
        "item2%0#0"
      ]
    },
    "274": {
      "op": "extract 2 0",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "args.c#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.a#0",
        "args.b#0",
        "args.c#0"
      ]
    },
    "277": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "args.a#0"
      ]
    },
    "279": {
      "op": "itob",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%1#0"
      ]
    },
    "280": {
      "op": "dig 2",
      "defined_out": [
        "args.b#0",
        "args.b#0 (copy)",
        "args.c#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "args.b#0 (copy)"
      ]
    },
    "282": {
      "op": "len",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "length%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "length%2#0"
      ]
    },
    "283": {
      "op": "itob",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "as_bytes%5#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "as_bytes%5#0"
      ]
    },
    "284": {
      "op": "extract 6 2",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "length_uint16%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "length_uint16%2#0"
      ]
    },
    "287": {
      "op": "uncover 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "length_uint16%2#0",
        "args.b#0"
      ]
    },
    "289": {
      "op": "concat",
      "defined_out": [
        "args.c#0",
        "encoded_value%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "encoded_value%2#0"
      ]
    },
    "290": {
      "op": "dig 2",
      "defined_out": [
        "args.c#0",
        "args.c#0 (copy)",
        "encoded_value%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "encoded_value%2#0",
        "args.c#0 (copy)"
      ]
    },
    "292": {
      "op": "len",
      "defined_out": [
        "args.c#0",
        "encoded_value%2#0",
        "length%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "encoded_value%2#0",
        "length%3#0"
      ]
    },
    "293": {
      "op": "itob",
      "defined_out": [
        "args.c#0",
        "as_bytes%6#0",
        "encoded_value%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "encoded_value%2#0",
        "as_bytes%6#0"
      ]
    },
    "294": {
      "op": "extract 6 2",
      "defined_out": [
        "args.c#0",
        "encoded_value%2#0",
        "length_uint16%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%1#0",
        "encoded_value%2#0",
        "length_uint16%3#0"
      ]
    },
    "297": {
      "op": "uncover 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "val_as_bytes%1#0",
        "encoded_value%2#0",
        "length_uint16%3#0",
        "args.c#0"
      ]
    },
    "299": {
      "op": "concat",
      "defined_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "val_as_bytes%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ]
    },
    "300": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "302": {
      "op": "bytec_2 // 0x000c",
      "defined_out": [
        "0x000c",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%1#0",
        "0x000c"
      ]
    },
    "303": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "304": {
      "op": "dig 2",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0",
        "encoded_value%2#0 (copy)",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0 (copy)"
      ]
    },
    "306": {
      "op": "len",
      "defined_out": [
        "data_length%3#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%11#0",
        "data_length%3#0"
      ]
    },
    "307": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "data_length%3#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%11#0",
        "data_length%3#0",
        "12"
      ]
    },
    "309": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%11#0",
        "current_tail_offset%6#0"
      ]
    },
    "310": {
      "op": "itob",
      "defined_out": [
        "as_bytes%8#0",
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%11#0",
        "as_bytes%8#0"
      ]
    },
    "311": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "offset_as_uint16%4#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%11#0",
        "offset_as_uint16%4#0"
      ]
    },
    "314": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "315": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%12#0",
        "encoded_value%2#0"
      ]
    },
    "317": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "318": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%13#0",
        "encoded_value%3#0"
      ]
    },
    "319": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "320": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%14#0",
        "0x151f7c75"
      ]
    },
    "321": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "0x151f7c75",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "322": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%19#0"
      ]
    },
    "323": {
      "op": "log",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "324": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "325": {
      "op": "return"
    },
    "326": {
      "block": "main_nested_tuple_params_route@6",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%8#0"
      ]
    },
    "328": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%9#0"
      ]
    },
    "329": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "330": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%10#0"
      ]
    },
    "332": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "333": {
      "op": "txna ApplicationArgs 1"
    },
    "336": {
      "op": "dup"
    },
    "337": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "0"
      ]
    },
    "338": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_start_offset%0#0"
      ]
    },
    "339": {
      "op": "dig 1",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_start_offset%0#0",
        "tmp%12#0 (copy)"
      ]
    },
    "341": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "item_start_offset%0#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_start_offset%0#0",
        "tmp%12#0 (copy)",
        "2"
      ]
    },
    "342": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "343": {
      "op": "dig 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%12#0 (copy)"
      ]
    },
    "345": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_end_offset%0#0",
        "tmp%12#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "347": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_end_offset%0#0",
        "tmp%12#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "349": {
      "op": "substring3",
      "defined_out": [
        "item0%0#0",
        "item_end_offset%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_end_offset%0#0",
        "item0%0#0"
      ]
    },
    "350": {
      "op": "extract 2 0",
      "defined_out": [
        "args.0#0",
        "item_end_offset%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_end_offset%0#0",
        "args.0#0"
      ]
    },
    "353": {
      "op": "dig 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_end_offset%0#0",
        "args.0#0",
        "tmp%12#0 (copy)"
      ]
    },
    "355": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%12#0",
        "item_end_offset%0#0",
        "args.0#0",
        "item_end_offset%1#0"
      ]
    },
    "356": {
      "op": "swap"
    },
    "357": {
      "op": "cover 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "tmp%12#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0"
      ]
    },
    "359": {
      "op": "substring3",
      "defined_out": [
        "args.0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0"
      ]
    },
    "360": {
      "op": "dup",
      "defined_out": [
        "args.0#0",
        "item1%0#0",
        "item1%0#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "item1%0#0 (copy)"
      ]
    },
    "361": {
      "op": "intc_2 // 0",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "item1%0#0 (copy)",
        "0"
      ]
    },
    "362": {
      "op": "extract_uint16",
      "defined_out": [
        "args.0#0",
        "item1%0#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "item_start_offset%2#0"
      ]
    },
    "363": {
      "op": "dig 1",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "item_start_offset%2#0",
        "item1%0#0 (copy)"
      ]
    },
    "365": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "item1%0#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "366": {
      "op": "dig 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "item1%0#0 (copy)"
      ]
    },
    "368": {
      "op": "cover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "item1%0#0 (copy)",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "370": {
      "op": "substring3",
      "defined_out": [
        "args.0#0",
        "item0%1#0",
        "item1%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "item0%1#0"
      ]
    },
    "371": {
      "op": "extract 2 0",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "item1%0#0",
        "args.1.0#0"
      ]
    },
    "374": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "item1%0#0"
      ]
    },
    "375": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "item1%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "item1%1#0"
      ]
    },
    "378": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "item0%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "item0%2#0"
      ]
    },
    "381": {
      "op": "btoi",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ]
    },
    "382": {
      "op": "dig 1",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.0#0 (copy)",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "args.1.0#0 (copy)"
      ]
    },
    "384": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length%0#0"
      ]
    },
    "385": {
      "op": "itob",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "as_bytes%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "as_bytes%0#0"
      ]
    },
    "386": {
      "op": "extract 6 2",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length_uint16%0#0"
      ]
    },
    "389": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "length_uint16%0#0",
        "args.1.0#0"
      ]
    },
    "391": {
      "op": "concat",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%0#0"
      ]
    },
    "392": {
      "op": "dig 2",
      "defined_out": [
        "args.0#0",
        "args.0#0 (copy)",
        "args.1.1.0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%0#0",
        "args.0#0 (copy)"
      ]
    },
    "394": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%0#0",
        "length%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%0#0",
        "length%1#0"
      ]
    },
    "395": {
      "op": "itob",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "as_bytes%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%0#0",
        "as_bytes%1#0"
      ]
    },
    "396": {
      "op": "extract 6 2",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ]
    },
    "399": {
      "op": "uncover 3",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.1.1.0#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "args.0#0"
      ]
    },
    "401": {
      "op": "concat",
      "defined_out": [
        "args.1.1.0#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "args.1.1.0#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ]
    },
    "402": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "args.1.1.0#0"
      ]
    },
    "404": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "405": {
      "op": "pushbytes 0x000a",
      "defined_out": [
        "0x000a",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "0x000a"
      ]
    },
    "409": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "0x000a",
        "val_as_bytes%0#0"
      ]
    },
    "410": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "411": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%1#0"
      ]
    },
    "412": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "413": {
      "op": "dig 1",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "415": {
      "op": "len",
      "defined_out": [
        "data_length%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "data_length%1#0"
      ]
    },
    "416": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "data_length%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "data_length%1#0",
        "4"
      ]
    },
    "418": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%3#0"
      ]
    },
    "419": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "as_bytes%4#0"
      ]
    },
    "420": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "offset_as_uint16%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%2#0"
      ]
    },
    "423": {
      "op": "pushbytes 0x0004",
      "defined_out": [
        "0x0004",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "offset_as_uint16%2#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%2#0",
        "0x0004"
      ]
    },
    "427": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "0x0004",
        "offset_as_uint16%2#0"
      ]
    },
    "428": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "429": {
      "op": "uncover 2",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%3#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0"
      ]
    },
    "431": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%3#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "432": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%7#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "433": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "434": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "encoded_tuple_buffer%8#0",
        "0x151f7c75"
      ]
    },
    "435": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "0x151f7c75",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "436": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%13#0"
      ]
    },
    "437": {
      "op": "log",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "438": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "439": {
      "op": "return"
    },
    "440": {
      "block": "main_run_tests_route@5",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%3#0"
      ]
    },
    "442": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%4#0"
      ]
    },
    "443": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "444": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%5#0"
      ]
    },
    "446": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "447": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "1"
      ]
    },
    "448": {
      "op": "intc_1 // 2",
      "defined_out": [
        "1",
        "2"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "1",
        "2"
      ]
    },
    "449": {
      "op": "addw",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "nt.1.0#0",
        "nt.1.1#0"
      ]
    },
    "450": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "451": {
      "op": "!",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "nt.1.1#0",
        "tmp%4#0"
      ]
    },
    "452": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%4#0",
        "nt.1.1#0"
      ]
    },
    "453": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "nt.1.1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%4#0",
        "nt.1.1#0",
        "3"
      ]
    },
    "454": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#2"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#2"
      ]
    },
    "455": {
      "op": "dup2",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%6#2",
        "tmp%6#2 (copy)"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#2",
        "tmp%4#0 (copy)",
        "tmp%6#2 (copy)"
      ]
    },
    "456": {
      "op": "&&",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#2",
        "tmp%7#2"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#2",
        "tmp%7#2"
      ]
    },
    "457": {
      "op": "assert",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#2"
      ]
    },
    "458": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%6#2",
        "tmp%4#0"
      ]
    },
    "459": {
      "op": "assert",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%6#2"
      ]
    },
    "460": {
      "op": "assert",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "461": {
      "op": "intc_2 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "total#0"
      ]
    },
    "462": {
      "op": "bury 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "464": {
      "op": "intc_2 // 0"
    },
    "465": {
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "466": {
      "op": "bury 3",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "468": {
      "op": "intc_1 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "469": {
      "op": "swap",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "470": {
      "block": "main_for_body@32",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "t.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "472": {
      "op": "uncover 2",
      "defined_out": [
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "474": {
      "op": "+",
      "defined_out": [
        "t.0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "tmp%0#2"
      ]
    },
    "475": {
      "op": "dig 2",
      "defined_out": [
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "tmp%0#2",
        "total#0"
      ]
    },
    "477": {
      "op": "+",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "total#0"
      ]
    },
    "478": {
      "op": "bury 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "480": {
      "op": "switch main_for_header_1@33 main_for_header_2@34 main_for_header_3@35",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "488": {
      "op": "intc_2 // 0"
    },
    "489": {
      "op": "intc_0 // 1"
    },
    "490": {
      "op": "bury 4"
    },
    "492": {
      "op": "intc_1 // 2"
    },
    "493": {
      "op": "swap"
    },
    "494": {
      "block": "main_for_body@37",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "a#4"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "b#5",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "496": {
      "op": "uncover 2",
      "defined_out": [
        "a#4",
        "b#5"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "a#4",
        "b#5"
      ]
    },
    "498": {
      "op": "+",
      "defined_out": [
        "a#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "tmp%1#2"
      ]
    },
    "499": {
      "op": "dig 2",
      "defined_out": [
        "a#4",
        "tmp%1#2",
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "tmp%1#2",
        "total#0"
      ]
    },
    "501": {
      "op": "+",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "total#0"
      ]
    },
    "502": {
      "op": "bury 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0",
        "total#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "504": {
      "op": "switch main_for_header_1@38 main_for_header_2@39 main_for_header_3@40",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "512": {
      "op": "dup"
    },
    "513": {
      "op": "pushint 8 // 8"
    },
    "515": {
      "op": "/"
    },
    "516": {
      "op": "intc_3 // 3"
    },
    "517": {
      "op": "=="
    },
    "518": {
      "op": "assert"
    },
    "519": {
      "op": "bytec_0 // \"build_nested_call_count\""
    },
    "520": {
      "op": "intc_2 // 0"
    },
    "521": {
      "op": "app_global_put"
    },
    "522": {
      "op": "intc_2 // 0"
    },
    "523": {
      "op": "bytec_0 // \"build_nested_call_count\""
    },
    "524": {
      "op": "app_global_get_ex"
    },
    "525": {
      "error": "check self.build_nested_call_count exists",
      "op": "assert // check self.build_nested_call_count exists"
    },
    "526": {
      "op": "intc_0 // 1"
    },
    "527": {
      "op": "+"
    },
    "528": {
      "op": "bytec_0 // \"build_nested_call_count\""
    },
    "529": {
      "op": "swap"
    },
    "530": {
      "op": "app_global_put"
    },
    "531": {
      "op": "intc_2 // 0"
    },
    "532": {
      "op": "bytec_0 // \"build_nested_call_count\""
    },
    "533": {
      "op": "app_global_get_ex"
    },
    "534": {
      "error": "check self.build_nested_call_count exists",
      "op": "assert // check self.build_nested_call_count exists"
    },
    "535": {
      "op": "intc_0 // 1"
    },
    "536": {
      "op": "=="
    },
    "537": {
      "op": "assert"
    },
    "538": {
      "op": "pushbytes 0x151f7c7580"
    },
    "545": {
      "op": "log"
    },
    "546": {
      "op": "intc_0 // 1"
    },
    "547": {
      "op": "return"
    },
    "548": {
      "block": "main_for_header_3@40",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "intc_3 // 3"
    },
    "549": {
      "op": "intc_1 // 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "550": {
      "op": "bury 4",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "552": {
      "op": "intc_1 // 2",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "553": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "554": {
      "op": "b main_for_body@37"
    },
    "557": {
      "block": "main_for_header_2@39",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "intc_1 // 2"
    },
    "558": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "559": {
      "op": "bury 4",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "561": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "562": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "563": {
      "op": "b main_for_body@37"
    },
    "566": {
      "block": "main_for_header_1@38",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "intc_0 // 1"
    },
    "567": {
      "op": "intc_1 // 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "568": {
      "op": "bury 4",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "570": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "571": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "572": {
      "op": "b main_for_body@37"
    },
    "575": {
      "block": "main_for_header_3@35",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "intc_3 // 3"
    },
    "576": {
      "op": "intc_1 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "577": {
      "op": "bury 3",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "579": {
      "op": "intc_1 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "580": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "581": {
      "op": "b main_for_body@32"
    },
    "584": {
      "block": "main_for_header_2@34",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "intc_1 // 2"
    },
    "585": {
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "586": {
      "op": "bury 3",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "588": {
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "589": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "590": {
      "op": "b main_for_body@32"
    },
    "593": {
      "block": "main_for_header_1@33",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "intc_0 // 1"
    },
    "594": {
      "op": "intc_1 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "595": {
      "op": "bury 3",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "597": {
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "598": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "599": {
      "op": "b main_for_body@32"
    },
    "602": {
      "block": "main_bare_routing@9",
      "stack_in": [
        "a#4",
        "t.0#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0",
        "tmp%26#0"
      ]
    },
    "604": {
      "op": "bnz main_after_if_else@11",
      "stack_out": [
        "a#4",
        "t.0#0",
        "total#0"
      ]
    },
    "607": {
      "op": "txn ApplicationID"
    },
    "609": {
      "op": "!"
    },
    "610": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "611": {
      "op": "intc_0 // 1"
    },
    "612": {
      "op": "return"
    }
  }
}