{
  "version": 3,
  "sources": [
    "../nested_tuples.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDQ;;AAA+B;AAA/B;AAEA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAJR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAiHK;;AAAA;AAAA;AAAA;;AAAA;AAjHL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAiHK;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA5GL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AA4GK;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AArGL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAqGK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA7BA;;AAAA;AAAA;AAAA;;AAAA;AAgBmB;AAAW;AA8Ed;AAGV;AAAA;AAAA;AAAa;;AAAb;AAAA;AAAA;AAAP;AACA;AAAA;AACA;AA4EQ;AAAR;;;AAFI;AAIA;;AAHA;AAGA;AAES;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AAFR;;;;;;;;;AAJQ;AAQA;;AAPA;AAOA;AACS;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AADR;;;;;;;;AAGW;AAAS;AAAT;AAAc;;AAAd;AAAP;AAxII;;AAAgC;AAAhC;AAhDH;;;;;;;AAAA;AAAA;;;;AA8KG;AAOA;;AAPA;AAOA;;;;;AARA;AAQA;;AARA;AAQA;;;;;AAPA;AAOA;;AARA;AAQA;;;;;;AAPA;AAGA;;AAHA;AAGA;;;;;AAJA;AAIA;;AAJA;AAIA;;;;;AAHA;AAGA;;AAJA;AAIA;;;;AAvLH;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACP;;;;;;;;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACW;;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAX;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJH;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAYY;AAAL;;AAAK;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AADK;AAAA;AAAA;;;;;AAZZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA1CL;;;AAAA;;;AA4C0C;;;AACjB;;;AAA+C;;AAAW;AAAtB;;;AAAA;;AAAA;;AAA9C;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAtCL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwC4B;AAAA;AAAA;AAAA;AAAA;AAAb;AAAA;AAAA;AAAqC;;AAAW;AAAtB;;;AAAA;;AAAA;;AAA1B;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAjCL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmC6C;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEyB;;AAAA;;;;AANzB;;AAAA;AAAA;AAAA;;AAAA;AA7BL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BwB;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAzBL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2Be;AAAA;AAAA;AAAA;AAAA;AAAO;AAAP;AAAA;AAAA;AAAA;;AAFV;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AArBL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBuC;AAAQ;AAAR;AAAtB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAFH;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAFV;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAbL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAeQ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFH;;AAbL;;AAAA;;;;;;;;;AAqIQ;;;;;;;;;;;;;;;;;;;;AAAJ;AACO;;AAAP;AAGJ;;;AAEQ;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;AAAA;;AAAA;AAGJ;;;AAEQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x000c \"box\" 0x0004 \"twm\" 0x0012 \"build_nested_call_count\" \"pwl\""
    },
    "59": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "60": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "maybe_value%0#0",
        "a#4"
      ]
    },
    "62": {
      "op": "dupn 8",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "64": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "66": {
      "op": "bnz main_after_if_else@2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "69": {
      "op": "bytec 6 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\""
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"build_nested_call_count\""
      ]
    },
    "71": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"build_nested_call_count\"",
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"build_nested_call_count\"",
        "0"
      ]
    },
    "72": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "73": {
      "op": "bytec 4 // \"twm\"",
      "defined_out": [
        "\"twm\""
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"twm\""
      ]
    },
    "75": {
      "op": "pushbytes 0x0004000600000000000000000000000c000e00000000",
      "defined_out": [
        "\"twm\"",
        "0x0004000600000000000000000000000c000e00000000"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"twm\"",
        "0x0004000600000000000000000000000c000e00000000"
      ]
    },
    "99": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "100": {
      "block": "main_after_if_else@2",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2"
      ]
    },
    "102": {
      "op": "bz main_bare_routing@31",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "105": {
      "op": "pushbytess 0x383e1e8b 0x68cbedd7 0x2263fcf1 0xbfc37339 0xc660beaa 0xb6c215ff 0x907c9042 0xd51c7174 0xf8cc2b50 0x3d486db0 0x9e5a3ba7 0xcea0521b 0x373f5b24 0xec593096 // method \"store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void\", method \"load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])\", method \"store_tuple_in_box((uint64,uint64))void\", method \"is_tuple_in_box((uint64,uint64))bool\", method \"load_tuple_from_box((uint64,uint64))(uint64,uint64)\", method \"maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool)\", method \"load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64)\", method \"load_tuple_from_local_state_or_default(string)(uint64,uint64)\", method \"mutate_local_tuple()(uint64[],(uint64,byte[],string))\", method \"mutate_tuple_in_storage_currently_supported_method()void\", method \"run_tests()bool\", method \"nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))\", method \"named_tuple((uint64,byte[],string))(uint64,byte[],string)\", method \"nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string))\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))"
      ]
    },
    "177": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "tmp%2#0"
      ]
    },
    "180": {
      "op": "match main_store_tuple_route@5 main_load_tuple_route@6 main_store_tuple_in_box_route@7 main_is_tuple_in_box_route@8 main_load_tuple_from_box_route@9 main_maybe_load_tuple_from_box_route@10 main_load_tuple_from_box_or_default_route@14 main_load_tuple_from_local_state_or_default_route@18 main_mutate_local_tuple_route@22 main_mutate_tuple_in_storage_currently_supported_method_route@26 main_run_tests_route@27 main_nested_tuple_params_route@28 main_named_tuple_route@29 main_nested_named_tuple_params_route@30",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "210": {
      "block": "main_after_if_else@33",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "211": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "212": {
      "block": "main_nested_named_tuple_params_route@30",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%113#0"
      ]
    },
    "214": {
      "op": "!",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%114#0"
      ]
    },
    "215": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "216": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%115#0"
      ]
    },
    "218": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "219": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0"
      ]
    },
    "222": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)"
      ]
    },
    "223": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)",
        "0"
      ]
    },
    "224": {
      "op": "extract_uint64",
      "defined_out": [
        "args.foo#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "args.foo#0"
      ]
    },
    "225": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "args.foo#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)"
      ]
    },
    "227": {
      "op": "extract 8 8",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "args.foo#0",
        "args.foo_arc#0"
      ]
    },
    "230": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "args.foo#0",
        "args.foo_arc#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)"
      ]
    },
    "232": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "args.foo#0",
        "args.foo_arc#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "args.foo#0",
        "args.foo_arc#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)",
        "16"
      ]
    },
    "234": {
      "op": "extract_uint16",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%14#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%14#0"
      ]
    },
    "235": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%14#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0 (copy)"
      ]
    },
    "237": {
      "op": "len",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%14#0",
        "len%6#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%14#0",
        "len%6#0"
      ]
    },
    "238": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%14#0",
        "len%6#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0"
      ]
    },
    "240": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,len+uint8[],len+utf8[])))%0#0",
        "extract_uint16%14#0",
        "len%6#0"
      ]
    },
    "242": {
      "op": "substring3",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0"
      ]
    },
    "243": {
      "op": "dup",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "substring3%10#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "substring3%10#0 (copy)"
      ]
    },
    "244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "substring3%10#0 (copy)",
        "0"
      ]
    },
    "245": {
      "op": "extract_uint64",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0"
      ]
    },
    "246": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "substring3%10#0 (copy)"
      ]
    },
    "248": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "substring3%10#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "substring3%10#0 (copy)",
        "8"
      ]
    },
    "249": {
      "op": "extract_uint16",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%15#0",
        "substring3%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%15#0"
      ]
    },
    "250": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%15#0",
        "substring3%10#0 (copy)"
      ]
    },
    "252": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%15#0",
        "substring3%10#0",
        "substring3%10#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%15#0",
        "substring3%10#0 (copy)",
        "10"
      ]
    },
    "254": {
      "op": "extract_uint16",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%15#0",
        "extract_uint16%16#0",
        "substring3%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%15#0",
        "extract_uint16%16#0"
      ]
    },
    "255": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%15#0",
        "extract_uint16%16#0",
        "substring3%10#0 (copy)"
      ]
    },
    "257": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%16#0",
        "substring3%10#0 (copy)",
        "extract_uint16%15#0"
      ]
    },
    "259": {
      "op": "dig 2",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%15#0",
        "extract_uint16%16#0",
        "extract_uint16%16#0 (copy)",
        "substring3%10#0",
        "substring3%10#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%16#0",
        "substring3%10#0 (copy)",
        "extract_uint16%15#0",
        "extract_uint16%16#0 (copy)"
      ]
    },
    "261": {
      "op": "substring3",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%16#0",
        "substring3%10#0",
        "substring3%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%16#0",
        "substring3%11#0"
      ]
    },
    "262": {
      "op": "extract 2 0",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%16#0",
        "substring3%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%16#0",
        "args.child.b#0"
      ]
    },
    "265": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%16#0",
        "args.child.b#0",
        "substring3%10#0 (copy)"
      ]
    },
    "267": {
      "op": "len",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "extract_uint16%16#0",
        "len%7#0",
        "substring3%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%10#0",
        "args.child.a#0",
        "extract_uint16%16#0",
        "args.child.b#0",
        "len%7#0"
      ]
    },
    "268": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "extract_uint16%16#0",
        "args.child.b#0",
        "len%7#0",
        "substring3%10#0"
      ]
    },
    "270": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "len%7#0",
        "substring3%10#0",
        "extract_uint16%16#0"
      ]
    },
    "272": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "substring3%10#0",
        "extract_uint16%16#0",
        "len%7#0"
      ]
    },
    "274": {
      "op": "substring3",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "substring3%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "substring3%12#0"
      ]
    },
    "275": {
      "op": "extract 2 0",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo#0",
        "args.foo_arc#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0"
      ]
    },
    "278": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo#0"
      ]
    },
    "280": {
      "op": "itob",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "val_as_bytes%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%13#0"
      ]
    },
    "281": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%13#0",
        "args.foo_arc#0"
      ]
    },
    "283": {
      "op": "concat",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0"
      ]
    },
    "284": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "args.child.a#0"
      ]
    },
    "286": {
      "op": "itob",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0"
      ]
    },
    "287": {
      "op": "dig 3",
      "defined_out": [
        "args.child.b#0",
        "args.child.b#0 (copy)",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "args.child.b#0 (copy)"
      ]
    },
    "289": {
      "op": "len",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "length%8#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "length%8#0"
      ]
    },
    "290": {
      "op": "itob",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "as_bytes%22#0",
        "encoded%44#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "as_bytes%22#0"
      ]
    },
    "291": {
      "op": "extract 6 2",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "length_uint16%8#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.b#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "length_uint16%8#0"
      ]
    },
    "294": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "length_uint16%8#0",
        "args.child.b#0"
      ]
    },
    "296": {
      "op": "concat",
      "defined_out": [
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "encoded_value%8#0"
      ]
    },
    "297": {
      "op": "dup",
      "defined_out": [
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "encoded_value%8#0 (copy)",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "encoded_value%8#0",
        "encoded_value%8#0 (copy)"
      ]
    },
    "298": {
      "op": "len",
      "defined_out": [
        "args.child.c#0",
        "data_length%14#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "encoded_value%8#0",
        "data_length%14#0"
      ]
    },
    "299": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "args.child.c#0",
        "data_length%14#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "encoded_value%8#0",
        "data_length%14#0",
        "12"
      ]
    },
    "301": {
      "op": "+",
      "defined_out": [
        "args.child.c#0",
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "val_as_bytes%14#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0"
      ]
    },
    "302": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "val_as_bytes%14#0"
      ]
    },
    "304": {
      "op": "bytec_1 // 0x000c",
      "defined_out": [
        "0x000c",
        "args.child.c#0",
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "val_as_bytes%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "val_as_bytes%14#0",
        "0x000c"
      ]
    },
    "305": {
      "op": "concat",
      "defined_out": [
        "args.child.c#0",
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded%46#0",
        "encoded_value%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "encoded%46#0"
      ]
    },
    "306": {
      "op": "dig 4",
      "defined_out": [
        "args.child.c#0",
        "args.child.c#0 (copy)",
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded%46#0",
        "encoded_value%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "args.child.c#0 (copy)"
      ]
    },
    "308": {
      "op": "len",
      "defined_out": [
        "args.child.c#0",
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded%46#0",
        "encoded_value%8#0",
        "length%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "length%9#0"
      ]
    },
    "309": {
      "op": "itob",
      "defined_out": [
        "args.child.c#0",
        "as_bytes%24#0",
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded%46#0",
        "encoded_value%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "as_bytes%24#0"
      ]
    },
    "310": {
      "op": "extract 6 2",
      "defined_out": [
        "args.child.c#0",
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded%46#0",
        "encoded_value%8#0",
        "length_uint16%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.child.c#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "length_uint16%9#0"
      ]
    },
    "313": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "length_uint16%9#0",
        "args.child.c#0"
      ]
    },
    "315": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded%46#0",
        "encoded_value%8#0",
        "encoded_value%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "encoded_value%8#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "encoded_value%9#0"
      ]
    },
    "316": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "encoded_value%9#0",
        "encoded_value%8#0"
      ]
    },
    "318": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "encoded_value%8#0",
        "encoded_value%9#0"
      ]
    },
    "319": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%14#0",
        "encoded%44#0",
        "encoded%46#0",
        "tail%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "current_tail_offset%14#0",
        "encoded%46#0",
        "tail%15#0"
      ]
    },
    "320": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "encoded%46#0",
        "tail%15#0",
        "current_tail_offset%14#0"
      ]
    },
    "322": {
      "op": "itob",
      "defined_out": [
        "as_bytes%25#0",
        "encoded%44#0",
        "encoded%46#0",
        "tail%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "encoded%46#0",
        "tail%15#0",
        "as_bytes%25#0"
      ]
    },
    "323": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded%44#0",
        "encoded%46#0",
        "offset_as_uint16%15#0",
        "tail%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "encoded%46#0",
        "tail%15#0",
        "offset_as_uint16%15#0"
      ]
    },
    "326": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "tail%15#0",
        "offset_as_uint16%15#0",
        "encoded%46#0"
      ]
    },
    "328": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "tail%15#0",
        "encoded%46#0",
        "offset_as_uint16%15#0"
      ]
    },
    "329": {
      "op": "concat",
      "defined_out": [
        "encoded%44#0",
        "encoded%47#0",
        "tail%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "tail%15#0",
        "encoded%47#0"
      ]
    },
    "330": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "encoded%47#0",
        "tail%15#0"
      ]
    },
    "331": {
      "op": "concat",
      "defined_out": [
        "encoded%44#0",
        "encoded%48#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%44#0",
        "encoded%48#0"
      ]
    },
    "332": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%48#0",
        "encoded%44#0"
      ]
    },
    "333": {
      "op": "bytec 5 // 0x0012",
      "defined_out": [
        "0x0012",
        "encoded%44#0",
        "encoded%48#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%48#0",
        "encoded%44#0",
        "0x0012"
      ]
    },
    "335": {
      "op": "concat",
      "defined_out": [
        "encoded%48#0",
        "encoded%49#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%48#0",
        "encoded%49#0"
      ]
    },
    "336": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%49#0",
        "encoded%48#0"
      ]
    },
    "337": {
      "op": "concat",
      "defined_out": [
        "encoded%50#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%50#0"
      ]
    },
    "338": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%50#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%50#0",
        "0x151f7c75"
      ]
    },
    "339": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded%50#0"
      ]
    },
    "340": {
      "op": "concat",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%126#0"
      ]
    },
    "341": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "342": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "343": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "344": {
      "block": "main_named_tuple_route@29",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%102#0"
      ]
    },
    "346": {
      "op": "!",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%103#0"
      ]
    },
    "347": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "348": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%104#0"
      ]
    },
    "350": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "351": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0"
      ]
    },
    "354": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ]
    },
    "355": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)",
        "0"
      ]
    },
    "356": {
      "op": "extract_uint64",
      "defined_out": [
        "args.a#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0"
      ]
    },
    "357": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ]
    },
    "359": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "args.a#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)",
        "8"
      ]
    },
    "360": {
      "op": "extract_uint16",
      "defined_out": [
        "args.a#0",
        "extract_uint16%11#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%11#0"
      ]
    },
    "361": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%11#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ]
    },
    "363": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "args.a#0",
        "extract_uint16%11#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%11#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)",
        "10"
      ]
    },
    "365": {
      "op": "extract_uint16",
      "defined_out": [
        "args.a#0",
        "extract_uint16%11#0",
        "extract_uint16%12#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%11#0",
        "extract_uint16%12#0"
      ]
    },
    "366": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%11#0",
        "extract_uint16%12#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ]
    },
    "368": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%12#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)",
        "extract_uint16%11#0"
      ]
    },
    "370": {
      "op": "dig 2",
      "defined_out": [
        "args.a#0",
        "extract_uint16%11#0",
        "extract_uint16%12#0",
        "extract_uint16%12#0 (copy)",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%12#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)",
        "extract_uint16%11#0",
        "extract_uint16%12#0 (copy)"
      ]
    },
    "372": {
      "op": "substring3",
      "defined_out": [
        "args.a#0",
        "extract_uint16%12#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "substring3%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%12#0",
        "substring3%8#0"
      ]
    },
    "373": {
      "op": "extract 2 0",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "extract_uint16%12#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%12#0",
        "args.b#0"
      ]
    },
    "376": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%12#0",
        "args.b#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0 (copy)"
      ]
    },
    "378": {
      "op": "len",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "extract_uint16%12#0",
        "len%5#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "args.a#0",
        "extract_uint16%12#0",
        "args.b#0",
        "len%5#0"
      ]
    },
    "379": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.a#0",
        "extract_uint16%12#0",
        "args.b#0",
        "len%5#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0"
      ]
    },
    "381": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.a#0",
        "args.b#0",
        "len%5#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "extract_uint16%12#0"
      ]
    },
    "383": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.a#0",
        "args.b#0",
        "reinterpret_Encoded((uint64,len+uint8[],len+utf8[]))%0#0",
        "extract_uint16%12#0",
        "len%5#0"
      ]
    },
    "385": {
      "op": "substring3",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "substring3%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.a#0",
        "args.b#0",
        "substring3%9#0"
      ]
    },
    "386": {
      "op": "extract 2 0",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "args.c#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.a#0",
        "args.b#0",
        "args.c#0"
      ]
    },
    "389": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "args.a#0"
      ]
    },
    "391": {
      "op": "itob",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%12#0"
      ]
    },
    "392": {
      "op": "dig 2",
      "defined_out": [
        "args.b#0",
        "args.b#0 (copy)",
        "args.c#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "args.b#0 (copy)"
      ]
    },
    "394": {
      "op": "len",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "length%6#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "length%6#0"
      ]
    },
    "395": {
      "op": "itob",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "as_bytes%18#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "as_bytes%18#0"
      ]
    },
    "396": {
      "op": "extract 6 2",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "length_uint16%6#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.b#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "length_uint16%6#0"
      ]
    },
    "399": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "length_uint16%6#0",
        "args.b#0"
      ]
    },
    "401": {
      "op": "concat",
      "defined_out": [
        "args.c#0",
        "encoded_value%6#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "encoded_value%6#0"
      ]
    },
    "402": {
      "op": "dup",
      "defined_out": [
        "args.c#0",
        "encoded_value%6#0",
        "encoded_value%6#0 (copy)",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "encoded_value%6#0",
        "encoded_value%6#0 (copy)"
      ]
    },
    "403": {
      "op": "len",
      "defined_out": [
        "args.c#0",
        "data_length%12#0",
        "encoded_value%6#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "encoded_value%6#0",
        "data_length%12#0"
      ]
    },
    "404": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "args.c#0",
        "data_length%12#0",
        "encoded_value%6#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "encoded_value%6#0",
        "data_length%12#0",
        "12"
      ]
    },
    "406": {
      "op": "+",
      "defined_out": [
        "args.c#0",
        "current_tail_offset%12#0",
        "encoded_value%6#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "val_as_bytes%12#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0"
      ]
    },
    "407": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "val_as_bytes%12#0"
      ]
    },
    "409": {
      "op": "bytec_1 // 0x000c",
      "defined_out": [
        "0x000c",
        "args.c#0",
        "current_tail_offset%12#0",
        "encoded_value%6#0",
        "val_as_bytes%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "val_as_bytes%12#0",
        "0x000c"
      ]
    },
    "410": {
      "op": "concat",
      "defined_out": [
        "args.c#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "encoded%40#0"
      ]
    },
    "411": {
      "op": "dig 3",
      "defined_out": [
        "args.c#0",
        "args.c#0 (copy)",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "args.c#0 (copy)"
      ]
    },
    "413": {
      "op": "len",
      "defined_out": [
        "args.c#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%6#0",
        "length%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "length%7#0"
      ]
    },
    "414": {
      "op": "itob",
      "defined_out": [
        "args.c#0",
        "as_bytes%20#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "as_bytes%20#0"
      ]
    },
    "415": {
      "op": "extract 6 2",
      "defined_out": [
        "args.c#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%6#0",
        "length_uint16%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.c#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "length_uint16%7#0"
      ]
    },
    "418": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "length_uint16%7#0",
        "args.c#0"
      ]
    },
    "420": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%6#0",
        "encoded_value%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%6#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%7#0"
      ]
    },
    "421": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%7#0",
        "encoded_value%6#0"
      ]
    },
    "423": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "encoded_value%6#0",
        "encoded_value%7#0"
      ]
    },
    "424": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%12#0",
        "encoded%40#0",
        "tail%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%12#0",
        "encoded%40#0",
        "tail%13#0"
      ]
    },
    "425": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%40#0",
        "tail%13#0",
        "current_tail_offset%12#0"
      ]
    },
    "427": {
      "op": "itob",
      "defined_out": [
        "as_bytes%21#0",
        "encoded%40#0",
        "tail%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%40#0",
        "tail%13#0",
        "as_bytes%21#0"
      ]
    },
    "428": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded%40#0",
        "offset_as_uint16%13#0",
        "tail%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%40#0",
        "tail%13#0",
        "offset_as_uint16%13#0"
      ]
    },
    "431": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%13#0",
        "offset_as_uint16%13#0",
        "encoded%40#0"
      ]
    },
    "433": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%13#0",
        "encoded%40#0",
        "offset_as_uint16%13#0"
      ]
    },
    "434": {
      "op": "concat",
      "defined_out": [
        "encoded%41#0",
        "tail%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%13#0",
        "encoded%41#0"
      ]
    },
    "435": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%41#0",
        "tail%13#0"
      ]
    },
    "436": {
      "op": "concat",
      "defined_out": [
        "encoded%42#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%42#0"
      ]
    },
    "437": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%42#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%42#0",
        "0x151f7c75"
      ]
    },
    "438": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded%42#0"
      ]
    },
    "439": {
      "op": "concat",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%112#0"
      ]
    },
    "440": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "441": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "442": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "443": {
      "block": "main_nested_tuple_params_route@28",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%91#0"
      ]
    },
    "445": {
      "op": "!",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%92#0"
      ]
    },
    "446": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "447": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%93#0"
      ]
    },
    "449": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "450": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0"
      ]
    },
    "453": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)"
      ]
    },
    "454": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)",
        "0"
      ]
    },
    "455": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%7#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%7#0"
      ]
    },
    "456": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%7#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)"
      ]
    },
    "458": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "extract_uint16%7#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%7#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)",
        "2"
      ]
    },
    "459": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%7#0",
        "extract_uint16%8#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%7#0",
        "extract_uint16%8#0"
      ]
    },
    "460": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%7#0",
        "extract_uint16%8#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)"
      ]
    },
    "462": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%8#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)",
        "extract_uint16%7#0"
      ]
    },
    "464": {
      "op": "dig 2",
      "defined_out": [
        "extract_uint16%7#0",
        "extract_uint16%8#0",
        "extract_uint16%8#0 (copy)",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%8#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)",
        "extract_uint16%7#0",
        "extract_uint16%8#0 (copy)"
      ]
    },
    "466": {
      "op": "substring3",
      "defined_out": [
        "extract_uint16%8#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "substring3%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%8#0",
        "substring3%5#0"
      ]
    },
    "467": {
      "op": "extract 2 0",
      "defined_out": [
        "args.0#0",
        "extract_uint16%8#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%8#0",
        "args.0#0"
      ]
    },
    "470": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%8#0",
        "args.0#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0 (copy)"
      ]
    },
    "472": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "extract_uint16%8#0",
        "len%3#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%8#0",
        "args.0#0",
        "len%3#0"
      ]
    },
    "473": {
      "op": "swap"
    },
    "474": {
      "op": "cover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "reinterpret_Encoded((len+utf8[],(len+uint8[],(uint64))))%0#0",
        "extract_uint16%8#0",
        "len%3#0"
      ]
    },
    "476": {
      "op": "substring3",
      "defined_out": [
        "args.0#0",
        "substring3%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0"
      ]
    },
    "477": {
      "op": "dup",
      "defined_out": [
        "args.0#0",
        "substring3%6#0",
        "substring3%6#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "substring3%6#0 (copy)"
      ]
    },
    "478": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "substring3%6#0 (copy)",
        "0"
      ]
    },
    "479": {
      "op": "extract_uint16",
      "defined_out": [
        "args.0#0",
        "extract_uint16%10#0",
        "substring3%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "extract_uint16%10#0"
      ]
    },
    "480": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "extract_uint16%10#0",
        "substring3%6#0 (copy)"
      ]
    },
    "482": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "extract_uint16%10#0",
        "len%4#0",
        "substring3%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "extract_uint16%10#0",
        "len%4#0"
      ]
    },
    "483": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "extract_uint16%10#0",
        "len%4#0",
        "substring3%6#0 (copy)"
      ]
    },
    "485": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "substring3%6#0 (copy)",
        "extract_uint16%10#0",
        "len%4#0"
      ]
    },
    "487": {
      "op": "substring3",
      "defined_out": [
        "args.0#0",
        "substring3%6#0",
        "substring3%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "substring3%7#0"
      ]
    },
    "488": {
      "op": "extract 2 0",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "substring3%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "substring3%6#0",
        "args.1.0#0"
      ]
    },
    "491": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "substring3%6#0"
      ]
    },
    "492": {
      "op": "extract 2 8",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "extract%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "extract%13#0"
      ]
    },
    "495": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "extract%13#0",
        "0"
      ]
    },
    "496": {
      "op": "extract_uint64",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ]
    },
    "497": {
      "op": "dig 1",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.0#0 (copy)",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "args.1.0#0 (copy)"
      ]
    },
    "499": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length%4#0"
      ]
    },
    "500": {
      "op": "itob",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "as_bytes%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "as_bytes%13#0"
      ]
    },
    "501": {
      "op": "extract 6 2",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length_uint16%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length_uint16%4#0"
      ]
    },
    "504": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "length_uint16%4#0",
        "args.1.0#0"
      ]
    },
    "506": {
      "op": "concat",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0"
      ]
    },
    "507": {
      "op": "dup",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "encoded_value%4#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "encoded_value%4#0 (copy)"
      ]
    },
    "508": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "data_length%9#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "data_length%9#0"
      ]
    },
    "509": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "args.0#0",
        "args.1.1.0#0",
        "data_length%9#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "data_length%9#0",
        "4"
      ]
    },
    "511": {
      "op": "+",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "current_tail_offset%9#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0"
      ]
    },
    "512": {
      "op": "dig 3",
      "defined_out": [
        "args.0#0",
        "args.0#0 (copy)",
        "args.1.1.0#0",
        "current_tail_offset%9#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "args.0#0 (copy)"
      ]
    },
    "514": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "current_tail_offset%9#0",
        "encoded_value%4#0",
        "length%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "length%5#0"
      ]
    },
    "515": {
      "op": "itob",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "as_bytes%15#0",
        "current_tail_offset%9#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "as_bytes%15#0"
      ]
    },
    "516": {
      "op": "extract 6 2",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "current_tail_offset%9#0",
        "encoded_value%4#0",
        "length_uint16%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "length_uint16%5#0"
      ]
    },
    "519": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "length_uint16%5#0",
        "args.0#0"
      ]
    },
    "521": {
      "op": "concat",
      "defined_out": [
        "args.1.1.0#0",
        "current_tail_offset%9#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "args.1.1.0#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "encoded_value%5#0"
      ]
    },
    "522": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "encoded_value%5#0",
        "args.1.1.0#0"
      ]
    },
    "524": {
      "op": "itob",
      "defined_out": [
        "current_tail_offset%9#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "encoded_value%5#0",
        "val_as_bytes%11#0"
      ]
    },
    "525": {
      "op": "pushbytes 0x000a",
      "defined_out": [
        "0x000a",
        "current_tail_offset%9#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "encoded_value%5#0",
        "val_as_bytes%11#0",
        "0x000a"
      ]
    },
    "529": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "encoded_value%5#0",
        "0x000a",
        "val_as_bytes%11#0"
      ]
    },
    "530": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%9#0",
        "encoded%35#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "encoded_value%5#0",
        "encoded%35#0"
      ]
    },
    "531": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "encoded%35#0",
        "encoded_value%5#0"
      ]
    },
    "532": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%9#0",
        "encoded%36#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_value%4#0",
        "current_tail_offset%9#0",
        "encoded%36#0"
      ]
    },
    "533": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%9#0",
        "encoded%36#0",
        "encoded_value%4#0"
      ]
    },
    "535": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%9#0",
        "encoded_value%4#0",
        "encoded%36#0"
      ]
    },
    "536": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%9#0",
        "tail%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%9#0",
        "tail%11#0"
      ]
    },
    "537": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%11#0",
        "current_tail_offset%9#0"
      ]
    },
    "538": {
      "op": "itob",
      "defined_out": [
        "as_bytes%17#0",
        "tail%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%11#0",
        "as_bytes%17#0"
      ]
    },
    "539": {
      "op": "extract 6 2",
      "defined_out": [
        "offset_as_uint16%11#0",
        "tail%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%11#0",
        "offset_as_uint16%11#0"
      ]
    },
    "542": {
      "op": "bytec_3 // 0x0004",
      "defined_out": [
        "0x0004",
        "offset_as_uint16%11#0",
        "tail%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%11#0",
        "offset_as_uint16%11#0",
        "0x0004"
      ]
    },
    "543": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%11#0",
        "0x0004",
        "offset_as_uint16%11#0"
      ]
    },
    "544": {
      "op": "concat",
      "defined_out": [
        "encoded%37#0",
        "tail%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%11#0",
        "encoded%37#0"
      ]
    },
    "545": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%37#0",
        "tail%11#0"
      ]
    },
    "546": {
      "op": "concat",
      "defined_out": [
        "encoded%38#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%38#0"
      ]
    },
    "547": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%38#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%38#0",
        "0x151f7c75"
      ]
    },
    "548": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded%38#0"
      ]
    },
    "549": {
      "op": "concat",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%101#0"
      ]
    },
    "550": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "551": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "552": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "553": {
      "block": "main_run_tests_route@27",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%85#0"
      ]
    },
    "555": {
      "op": "!",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%86#0"
      ]
    },
    "556": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "557": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%87#0"
      ]
    },
    "559": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "560": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "1"
      ]
    },
    "561": {
      "op": "intc_3 // 2",
      "defined_out": [
        "1",
        "2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "1",
        "2"
      ]
    },
    "562": {
      "op": "addw",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "nt.1.0#0",
        "nt.1.1#0"
      ]
    },
    "563": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "564": {
      "op": "!",
      "defined_out": [
        "nt.1.1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "nt.1.1#0",
        "tmp%4#0"
      ]
    },
    "565": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "nt.1.1#0"
      ]
    },
    "566": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "nt.1.1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "nt.1.1#0",
        "3"
      ]
    },
    "568": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "569": {
      "op": "dup2",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%4#0 (copy)",
        "tmp%6#0 (copy)"
      ]
    },
    "570": {
      "op": "&&",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "571": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "572": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%6#0",
        "tmp%4#0"
      ]
    },
    "573": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%6#0"
      ]
    },
    "574": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "575": {
      "op": "intc_0 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "total#0"
      ]
    },
    "576": {
      "op": "bury 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "578": {
      "op": "intc_0 // 0"
    },
    "579": {
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "580": {
      "op": "bury 7",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "582": {
      "op": "intc_3 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "583": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "584": {
      "block": "main_for_body@54",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ],
      "op": "dig 7",
      "defined_out": [
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "586": {
      "op": "uncover 2",
      "defined_out": [
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "588": {
      "op": "+",
      "defined_out": [
        "t.0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "tmp%0#2"
      ]
    },
    "589": {
      "op": "dig 2",
      "defined_out": [
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "tmp%0#2",
        "total#0"
      ]
    },
    "591": {
      "op": "+",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "total#0"
      ]
    },
    "592": {
      "op": "bury 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "594": {
      "op": "switch main_for_header_1@55 main_for_header_2@56 main_for_header_3@57",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "602": {
      "op": "intc_0 // 0"
    },
    "603": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#4",
        "loop_counter%1#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "604": {
      "op": "bury 10",
      "defined_out": [
        "a#4",
        "loop_counter%1#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "606": {
      "op": "intc_3 // 2",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "607": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "608": {
      "block": "main_for_body@59",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ],
      "op": "dig 10",
      "defined_out": [
        "a#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "610": {
      "op": "uncover 2",
      "defined_out": [
        "a#4",
        "b#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4",
        "b#5"
      ]
    },
    "612": {
      "op": "+",
      "defined_out": [
        "a#4",
        "tmp%2#3"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "tmp%2#3"
      ]
    },
    "613": {
      "op": "dig 2",
      "defined_out": [
        "a#4",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "tmp%2#3",
        "total#0"
      ]
    },
    "615": {
      "op": "+",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "total#0"
      ]
    },
    "616": {
      "op": "bury 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "618": {
      "op": "switch main_for_header_1@60 main_for_header_2@61 main_for_header_3@62",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "626": {
      "op": "dup",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "total#0"
      ]
    },
    "627": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "a#4",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "total#0",
        "8"
      ]
    },
    "628": {
      "op": "/",
      "defined_out": [
        "a#4",
        "tmp%2#3",
        "tmp%4#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#3"
      ]
    },
    "629": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "a#4",
        "tmp%2#3",
        "tmp%4#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#3",
        "3"
      ]
    },
    "631": {
      "op": "==",
      "defined_out": [
        "a#4",
        "tmp%2#3",
        "tmp%5#5",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%5#5"
      ]
    },
    "632": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "633": {
      "op": "bytec 6 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\"",
        "a#4",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"build_nested_call_count\""
      ]
    },
    "635": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"build_nested_call_count\"",
        "1",
        "a#4",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"build_nested_call_count\"",
        "1"
      ]
    },
    "636": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "637": {
      "op": "pushbytes 0x151f7c7580",
      "defined_out": [
        "0x151f7c7580",
        "a#4",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c7580"
      ]
    },
    "644": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "645": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#4",
        "tmp%0#0",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "646": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "647": {
      "block": "main_for_header_3@62",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "pushint 3 // 3"
    },
    "649": {
      "op": "intc_3 // 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "650": {
      "op": "bury 10",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "652": {
      "op": "intc_3 // 2",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "653": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "654": {
      "op": "b main_for_body@59"
    },
    "657": {
      "block": "main_for_header_2@61",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_3 // 2"
    },
    "658": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "659": {
      "op": "bury 10",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "661": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "662": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "663": {
      "op": "b main_for_body@59"
    },
    "666": {
      "block": "main_for_header_1@60",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_1 // 1"
    },
    "667": {
      "op": "intc_3 // 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "668": {
      "op": "bury 10",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "670": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "671": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "672": {
      "op": "b main_for_body@59"
    },
    "675": {
      "block": "main_for_header_3@57",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "pushint 3 // 3"
    },
    "677": {
      "op": "intc_3 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "678": {
      "op": "bury 7",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "680": {
      "op": "intc_3 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "681": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "682": {
      "op": "b main_for_body@54"
    },
    "685": {
      "block": "main_for_header_2@56",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_3 // 2"
    },
    "686": {
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "687": {
      "op": "bury 7",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "689": {
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "690": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "691": {
      "op": "b main_for_body@54"
    },
    "694": {
      "block": "main_for_header_1@55",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_1 // 1"
    },
    "695": {
      "op": "intc_3 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "696": {
      "op": "bury 7",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "698": {
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "699": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "700": {
      "op": "b main_for_body@54"
    },
    "703": {
      "block": "main_mutate_tuple_in_storage_currently_supported_method_route@26",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%81#0"
      ]
    },
    "705": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%82#0"
      ]
    },
    "706": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "707": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%83#0"
      ]
    },
    "709": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "710": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0"
      ]
    },
    "711": {
      "op": "bytec 4 // \"twm\"",
      "defined_out": [
        "\"twm\"",
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0",
        "\"twm\""
      ]
    },
    "713": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "714": {
      "error": "check self.twm exists",
      "op": "assert // check self.twm exists",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "715": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "716": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "717": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0"
      ]
    },
    "718": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "720": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0",
        "maybe_value%0#0 (copy)",
        "2"
      ]
    },
    "721": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0"
      ]
    },
    "722": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "724": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0 (copy)",
        "extract_uint16%0#0"
      ]
    },
    "726": {
      "op": "dig 2",
      "defined_out": [
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0 (copy)",
        "extract_uint16%0#0",
        "extract_uint16%1#0 (copy)"
      ]
    },
    "728": {
      "op": "substring3",
      "defined_out": [
        "arr2#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "arr2#0"
      ]
    },
    "729": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "arr2#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "arr2#0",
        "0x0000000000000001"
      ]
    },
    "739": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "concat%0#0"
      ]
    },
    "740": {
      "op": "dup",
      "defined_out": [
        "concat%0#0",
        "concat%0#0 (copy)",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "741": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%0#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "concat%0#0",
        "extract_to_end%0#0"
      ]
    },
    "744": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%1#0",
        "len%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "concat%0#0",
        "len%2#0"
      ]
    },
    "745": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "concat%0#0",
        "extract_uint16%1#0",
        "len%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "concat%0#0",
        "len%2#0",
        "8"
      ]
    },
    "746": {
      "op": "/",
      "defined_out": [
        "concat%0#0",
        "div_floor%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "concat%0#0",
        "div_floor%0#0"
      ]
    },
    "747": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#1",
        "concat%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "concat%0#0",
        "as_bytes%0#1"
      ]
    },
    "748": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "751": {
      "op": "replace2 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "arr2#0"
      ]
    },
    "753": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "arr2#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "755": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "extract_uint16%1#0",
        "len%3#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "arr2#0",
        "len%3#0"
      ]
    },
    "756": {
      "op": "swap"
    },
    "757": {
      "op": "cover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "len%3#0"
      ]
    },
    "759": {
      "op": "substring3",
      "defined_out": [
        "arr2#0",
        "maybe_value%0#0",
        "substring3%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0"
      ]
    },
    "760": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "maybe_value%0#0",
        "substring3%5#0",
        "substring3%5#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "substring3%5#0 (copy)"
      ]
    },
    "761": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "substring3%5#0 (copy)",
        "0"
      ]
    },
    "762": {
      "op": "extract_uint64",
      "defined_out": [
        "arr2#0",
        "maybe_value%0#0",
        "substring3%5#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0"
      ]
    },
    "763": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "substring3%5#0 (copy)"
      ]
    },
    "765": {
      "op": "intc_2 // 8",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "substring3%5#0 (copy)",
        "8"
      ]
    },
    "766": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "extract_uint16%9#1",
        "maybe_value%0#0",
        "substring3%5#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%9#1"
      ]
    },
    "767": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%9#1",
        "substring3%5#0 (copy)"
      ]
    },
    "769": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr2#0",
        "extract_uint16%9#1",
        "maybe_value%0#0",
        "substring3%5#0",
        "substring3%5#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%9#1",
        "substring3%5#0 (copy)",
        "10"
      ]
    },
    "771": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "extract_uint16%10#0",
        "extract_uint16%9#1",
        "maybe_value%0#0",
        "substring3%5#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%9#1",
        "extract_uint16%10#0"
      ]
    },
    "772": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%9#1",
        "extract_uint16%10#0",
        "substring3%5#0 (copy)"
      ]
    },
    "774": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%10#0",
        "substring3%5#0 (copy)",
        "extract_uint16%9#1"
      ]
    },
    "776": {
      "op": "dig 2",
      "defined_out": [
        "arr2#0",
        "extract_uint16%10#0",
        "extract_uint16%10#0 (copy)",
        "extract_uint16%9#1",
        "maybe_value%0#0",
        "substring3%5#0",
        "substring3%5#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%10#0",
        "substring3%5#0 (copy)",
        "extract_uint16%9#1",
        "extract_uint16%10#0 (copy)"
      ]
    },
    "778": {
      "op": "substring3",
      "defined_out": [
        "arr2#0",
        "extract_uint16%10#0",
        "maybe_value%0#0",
        "substring3%5#0",
        "substring3%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%10#0",
        "substring3%6#0"
      ]
    },
    "779": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "extract_uint16%10#0",
        "maybe_value%0#0",
        "substring3%5#0",
        "tmp%3#0",
        "tmp%4#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%10#0",
        "tmp%4#2"
      ]
    },
    "782": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%10#0",
        "tmp%4#2",
        "substring3%5#0 (copy)"
      ]
    },
    "784": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "extract_uint16%10#0",
        "len%4#0",
        "maybe_value%0#0",
        "substring3%5#0",
        "tmp%3#0",
        "tmp%4#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "substring3%5#0",
        "tmp%3#0",
        "extract_uint16%10#0",
        "tmp%4#2",
        "len%4#0"
      ]
    },
    "785": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "extract_uint16%10#0",
        "tmp%4#2",
        "len%4#0",
        "substring3%5#0"
      ]
    },
    "787": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "tmp%4#2",
        "len%4#0",
        "substring3%5#0",
        "extract_uint16%10#0"
      ]
    },
    "789": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "tmp%4#2",
        "substring3%5#0",
        "extract_uint16%10#0",
        "len%4#0"
      ]
    },
    "791": {
      "op": "substring3",
      "defined_out": [
        "arr2#0",
        "maybe_value%0#0",
        "substring3%7#0",
        "tmp%3#0",
        "tmp%4#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "tmp%4#2",
        "substring3%7#0"
      ]
    },
    "792": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2"
      ]
    },
    "795": {
      "op": "dig 3",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2",
        "arr2#0 (copy)"
      ]
    },
    "797": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "data_length%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2",
        "data_length%0#1"
      ]
    },
    "798": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr2#0",
        "data_length%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2",
        "data_length%0#1",
        "4"
      ]
    },
    "800": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2",
        "current_tail_offset%0#1"
      ]
    },
    "801": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%4#2",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "tmp%3#0"
      ]
    },
    "803": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%4#2",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0"
      ]
    },
    "804": {
      "op": "dig 3",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%4#2 (copy)",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%4#2",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "tmp%4#2 (copy)"
      ]
    },
    "806": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "length%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%4#2",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "length%0#1"
      ]
    },
    "807": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "as_bytes%2#0",
        "current_tail_offset%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%4#2",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "as_bytes%2#0"
      ]
    },
    "808": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "length_uint16%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#2",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%4#2",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "length_uint16%0#1"
      ]
    },
    "811": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "length_uint16%0#1",
        "tmp%4#2"
      ]
    },
    "813": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "encoded_value%0#1"
      ]
    },
    "814": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "encoded_value%0#1 (copy)",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "encoded_value%0#1",
        "encoded_value%0#1 (copy)"
      ]
    },
    "815": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "data_length%1#2",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "encoded_value%0#1",
        "data_length%1#2"
      ]
    },
    "816": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "arr2#0",
        "current_tail_offset%0#1",
        "data_length%1#2",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "encoded_value%0#1",
        "data_length%1#2",
        "12"
      ]
    },
    "818": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "val_as_bytes%0#0",
        "encoded_value%0#1",
        "current_tail_offset%1#2"
      ]
    },
    "819": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "val_as_bytes%0#0"
      ]
    },
    "821": {
      "op": "bytec_1 // 0x000c",
      "defined_out": [
        "0x000c",
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "val_as_bytes%0#0",
        "0x000c"
      ]
    },
    "822": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1"
      ]
    },
    "823": {
      "op": "dig 4",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2",
        "tmp%5#2 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "tmp%5#2 (copy)"
      ]
    },
    "825": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%0#1",
        "length%1#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "length%1#1"
      ]
    },
    "826": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "as_bytes%4#1",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "as_bytes%4#1"
      ]
    },
    "827": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%0#1",
        "length_uint16%1#1",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "tmp%5#2",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "length_uint16%1#1"
      ]
    },
    "830": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "length_uint16%1#1",
        "tmp%5#2"
      ]
    },
    "832": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%0#1",
        "encoded_value%1#1",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded_value%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%1#1"
      ]
    },
    "833": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%1#1",
        "encoded_value%0#1"
      ]
    },
    "835": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "encoded_value%0#1",
        "encoded_value%1#1"
      ]
    },
    "836": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "maybe_value%0#0",
        "tail%2#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "current_tail_offset%1#2",
        "encoded%4#1",
        "tail%2#2"
      ]
    },
    "837": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded%4#1",
        "tail%2#2",
        "current_tail_offset%1#2"
      ]
    },
    "839": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "as_bytes%5#2",
        "current_tail_offset%0#1",
        "encoded%4#1",
        "maybe_value%0#0",
        "tail%2#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded%4#1",
        "tail%2#2",
        "as_bytes%5#2"
      ]
    },
    "840": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded%4#1",
        "maybe_value%0#0",
        "offset_as_uint16%2#2",
        "tail%2#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded%4#1",
        "tail%2#2",
        "offset_as_uint16%2#2"
      ]
    },
    "843": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "tail%2#2",
        "offset_as_uint16%2#2",
        "encoded%4#1"
      ]
    },
    "845": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "tail%2#2",
        "encoded%4#1",
        "offset_as_uint16%2#2"
      ]
    },
    "846": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded%5#1",
        "maybe_value%0#0",
        "tail%2#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "tail%2#2",
        "encoded%5#1"
      ]
    },
    "847": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded%5#1",
        "tail%2#2"
      ]
    },
    "848": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded%6#1",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "current_tail_offset%0#1",
        "encoded%6#1"
      ]
    },
    "849": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%0#1",
        "encoded%6#1",
        "arr2#0"
      ]
    },
    "851": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%0#1",
        "arr2#0",
        "encoded%6#1"
      ]
    },
    "852": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%0#1",
        "maybe_value%0#0",
        "tail%3#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%0#1",
        "tail%3#2"
      ]
    },
    "853": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%3#2",
        "current_tail_offset%0#1"
      ]
    },
    "854": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#1",
        "maybe_value%0#0",
        "tail%3#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%3#2",
        "as_bytes%6#1"
      ]
    },
    "855": {
      "op": "extract 6 2",
      "defined_out": [
        "maybe_value%0#0",
        "offset_as_uint16%3#2",
        "tail%3#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%3#2",
        "offset_as_uint16%3#2"
      ]
    },
    "858": {
      "op": "bytec_3 // 0x0004",
      "defined_out": [
        "0x0004",
        "maybe_value%0#0",
        "offset_as_uint16%3#2",
        "tail%3#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%3#2",
        "offset_as_uint16%3#2",
        "0x0004"
      ]
    },
    "859": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%3#2",
        "0x0004",
        "offset_as_uint16%3#2"
      ]
    },
    "860": {
      "op": "concat",
      "defined_out": [
        "encoded%7#1",
        "maybe_value%0#0",
        "tail%3#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%3#2",
        "encoded%7#1"
      ]
    },
    "861": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%7#1",
        "tail%3#2"
      ]
    },
    "862": {
      "op": "concat",
      "defined_out": [
        "encoded%8#2",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%8#2"
      ]
    },
    "863": {
      "op": "bytec 4 // \"twm\"",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%8#2",
        "\"twm\""
      ]
    },
    "865": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"twm\"",
        "encoded%8#2"
      ]
    },
    "866": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "867": {
      "op": "intc_1 // 1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "868": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "869": {
      "block": "main_mutate_local_tuple_route@22",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%72#0"
      ]
    },
    "871": {
      "op": "!",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%73#0"
      ]
    },
    "872": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "873": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%74#0"
      ]
    },
    "875": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "876": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "877": {
      "op": "bury 7",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "879": {
      "block": "main_for_header@23",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "881": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "3"
      ]
    },
    "883": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "continue_looping%0#0"
      ]
    },
    "884": {
      "op": "bz main_after_for@25",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "887": {
      "op": "dig 6",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "889": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "890": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "i#0 (copy)",
        "8"
      ]
    },
    "891": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "bytes_offset%0#0"
      ]
    },
    "892": {
      "op": "pushbytes 0x000000000000000000000000000000010000000000000002",
      "defined_out": [
        "0x000000000000000000000000000000010000000000000002",
        "bytes_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "bytes_offset%0#0",
        "0x000000000000000000000000000000010000000000000002"
      ]
    },
    "918": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "0x000000000000000000000000000000010000000000000002",
        "bytes_offset%0#0"
      ]
    },
    "919": {
      "op": "intc_2 // 8",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "0x000000000000000000000000000000010000000000000002",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "920": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "encoded_element%0#0"
      ]
    },
    "921": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "encoded_element%0#0",
        "i#0 (copy)"
      ]
    },
    "923": {
      "op": "itob",
      "defined_out": [
        "encoded_element%0#0",
        "i#0",
        "tmp%0#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "encoded_element%0#0",
        "tmp%0#5"
      ]
    },
    "924": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "tmp%1#3"
      ]
    },
    "925": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "926": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0",
        "1"
      ]
    },
    "927": {
      "op": "+",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "928": {
      "op": "bury 7",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "930": {
      "op": "b main_for_header@23"
    },
    "933": {
      "block": "main_after_for@25",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "pushbytes 0x151f7c750004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000",
      "defined_out": [
        "0x151f7c750004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c750004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000"
      ]
    },
    "985": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "986": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "987": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "988": {
      "block": "main_load_tuple_from_local_state_or_default_route@18",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%64#0"
      ]
    },
    "990": {
      "op": "!",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%65#0"
      ]
    },
    "991": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "992": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%66#0"
      ]
    },
    "994": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "995": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "998": {
      "op": "extract 2 0",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key#0"
      ]
    },
    "1001": {
      "callsub": "test_cases.tuple_support.nested_tuples.echo",
      "op": "callsub echo",
      "defined_out": [
        "local#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "local#0"
      ]
    },
    "1004": {
      "callsub": "test_cases.tuple_support.nested_tuples.get_sender_inefficiently",
      "op": "callsub get_sender_inefficiently",
      "defined_out": [
        "local#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4"
      ]
    },
    "1007": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "local#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "4"
      ]
    },
    "1009": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "4",
        "local#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "4",
        "2"
      ]
    },
    "1010": {
      "callsub": "test_cases.tuple_support.nested_tuples.simple_tup",
      "op": "callsub simple_tup",
      "defined_out": [
        "local#0",
        "tmp%1#4",
        "tmp%2#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "tmp%2#3",
        "tmp%3#0"
      ]
    },
    "1013": {
      "op": "bury 5",
      "defined_out": [
        "local#0",
        "tmp%1#4",
        "tmp%2#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "tmp%2#3"
      ]
    },
    "1015": {
      "op": "bury 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4"
      ]
    },
    "1017": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "0"
      ]
    },
    "1018": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%1#4",
        "0",
        "local#0"
      ]
    },
    "1020": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1021": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "1022": {
      "op": "bury 11",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0"
      ]
    },
    "1024": {
      "op": "bz main_ternary_false@20",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1027": {
      "op": "dig 9",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "1029": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%2#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1030": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "1031": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#3",
        "tmp%3#0",
        "tmp%4#3"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "tmp%4#3"
      ]
    },
    "1032": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#3",
        "maybe_value%0#0"
      ]
    },
    "1033": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "maybe_value%0#0",
        "tmp%2#3",
        "tmp%3#0",
        "tmp%4#3"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#3",
        "maybe_value%0#0",
        "8"
      ]
    },
    "1034": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2",
        "tmp%2#3",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ]
    },
    "1035": {
      "block": "main_ternary_merge@21",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ],
      "op": "swap",
      "defined_out": [
        "ternary_result%0.a#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.b#2",
        "ternary_result%0.a#2"
      ]
    },
    "1036": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.b#2",
        "val_as_bytes%8#0"
      ]
    },
    "1037": {
      "op": "swap",
      "defined_out": [
        "ternary_result%0.b#2",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%8#0",
        "ternary_result%0.b#2"
      ]
    },
    "1038": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ]
    },
    "1039": {
      "op": "concat",
      "defined_out": [
        "encoded%24#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%24#0"
      ]
    },
    "1040": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%24#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%24#0",
        "0x151f7c75"
      ]
    },
    "1041": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded%24#0"
      ]
    },
    "1042": {
      "op": "concat",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%71#0"
      ]
    },
    "1043": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1044": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1045": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1046": {
      "block": "main_ternary_false@20",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "ternary_result%0.a#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2"
      ]
    },
    "1048": {
      "op": "dig 2",
      "defined_out": [
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ]
    },
    "1050": {
      "op": "b main_ternary_merge@21"
    },
    "1053": {
      "block": "main_load_tuple_from_box_or_default_route@14",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%55#0"
      ]
    },
    "1055": {
      "op": "!",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%56#0"
      ]
    },
    "1056": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1057": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%57#0"
      ]
    },
    "1059": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1060": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%4#0"
      ]
    },
    "1063": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%4#0",
        "reinterpret_Encoded((uint64,uint64))%4#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%4#0",
        "reinterpret_Encoded((uint64,uint64))%4#0 (copy)"
      ]
    },
    "1064": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,uint64))%4#0",
        "reinterpret_Encoded((uint64,uint64))%4#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%4#0",
        "reinterpret_Encoded((uint64,uint64))%4#0 (copy)",
        "0"
      ]
    },
    "1065": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%4#0",
        "key.a#0"
      ]
    },
    "1066": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%4#0"
      ]
    },
    "1067": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%4#0",
        "8"
      ]
    },
    "1068": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "key.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "key.b#0"
      ]
    },
    "1069": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "key.a#0"
      ]
    },
    "1070": {
      "op": "itob",
      "defined_out": [
        "key.b#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "val_as_bytes%0#0"
      ]
    },
    "1071": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "key.b#0"
      ]
    },
    "1072": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1073": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%1#1"
      ]
    },
    "1074": {
      "op": "bytec_2 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded%1#1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%1#1",
        "\"box\""
      ]
    },
    "1075": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"box\"",
        "encoded%1#1"
      ]
    },
    "1076": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1077": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "4"
      ]
    },
    "1079": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "4",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "4",
        "2"
      ]
    },
    "1080": {
      "callsub": "test_cases.tuple_support.nested_tuples.simple_tup",
      "op": "callsub simple_tup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ]
    },
    "1083": {
      "op": "bury 6",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "tmp%0#2"
      ]
    },
    "1085": {
      "op": "bury 6",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1087": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1088": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "1089": {
      "op": "bury 11",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0"
      ]
    },
    "1091": {
      "op": "bz main_ternary_false@16",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1094": {
      "op": "dig 9",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "1096": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1097": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "1098": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "tmp%2#3"
      ]
    },
    "1099": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%2#3",
        "maybe_value%0#0"
      ]
    },
    "1100": {
      "op": "intc_2 // 8",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%2#3",
        "maybe_value%0#0",
        "8"
      ]
    },
    "1101": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ]
    },
    "1102": {
      "block": "main_ternary_merge@17",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ],
      "op": "swap",
      "defined_out": [
        "ternary_result%0.a#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.b#2",
        "ternary_result%0.a#2"
      ]
    },
    "1103": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.b#2",
        "val_as_bytes%6#0"
      ]
    },
    "1104": {
      "op": "swap",
      "defined_out": [
        "ternary_result%0.b#2",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%6#0",
        "ternary_result%0.b#2"
      ]
    },
    "1105": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "1106": {
      "op": "concat",
      "defined_out": [
        "encoded%21#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%21#0"
      ]
    },
    "1107": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%21#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%21#0",
        "0x151f7c75"
      ]
    },
    "1108": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded%21#0"
      ]
    },
    "1109": {
      "op": "concat",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%63#0"
      ]
    },
    "1110": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1111": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1112": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1113": {
      "block": "main_ternary_false@16",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "ternary_result%0.a#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2"
      ]
    },
    "1115": {
      "op": "dig 4",
      "defined_out": [
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ]
    },
    "1117": {
      "op": "b main_ternary_merge@17"
    },
    "1120": {
      "block": "main_maybe_load_tuple_from_box_route@10",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%45#0"
      ]
    },
    "1122": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%46#0"
      ]
    },
    "1123": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1124": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%47#0"
      ]
    },
    "1126": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1127": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%3#0"
      ]
    },
    "1130": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%3#0",
        "reinterpret_Encoded((uint64,uint64))%3#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%3#0",
        "reinterpret_Encoded((uint64,uint64))%3#0 (copy)"
      ]
    },
    "1131": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,uint64))%3#0",
        "reinterpret_Encoded((uint64,uint64))%3#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%3#0",
        "reinterpret_Encoded((uint64,uint64))%3#0 (copy)",
        "0"
      ]
    },
    "1132": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%3#0",
        "key.a#0"
      ]
    },
    "1133": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%3#0"
      ]
    },
    "1134": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%3#0",
        "8"
      ]
    },
    "1135": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "key.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "key.b#0"
      ]
    },
    "1136": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "key.a#0"
      ]
    },
    "1137": {
      "op": "itob",
      "defined_out": [
        "key.b#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "val_as_bytes%0#0"
      ]
    },
    "1138": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "key.b#0"
      ]
    },
    "1139": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1140": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%1#1"
      ]
    },
    "1141": {
      "op": "bytec_2 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded%1#1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%1#1",
        "\"box\""
      ]
    },
    "1142": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"box\"",
        "encoded%1#1"
      ]
    },
    "1143": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1144": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "exists#0"
      ]
    },
    "1145": {
      "op": "dup",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "exists#0",
        "exists#0 (copy)"
      ]
    },
    "1146": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "exists#0",
        "maybe_value%0#0",
        "exists#0"
      ]
    },
    "1148": {
      "op": "bury 10",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "exists#0",
        "maybe_value%0#0"
      ]
    },
    "1150": {
      "op": "bury 11",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "exists#0"
      ]
    },
    "1152": {
      "op": "bz main_ternary_false@12",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1155": {
      "op": "dig 9",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "1157": {
      "op": "dup",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1158": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "1159": {
      "op": "extract_uint64",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "tmp%0#2"
      ]
    },
    "1160": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "maybe_value%0#0"
      ]
    },
    "1161": {
      "op": "intc_2 // 8",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "maybe_value%0#0",
        "8"
      ]
    },
    "1162": {
      "op": "extract_uint64",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0",
        "maybe_value.a#0",
        "maybe_value.b#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ]
    },
    "1163": {
      "block": "main_ternary_merge@13",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ],
      "op": "swap",
      "defined_out": [
        "maybe_value.a#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value.b#0",
        "maybe_value.a#0"
      ]
    },
    "1164": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value.b#0",
        "val_as_bytes%4#0"
      ]
    },
    "1165": {
      "op": "swap",
      "defined_out": [
        "maybe_value.b#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%4#0",
        "maybe_value.b#0"
      ]
    },
    "1166": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "1167": {
      "op": "concat",
      "defined_out": [
        "encoded%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%15#0"
      ]
    },
    "1168": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "encoded%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%15#0",
        "0x00"
      ]
    },
    "1171": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "encoded%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%15#0",
        "0x00",
        "0"
      ]
    },
    "1172": {
      "op": "dig 10",
      "defined_out": [
        "0",
        "0x00",
        "encoded%15#0",
        "exists#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%15#0",
        "0x00",
        "0",
        "exists#0"
      ]
    },
    "1174": {
      "op": "setbit",
      "defined_out": [
        "encoded%15#0",
        "encoded_bit%0#0",
        "exists#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%15#0",
        "encoded_bit%0#0"
      ]
    },
    "1175": {
      "op": "concat",
      "defined_out": [
        "encoded%18#0",
        "exists#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%18#0"
      ]
    },
    "1176": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%18#0",
        "exists#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%18#0",
        "0x151f7c75"
      ]
    },
    "1177": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded%18#0"
      ]
    },
    "1178": {
      "op": "concat",
      "defined_out": [
        "exists#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%54#0"
      ]
    },
    "1179": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1180": {
      "op": "intc_1 // 1",
      "defined_out": [
        "exists#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1181": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1182": {
      "block": "main_ternary_false@12",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "pushbytes \"\""
    },
    "1184": {
      "op": "dup",
      "defined_out": [
        "maybe_value.a#0",
        "maybe_value.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ]
    },
    "1185": {
      "op": "b main_ternary_merge@13"
    },
    "1188": {
      "block": "main_load_tuple_from_box_route@9",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%36#0"
      ]
    },
    "1190": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%37#0"
      ]
    },
    "1191": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1192": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%38#0"
      ]
    },
    "1194": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1195": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%2#0"
      ]
    },
    "1198": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%2#0",
        "reinterpret_Encoded((uint64,uint64))%2#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%2#0",
        "reinterpret_Encoded((uint64,uint64))%2#0 (copy)"
      ]
    },
    "1199": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,uint64))%2#0",
        "reinterpret_Encoded((uint64,uint64))%2#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%2#0",
        "reinterpret_Encoded((uint64,uint64))%2#0 (copy)",
        "0"
      ]
    },
    "1200": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%2#0",
        "key.a#0"
      ]
    },
    "1201": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%2#0"
      ]
    },
    "1202": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%2#0",
        "8"
      ]
    },
    "1203": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "key.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "key.b#0"
      ]
    },
    "1204": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "key.a#0"
      ]
    },
    "1205": {
      "op": "itob",
      "defined_out": [
        "key.b#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "val_as_bytes%0#0"
      ]
    },
    "1206": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "key.b#0"
      ]
    },
    "1207": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1208": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%1#1"
      ]
    },
    "1209": {
      "op": "bytec_2 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded%1#1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%1#1",
        "\"box\""
      ]
    },
    "1210": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"box\"",
        "encoded%1#1"
      ]
    },
    "1211": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1212": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1213": {
      "error": "check self.box entry exists",
      "op": "assert // check self.box entry exists",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "1214": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1215": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "1216": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "tmp%0#2"
      ]
    },
    "1217": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "maybe_value%0#0"
      ]
    },
    "1218": {
      "op": "intc_2 // 8",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "maybe_value%0#0",
        "8"
      ]
    },
    "1219": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "tmp%1#5"
      ]
    },
    "1220": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%1#5",
        "tmp%0#2"
      ]
    },
    "1221": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%1#5",
        "val_as_bytes%2#0"
      ]
    },
    "1222": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%2#0",
        "tmp%1#5"
      ]
    },
    "1223": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "1224": {
      "op": "concat",
      "defined_out": [
        "encoded%12#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%12#0"
      ]
    },
    "1225": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%12#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%12#0",
        "0x151f7c75"
      ]
    },
    "1226": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded%12#0"
      ]
    },
    "1227": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%44#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%44#0"
      ]
    },
    "1228": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1229": {
      "op": "intc_1 // 1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1230": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1231": {
      "block": "main_is_tuple_in_box_route@8",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%28#0"
      ]
    },
    "1233": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%29#0"
      ]
    },
    "1234": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1235": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%30#0"
      ]
    },
    "1237": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1238": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%1#0"
      ]
    },
    "1241": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%1#0",
        "reinterpret_Encoded((uint64,uint64))%1#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%1#0",
        "reinterpret_Encoded((uint64,uint64))%1#0 (copy)"
      ]
    },
    "1242": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,uint64))%1#0",
        "reinterpret_Encoded((uint64,uint64))%1#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%1#0",
        "reinterpret_Encoded((uint64,uint64))%1#0 (copy)",
        "0"
      ]
    },
    "1243": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%1#0",
        "key.a#0"
      ]
    },
    "1244": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%1#0"
      ]
    },
    "1245": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%1#0",
        "8"
      ]
    },
    "1246": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "key.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "key.b#0"
      ]
    },
    "1247": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "key.a#0"
      ]
    },
    "1248": {
      "op": "itob",
      "defined_out": [
        "key.b#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "val_as_bytes%0#0"
      ]
    },
    "1249": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "key.b#0"
      ]
    },
    "1250": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1251": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%1#1"
      ]
    },
    "1252": {
      "op": "bytec_2 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded%1#1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%1#1",
        "\"box\""
      ]
    },
    "1253": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"box\"",
        "encoded%1#1"
      ]
    },
    "1254": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1255": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1256": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0"
      ]
    },
    "1258": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0",
        "0x00"
      ]
    },
    "1261": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0",
        "0x00",
        "0"
      ]
    },
    "1262": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x00",
        "0",
        "maybe_exists%0#0"
      ]
    },
    "1264": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_bool%0#0"
      ]
    },
    "1265": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "1266": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "1267": {
      "op": "concat",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%35#0"
      ]
    },
    "1268": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1269": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1270": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1271": {
      "block": "main_store_tuple_in_box_route@7",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%22#0"
      ]
    },
    "1273": {
      "op": "!",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%23#0"
      ]
    },
    "1274": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1275": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%24#0"
      ]
    },
    "1277": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1278": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%0#0"
      ]
    },
    "1281": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64))%0#0 (copy)"
      ]
    },
    "1282": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64))%0#0 (copy)",
        "0"
      ]
    },
    "1283": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%0#0",
        "key.a#0"
      ]
    },
    "1284": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%0#0"
      ]
    },
    "1285": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "reinterpret_Encoded((uint64,uint64))%0#0",
        "8"
      ]
    },
    "1286": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#0",
        "key.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "key.b#0"
      ]
    },
    "1287": {
      "op": "dup",
      "defined_out": [
        "key.a#0",
        "key.b#0",
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "key.b#0",
        "key.b#0 (copy)"
      ]
    },
    "1288": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key.a#0",
        "key.b#0",
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "key.b#0",
        "key.b#0 (copy)",
        "1"
      ]
    },
    "1289": {
      "op": "+",
      "defined_out": [
        "key.a#0",
        "key.b#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.a#0",
        "key.b#0",
        "tmp%0#2"
      ]
    },
    "1290": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "tmp%0#2",
        "key.a#0"
      ]
    },
    "1292": {
      "op": "itob",
      "defined_out": [
        "key.b#0",
        "tmp%0#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "key.b#0",
        "tmp%0#2",
        "val_as_bytes%0#0"
      ]
    },
    "1293": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "key.b#0"
      ]
    },
    "1295": {
      "op": "itob",
      "defined_out": [
        "tmp%0#2",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1296": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#2",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1298": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0"
      ]
    },
    "1299": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "tmp%0#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "encoded%1#1"
      ]
    },
    "1300": {
      "op": "bytec_2 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded%1#1",
        "tmp%0#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "encoded%1#1",
        "\"box\""
      ]
    },
    "1301": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "\"box\"",
        "encoded%1#1"
      ]
    },
    "1302": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1303": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "tmp%0#2"
      ]
    },
    "1305": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "1306": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "1308": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "1309": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded%4#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "encoded%4#1"
      ]
    },
    "1310": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1311": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1312": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1313": {
      "block": "main_load_tuple_route@6",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%11#0"
      ]
    },
    "1315": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%12#0"
      ]
    },
    "1316": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1317": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%13#0"
      ]
    },
    "1319": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1320": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0"
      ]
    },
    "1321": {
      "op": "bytec 7 // \"pwl\"",
      "defined_out": [
        "\"pwl\"",
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0",
        "\"pwl\""
      ]
    },
    "1323": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1324": {
      "error": "check self.pwl exists",
      "op": "assert // check self.pwl exists",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "1325": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1326": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "1327": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1328": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1330": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0",
        "maybe_value%0#0 (copy)",
        "2"
      ]
    },
    "1331": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0"
      ]
    },
    "1332": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1334": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0 (copy)",
        "extract_uint16%0#0"
      ]
    },
    "1336": {
      "op": "dig 2",
      "defined_out": [
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "maybe_value%0#0 (copy)",
        "extract_uint16%0#0",
        "extract_uint16%1#0 (copy)"
      ]
    },
    "1338": {
      "op": "substring3",
      "defined_out": [
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0"
      ]
    },
    "1339": {
      "op": "dup",
      "defined_out": [
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%0#0",
        "substring3%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "substring3%0#0 (copy)"
      ]
    },
    "1340": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "substring3%0#0 (copy)",
        "0"
      ]
    },
    "1341": {
      "op": "extract_uint64",
      "defined_out": [
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2"
      ]
    },
    "1342": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2",
        "substring3%0#0 (copy)"
      ]
    },
    "1344": {
      "op": "extract 8 8",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2",
        "extract%1#6"
      ]
    },
    "1347": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%0#0 (copy)"
      ]
    },
    "1349": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "extract%1#6",
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%0#0",
        "substring3%0#0 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%0#0 (copy)",
        "16"
      ]
    },
    "1351": {
      "op": "extract_uint16",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%2#0",
        "maybe_value%0#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2",
        "extract%1#6",
        "extract_uint16%2#0"
      ]
    },
    "1352": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2",
        "extract%1#6",
        "extract_uint16%2#0",
        "substring3%0#0 (copy)"
      ]
    },
    "1354": {
      "op": "len",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%2#0",
        "len%0#0",
        "maybe_value%0#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2",
        "extract%1#6",
        "extract_uint16%2#0",
        "len%0#0"
      ]
    },
    "1355": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "extract_uint16%2#0",
        "len%0#0",
        "substring3%0#0"
      ]
    },
    "1357": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%0#0",
        "extract_uint16%2#0",
        "len%0#0"
      ]
    },
    "1359": {
      "op": "substring3",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0"
      ]
    },
    "1360": {
      "op": "dup",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1361": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "0"
      ]
    },
    "1362": {
      "op": "extract_uint64",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5"
      ]
    },
    "1363": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "substring3%1#0 (copy)"
      ]
    },
    "1365": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "extract%1#6",
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "substring3%1#0 (copy)",
        "8"
      ]
    },
    "1366": {
      "op": "extract_uint16",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%3#0"
      ]
    },
    "1367": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%3#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1369": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%3#0",
        "substring3%1#0 (copy)",
        "10"
      ]
    },
    "1371": {
      "op": "extract_uint16",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%3#0",
        "extract_uint16%4#0"
      ]
    },
    "1372": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1374": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%4#0",
        "substring3%1#0 (copy)",
        "extract_uint16%3#0"
      ]
    },
    "1376": {
      "op": "dig 2",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "extract_uint16%4#0 (copy)",
        "maybe_value%0#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%4#0",
        "substring3%1#0 (copy)",
        "extract_uint16%3#0",
        "extract_uint16%4#0 (copy)"
      ]
    },
    "1378": {
      "op": "substring3",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%4#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "substring3%2#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%4#0",
        "substring3%2#0"
      ]
    },
    "1379": {
      "op": "extract 2 0",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%4#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%4#0",
        "tmp%2#0"
      ]
    },
    "1382": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%4#0",
        "tmp%2#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1384": {
      "op": "len",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "extract_uint16%4#0",
        "len%1#0",
        "maybe_value%0#0",
        "substring3%1#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "substring3%1#0",
        "tmp%1#5",
        "extract_uint16%4#0",
        "tmp%2#0",
        "len%1#0"
      ]
    },
    "1385": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "extract_uint16%4#0",
        "tmp%2#0",
        "len%1#0",
        "substring3%1#0"
      ]
    },
    "1387": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "len%1#0",
        "substring3%1#0",
        "extract_uint16%4#0"
      ]
    },
    "1389": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "substring3%1#0",
        "extract_uint16%4#0",
        "len%1#0"
      ]
    },
    "1391": {
      "op": "substring3",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "substring3%3#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "substring3%3#0"
      ]
    },
    "1392": {
      "op": "extract 2 0",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5"
      ]
    },
    "1395": {
      "op": "dig 6",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1397": {
      "op": "len",
      "defined_out": [
        "extract%1#6",
        "extract_uint16%1#0",
        "len%2#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "len%2#0"
      ]
    },
    "1398": {
      "op": "uncover 7",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "extract_uint16%1#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "len%2#0",
        "maybe_value%0#0"
      ]
    },
    "1400": {
      "op": "uncover 7",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "len%2#0",
        "maybe_value%0#0",
        "extract_uint16%1#0"
      ]
    },
    "1402": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "maybe_value%0#0",
        "extract_uint16%1#0",
        "len%2#0"
      ]
    },
    "1404": {
      "op": "substring3",
      "defined_out": [
        "extract%1#6",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2"
      ]
    },
    "1405": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "tmp%0#2"
      ]
    },
    "1407": {
      "op": "itob",
      "defined_out": [
        "extract%1#6",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "extract%1#6",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "val_as_bytes%0#0"
      ]
    },
    "1408": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "val_as_bytes%0#0",
        "extract%1#6"
      ]
    },
    "1410": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1"
      ]
    },
    "1411": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "tmp%1#5"
      ]
    },
    "1413": {
      "op": "itob",
      "defined_out": [
        "encoded%1#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0"
      ]
    },
    "1414": {
      "op": "dig 4",
      "defined_out": [
        "encoded%1#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1416": {
      "op": "len",
      "defined_out": [
        "encoded%1#1",
        "length%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "length%0#1"
      ]
    },
    "1417": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#1",
        "encoded%1#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "as_bytes%0#1"
      ]
    },
    "1418": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded%1#1",
        "length_uint16%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#0",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%2#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "length_uint16%0#1"
      ]
    },
    "1421": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "length_uint16%0#1",
        "tmp%2#0"
      ]
    },
    "1423": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1"
      ]
    },
    "1424": {
      "op": "dup",
      "defined_out": [
        "encoded%1#1",
        "encoded_value%0#1",
        "encoded_value%0#1 (copy)",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1",
        "encoded_value%0#1 (copy)"
      ]
    },
    "1425": {
      "op": "len",
      "defined_out": [
        "data_length%0#1",
        "encoded%1#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1",
        "data_length%0#1"
      ]
    },
    "1426": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "data_length%0#1",
        "encoded%1#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1",
        "data_length%0#1",
        "12"
      ]
    },
    "1428": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1",
        "current_tail_offset%0#1"
      ]
    },
    "1429": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "val_as_bytes%1#0"
      ]
    },
    "1431": {
      "op": "bytec_1 // 0x000c",
      "defined_out": [
        "0x000c",
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "val_as_bytes%1#0",
        "0x000c"
      ]
    },
    "1432": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0"
      ]
    },
    "1433": {
      "op": "dig 5",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5",
        "tmp%3#5 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "tmp%3#5 (copy)"
      ]
    },
    "1435": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "length%1#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "length%1#1"
      ]
    },
    "1436": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "as_bytes%2#0"
      ]
    },
    "1437": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "length_uint16%1#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%3#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#5",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "length_uint16%1#1"
      ]
    },
    "1440": {
      "op": "uncover 6",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "length_uint16%1#1",
        "tmp%3#5"
      ]
    },
    "1442": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "encoded_value%1#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "encoded_value%1#1"
      ]
    },
    "1443": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "encoded_value%1#1",
        "encoded_value%0#1"
      ]
    },
    "1445": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "encoded_value%1#1"
      ]
    },
    "1446": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "maybe_value%0#0",
        "substring3%4#2",
        "tail%1#1",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "tail%1#1"
      ]
    },
    "1447": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "encoded%3#0",
        "tail%1#1",
        "current_tail_offset%0#1"
      ]
    },
    "1449": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#1",
        "encoded%1#1",
        "encoded%3#0",
        "maybe_value%0#0",
        "substring3%4#2",
        "tail%1#1",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "encoded%3#0",
        "tail%1#1",
        "as_bytes%3#1"
      ]
    },
    "1450": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded%1#1",
        "encoded%3#0",
        "maybe_value%0#0",
        "offset_as_uint16%1#1",
        "substring3%4#2",
        "tail%1#1",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "encoded%3#0",
        "tail%1#1",
        "offset_as_uint16%1#1"
      ]
    },
    "1453": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "tail%1#1",
        "offset_as_uint16%1#1",
        "encoded%3#0"
      ]
    },
    "1455": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "tail%1#1",
        "encoded%3#0",
        "offset_as_uint16%1#1"
      ]
    },
    "1456": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "encoded%4#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tail%1#1",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "tail%1#1",
        "encoded%4#1"
      ]
    },
    "1457": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "encoded%4#1",
        "tail%1#1"
      ]
    },
    "1458": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "encoded%5#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%1#1",
        "encoded%5#1"
      ]
    },
    "1459": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%5#1",
        "encoded%1#1"
      ]
    },
    "1460": {
      "op": "bytec 5 // 0x0012",
      "defined_out": [
        "0x0012",
        "encoded%1#1",
        "encoded%5#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%5#1",
        "encoded%1#1",
        "0x0012"
      ]
    },
    "1462": {
      "op": "concat",
      "defined_out": [
        "encoded%5#1",
        "encoded%6#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%5#1",
        "encoded%6#1"
      ]
    },
    "1463": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%6#1",
        "encoded%5#1"
      ]
    },
    "1464": {
      "op": "concat",
      "defined_out": [
        "encoded%7#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%7#1"
      ]
    },
    "1465": {
      "op": "dup",
      "defined_out": [
        "encoded%7#1",
        "encoded%7#1 (copy)",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%7#1",
        "encoded%7#1 (copy)"
      ]
    },
    "1466": {
      "op": "len",
      "defined_out": [
        "data_length%3#0",
        "encoded%7#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%7#1",
        "data_length%3#0"
      ]
    },
    "1467": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "data_length%3#0",
        "encoded%7#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%7#1",
        "data_length%3#0",
        "4"
      ]
    },
    "1469": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded%7#1",
        "maybe_value%0#0",
        "substring3%4#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "encoded%7#1",
        "current_tail_offset%3#0"
      ]
    },
    "1470": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "substring3%4#2",
        "current_tail_offset%3#0",
        "encoded%7#1"
      ]
    },
    "1471": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%3#0",
        "encoded%7#1",
        "substring3%4#2"
      ]
    },
    "1473": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "maybe_value%0#0",
        "tail%4#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%3#0",
        "tail%4#0"
      ]
    },
    "1474": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "current_tail_offset%3#0"
      ]
    },
    "1475": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#1",
        "maybe_value%0#0",
        "tail%4#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "as_bytes%6#1"
      ]
    },
    "1476": {
      "op": "extract 6 2",
      "defined_out": [
        "maybe_value%0#0",
        "offset_as_uint16%4#0",
        "tail%4#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "offset_as_uint16%4#0"
      ]
    },
    "1479": {
      "op": "bytec_3 // 0x0004",
      "defined_out": [
        "0x0004",
        "maybe_value%0#0",
        "offset_as_uint16%4#0",
        "tail%4#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "offset_as_uint16%4#0",
        "0x0004"
      ]
    },
    "1480": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "0x0004",
        "offset_as_uint16%4#0"
      ]
    },
    "1481": {
      "op": "concat",
      "defined_out": [
        "encoded%9#0",
        "maybe_value%0#0",
        "tail%4#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "encoded%9#0"
      ]
    },
    "1482": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%9#0",
        "tail%4#0"
      ]
    },
    "1483": {
      "op": "concat",
      "defined_out": [
        "encoded%10#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%10#0"
      ]
    },
    "1484": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%10#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%10#0",
        "0x151f7c75"
      ]
    },
    "1485": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "encoded%10#0"
      ]
    },
    "1486": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%21#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%21#0"
      ]
    },
    "1487": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1488": {
      "op": "intc_1 // 1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1489": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1490": {
      "block": "main_store_tuple_route@5",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%3#0"
      ]
    },
    "1492": {
      "op": "!",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%4#0"
      ]
    },
    "1493": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1494": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%5#0"
      ]
    },
    "1496": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1497": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0"
      ]
    },
    "1500": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)"
      ]
    },
    "1501": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)",
        "0"
      ]
    },
    "1502": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1503": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)"
      ]
    },
    "1505": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)",
        "2"
      ]
    },
    "1506": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0"
      ]
    },
    "1507": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)"
      ]
    },
    "1509": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)",
        "extract_uint16%0#0"
      ]
    },
    "1511": {
      "op": "dig 2",
      "defined_out": [
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)",
        "extract_uint16%0#0",
        "extract_uint16%1#0 (copy)"
      ]
    },
    "1513": {
      "op": "substring3",
      "defined_out": [
        "extract_uint16%1#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0"
      ]
    },
    "1514": {
      "op": "dup",
      "defined_out": [
        "extract_uint16%1#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%0#0",
        "substring3%0#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "substring3%0#0 (copy)"
      ]
    },
    "1515": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "substring3%0#0 (copy)",
        "0"
      ]
    },
    "1516": {
      "op": "extract_uint64",
      "defined_out": [
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "pwl.parent.foo#0"
      ]
    },
    "1517": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "pwl.parent.foo#0",
        "substring3%0#0 (copy)"
      ]
    },
    "1519": {
      "op": "extract 8 8",
      "defined_out": [
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0"
      ]
    },
    "1522": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%0#0 (copy)"
      ]
    },
    "1524": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%0#0",
        "substring3%0#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%0#0 (copy)",
        "16"
      ]
    },
    "1526": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "extract_uint16%2#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "extract_uint16%2#0"
      ]
    },
    "1527": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "extract_uint16%2#0",
        "substring3%0#0 (copy)"
      ]
    },
    "1529": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "extract_uint16%2#0",
        "len%0#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "extract_uint16%2#0",
        "len%0#0"
      ]
    },
    "1530": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "extract_uint16%2#0",
        "len%0#0",
        "substring3%0#0"
      ]
    },
    "1532": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%0#0",
        "extract_uint16%2#0",
        "len%0#0"
      ]
    },
    "1534": {
      "op": "substring3",
      "defined_out": [
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0"
      ]
    },
    "1535": {
      "op": "dup",
      "defined_out": [
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1536": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "0"
      ]
    },
    "1537": {
      "op": "extract_uint64",
      "defined_out": [
        "extract_uint16%1#0",
        "pwl.parent.child.a#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0"
      ]
    },
    "1538": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1540": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "extract_uint16%1#0",
        "pwl.parent.child.a#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "substring3%1#0 (copy)",
        "8"
      ]
    },
    "1541": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "pwl.parent.child.a#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%3#0"
      ]
    },
    "1542": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%3#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1544": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "pwl.parent.child.a#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%3#0",
        "substring3%1#0 (copy)",
        "10"
      ]
    },
    "1546": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "pwl.parent.child.a#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0"
      ]
    },
    "1547": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1549": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%4#0",
        "substring3%1#0 (copy)",
        "extract_uint16%3#0"
      ]
    },
    "1551": {
      "op": "dig 2",
      "defined_out": [
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "extract_uint16%4#0 (copy)",
        "pwl.parent.child.a#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "substring3%1#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%4#0",
        "substring3%1#0 (copy)",
        "extract_uint16%3#0",
        "extract_uint16%4#0 (copy)"
      ]
    },
    "1553": {
      "op": "substring3",
      "defined_out": [
        "extract_uint16%1#0",
        "extract_uint16%4#0",
        "pwl.parent.child.a#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "substring3%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%4#0",
        "substring3%2#0"
      ]
    },
    "1554": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_uint16%1#0",
        "extract_uint16%4#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%4#0",
        "pwl.parent.child.b#0"
      ]
    },
    "1557": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%4#0",
        "pwl.parent.child.b#0",
        "substring3%1#0 (copy)"
      ]
    },
    "1559": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "extract_uint16%4#0",
        "len%1#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "substring3%1#0",
        "pwl.parent.child.a#0",
        "extract_uint16%4#0",
        "pwl.parent.child.b#0",
        "len%1#0"
      ]
    },
    "1560": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "extract_uint16%4#0",
        "pwl.parent.child.b#0",
        "len%1#0",
        "substring3%1#0"
      ]
    },
    "1562": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "len%1#0",
        "substring3%1#0",
        "extract_uint16%4#0"
      ]
    },
    "1564": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "substring3%1#0",
        "extract_uint16%4#0",
        "len%1#0"
      ]
    },
    "1566": {
      "op": "substring3",
      "defined_out": [
        "extract_uint16%1#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "substring3%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "substring3%3#0"
      ]
    },
    "1567": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_uint16%1#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0"
      ]
    },
    "1570": {
      "op": "dig 6",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0 (copy)"
      ]
    },
    "1572": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "len%2#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "len%2#0"
      ]
    },
    "1573": {
      "op": "uncover 7",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "extract_uint16%1#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "len%2#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0"
      ]
    },
    "1575": {
      "op": "uncover 7",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "len%2#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0"
      ]
    },
    "1577": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "reinterpret_Encoded(((uint64,uint64,(uint64,len+uint8[],len+utf8[])),len+(uint64,len+uint8[],len+utf8[])[]))%0#0",
        "extract_uint16%1#0",
        "len%2#0"
      ]
    },
    "1579": {
      "op": "substring3",
      "defined_out": [
        "pwl.children#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.foo#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0"
      ]
    },
    "1580": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "pwl.parent.foo#0"
      ]
    },
    "1582": {
      "op": "itob",
      "defined_out": [
        "pwl.children#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.parent.foo_arc#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.foo_arc#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "val_as_bytes%0#0"
      ]
    },
    "1583": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "val_as_bytes%0#0",
        "pwl.parent.foo_arc#0"
      ]
    },
    "1585": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "pwl.children#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.a#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1"
      ]
    },
    "1586": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "pwl.parent.child.a#0"
      ]
    },
    "1588": {
      "op": "itob",
      "defined_out": [
        "encoded%1#1",
        "pwl.children#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0"
      ]
    },
    "1589": {
      "op": "dig 4",
      "defined_out": [
        "encoded%1#1",
        "pwl.children#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.b#0 (copy)",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "pwl.parent.child.b#0 (copy)"
      ]
    },
    "1591": {
      "op": "len",
      "defined_out": [
        "encoded%1#1",
        "length%0#1",
        "pwl.children#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "length%0#1"
      ]
    },
    "1592": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#1",
        "encoded%1#1",
        "pwl.children#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "as_bytes%0#1"
      ]
    },
    "1593": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded%1#1",
        "length_uint16%0#1",
        "pwl.children#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.b#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "length_uint16%0#1"
      ]
    },
    "1596": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "length_uint16%0#1",
        "pwl.parent.child.b#0"
      ]
    },
    "1598": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "encoded_value%0#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1"
      ]
    },
    "1599": {
      "op": "dup",
      "defined_out": [
        "encoded%1#1",
        "encoded_value%0#1",
        "encoded_value%0#1 (copy)",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1",
        "encoded_value%0#1 (copy)"
      ]
    },
    "1600": {
      "op": "len",
      "defined_out": [
        "data_length%0#1",
        "encoded%1#1",
        "encoded_value%0#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1",
        "data_length%0#1"
      ]
    },
    "1601": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "data_length%0#1",
        "encoded%1#1",
        "encoded_value%0#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1",
        "data_length%0#1",
        "12"
      ]
    },
    "1603": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded_value%0#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "val_as_bytes%1#0",
        "encoded_value%0#1",
        "current_tail_offset%0#1"
      ]
    },
    "1604": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "val_as_bytes%1#0"
      ]
    },
    "1606": {
      "op": "bytec_1 // 0x000c",
      "defined_out": [
        "0x000c",
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded_value%0#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "val_as_bytes%1#0",
        "0x000c"
      ]
    },
    "1607": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0"
      ]
    },
    "1608": {
      "op": "dig 5",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "pwl.parent.child.c#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "pwl.parent.child.c#0 (copy)"
      ]
    },
    "1610": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "length%1#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "length%1#1"
      ]
    },
    "1611": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "as_bytes%2#0"
      ]
    },
    "1612": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "length_uint16%1#1",
        "pwl.children#0",
        "pwl.parent.child.c#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.parent.child.c#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "length_uint16%1#1"
      ]
    },
    "1615": {
      "op": "uncover 6",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "length_uint16%1#1",
        "pwl.parent.child.c#0"
      ]
    },
    "1617": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "encoded_value%1#1",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded_value%0#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "encoded_value%1#1"
      ]
    },
    "1618": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "encoded_value%1#1",
        "encoded_value%0#1"
      ]
    },
    "1620": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "encoded_value%0#1",
        "encoded_value%1#1"
      ]
    },
    "1621": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%0#1",
        "encoded%1#1",
        "encoded%3#0",
        "pwl.children#0",
        "tail%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "current_tail_offset%0#1",
        "encoded%3#0",
        "tail%1#1"
      ]
    },
    "1622": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded%3#0",
        "tail%1#1",
        "current_tail_offset%0#1"
      ]
    },
    "1624": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#1",
        "encoded%1#1",
        "encoded%3#0",
        "pwl.children#0",
        "tail%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded%3#0",
        "tail%1#1",
        "as_bytes%3#1"
      ]
    },
    "1625": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded%1#1",
        "encoded%3#0",
        "offset_as_uint16%1#1",
        "pwl.children#0",
        "tail%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded%3#0",
        "tail%1#1",
        "offset_as_uint16%1#1"
      ]
    },
    "1628": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "tail%1#1",
        "offset_as_uint16%1#1",
        "encoded%3#0"
      ]
    },
    "1630": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "tail%1#1",
        "encoded%3#0",
        "offset_as_uint16%1#1"
      ]
    },
    "1631": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "encoded%4#1",
        "pwl.children#0",
        "tail%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "tail%1#1",
        "encoded%4#1"
      ]
    },
    "1632": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded%4#1",
        "tail%1#1"
      ]
    },
    "1633": {
      "op": "concat",
      "defined_out": [
        "encoded%1#1",
        "encoded%5#1",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%1#1",
        "encoded%5#1"
      ]
    },
    "1634": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%5#1",
        "encoded%1#1"
      ]
    },
    "1635": {
      "op": "bytec 5 // 0x0012",
      "defined_out": [
        "0x0012",
        "encoded%1#1",
        "encoded%5#1",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%5#1",
        "encoded%1#1",
        "0x0012"
      ]
    },
    "1637": {
      "op": "concat",
      "defined_out": [
        "encoded%5#1",
        "encoded%6#1",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%5#1",
        "encoded%6#1"
      ]
    },
    "1638": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%6#1",
        "encoded%5#1"
      ]
    },
    "1639": {
      "op": "concat",
      "defined_out": [
        "encoded%7#1",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%7#1"
      ]
    },
    "1640": {
      "op": "dup",
      "defined_out": [
        "encoded%7#1",
        "encoded%7#1 (copy)",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%7#1",
        "encoded%7#1 (copy)"
      ]
    },
    "1641": {
      "op": "len",
      "defined_out": [
        "data_length%3#0",
        "encoded%7#1",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%7#1",
        "data_length%3#0"
      ]
    },
    "1642": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "data_length%3#0",
        "encoded%7#1",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%7#1",
        "data_length%3#0",
        "4"
      ]
    },
    "1644": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded%7#1",
        "pwl.children#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "encoded%7#1",
        "current_tail_offset%3#0"
      ]
    },
    "1645": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "pwl.children#0",
        "current_tail_offset%3#0",
        "encoded%7#1"
      ]
    },
    "1646": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%3#0",
        "encoded%7#1",
        "pwl.children#0"
      ]
    },
    "1648": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "tail%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "current_tail_offset%3#0",
        "tail%4#0"
      ]
    },
    "1649": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "current_tail_offset%3#0"
      ]
    },
    "1650": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#1",
        "tail%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "as_bytes%6#1"
      ]
    },
    "1651": {
      "op": "extract 6 2",
      "defined_out": [
        "offset_as_uint16%4#0",
        "tail%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "offset_as_uint16%4#0"
      ]
    },
    "1654": {
      "op": "bytec_3 // 0x0004",
      "defined_out": [
        "0x0004",
        "offset_as_uint16%4#0",
        "tail%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "offset_as_uint16%4#0",
        "0x0004"
      ]
    },
    "1655": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "0x0004",
        "offset_as_uint16%4#0"
      ]
    },
    "1656": {
      "op": "concat",
      "defined_out": [
        "encoded%9#0",
        "tail%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tail%4#0",
        "encoded%9#0"
      ]
    },
    "1657": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%9#0",
        "tail%4#0"
      ]
    },
    "1658": {
      "op": "concat",
      "defined_out": [
        "encoded%10#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%10#0"
      ]
    },
    "1659": {
      "op": "bytec 7 // \"pwl\"",
      "defined_out": [
        "\"pwl\"",
        "encoded%10#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "encoded%10#0",
        "\"pwl\""
      ]
    },
    "1661": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "\"pwl\"",
        "encoded%10#0"
      ]
    },
    "1662": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1663": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1664": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1665": {
      "block": "main_bare_routing@31",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%127#0"
      ]
    },
    "1667": {
      "op": "bnz main_after_if_else@33",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1670": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%128#0"
      ]
    },
    "1672": {
      "op": "!",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%129#0"
      ]
    },
    "1673": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1674": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1675": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#3",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1676": {
      "subroutine": "test_cases.tuple_support.nested_tuples.get_sender_inefficiently",
      "params": {},
      "block": "get_sender_inefficiently",
      "stack_in": [],
      "op": "pushbytes \"Order is important\"",
      "defined_out": [
        "\"Order is important\""
      ],
      "stack_out": [
        "\"Order is important\""
      ]
    },
    "1696": {
      "op": "log",
      "stack_out": []
    },
    "1697": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1699": {
      "retsub": true,
      "op": "retsub"
    },
    "1700": {
      "subroutine": "test_cases.tuple_support.nested_tuples.simple_tup",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "simple_tup",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "1703": {
      "op": "pushbytes \"I'm just a simple tup\"",
      "defined_out": [
        "\"I'm just a simple tup\""
      ],
      "stack_out": [
        "\"I'm just a simple tup\""
      ]
    },
    "1726": {
      "op": "log",
      "stack_out": []
    },
    "1727": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "1729": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "1731": {
      "retsub": true,
      "op": "retsub"
    },
    "1732": {
      "subroutine": "test_cases.tuple_support.nested_tuples.echo",
      "params": {
        "s#0": "bytes"
      },
      "block": "echo",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1735": {
      "op": "pushbytes \"Is there an echo in here?\"",
      "defined_out": [
        "\"Is there an echo in here?\""
      ],
      "stack_out": [
        "\"Is there an echo in here?\""
      ]
    },
    "1762": {
      "op": "log",
      "stack_out": []
    },
    "1763": {
      "op": "frame_dig -1",
      "defined_out": [
        "s#0 (copy)"
      ],
      "stack_out": [
        "s#0 (copy)"
      ]
    },
    "1765": {
      "retsub": true,
      "op": "retsub"
    }
  }
}