{
  "version": 3,
  "sources": [
    "../nested_tuples.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDQ;;AAA+B;AAA/B;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAJR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAiHK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjHL;;;AAiHK;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5GL;;;AA4GK;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AArGL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAqGK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA7BA;;AAAA;AAAA;AAAA;;AAAA;AAgBmB;AAAW;AA8Ed;AAGV;AAAA;AAAA;AAAa;;AAAb;AAAA;AAAA;AAAP;AACA;AAAA;AACA;AA4EQ;AAAR;;;AAFI;AAIA;;AAHA;AAGA;AAES;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AAFR;;;;;;;;;AAJQ;AAQA;;AAPA;AAOA;AACS;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AADR;;;;;;;;AAGW;AAAS;AAAT;AAAc;;AAAd;AAAP;AAxII;;AAAgC;AAAhC;AAhDH;;;;;;;AAAA;AAAA;;;;AA8KG;AAOA;;AAPA;AAOA;;;;;AARA;AAQA;;AARA;AAQA;;;;;AAPA;AAOA;;AARA;AAQA;;;;;;AAPA;AAGA;;AAHA;AAGA;;;;;AAJA;AAIA;;AAJA;AAIA;;;;;AAHA;AAGA;;AAJA;AAIA;;;;AAvLH;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AACP;;AAAY;;;;;;;;;;AAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJH;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAYY;AAAL;;AAAK;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AADK;AAAA;AAAA;;;;;AAZZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA1CL;;;AAAA;;;AA4C0C;;;AACjB;;;AAA+C;;AAAW;AAAtB;;;AAAA;;AAAA;;AAA9C;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAxCf;;;AAwCe;AAAqC;;AAAW;AAAtB;;;AAAA;;AAAA;;AAA1B;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAEyB;AAnC9B;;;AAmC8B;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEyB;AAAA;;;;AANzB;;AAAA;AAAA;AAAA;;AAAA;AAEU;AA/Bf;;;AA+Be;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAEiB;AA3BtB;;;AA2Be;AAAA;AAAA;;AAFV;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AArBL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuB+C;AAAR;AAA/B;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAFH;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAAA;;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAEG;;AAfR;;;AAeQ;AAFH;;AAbL;;AAAA;;;;;;;;;AAqIQ;;;;;;;;;;;;;;;;;;;;AAAJ;AACO;;AAAP;AAGJ;;;AAEQ;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;AAAA;;AAAA;AAGJ;;;AAEQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 8"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 \"box\" \"twm\" \"\" \"build_nested_call_count\" 0x0004 \"pwl\""
    },
    "54": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "55": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "maybe_value%0#0",
        "a#4"
      ]
    },
    "56": {
      "op": "dupn 8",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "58": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "60": {
      "op": "bnz main_after_if_else@2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "63": {
      "op": "bytec 4 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\""
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"build_nested_call_count\""
      ]
    },
    "65": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"build_nested_call_count\"",
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"build_nested_call_count\"",
        "0"
      ]
    },
    "66": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "67": {
      "op": "bytec_2 // \"twm\"",
      "defined_out": [
        "\"twm\""
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"twm\""
      ]
    },
    "68": {
      "op": "pushbytes 0x0004000600000000000000000000000c000e00000000",
      "defined_out": [
        "\"twm\"",
        "0x0004000600000000000000000000000c000e00000000"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"twm\"",
        "0x0004000600000000000000000000000c000e00000000"
      ]
    },
    "92": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "93": {
      "block": "main_after_if_else@2",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#2"
      ]
    },
    "95": {
      "op": "bz main_bare_routing@31",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "98": {
      "op": "pushbytess 0x383e1e8b 0x68cbedd7 0x2263fcf1 0xbfc37339 0xc660beaa 0xb6c215ff 0x907c9042 0xd51c7174 0xf8cc2b50 0x3d486db0 0x9e5a3ba7 0xcea0521b 0x373f5b24 0xec593096 // method \"store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void\", method \"load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])\", method \"store_tuple_in_box((uint64,uint64))void\", method \"is_tuple_in_box((uint64,uint64))bool\", method \"load_tuple_from_box((uint64,uint64))(uint64,uint64)\", method \"maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool)\", method \"load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64)\", method \"load_tuple_from_local_state_or_default(string)(uint64,uint64)\", method \"mutate_local_tuple()(uint64[],(uint64,byte[],string))\", method \"mutate_tuple_in_storage_currently_supported_method()void\", method \"run_tests()bool\", method \"nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))\", method \"named_tuple((uint64,byte[],string))(uint64,byte[],string)\", method \"nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string))\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))"
      ]
    },
    "170": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "tmp%2#0"
      ]
    },
    "173": {
      "op": "match main_store_tuple_route@5 main_load_tuple_route@6 main_store_tuple_in_box_route@7 main_is_tuple_in_box_route@8 main_load_tuple_from_box_route@9 main_maybe_load_tuple_from_box_route@10 main_load_tuple_from_box_or_default_route@14 main_load_tuple_from_local_state_or_default_route@18 main_mutate_local_tuple_route@22 main_mutate_tuple_in_storage_currently_supported_method_route@26 main_run_tests_route@27 main_nested_tuple_params_route@28 main_named_tuple_route@29 main_nested_named_tuple_params_route@30",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "203": {
      "block": "main_after_if_else@33",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "204": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "205": {
      "block": "main_nested_named_tuple_params_route@30",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%125#0"
      ]
    },
    "207": {
      "op": "!",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%126#0"
      ]
    },
    "208": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "209": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%127#0"
      ]
    },
    "211": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "212": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75"
      ]
    },
    "213": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "0x151f7c75",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "216": {
      "op": "concat",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%140#0"
      ]
    },
    "217": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "218": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "219": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "220": {
      "block": "main_named_tuple_route@29",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%113#0"
      ]
    },
    "222": {
      "op": "!",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%114#0"
      ]
    },
    "223": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "224": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%115#0"
      ]
    },
    "226": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "227": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75"
      ]
    },
    "228": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "0x151f7c75",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "231": {
      "op": "concat",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%124#0"
      ]
    },
    "232": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "233": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "234": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "235": {
      "block": "main_nested_tuple_params_route@28",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%101#0"
      ]
    },
    "237": {
      "op": "!",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%102#0"
      ]
    },
    "238": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "239": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%103#0"
      ]
    },
    "241": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "242": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ]
    },
    "245": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "246": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "0"
      ]
    },
    "247": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%20#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%20#0"
      ]
    },
    "248": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%20#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "250": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%20#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%20#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "2"
      ]
    },
    "251": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0"
      ]
    },
    "252": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "254": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%21#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "aggregate%extract_uint16%20#0"
      ]
    },
    "256": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%extract_uint16%21#0 (copy)",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%21#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0 (copy)"
      ]
    },
    "258": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%14#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%14#0"
      ]
    },
    "259": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%21#0",
        "args.0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%21#0",
        "args.0#0"
      ]
    },
    "262": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%21#0",
        "args.0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "264": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%21#0",
        "aggregate%len%8#0",
        "args.0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%21#0",
        "args.0#0",
        "aggregate%len%8#0"
      ]
    },
    "265": {
      "op": "swap"
    },
    "266": {
      "op": "cover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%len%8#0"
      ]
    },
    "268": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%15#0",
        "args.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0"
      ]
    },
    "269": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "args.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "270": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "0"
      ]
    },
    "271": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%23#0",
        "aggregate%substring3%15#0",
        "args.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "aggregate%extract_uint16%23#0"
      ]
    },
    "272": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "aggregate%extract_uint16%23#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "274": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%23#0",
        "aggregate%len%9#0",
        "aggregate%substring3%15#0",
        "args.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "aggregate%extract_uint16%23#0",
        "aggregate%len%9#0"
      ]
    },
    "275": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "aggregate%extract_uint16%23#0",
        "aggregate%len%9#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "277": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "aggregate%extract_uint16%23#0",
        "aggregate%len%9#0"
      ]
    },
    "279": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%15#0",
        "aggregate%substring3%16#0",
        "args.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "aggregate%substring3%16#0"
      ]
    },
    "280": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%substring3%15#0",
        "args.0#0",
        "args.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "aggregate%substring3%15#0",
        "args.1.0#0"
      ]
    },
    "283": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "aggregate%substring3%15#0"
      ]
    },
    "284": {
      "op": "extract 2 8",
      "defined_out": [
        "aggregate%extract%25#0",
        "args.0#0",
        "args.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "aggregate%extract%25#0"
      ]
    },
    "287": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "aggregate%extract%25#0",
        "0"
      ]
    },
    "288": {
      "op": "extract_uint64",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ]
    },
    "289": {
      "op": "dig 1",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.0#0 (copy)",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "args.1.0#0 (copy)"
      ]
    },
    "291": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "aggregate%length%6#0"
      ]
    },
    "292": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%21#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "aggregate%as_bytes%21#0"
      ]
    },
    "293": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "aggregate%length_uint16%6#0"
      ]
    },
    "296": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%length_uint16%6#0",
        "args.1.0#0"
      ]
    },
    "298": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%6#0",
        "args.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0"
      ]
    },
    "299": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_value%6#0",
        "aggregate%encoded_value%6#0 (copy)",
        "args.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%encoded_value%6#0 (copy)"
      ]
    },
    "300": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%12#0",
        "aggregate%encoded_value%6#0",
        "args.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%data_length%12#0"
      ]
    },
    "301": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%data_length%12#0",
        "aggregate%encoded_value%6#0",
        "args.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%data_length%12#0",
        "4"
      ]
    },
    "303": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "args.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0"
      ]
    },
    "304": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "args.0#0",
        "args.0#0 (copy)",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "args.0#0 (copy)"
      ]
    },
    "306": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%length%7#0",
        "args.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%length%7#0"
      ]
    },
    "307": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%23#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "args.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%as_bytes%23#0"
      ]
    },
    "308": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%length_uint16%7#0",
        "args.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.0#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%length_uint16%7#0"
      ]
    },
    "311": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%length_uint16%7#0",
        "args.0#0"
      ]
    },
    "313": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%encoded_value%7#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "args.1.1.0#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%7#0"
      ]
    },
    "314": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%7#0",
        "args.1.1.0#0"
      ]
    },
    "316": {
      "op": "itob",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%encoded_value%7#0",
        "aggregate%val_as_bytes%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%7#0",
        "aggregate%val_as_bytes%11#0"
      ]
    },
    "317": {
      "op": "pushbytes 0x000a",
      "defined_out": [
        "0x000a",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%encoded_value%7#0",
        "aggregate%val_as_bytes%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%7#0",
        "aggregate%val_as_bytes%11#0",
        "0x000a"
      ]
    },
    "321": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%7#0",
        "0x000a",
        "aggregate%val_as_bytes%11#0"
      ]
    },
    "322": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%encoded_value%7#0",
        "aggregate%head%33#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%7#0",
        "aggregate%head%33#0"
      ]
    },
    "323": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%head%33#0",
        "aggregate%encoded_value%7#0"
      ]
    },
    "324": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%12#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%encoded_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%current_tail_offset%12#0",
        "aggregate%concat%12#0"
      ]
    },
    "325": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%concat%12#0",
        "aggregate%current_tail_offset%12#0"
      ]
    },
    "326": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%25#0",
        "aggregate%concat%12#0",
        "aggregate%encoded_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%concat%12#0",
        "aggregate%as_bytes%25#0"
      ]
    },
    "327": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%concat%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%offset_as_uint16%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%concat%12#0",
        "aggregate%offset_as_uint16%14#0"
      ]
    },
    "330": {
      "op": "bytec 5 // 0x0004",
      "defined_out": [
        "0x0004",
        "aggregate%concat%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%offset_as_uint16%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%concat%12#0",
        "aggregate%offset_as_uint16%14#0",
        "0x0004"
      ]
    },
    "332": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%concat%12#0",
        "0x0004",
        "aggregate%offset_as_uint16%14#0"
      ]
    },
    "333": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%12#0",
        "aggregate%encoded_value%6#0",
        "aggregate%head%34#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_value%6#0",
        "aggregate%concat%12#0",
        "aggregate%head%34#0"
      ]
    },
    "334": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%12#0",
        "aggregate%head%34#0",
        "aggregate%encoded_value%6#0"
      ]
    },
    "336": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%12#0",
        "aggregate%concat%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%12#0",
        "aggregate%concat%13#0"
      ]
    },
    "337": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%13#0",
        "aggregate%concat%12#0"
      ]
    },
    "338": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%14#0"
      ]
    },
    "339": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%concat%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%14#0",
        "0x151f7c75"
      ]
    },
    "340": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "aggregate%concat%14#0"
      ]
    },
    "341": {
      "op": "concat",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%112#0"
      ]
    },
    "342": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "343": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "344": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "345": {
      "block": "main_run_tests_route@27",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%94#0"
      ]
    },
    "347": {
      "op": "!",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%95#0"
      ]
    },
    "348": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "349": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%96#0"
      ]
    },
    "351": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "352": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "1"
      ]
    },
    "353": {
      "op": "intc_2 // 2",
      "defined_out": [
        "1",
        "2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "1",
        "2"
      ]
    },
    "354": {
      "op": "addw",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "nt.1.0#0",
        "nt.1.1#0"
      ]
    },
    "355": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "356": {
      "op": "!",
      "defined_out": [
        "nt.1.1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "nt.1.1#0",
        "tmp%4#0"
      ]
    },
    "357": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "nt.1.1#0"
      ]
    },
    "358": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "nt.1.1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "nt.1.1#0",
        "3"
      ]
    },
    "360": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "361": {
      "op": "dup2",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%4#0 (copy)",
        "tmp%6#0 (copy)"
      ]
    },
    "362": {
      "op": "&&",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "363": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "364": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%6#0",
        "tmp%4#0"
      ]
    },
    "365": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%6#0"
      ]
    },
    "366": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "367": {
      "op": "intc_1 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "total#0"
      ]
    },
    "368": {
      "op": "bury 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "370": {
      "op": "intc_1 // 0"
    },
    "371": {
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "372": {
      "op": "bury 7",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "374": {
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "375": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "376": {
      "block": "main_for_body@54",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ],
      "op": "dig 7",
      "defined_out": [
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "378": {
      "op": "uncover 2",
      "defined_out": [
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "380": {
      "op": "+",
      "defined_out": [
        "t.0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "tmp%0#2"
      ]
    },
    "381": {
      "op": "dig 2",
      "defined_out": [
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "tmp%0#2",
        "total#0"
      ]
    },
    "383": {
      "op": "+",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "total#0"
      ]
    },
    "384": {
      "op": "bury 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "386": {
      "op": "switch main_for_header_1@55 main_for_header_2@56 main_for_header_3@57",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "394": {
      "op": "intc_1 // 0"
    },
    "395": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#4",
        "loop_counter%1#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "396": {
      "op": "bury 10",
      "defined_out": [
        "a#4",
        "loop_counter%1#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "398": {
      "op": "intc_2 // 2",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "399": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0",
        "t.0#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "400": {
      "block": "main_for_body@59",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ],
      "op": "dig 10",
      "defined_out": [
        "a#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "402": {
      "op": "uncover 2",
      "defined_out": [
        "a#4",
        "b#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4",
        "b#5"
      ]
    },
    "404": {
      "op": "+",
      "defined_out": [
        "a#4",
        "tmp%2#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "tmp%2#4"
      ]
    },
    "405": {
      "op": "dig 2",
      "defined_out": [
        "a#4",
        "tmp%2#4",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "tmp%2#4",
        "total#0"
      ]
    },
    "407": {
      "op": "+",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "total#0"
      ]
    },
    "408": {
      "op": "bury 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0",
        "tmp%2#4",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "410": {
      "op": "switch main_for_header_1@60 main_for_header_2@61 main_for_header_3@62",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "418": {
      "op": "dup",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "total#0"
      ]
    },
    "419": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "a#4",
        "tmp%2#4",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "total#0",
        "8"
      ]
    },
    "420": {
      "op": "/",
      "defined_out": [
        "a#4",
        "tmp%2#4",
        "tmp%4#5",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#5"
      ]
    },
    "421": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "a#4",
        "tmp%2#4",
        "tmp%4#5",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#5",
        "3"
      ]
    },
    "423": {
      "op": "==",
      "defined_out": [
        "a#4",
        "tmp%2#4",
        "tmp%5#4",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%5#4"
      ]
    },
    "424": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "425": {
      "op": "bytec 4 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\"",
        "a#4",
        "tmp%2#4",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"build_nested_call_count\""
      ]
    },
    "427": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"build_nested_call_count\"",
        "1",
        "a#4",
        "tmp%2#4",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"build_nested_call_count\"",
        "1"
      ]
    },
    "428": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "429": {
      "op": "pushbytes 0x151f7c7580",
      "defined_out": [
        "0x151f7c7580",
        "a#4",
        "tmp%2#4",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c7580"
      ]
    },
    "436": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "437": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#4",
        "tmp%0#0",
        "tmp%2#4",
        "total#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "438": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "439": {
      "block": "main_for_header_3@62",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "pushint 3 // 3"
    },
    "441": {
      "op": "intc_2 // 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "442": {
      "op": "bury 10",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "444": {
      "op": "intc_2 // 2",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "445": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "446": {
      "op": "b main_for_body@59"
    },
    "449": {
      "block": "main_for_header_2@61",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_2 // 2"
    },
    "450": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "451": {
      "op": "bury 10",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "453": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "454": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "455": {
      "op": "b main_for_body@59"
    },
    "458": {
      "block": "main_for_header_1@60",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_0 // 1"
    },
    "459": {
      "op": "intc_2 // 2",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "a#4"
      ]
    },
    "460": {
      "op": "bury 10",
      "defined_out": [
        "a#4",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0"
      ]
    },
    "462": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%1#0",
        "b#5"
      ]
    },
    "463": {
      "op": "swap",
      "defined_out": [
        "a#4",
        "b#5",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "b#5",
        "loop_counter%1#0"
      ]
    },
    "464": {
      "op": "b main_for_body@59"
    },
    "467": {
      "block": "main_for_header_3@57",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "pushint 3 // 3"
    },
    "469": {
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "470": {
      "op": "bury 7",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "472": {
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "473": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "474": {
      "op": "b main_for_body@54"
    },
    "477": {
      "block": "main_for_header_2@56",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_2 // 2"
    },
    "478": {
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "479": {
      "op": "bury 7",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "481": {
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "482": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "483": {
      "op": "b main_for_body@54"
    },
    "486": {
      "block": "main_for_header_1@55",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "intc_0 // 1"
    },
    "487": {
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "488": {
      "op": "bury 7",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "490": {
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "491": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "492": {
      "op": "b main_for_body@54"
    },
    "495": {
      "block": "main_mutate_tuple_in_storage_currently_supported_method_route@26",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%90#0"
      ]
    },
    "497": {
      "op": "!",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%91#0"
      ]
    },
    "498": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "499": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%92#0"
      ]
    },
    "501": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "502": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0"
      ]
    },
    "503": {
      "op": "bytec_2 // \"twm\"",
      "defined_out": [
        "\"twm\"",
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0",
        "\"twm\""
      ]
    },
    "504": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "505": {
      "error": "check self.twm exists",
      "op": "assert // check self.twm exists",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "506": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "507": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "508": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%14#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%14#0"
      ]
    },
    "509": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%14#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "511": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%14#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%14#0",
        "maybe_value%0#0 (copy)",
        "2"
      ]
    },
    "512": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%14#0",
        "aggregate%extract_uint16%15#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%extract_uint16%15#0"
      ]
    },
    "513": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%extract_uint16%15#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "515": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%15#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%14#0"
      ]
    },
    "517": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%14#0",
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%15#0 (copy)",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%15#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%14#0",
        "aggregate%extract_uint16%15#0 (copy)"
      ]
    },
    "519": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%15#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%15#0",
        "arr2#0"
      ]
    },
    "520": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%15#0",
        "arr2#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "522": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%15#0",
        "aggregate%len%6#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%15#0",
        "arr2#0",
        "aggregate%len%6#0"
      ]
    },
    "523": {
      "op": "swap"
    },
    "524": {
      "op": "cover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%15#0",
        "aggregate%len%6#0"
      ]
    },
    "526": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%11#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0"
      ]
    },
    "527": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "528": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "0"
      ]
    },
    "529": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0"
      ]
    },
    "530": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "532": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0 (copy)",
        "8"
      ]
    },
    "533": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%17#0",
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%17#0"
      ]
    },
    "534": {
      "op": "dig 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%17#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "536": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%extract_uint16%17#0",
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%17#0",
        "aggregate%substring3%11#0 (copy)",
        "10"
      ]
    },
    "538": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%17#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%17#0",
        "aggregate%extract_uint16%18#0"
      ]
    },
    "539": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%17#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "541": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%substring3%11#0 (copy)",
        "aggregate%extract_uint16%17#0"
      ]
    },
    "543": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%17#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%18#0 (copy)",
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%substring3%11#0 (copy)",
        "aggregate%extract_uint16%17#0",
        "aggregate%extract_uint16%18#0 (copy)"
      ]
    },
    "545": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%item0%13#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%substring3%12#0"
      ]
    },
    "546": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%substring3%11#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%item1%11#0"
      ]
    },
    "549": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%item1%11#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "551": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%len%7#0",
        "aggregate%substring3%11#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%substring3%11#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%item1%11#0",
        "aggregate%len%7#0"
      ]
    },
    "552": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%item0%13#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%item1%11#0",
        "aggregate%len%7#0",
        "aggregate%substring3%11#0"
      ]
    },
    "554": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%len%7#0",
        "aggregate%substring3%11#0",
        "aggregate%extract_uint16%18#0"
      ]
    },
    "556": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%substring3%11#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%len%7#0"
      ]
    },
    "558": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%substring3%13#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%substring3%13#0"
      ]
    },
    "559": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0"
      ]
    },
    "562": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "arr2#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0 (copy)"
      ]
    },
    "564": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "arr2#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0 (copy)",
        "0x0000000000000001"
      ]
    },
    "574": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "concat%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0"
      ]
    },
    "575": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "arr2#0"
      ]
    },
    "577": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "arr2#0",
        "0"
      ]
    },
    "578": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "579": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "580": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "581": {
      "op": "itob",
      "defined_out": [
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "as_bytes%0#0",
        "concat%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "582": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "585": {
      "op": "replace2 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0"
      ]
    },
    "587": {
      "op": "dup",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "588": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%8#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%data_length%8#0"
      ]
    },
    "589": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%data_length%8#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%data_length%8#0",
        "4"
      ]
    },
    "591": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%13#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0"
      ]
    },
    "592": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%item0%13#0"
      ]
    },
    "594": {
      "op": "itob",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "aggregate%val_as_bytes%10#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%val_as_bytes%10#0"
      ]
    },
    "595": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%item1%11#0",
        "aggregate%item1%11#0 (copy)",
        "aggregate%item2%2#0",
        "aggregate%val_as_bytes%10#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%item1%11#0 (copy)"
      ]
    },
    "597": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "aggregate%length%4#0",
        "aggregate%val_as_bytes%10#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%length%4#0"
      ]
    },
    "598": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%15#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "aggregate%val_as_bytes%10#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%as_bytes%15#0"
      ]
    },
    "599": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "aggregate%length_uint16%4#0",
        "aggregate%val_as_bytes%10#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item1%11#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%length_uint16%4#0"
      ]
    },
    "602": {
      "op": "uncover 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%length_uint16%4#0",
        "aggregate%item1%11#0"
      ]
    },
    "604": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%item2%2#0",
        "aggregate%val_as_bytes%10#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%encoded_value%4#0"
      ]
    },
    "605": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%val_as_bytes%10#0"
      ]
    },
    "606": {
      "op": "pushbytes 0x000c",
      "defined_out": [
        "0x000c",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%item2%2#0",
        "aggregate%val_as_bytes%10#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%val_as_bytes%10#0",
        "0x000c"
      ]
    },
    "610": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0"
      ]
    },
    "611": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%encoded_value%4#0 (copy)",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%encoded_value%4#0 (copy)"
      ]
    },
    "613": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%data_length%9#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%data_length%9#0"
      ]
    },
    "614": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%current_tail_offset%8#0",
        "aggregate%data_length%9#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%data_length%9#0",
        "12"
      ]
    },
    "616": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%9#0"
      ]
    },
    "617": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "aggregate%item2%2#0 (copy)",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%item2%2#0 (copy)"
      ]
    },
    "619": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "aggregate%length%5#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%length%5#0"
      ]
    },
    "620": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%17#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%as_bytes%17#0"
      ]
    },
    "621": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%item2%2#0",
        "aggregate%length_uint16%5#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item2%2#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%length_uint16%5#0"
      ]
    },
    "624": {
      "op": "uncover 6",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%length_uint16%5#0",
        "aggregate%item2%2#0"
      ]
    },
    "626": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%encoded_value%4#0",
        "aggregate%encoded_value%5#0",
        "aggregate%head%26#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%9#0",
        "aggregate%encoded_value%5#0"
      ]
    },
    "627": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%encoded_value%5#0",
        "aggregate%current_tail_offset%9#0"
      ]
    },
    "628": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%18#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%encoded_value%5#0",
        "aggregate%head%26#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%encoded_value%5#0",
        "aggregate%as_bytes%18#0"
      ]
    },
    "629": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%encoded_value%5#0",
        "aggregate%head%26#0",
        "aggregate%offset_as_uint16%10#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%head%26#0",
        "aggregate%encoded_value%5#0",
        "aggregate%offset_as_uint16%10#0"
      ]
    },
    "632": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%encoded_value%5#0",
        "aggregate%offset_as_uint16%10#0",
        "aggregate%head%26#0"
      ]
    },
    "634": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%encoded_value%5#0",
        "aggregate%head%26#0",
        "aggregate%offset_as_uint16%10#0"
      ]
    },
    "635": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%encoded_value%5#0",
        "aggregate%head%27#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%4#0",
        "aggregate%encoded_value%5#0",
        "aggregate%head%27#0"
      ]
    },
    "636": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%5#0",
        "aggregate%head%27#0",
        "aggregate%encoded_value%4#0"
      ]
    },
    "638": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%8#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%5#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%encoded_value%5#0",
        "aggregate%concat%8#0"
      ]
    },
    "639": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%concat%8#0",
        "aggregate%encoded_value%5#0"
      ]
    },
    "640": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%9#0",
        "aggregate%current_tail_offset%8#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%concat%9#0"
      ]
    },
    "641": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%concat%9#0",
        "aggregate%current_tail_offset%8#0"
      ]
    },
    "642": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%19#0",
        "aggregate%concat%9#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%concat%9#0",
        "aggregate%as_bytes%19#0"
      ]
    },
    "643": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%concat%9#0",
        "aggregate%offset_as_uint16%11#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%concat%9#0",
        "aggregate%offset_as_uint16%11#0"
      ]
    },
    "646": {
      "op": "bytec 5 // 0x0004",
      "defined_out": [
        "0x0004",
        "aggregate%concat%9#0",
        "aggregate%offset_as_uint16%11#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%concat%9#0",
        "aggregate%offset_as_uint16%11#0",
        "0x0004"
      ]
    },
    "648": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%concat%9#0",
        "0x0004",
        "aggregate%offset_as_uint16%11#0"
      ]
    },
    "649": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%9#0",
        "aggregate%head%28#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "arr2#0",
        "aggregate%concat%9#0",
        "aggregate%head%28#0"
      ]
    },
    "650": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%9#0",
        "aggregate%head%28#0",
        "arr2#0"
      ]
    },
    "652": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%10#0",
        "aggregate%concat%9#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%9#0",
        "aggregate%concat%10#0"
      ]
    },
    "653": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%10#0",
        "aggregate%concat%9#0"
      ]
    },
    "654": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%11#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%11#0"
      ]
    },
    "655": {
      "op": "bytec_2 // \"twm\"",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%concat%11#0",
        "\"twm\""
      ]
    },
    "656": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"twm\"",
        "aggregate%concat%11#0"
      ]
    },
    "657": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "658": {
      "op": "intc_0 // 1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "659": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "660": {
      "block": "main_mutate_local_tuple_route@22",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%80#0"
      ]
    },
    "662": {
      "op": "!",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%81#0"
      ]
    },
    "663": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "664": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%82#0"
      ]
    },
    "666": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "667": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "668": {
      "op": "bury 7",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "670": {
      "block": "main_for_header@23",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "672": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "3"
      ]
    },
    "674": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "continue_looping%0#0"
      ]
    },
    "675": {
      "op": "bz main_after_for@25",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "678": {
      "op": "dig 6",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "680": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "681": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "i#0 (copy)",
        "8"
      ]
    },
    "682": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "683": {
      "op": "pushbytes 0x000000000000000000000000000000010000000000000002",
      "defined_out": [
        "0x000000000000000000000000000000010000000000000002",
        "aggregate%bytes_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "aggregate%bytes_offset%0#0",
        "0x000000000000000000000000000000010000000000000002"
      ]
    },
    "709": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "0x000000000000000000000000000000010000000000000002",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "710": {
      "op": "intc_3 // 8",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "0x000000000000000000000000000000010000000000000002",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "711": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "712": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "aggregate%encoded_element%0#0",
        "i#0 (copy)"
      ]
    },
    "714": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "i#0",
        "tmp%2#3"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "aggregate%encoded_element%0#0",
        "tmp%2#3"
      ]
    },
    "715": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "tmp%3#3"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "tmp%3#3"
      ]
    },
    "716": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "717": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0",
        "1"
      ]
    },
    "718": {
      "op": "+",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "i#0"
      ]
    },
    "719": {
      "op": "bury 7",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "721": {
      "op": "b main_for_header@23"
    },
    "724": {
      "block": "main_after_for@25",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "pushbytes 0x151f7c750004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000",
      "defined_out": [
        "0x151f7c750004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c750004001e00030000000000000000000000000000000100000000000000020000000000000000000c000e00000000"
      ]
    },
    "776": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "777": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "778": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "779": {
      "block": "main_load_tuple_from_local_state_or_default_route@18",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%71#0"
      ]
    },
    "781": {
      "op": "!",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%72#0"
      ]
    },
    "782": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "783": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%73#0"
      ]
    },
    "785": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "786": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "789": {
      "op": "extract 2 0",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "key#0"
      ]
    },
    "792": {
      "callsub": "test_cases.tuple_support.nested_tuples.echo",
      "op": "callsub echo",
      "defined_out": [
        "local#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "local#0"
      ]
    },
    "795": {
      "callsub": "test_cases.tuple_support.nested_tuples.get_sender_inefficiently",
      "op": "callsub get_sender_inefficiently",
      "defined_out": [
        "local#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4"
      ]
    },
    "798": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "local#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "4"
      ]
    },
    "800": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "4",
        "local#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "4",
        "2"
      ]
    },
    "801": {
      "callsub": "test_cases.tuple_support.nested_tuples.simple_tup",
      "op": "callsub simple_tup",
      "defined_out": [
        "local#0",
        "tmp%1#4",
        "tmp%2#4",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "tmp%2#4",
        "tmp%3#0"
      ]
    },
    "804": {
      "op": "bury 5",
      "defined_out": [
        "local#0",
        "tmp%1#4",
        "tmp%2#4",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "tmp%2#4"
      ]
    },
    "806": {
      "op": "bury 5",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4"
      ]
    },
    "808": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "local#0",
        "tmp%1#4",
        "0"
      ]
    },
    "809": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%1#4",
        "0",
        "local#0"
      ]
    },
    "811": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#4",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "812": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "813": {
      "op": "bury 11",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#4",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0"
      ]
    },
    "815": {
      "op": "bz main_ternary_false@20",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "818": {
      "op": "dig 9",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "820": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%2#4",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "821": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "822": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%12#0",
        "maybe_value%0#0",
        "tmp%2#4",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%item0%12#0"
      ]
    },
    "823": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%12#0",
        "maybe_value%0#0"
      ]
    },
    "824": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%item0%12#0",
        "maybe_value%0#0",
        "tmp%2#4",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%12#0",
        "maybe_value%0#0",
        "8"
      ]
    },
    "825": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2",
        "tmp%2#4",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ]
    },
    "826": {
      "block": "main_ternary_merge@21",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ],
      "op": "swap",
      "defined_out": [
        "ternary_result%0.a#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.b#2",
        "ternary_result%0.a#2"
      ]
    },
    "827": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.b#2",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "828": {
      "op": "swap",
      "defined_out": [
        "aggregate%val_as_bytes%7#0",
        "ternary_result%0.b#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%val_as_bytes%7#0",
        "ternary_result%0.b#2"
      ]
    },
    "829": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0"
      ]
    },
    "830": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%14#0"
      ]
    },
    "831": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%14#0",
        "0x151f7c75"
      ]
    },
    "832": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "aggregate%head%14#0"
      ]
    },
    "833": {
      "op": "concat",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%79#0"
      ]
    },
    "834": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "835": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "836": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "837": {
      "block": "main_ternary_false@20",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "ternary_result%0.a#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2"
      ]
    },
    "839": {
      "op": "dig 2",
      "defined_out": [
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ]
    },
    "841": {
      "op": "b main_ternary_merge@21"
    },
    "844": {
      "block": "main_load_tuple_from_box_or_default_route@14",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%61#0"
      ]
    },
    "846": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%62#0"
      ]
    },
    "847": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "848": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%63#0"
      ]
    },
    "850": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "851": {
      "op": "bytec_1 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"box\""
      ]
    },
    "852": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%4#0"
      ]
    },
    "855": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "856": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "4"
      ]
    },
    "858": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "4",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "4",
        "2"
      ]
    },
    "859": {
      "callsub": "test_cases.tuple_support.nested_tuples.simple_tup",
      "op": "callsub simple_tup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ]
    },
    "862": {
      "op": "bury 6",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "tmp%0#2"
      ]
    },
    "864": {
      "op": "bury 6",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "866": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "867": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "868": {
      "op": "bury 11",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0"
      ]
    },
    "870": {
      "op": "bz main_ternary_false@16",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "873": {
      "op": "dig 9",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "875": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "876": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "877": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%11#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%item0%11#0"
      ]
    },
    "878": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%11#0",
        "maybe_value%0#0"
      ]
    },
    "879": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%item0%11#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%11#0",
        "maybe_value%0#0",
        "8"
      ]
    },
    "880": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2",
        "tmp%0#2",
        "tmp%1#5"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ]
    },
    "881": {
      "block": "main_ternary_merge@17",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ],
      "op": "swap",
      "defined_out": [
        "ternary_result%0.a#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.b#2",
        "ternary_result%0.a#2"
      ]
    },
    "882": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.b#2",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "883": {
      "op": "swap",
      "defined_out": [
        "aggregate%val_as_bytes%5#0",
        "ternary_result%0.b#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%val_as_bytes%5#0",
        "ternary_result%0.b#2"
      ]
    },
    "884": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0"
      ]
    },
    "885": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%12#0"
      ]
    },
    "886": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%12#0",
        "0x151f7c75"
      ]
    },
    "887": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "aggregate%head%12#0"
      ]
    },
    "888": {
      "op": "concat",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%70#0"
      ]
    },
    "889": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "890": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "891": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "892": {
      "block": "main_ternary_false@16",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "ternary_result%0.a#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2"
      ]
    },
    "894": {
      "op": "dig 4",
      "defined_out": [
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "ternary_result%0.a#2",
        "ternary_result%0.b#2"
      ]
    },
    "896": {
      "op": "b main_ternary_merge@17"
    },
    "899": {
      "block": "main_maybe_load_tuple_from_box_route@10",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%50#0"
      ]
    },
    "901": {
      "op": "!",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%51#0"
      ]
    },
    "902": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "903": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%52#0"
      ]
    },
    "905": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "906": {
      "op": "bytec_1 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"box\""
      ]
    },
    "907": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%3#0"
      ]
    },
    "910": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "911": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "exists#0"
      ]
    },
    "912": {
      "op": "dup",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "exists#0",
        "exists#0 (copy)"
      ]
    },
    "913": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "exists#0",
        "maybe_value%0#0",
        "exists#0"
      ]
    },
    "915": {
      "op": "bury 10",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "exists#0",
        "maybe_value%0#0"
      ]
    },
    "917": {
      "op": "bury 11",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "exists#0"
      ]
    },
    "919": {
      "op": "bz main_ternary_false@12",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "922": {
      "op": "dig 9",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "924": {
      "op": "dup",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "925": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "926": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%9#0",
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "aggregate%item0%9#0"
      ]
    },
    "927": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%9#0",
        "maybe_value%0#0"
      ]
    },
    "928": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%item0%9#0",
        "exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%item0%9#0",
        "maybe_value%0#0",
        "8"
      ]
    },
    "929": {
      "op": "extract_uint64",
      "defined_out": [
        "exists#0",
        "maybe_value%0#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ]
    },
    "930": {
      "block": "main_ternary_merge@13",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ],
      "op": "swap",
      "defined_out": [
        "maybe_value.a#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value.b#0",
        "maybe_value.a#0"
      ]
    },
    "931": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value.b#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "932": {
      "op": "swap",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "maybe_value.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value.b#0"
      ]
    },
    "933": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "934": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%8#0"
      ]
    },
    "935": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%8#0",
        "0x00"
      ]
    },
    "938": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%head%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%8#0",
        "0x00",
        "0"
      ]
    },
    "939": {
      "op": "dig 10",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%head%8#0",
        "exists#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%8#0",
        "0x00",
        "0",
        "exists#0"
      ]
    },
    "941": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "aggregate%head%8#0",
        "exists#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%8#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "942": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "exists#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%10#0"
      ]
    },
    "943": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%10#0",
        "exists#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%head%10#0",
        "0x151f7c75"
      ]
    },
    "944": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "aggregate%head%10#0"
      ]
    },
    "945": {
      "op": "concat",
      "defined_out": [
        "exists#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%60#0"
      ]
    },
    "946": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "947": {
      "op": "intc_0 // 1",
      "defined_out": [
        "exists#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "948": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "949": {
      "block": "main_ternary_false@12",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "bytec_3 // \"\""
    },
    "950": {
      "op": "dup",
      "defined_out": [
        "maybe_value.a#0",
        "maybe_value.b#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ]
    },
    "951": {
      "op": "b main_ternary_merge@13"
    },
    "954": {
      "block": "main_load_tuple_from_box_route@9",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%40#0"
      ]
    },
    "956": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%41#0"
      ]
    },
    "957": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "958": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%42#0"
      ]
    },
    "960": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "961": {
      "op": "bytec_1 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"box\""
      ]
    },
    "962": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%2#0"
      ]
    },
    "965": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "966": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "967": {
      "error": "check self.box entry exists",
      "op": "assert // check self.box entry exists",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%box_get%0#0"
      ]
    },
    "968": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "969": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "970": {
      "op": "concat",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%49#0"
      ]
    },
    "971": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "972": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "973": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "974": {
      "block": "main_is_tuple_in_box_route@8",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%31#0"
      ]
    },
    "976": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%32#0"
      ]
    },
    "977": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "978": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%33#0"
      ]
    },
    "980": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "981": {
      "op": "bytec_1 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"box\""
      ]
    },
    "982": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ]
    },
    "985": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0"
      ]
    },
    "986": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "987": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0"
      ]
    },
    "989": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0",
        "0x00"
      ]
    },
    "992": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_exists%0#0",
        "0x00",
        "0"
      ]
    },
    "993": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x00",
        "0",
        "maybe_exists%0#0"
      ]
    },
    "995": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "996": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%encoded_bool%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "aggregate%encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "997": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "998": {
      "op": "concat",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%39#0"
      ]
    },
    "999": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1000": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1001": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1002": {
      "block": "main_store_tuple_in_box_route@7",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%25#0"
      ]
    },
    "1004": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%26#0"
      ]
    },
    "1005": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1006": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%27#0"
      ]
    },
    "1008": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1009": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1012": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "1013": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "1014": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#4",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "key.a#4"
      ]
    },
    "1015": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "key.a#4",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "1017": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "key.a#4",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "key.a#4",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "8"
      ]
    },
    "1018": {
      "op": "extract_uint64",
      "defined_out": [
        "key.a#4",
        "key.b#4",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "key.a#4",
        "key.b#4"
      ]
    },
    "1019": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "key.a#4",
        "key.b#4",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "key.a#4",
        "key.b#4",
        "1"
      ]
    },
    "1020": {
      "op": "+",
      "defined_out": [
        "key.a#4",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "key.a#4",
        "tmp%0#2"
      ]
    },
    "1021": {
      "op": "bytec_1 // \"box\"",
      "defined_out": [
        "\"box\"",
        "key.a#4",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "key.a#4",
        "tmp%0#2",
        "\"box\""
      ]
    },
    "1022": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "key.a#4",
        "tmp%0#2",
        "\"box\"",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1024": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "key.a#4",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "key.a#4",
        "tmp%0#2",
        "box_prefixed_key%0#0"
      ]
    },
    "1025": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "box_prefixed_key%0#0",
        "key.a#4"
      ]
    },
    "1027": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#2",
        "box_prefixed_key%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1028": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%0#2"
      ]
    },
    "1030": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "box_prefixed_key%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1031": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "box_prefixed_key%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "box_prefixed_key%0#0",
        "aggregate%head%6#0"
      ]
    },
    "1032": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1033": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1034": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1035": {
      "block": "main_load_tuple_route@6",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%13#0"
      ]
    },
    "1037": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%14#0"
      ]
    },
    "1038": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1039": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%15#0"
      ]
    },
    "1041": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1042": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0"
      ]
    },
    "1043": {
      "op": "bytec 6 // \"pwl\"",
      "defined_out": [
        "\"pwl\"",
        "0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0",
        "\"pwl\""
      ]
    },
    "1045": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1046": {
      "error": "check self.pwl exists",
      "op": "assert // check self.pwl exists",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "1047": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "maybe_value%0#0",
        "0x151f7c75"
      ]
    },
    "1048": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "0x151f7c75",
        "maybe_value%0#0"
      ]
    },
    "1049": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%24#0"
      ]
    },
    "1050": {
      "op": "log",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1051": {
      "op": "intc_0 // 1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1052": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1053": {
      "block": "main_store_tuple_route@5",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%3#0"
      ]
    },
    "1055": {
      "op": "!",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%4#0"
      ]
    },
    "1056": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1057": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%5#0"
      ]
    },
    "1059": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1060": {
      "op": "bytec 6 // \"pwl\"",
      "defined_out": [
        "\"pwl\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"pwl\""
      ]
    },
    "1062": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "\"pwl\"",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "\"pwl\"",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ]
    },
    "1065": {
      "op": "app_global_put",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1066": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1067": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1068": {
      "block": "main_bare_routing@31",
      "stack_in": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%141#0"
      ]
    },
    "1070": {
      "op": "bnz main_after_if_else@33",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1073": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%142#0"
      ]
    },
    "1075": {
      "op": "!",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%143#0"
      ]
    },
    "1076": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1077": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "1078": {
      "op": "return",
      "stack_out": [
        "maybe_value%0#0",
        "a#4",
        "exists#0",
        "i#0",
        "t.0#0",
        "tmp%0#2",
        "tmp%1#5",
        "tmp%2#4",
        "tmp%3#0",
        "total#0"
      ]
    },
    "1079": {
      "subroutine": "test_cases.tuple_support.nested_tuples.get_sender_inefficiently",
      "params": {},
      "block": "get_sender_inefficiently",
      "stack_in": [],
      "op": "pushbytes \"Order is important\"",
      "defined_out": [
        "\"Order is important\""
      ],
      "stack_out": [
        "\"Order is important\""
      ]
    },
    "1099": {
      "op": "log",
      "stack_out": []
    },
    "1100": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1102": {
      "retsub": true,
      "op": "retsub"
    },
    "1103": {
      "subroutine": "test_cases.tuple_support.nested_tuples.simple_tup",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "simple_tup",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "1106": {
      "op": "pushbytes \"I'm just a simple tup\"",
      "defined_out": [
        "\"I'm just a simple tup\""
      ],
      "stack_out": [
        "\"I'm just a simple tup\""
      ]
    },
    "1129": {
      "op": "log",
      "stack_out": []
    },
    "1130": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "1132": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "1134": {
      "retsub": true,
      "op": "retsub"
    },
    "1135": {
      "subroutine": "test_cases.tuple_support.nested_tuples.echo",
      "params": {
        "s#0": "bytes"
      },
      "block": "echo",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1138": {
      "op": "pushbytes \"Is there an echo in here?\"",
      "defined_out": [
        "\"Is there an echo in here?\""
      ],
      "stack_out": [
        "\"Is there an echo in here?\""
      ]
    },
    "1165": {
      "op": "log",
      "stack_out": []
    },
    "1166": {
      "op": "frame_dig -1",
      "defined_out": [
        "s#0 (copy)"
      ],
      "stack_out": [
        "s#0 (copy)"
      ]
    },
    "1168": {
      "retsub": true,
      "op": "retsub"
    }
  }
}