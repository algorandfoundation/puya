#pragma version 10

test_cases.reversed_iteration.contract.MyContract.approval_program:
    int 0
    dupn 4
    byte ""
    dupn 18
    // reversed_iteration/contract.py:8-9
    // # Check empty iterations don't error
    // for i in reversed(urange(0)):
    int 1
    assert // Step cannot be zero
    int 0
    int 0
    <
    bz main_after_for@6
    int 0
    int 0
    -
    dup
    int 1
    %
    int 0
    !=
    swap
    int 1
    /
    swap
    +
    int 1
    -
    int 1
    swap
    *
    int 0
    swap
    +
    bury 10
    dig 9
    int 0
    >=
    bz main_after_for@6

main_for_body@3:
    // reversed_iteration/contract.py:8-9
    // # Check empty iterations don't error
    // for i in reversed(urange(0)):
    dig 9
    // reversed_iteration/contract.py:10
    // log(op.itob(i))
    itob
    log
    // reversed_iteration/contract.py:8-9
    // # Check empty iterations don't error
    // for i in reversed(urange(0)):
    dig 9
    int 0
    >
    bz main_after_for@6
    dig 9
    int 1
    -
    bury 10
    b main_for_body@3

main_after_for@6:
    int 0
    bury 18
    // reversed_iteration/contract.py:11
    // for x in reversed(arc4.StaticArray[arc4.UInt8, typing.Literal[0]]()):
    int 0
    bury 7

main_for_header@7:
    // reversed_iteration/contract.py:11
    // for x in reversed(arc4.StaticArray[arc4.UInt8, typing.Literal[0]]()):
    dig 17
    int 0
    <
    bz main_after_for@10
    dig 6
    int 1
    -
    dup
    bury 8
    int 1
    *
    byte 0x
    swap
    int 1
    extract3
    // reversed_iteration/contract.py:12
    // log(x.bytes)
    log
    dig 17
    int 1
    +
    bury 18
    b main_for_header@7

main_after_for@10:
    // reversed_iteration/contract.py:14
    // test_array = arc4.StaticArray(arc4.UInt8(0), arc4.UInt8(0), arc4.UInt8(0), arc4.UInt8(0))
    byte 0x
    byte 0x00
    concat
    byte 0x00
    concat
    byte 0x00
    concat
    byte 0x00
    concat
    dup
    bury 22
    // reversed_iteration/contract.py:15-16
    // # urange: reversed items, forward index
    // for index, item in uenumerate(reversed(urange(4))):
    int 1
    assert // Step cannot be zero
    int 0
    int 4
    <
    swap
    bury 21
    bz main_after_for@16
    int 4
    int 0
    -
    dup
    int 1
    %
    int 0
    !=
    swap
    int 1
    /
    swap
    +
    int 1
    -
    int 1
    swap
    *
    int 0
    swap
    +
    bury 9
    int 0
    bury 12
    dig 8
    int 0
    >=
    dig 21
    dup
    bury 22
    bury 22
    bz main_after_for@16

main_for_body@13:
    // reversed_iteration/contract.py:15-16
    // # urange: reversed items, forward index
    // for index, item in uenumerate(reversed(urange(4))):
    dig 8
    dig 12
    swap
    // reversed_iteration/contract.py:17
    // test_array[index] = arc4.UInt8(item)
    itob
    extract 7 1
    swap
    dup
    int 4
    <
    assert // Index access is out of bounds
    int 1
    *
    dig 22
    swap
    uncover 2
    replace3
    bury 21
    // reversed_iteration/contract.py:15-16
    // # urange: reversed items, forward index
    // for index, item in uenumerate(reversed(urange(4))):
    dig 8
    int 0
    >
    dig 21
    bury 21
    bz main_after_for@16
    dig 8
    int 1
    -
    bury 9
    dig 11
    int 1
    +
    bury 12
    b main_for_body@13

main_after_for@16:
    dig 19
    dup
    bury 22
    // reversed_iteration/contract.py:18
    // assert test_array.bytes == Bytes.from_hex("03020100")
    dup
    byte 0x03020100
    ==
    assert
    // reversed_iteration/contract.py:20-21
    // # urange: forward items, reversed index
    // for index, item in reversed(uenumerate(reversed(urange(4, 8)))):
    int 1
    assert // Step cannot be zero
    int 4
    int 8
    <
    swap
    bury 21
    bz main_after_for@24
    int 8
    int 4
    -
    dup
    int 1
    %
    int 0
    !=
    swap
    int 1
    /
    swap
    +
    int 1
    -
    bury 15
    int 4
    bury 8
    int 0
    bury 11

main_for_header@18:
    // reversed_iteration/contract.py:20-21
    // # urange: forward items, reversed index
    // for index, item in reversed(uenumerate(reversed(urange(4, 8)))):
    dig 7
    int 8
    <
    dig 21
    bury 21
    bz main_after_for@24
    dig 7
    dig 15
    dig 12
    -
    swap
    // reversed_iteration/contract.py:22
    // test_array[index] = arc4.UInt8(item)
    itob
    extract 7 1
    swap
    dup
    int 4
    <
    assert // Index access is out of bounds
    dup
    int 1
    *
    dig 23
    swap
    uncover 3
    replace3
    bury 22
    // reversed_iteration/contract.py:23
    // if index == 2:
    int 2
    ==
    bz main_after_if_else@21
    dig 20
    bury 20
    // reversed_iteration/contract.py:24
    // break
    b main_after_for@24

main_after_if_else@21:
    // reversed_iteration/contract.py:20-21
    // # urange: forward items, reversed index
    // for index, item in reversed(uenumerate(reversed(urange(4, 8)))):
    dig 7
    int 1
    +
    bury 8
    dig 10
    int 1
    +
    bury 11
    b main_for_header@18

main_after_for@24:
    dig 19
    // reversed_iteration/contract.py:25
    // assert test_array.bytes == Bytes.from_hex("03020504")
    byte 0x03020504
    ==
    assert
    // reversed_iteration/contract.py:27-28
    // # Indexable: Reversed items
    // some_strings = arc4.StaticArray(arc4.String("a"), arc4.String("b"), arc4.String("c"))
    byte "a"
    len
    itob
    extract 6 2
    byte "a"
    concat
    byte "b"
    len
    itob
    extract 6 2
    byte "b"
    concat
    swap
    byte "c"
    len
    itob
    extract 6 2
    byte "c"
    concat
    cover 2
    int 6
    itob
    extract 6 2
    byte 0x
    swap
    concat
    dig 1
    len
    int 6
    swap
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    dig 3
    len
    +
    itob
    extract 6 2
    concat
    swap
    concat
    swap
    concat
    swap
    concat
    bury 22
    // reversed_iteration/contract.py:29
    // some_string_reversed = arc4.String("")
    byte ""
    len
    itob
    extract 6 2
    byte ""
    concat
    bury 23
    int 0
    bury 17
    // reversed_iteration/contract.py:30
    // for str_item in reversed(some_strings):
    int 3
    bury 6

main_for_header@25:
    // reversed_iteration/contract.py:30
    // for str_item in reversed(some_strings):
    dig 16
    int 3
    <
    bz main_after_for@28
    dig 5
    int 1
    -
    dup
    bury 7
    int 2
    *
    dig 22
    dup
    cover 2
    swap
    extract_uint16
    dig 1
    dig 1
    extract_uint16
    int 2
    +
    uncover 2
    uncover 2
    uncover 2
    extract3
    // reversed_iteration/contract.py:31
    // some_string_reversed += str_item
    dig 23
    extract 2 0
    swap
    extract 2 0
    concat
    dup
    len
    itob
    extract 6 0
    swap
    concat
    bury 23
    dig 16
    int 1
    +
    bury 17
    b main_for_header@25

main_after_for@28:
    // reversed_iteration/contract.py:32
    // assert some_string_reversed == "cba"
    byte "cba"
    len
    itob
    extract 6 2
    byte "cba"
    concat
    dig 23
    swap
    ==
    assert
    // reversed_iteration/contract.py:34-35
    // # Indexable: Reversed item and index
    // bytes_reversed_with_index = Bytes(b"")
    byte ""
    bury 24
    // reversed_iteration/contract.py:36
    // for index, bytes_item in reversed(uenumerate(Bytes(b"HELLO"))):
    byte "HELLO"
    len
    dup
    bury 20
    int 0
    bury 17
    bury 5

main_for_header@29:
    // reversed_iteration/contract.py:36
    // for index, bytes_item in reversed(uenumerate(Bytes(b"HELLO"))):
    dig 15
    dig 19
    <
    bz main_after_for@32
    dig 4
    int 1
    -
    dup
    bury 6
    byte "HELLO"
    dig 1
    int 1
    extract3
    swap
    // reversed_iteration/contract.py:37
    // bytes_reversed_with_index += op.itob(index)[-1:] + bytes_item
    itob
    dup
    len
    int 1
    dig 1
    >=
    int 1
    dig 2
    uncover 2
    select
    dig 1
    swap
    -
    uncover 2
    swap
    uncover 2
    substring3
    swap
    concat
    dig 24
    swap
    concat
    bury 24
    dig 15
    int 1
    +
    bury 16
    b main_for_header@29

main_after_for@32:
    // reversed_iteration/contract.py:38
    // assert bytes_reversed_with_index == b"\04O\03L\02L\01E\00H"
    dig 23
    byte "\x04O\x03L\x02L\x01E\x00H"
    ==
    assert
    int 0
    bury 4
    // reversed_iteration/contract.py:47
    // UInt64(3),
    int 3
    b main_for_body@37

main_for_header_2@34:
    // reversed_iteration/contract.py:46
    // UInt64(2),
    int 2
    dig 3
    bury 5
    b main_for_body@37

main_for_header_1@35:
    // reversed_iteration/contract.py:45
    // UInt64(1),
    int 1
    dig 3
    bury 5
    b main_for_body@37

main_for_header_0@36:
    // reversed_iteration/contract.py:44
    // UInt64(0),
    int 0
    dig 3
    bury 5

main_for_body@37:
    // reversed_iteration/contract.py:40-41
    // # Tuple: Reversed items, forward index
    // for index, tuple_item in uenumerate(
    dig 4
    // reversed_iteration/contract.py:51
    // assert index + tuple_item == 3
    swap
    +
    int 3
    ==
    assert
    dig 3
    dup
    int 1
    +
    bury 4
    // reversed_iteration/contract.py:40-50
    // # Tuple: Reversed items, forward index
    // for index, tuple_item in uenumerate(
    //     reversed(
    //         (
    //             UInt64(0),
    //             UInt64(1),
    //             UInt64(2),
    //             UInt64(3),
    //         )
    //     )
    // ):
    switch main_for_header_2@34 main_for_header_1@35 main_for_header_0@36
    // reversed_iteration/contract.py:53-54
    // # Tuple: Forward items, reverse index
    // prev_item = UInt64(0)
    int 0
    bury 13
    // reversed_iteration/contract.py:55
    // prev_index = UInt64(99)
    int 99
    bury 14
    int 0
    bury 2
    // reversed_iteration/contract.py:60
    // UInt64(5),
    int 5
    b main_for_body@44

main_for_header_1@41:
    // reversed_iteration/contract.py:61
    // UInt64(6),
    int 6
    dig 1
    bury 3
    b main_for_body@44

main_for_header_2@42:
    // reversed_iteration/contract.py:62
    // UInt64(7),
    int 7
    dig 1
    bury 3
    b main_for_body@44

main_for_header_3@43:
    // reversed_iteration/contract.py:63
    // UInt64(8),
    int 8
    dig 1
    bury 3

main_for_body@44:
    int 3
    dig 3
    -
    // reversed_iteration/contract.py:68
    // assert prev_item < tuple_item
    dig 14
    uncover 2
    dup
    cover 3
    <
    assert
    // reversed_iteration/contract.py:69
    // assert prev_index > index
    dig 15
    dig 1
    >
    assert
    // reversed_iteration/contract.py:70
    // assert index + tuple_item == 8
    dup
    dig 2
    +
    int 8
    ==
    assert
    // reversed_iteration/contract.py:72
    // prev_item = tuple_item
    swap
    bury 14
    // reversed_iteration/contract.py:73
    // prev_index = index
    bury 14
    dig 1
    dup
    int 1
    +
    bury 2
    // reversed_iteration/contract.py:56-67
    // for index, tuple_item in reversed(
    //     uenumerate(
    //         reversed(
    //             (
    //                 UInt64(5),
    //                 UInt64(6),
    //                 UInt64(7),
    //                 UInt64(8),
    //             )
    //         )
    //     )
    // ):
    switch main_for_header_1@41 main_for_header_2@42 main_for_header_3@43
    // reversed_iteration/contract.py:75
    // return True
    int 1
    return
