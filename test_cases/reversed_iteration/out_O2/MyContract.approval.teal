#pragma version 10

test_cases.reversed_iteration.contract.MyContract.approval_program:
    int 0
    dupn 3
    byte ""
    dupn 11
    int 0
    dup

main_for_header@7:
    dig 1
    int 0
    <
    bz main_after_for@10
    dup
    int 1
    -
    dup
    bury 2
    byte 0x
    swap
    int 1
    extract3 // on error: Index access is out of bounds
    log
    dig 1
    int 1
    +
    bury 2
    b main_for_header@7

main_after_for@10:
    byte 0x00000000
    bury 16
    int 3
    int 0
    bury 15
    bury 13

main_for_body@13:
    dig 12
    dup
    itob
    extract 7 1
    dig 15
    dup
    int 4
    <
    assert // Index access is out of bounds
    dig 18
    swap
    uncover 2
    replace3
    bury 17
    bz main_after_for@16
    dig 12
    int 1
    -
    dig 14
    int 1
    +
    bury 15
    bury 13
    b main_for_body@13

main_after_for@16:
    dig 15
    byte 0x03020100
    ==
    assert
    int 4
    int 0
    bury 10
    bury 13

main_for_header@18:
    dig 12
    int 8
    <
    dig 16
    bury 16
    bz main_after_for@24
    int 3
    dig 9
    -
    dig 13
    itob
    extract 7 1
    swap
    dup
    int 4
    <
    assert // Index access is out of bounds
    dig 17
    dig 1
    uncover 3
    replace3
    bury 17
    int 2
    ==
    bz main_after_if_else@21
    dig 15
    bury 15
    b main_after_for@24

main_after_if_else@21:
    dig 12
    int 1
    +
    dig 9
    int 1
    +
    bury 10
    bury 13
    b main_for_header@18

main_after_for@24:
    dig 14
    byte 0x03020504
    ==
    assert
    byte "\x00\x00"
    bury 17
    int 0
    bury 12
    int 3
    bury 8

main_for_header@25:
    dig 11
    int 3
    <
    bz main_after_for@28
    dig 7
    int 1
    -
    dup
    bury 9
    int 2
    *
    byte 0x00060009000c000161000162000163
    swap
    extract_uint16
    byte 0x00060009000c000161000162000163
    dig 1
    extract_uint16
    int 2
    +
    byte 0x00060009000c000161000162000163
    cover 2
    extract3
    dig 17
    extract 2 0
    swap
    extract 2 0
    concat
    dup
    len
    itob
    extract 6 0
    swap
    concat
    bury 17
    dig 11
    int 1
    +
    bury 12
    b main_for_header@25

main_after_for@28:
    dig 16
    byte "\x00\x03cba"
    ==
    assert
    byte ""
    bury 18
    int 5
    int 0
    bury 12
    bury 7

main_for_header@29:
    dig 10
    int 5
    <
    bz main_after_for@32
    dig 6
    int 1
    -
    byte "HELLO"
    dig 1
    int 1
    extract3
    swap
    dup
    itob
    dup
    len
    int 1
    dig 1
    >=
    int 1
    dig 2
    uncover 2
    select
    dig 1
    swap
    -
    swap
    substring3
    uncover 2
    concat
    dig 19
    swap
    concat
    bury 19
    dig 11
    int 1
    +
    bury 12
    bury 7
    b main_for_header@29

main_after_for@32:
    dig 17
    byte "\x04O\x03L\x02L\x01E\x00H"
    ==
    assert
    int 0
    int 3
    bury 5
    bury 14
    b main_for_body@37

main_for_header_2@34:
    int 2
    bury 4
    dig 5
    bury 14
    b main_for_body@37

main_for_header_1@35:
    int 1
    bury 4
    dig 5
    bury 14
    b main_for_body@37

main_for_header_0@36:
    int 0
    bury 4
    dig 5
    bury 14

main_for_body@37:
    dig 13
    dup
    dig 5
    +
    int 3
    ==
    assert
    dup
    int 1
    +
    bury 7
    switch main_for_header_2@34 main_for_header_1@35 main_for_header_0@36
    int 0
    int 99
    bury 11
    int 0
    swap
    int 5
    bury 6
    b main_for_body@44

main_for_header_1@41:
    int 6
    bury 4
    dig 13
    bury 10
    dig 4
    dig 3
    b main_for_body@44

main_for_header_2@42:
    int 7
    bury 4
    dig 13
    bury 10
    dig 4
    dig 3
    b main_for_body@44

main_for_header_3@43:
    int 8
    bury 4
    dig 13
    bury 10
    dig 4
    dig 3

main_for_body@44:
    dig 5
    dup
    bury 6
    int 3
    uncover 3
    dup
    cover 3
    -
    dup
    cover 2
    bury 18
    uncover 3
    dig 1
    <
    assert
    dig 12
    dig 2
    >
    assert
    +
    int 8
    ==
    assert
    dup
    int 1
    +
    bury 6
    switch main_for_header_1@41 main_for_header_2@42 main_for_header_3@43
    int 1
    return
