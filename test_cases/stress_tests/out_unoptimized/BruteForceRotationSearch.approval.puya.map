{
  "version": 3,
  "sources": [
    "../brute_force_rotation_search.py"
  ],
  "mappings": ";;;;;;;AAoBwB;AAAW;AAAvB;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAfJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAiBY;AAAL;AAAP;AACY;AAAL;AAAP;AACY;AAAL;AAAP;AACY;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACO;AAAP;AAMR;;;AAmBI;;AAAA;;AAAI;AAGA;AAAI;AAAJ;AAAA;AACA;AAAI;AAAJ;AAAA;AACA;AAAI;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AACA;AAAI;;AAAJ;AAAA;AAdJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.stress_tests.brute_force_rotation_search.BruteForceRotationSearch.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 3"
    },
    "7": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "8": {
      "op": "dup",
      "stack_out": [
        "0",
        "0"
      ]
    },
    "9": {
      "callsub": "test_cases.stress_tests.brute_force_rotation_search.do_some_ops",
      "op": "callsub do_some_ops",
      "defined_out": [
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0"
      ]
    },
    "12": {
      "op": "cover 13",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0"
      ]
    },
    "14": {
      "op": "cover 12",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0"
      ]
    },
    "16": {
      "op": "cover 11",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0",
        "tuple_assignment%10#0"
      ]
    },
    "18": {
      "op": "cover 10",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ]
    },
    "20": {
      "op": "cover 9",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0"
      ]
    },
    "22": {
      "op": "cover 8",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%8#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0"
      ]
    },
    "24": {
      "op": "cover 7",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0"
      ]
    },
    "26": {
      "op": "cover 6",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0"
      ]
    },
    "28": {
      "op": "cover 5",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0"
      ]
    },
    "30": {
      "op": "cover 4",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "tuple_assignment%4#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0"
      ]
    },
    "32": {
      "op": "cover 3",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "tuple_assignment%4#0",
        "tuple_assignment%3#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0",
        "tuple_assignment%2#0"
      ]
    },
    "34": {
      "op": "cover 2",
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "tuple_assignment%4#0",
        "tuple_assignment%3#0",
        "tuple_assignment%2#0",
        "tuple_assignment%0#0",
        "tuple_assignment%1#0"
      ]
    },
    "36": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "tuple_assignment%1#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "tuple_assignment%4#0",
        "tuple_assignment%3#0",
        "tuple_assignment%2#0",
        "tuple_assignment%1#0",
        "a#0"
      ]
    },
    "37": {
      "op": "cover 8",
      "defined_out": [
        "a#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%2#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "tuple_assignment%4#0",
        "tuple_assignment%3#0",
        "tuple_assignment%2#0",
        "b#0"
      ]
    },
    "39": {
      "op": "cover 10",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%3#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "tuple_assignment%4#0",
        "tuple_assignment%3#0",
        "c#0"
      ]
    },
    "41": {
      "op": "cover 11",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%4#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "tuple_assignment%13#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "tuple_assignment%4#0",
        "d#0"
      ]
    },
    "43": {
      "op": "cover 12",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%5#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "tuple_assignment%5#0",
        "e#0"
      ]
    },
    "45": {
      "op": "cover 13",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%6#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "tuple_assignment%6#0",
        "f#0"
      ]
    },
    "47": {
      "op": "cover 13",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%7#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0",
        "tuple_assignment%8#0",
        "tuple_assignment%7#0",
        "g#0"
      ]
    },
    "49": {
      "op": "cover 13",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%8#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0",
        "tuple_assignment%8#0",
        "h#0"
      ]
    },
    "51": {
      "op": "cover 13",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0",
        "tuple_assignment%9#0"
      ],
      "stack_out": [
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0",
        "i#0"
      ]
    },
    "53": {
      "op": "cover 13",
      "stack_out": [
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "tuple_assignment%9#0",
        "a#0"
      ]
    },
    "55": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "tuple_assignment%10#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0"
      ],
      "stack_out": [
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "a#0",
        "j#0"
      ]
    },
    "56": {
      "op": "cover 13",
      "stack_out": [
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "tuple_assignment%10#0",
        "a#0"
      ]
    },
    "58": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tuple_assignment%11#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0"
      ],
      "stack_out": [
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "a#0",
        "k#0"
      ]
    },
    "59": {
      "op": "cover 13",
      "stack_out": [
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "tuple_assignment%11#0",
        "b#0",
        "a#0"
      ]
    },
    "61": {
      "op": "uncover 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "tuple_assignment%12#0",
        "tuple_assignment%13#0"
      ],
      "stack_out": [
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "b#0",
        "a#0",
        "l#0"
      ]
    },
    "63": {
      "op": "cover 13",
      "stack_out": [
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "tuple_assignment%12#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "65": {
      "op": "uncover 3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tuple_assignment%13#0"
      ],
      "stack_out": [
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "c#0",
        "b#0",
        "a#0",
        "m#0"
      ]
    },
    "67": {
      "op": "cover 13",
      "stack_out": [
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tuple_assignment%13#0",
        "d#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "69": {
      "op": "uncover 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0",
        "b#0",
        "a#0",
        "n#0"
      ]
    },
    "71": {
      "op": "cover 13",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "73": {
      "op": "intc_1 // 0",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0",
        "b#0",
        "a#0",
        "0"
      ]
    },
    "74": {
      "op": "==",
      "defined_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0",
        "b#0",
        "tmp%0#0"
      ]
    },
    "75": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0",
        "b#0"
      ]
    },
    "76": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0",
        "b#0",
        "1"
      ]
    },
    "77": {
      "op": "==",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0",
        "tmp%1#0"
      ]
    },
    "78": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0"
      ]
    },
    "79": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "c#0",
        "2"
      ]
    },
    "80": {
      "op": "==",
      "defined_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "tmp%2#0"
      ]
    },
    "81": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0"
      ]
    },
    "82": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "d#0",
        "3"
      ]
    },
    "83": {
      "op": "==",
      "defined_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "tmp%3#0"
      ]
    },
    "84": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0"
      ]
    },
    "85": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "e#0",
        "4"
      ]
    },
    "87": {
      "op": "==",
      "defined_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "tmp%4#0"
      ]
    },
    "88": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0"
      ]
    },
    "89": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "f#0",
        "5"
      ]
    },
    "91": {
      "op": "==",
      "defined_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "tmp%5#0"
      ]
    },
    "92": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0"
      ]
    },
    "93": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "g#0",
        "6"
      ]
    },
    "95": {
      "op": "==",
      "defined_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "tmp%6#0"
      ]
    },
    "96": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0"
      ]
    },
    "97": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "h#0",
        "7"
      ]
    },
    "99": {
      "op": "==",
      "defined_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "100": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0"
      ]
    },
    "101": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "i#0",
        "8"
      ]
    },
    "103": {
      "op": "==",
      "defined_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "tmp%8#0"
      ]
    },
    "104": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0"
      ]
    },
    "105": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "j#0",
        "9"
      ]
    },
    "107": {
      "op": "==",
      "defined_out": [
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "tmp%9#0"
      ]
    },
    "108": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0"
      ]
    },
    "109": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "k#0",
        "10"
      ]
    },
    "111": {
      "op": "==",
      "defined_out": [
        "l#0",
        "m#0",
        "n#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "tmp%10#0"
      ]
    },
    "112": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0",
        "l#0"
      ]
    },
    "113": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "l#0",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "l#0",
        "11"
      ]
    },
    "115": {
      "op": "==",
      "defined_out": [
        "m#0",
        "n#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "tmp%11#0"
      ]
    },
    "116": {
      "op": "assert",
      "stack_out": [
        "n#0",
        "m#0"
      ]
    },
    "117": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "m#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "m#0",
        "12"
      ]
    },
    "119": {
      "op": "==",
      "defined_out": [
        "n#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "n#0",
        "tmp%12#0"
      ]
    },
    "120": {
      "op": "assert",
      "stack_out": [
        "n#0"
      ]
    },
    "121": {
      "op": "pushint 13 // 13",
      "defined_out": [
        "13",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "13"
      ]
    },
    "123": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "124": {
      "op": "assert",
      "stack_out": []
    },
    "125": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "126": {
      "op": "return",
      "stack_out": []
    },
    "127": {
      "subroutine": "test_cases.stress_tests.brute_force_rotation_search.do_some_ops",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "do_some_ops",
      "stack_in": [],
      "op": "proto 2 14"
    },
    "130": {
      "block": "do_some_ops_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "132": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "134": {
      "op": "+",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0"
      ]
    },
    "135": {
      "op": "dup",
      "defined_out": [
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "c#0 (copy)"
      ]
    },
    "136": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "c#0 (copy)",
        "1"
      ]
    },
    "137": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "tmp%0#0"
      ]
    },
    "138": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "c#0"
      ]
    },
    "139": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "140": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "c#0",
        "c#0 (copy)",
        "2"
      ]
    },
    "141": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "c#0",
        "tmp%1#0"
      ]
    },
    "142": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "c#0"
      ]
    },
    "143": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "144": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "c#0",
        "c#0 (copy)",
        "3"
      ]
    },
    "145": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "c#0",
        "tmp%2#0"
      ]
    },
    "146": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "c#0"
      ]
    },
    "147": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "148": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "c#0",
        "c#0 (copy)",
        "4"
      ]
    },
    "150": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "c#0",
        "tmp%3#0"
      ]
    },
    "151": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "c#0"
      ]
    },
    "152": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "153": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "c#0",
        "c#0 (copy)",
        "5"
      ]
    },
    "155": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "c#0",
        "tmp%4#0"
      ]
    },
    "156": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "c#0"
      ]
    },
    "157": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "158": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "c#0",
        "c#0 (copy)",
        "6"
      ]
    },
    "160": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "c#0",
        "tmp%5#0"
      ]
    },
    "161": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "c#0"
      ]
    },
    "162": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "163": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "c#0",
        "c#0 (copy)",
        "7"
      ]
    },
    "165": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "c#0",
        "tmp%6#0"
      ]
    },
    "166": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "c#0"
      ]
    },
    "167": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "168": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "c#0",
        "c#0 (copy)",
        "8"
      ]
    },
    "170": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "c#0",
        "tmp%7#0"
      ]
    },
    "171": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "c#0"
      ]
    },
    "172": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "173": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "c#0",
        "c#0 (copy)",
        "9"
      ]
    },
    "175": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "c#0",
        "tmp%8#0"
      ]
    },
    "176": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "c#0"
      ]
    },
    "177": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "178": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "c#0",
        "c#0 (copy)",
        "10"
      ]
    },
    "180": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "c#0",
        "tmp%9#0"
      ]
    },
    "181": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "c#0"
      ]
    },
    "182": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "183": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "c#0",
        "c#0 (copy)",
        "11"
      ]
    },
    "185": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "c#0",
        "tmp%10#0"
      ]
    },
    "186": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "c#0"
      ]
    },
    "187": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "188": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "c#0",
        "c#0 (copy)",
        "12"
      ]
    },
    "190": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "c#0",
        "tmp%11#0"
      ]
    },
    "191": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "c#0"
      ]
    },
    "192": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "193": {
      "op": "pushint 13 // 13",
      "defined_out": [
        "13",
        "c#0",
        "c#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "c#0",
        "c#0 (copy)",
        "13"
      ]
    },
    "195": {
      "op": "+",
      "defined_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "c#0",
        "tmp%12#0"
      ]
    },
    "196": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0"
      ]
    },
    "197": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0"
      ]
    },
    "199": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "201": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "203": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "205": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "207": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "209": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "211": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "213": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "215": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "217": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "219": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%12#0",
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "221": {
      "op": "uncover 13",
      "stack_out": [
        "c#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "223": {
      "retsub": true,
      "op": "retsub"
    }
  }
}