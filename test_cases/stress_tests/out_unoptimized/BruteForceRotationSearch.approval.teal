#pragma version 10

test_cases.stress_tests.brute_force_rotation_search.BruteForceRotationSearch.approval_program:
    // stress_tests/brute_force_rotation_search.py:21
    // ) = do_some_ops(UInt64(0), UInt64(0))
    int 0
    int 0
    callsub do_some_ops
    cover 13
    cover 12
    cover 11
    cover 10
    cover 9
    cover 8
    cover 7
    cover 6
    cover 5
    cover 4
    cover 3
    cover 2
    cover 1
    // stress_tests/brute_force_rotation_search.py:6-21
    // (
    //     a,
    //     b,
    //     c,
    //     d,
    //     e,
    //     f,
    //     g,
    //     h,
    //     i,
    //     j,
    //     k,
    //     l,  # noqa: E741
    //     m,
    //     n,
    // ) = do_some_ops(UInt64(0), UInt64(0))
    cover 8
    cover 10
    cover 11
    cover 12
    cover 13
    cover 13
    cover 13
    cover 13
    cover 13
    uncover 1
    cover 13
    uncover 1
    cover 13
    uncover 2
    cover 13
    uncover 3
    cover 13
    uncover 4
    cover 13
    // stress_tests/brute_force_rotation_search.py:23
    // assert a == 0
    int 0
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:24
    // assert b == 1
    int 1
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:25
    // assert c == 2
    int 2
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:26
    // assert d == 3
    int 3
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:27
    // assert e == 4
    int 4
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:28
    // assert f == 5
    int 5
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:29
    // assert g == 6
    int 6
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:30
    // assert h == 7
    int 7
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:31
    // assert i == 8
    int 8
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:32
    // assert j == 9
    int 9
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:33
    // assert k == 10
    int 10
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:34
    // assert l == 11
    int 11
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:35
    // assert m == 12
    int 12
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:36
    // assert n == 13
    int 13
    ==
    assert
    // stress_tests/brute_force_rotation_search.py:37
    // return True
    int 1
    return


// test_cases.stress_tests.brute_force_rotation_search.do_some_ops(a: uint64, b: uint64) -> uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64:
do_some_ops:
    // stress_tests/brute_force_rotation_search.py:43-59
    // @subroutine
    // def do_some_ops(a: UInt64, b: UInt64) -> tuple[
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    //     UInt64,
    // ]:
    proto 2 14
    // stress_tests/brute_force_rotation_search.py:60
    // c = a + b
    frame_dig -2
    frame_dig -1
    +
    // stress_tests/brute_force_rotation_search.py:63
    // c + 1,
    dup
    int 1
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:64
    // c + 2,
    dup
    int 2
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:65
    // c + 3,
    dup
    int 3
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:66
    // c + 4,
    dup
    int 4
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:67
    // c + 5,
    dup
    int 5
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:68
    // c + 6,
    dup
    int 6
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:69
    // c + 7,
    dup
    int 7
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:70
    // c + 8,
    dup
    int 8
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:71
    // c + 9,
    dup
    int 9
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:72
    // c + 10,
    dup
    int 10
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:73
    // c + 11,
    dup
    int 11
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:74
    // c + 12,
    dup
    int 12
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:75
    // c + 13,
    dup
    int 13
    +
    cover 1
    // stress_tests/brute_force_rotation_search.py:61-76
    // return (
    //     c,
    //     c + 1,
    //     c + 2,
    //     c + 3,
    //     c + 4,
    //     c + 5,
    //     c + 6,
    //     c + 7,
    //     c + 8,
    //     c + 9,
    //     c + 10,
    //     c + 11,
    //     c + 12,
    //     c + 13,
    // )
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    uncover 13
    retsub
