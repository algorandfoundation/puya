contract BruteForceRotationSearch
{
  approval_program(): bool
  {
    (a, b, c, d, e, f, g, h, i, j, k, l, m, n): tuple<uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64> = test_cases.stress_tests.brute_force_rotation_search::do_some_ops(0u, 0u)
    assert(a == 0u)
    assert(b == 1u)
    assert(c == 2u)
    assert(d == 3u)
    assert(e == 4u)
    assert(f == 5u)
    assert(g == 6u)
    assert(h == 7u)
    assert(i == 8u)
    assert(j == 9u)
    assert(k == 10u)
    assert(l == 11u)
    assert(m == 12u)
    assert(n == 13u)
    return true
  }
  
  clear_state_program(): bool
  {
    return true
  }
}

subroutine do_some_ops(a: uint64, b: uint64): tuple<uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64>
{
  c: uint64 = a + b
  return (c, c + 1u, c + 2u, c + 3u, c + 4u, c + 5u, c + 6u, c + 7u, c + 8u, c + 9u, c + 10u, c + 11u, c + 12u, c + 13u)
}