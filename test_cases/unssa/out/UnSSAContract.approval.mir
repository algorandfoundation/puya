// Op                                                                                 Stack (out)
// test_cases.unssa.contract.UnSSAContract.approval_program() -> uint64:
main:
    allocate 1 to stack                                                               (𝕗) result2#0 |

main_block@0:                                                                         (𝕗) result2#0 |
    // unssa/contract.py:6
    // test_self_ref_phi()
    callsub test_self_ref_phi                                                         (𝕗) result2#0 | {test_self_ref_phi}
    pop 1                                                                             (𝕗) result2#0 |
    // unssa/contract.py:7
    // result1 = test_swap(UInt64(1))
    int 1                                                                             (𝕗) result2#0 | 1
    callsub test_swap                                                                 (𝕗) result2#0 | result1#0
    l-store-copy result1#0 0                                                          (𝕗) result2#0 | result1#0,result1#0
    f-store result1#0                                                                 (𝕗) result2#0,result1#0 | result1#0
    // unssa/contract.py:8
    // log(op.itob(result1))
    l-load-copy result1#0 0                                                           (𝕗) result2#0,result1#0 | result1#0,result1#0 (copy)
    itob                                                                              (𝕗) result2#0,result1#0 | result1#0,tmp%0#0
    log                                                                               (𝕗) result2#0,result1#0 | result1#0
    // unssa/contract.py:9
    // assert 1 <= result1 <= 2
    l-load result1#0 0                                                                (𝕗) result2#0,result1#0 | result1#0
    int 1                                                                             (𝕗) result2#0,result1#0 | result1#0,1
    >=                                                                                (𝕗) result2#0,result1#0 | tmp%1#0
    bz main_bool_false@3                                                              (𝕗) result2#0,result1#0 |
    // Implicit fall through to main_and_contd@1                                      (𝕗) result2#0,result1#0 |

main_and_contd@1:                                                                     (𝕗) result2#0,result1#0 |
    // unssa/contract.py:9
    // assert 1 <= result1 <= 2
    f-load result1#0                                                                  (𝕗) result2#0,result1#0 | result1#0
    int 2                                                                             (𝕗) result2#0,result1#0 | result1#0,2
    <=                                                                                (𝕗) result2#0,result1#0 | tmp%2#0
    bz main_bool_false@3                                                              (𝕗) result2#0,result1#0 |
    // Implicit fall through to main_bool_true@2                                      (𝕗) result2#0,result1#0 |

main_bool_true@2:                                                                     (𝕗) result2#0,result1#0 |
    int 1                                                                             (𝕗) result2#0,result1#0 | and_result%0#0
    x-store and_result%0#0                                                            (𝕗) result2#0,result1#0 | (𝕏) and_result%0#0 |
    b main_bool_merge@4                                                               (𝕗) result2#0,result1#0 | (𝕏) and_result%0#0 |

main_bool_false@3:                                                                    (𝕗) result2#0,result1#0 |
    int 0                                                                             (𝕗) result2#0,result1#0 | and_result%0#0
    x-store and_result%0#0                                                            (𝕗) result2#0,result1#0 | (𝕏) and_result%0#0 |
    // Implicit fall through to main_bool_merge@4                                     (𝕗) result2#0,result1#0 | (𝕏) and_result%0#0 |

main_bool_merge@4:                                                                    (𝕗) result2#0,result1#0 | (𝕏) and_result%0#0 |
    // unssa/contract.py:9
    // assert 1 <= result1 <= 2
    x-load and_result%0#0                                                             (𝕗) result2#0,result1#0 | and_result%0#0
    assert                                                                            (𝕗) result2#0,result1#0 |
    // unssa/contract.py:10
    // result2 = test_swap(UInt64(2))
    int 2                                                                             (𝕗) result2#0,result1#0 | 2
    callsub test_swap                                                                 (𝕗) result2#0,result1#0 | result2#0
    l-store-copy result2#0 0                                                          (𝕗) result2#0,result1#0 | result2#0,result2#0
    f-store result2#0                                                                 (𝕗) result2#0,result1#0 | result2#0
    // unssa/contract.py:11
    // log(op.itob(result2))
    l-load-copy result2#0 0                                                           (𝕗) result2#0,result1#0 | result2#0,result2#0 (copy)
    itob                                                                              (𝕗) result2#0,result1#0 | result2#0,tmp%3#0
    log                                                                               (𝕗) result2#0,result1#0 | result2#0
    // unssa/contract.py:12
    // assert 1 <= result2 <= 2
    l-load result2#0 0                                                                (𝕗) result2#0,result1#0 | result2#0
    int 1                                                                             (𝕗) result2#0,result1#0 | result2#0,1
    >=                                                                                (𝕗) result2#0,result1#0 | tmp%4#0
    bz main_bool_false@7                                                              (𝕗) result2#0,result1#0 |
    // Implicit fall through to main_and_contd@5                                      (𝕗) result2#0,result1#0 |

main_and_contd@5:                                                                     (𝕗) result2#0,result1#0 |
    // unssa/contract.py:12
    // assert 1 <= result2 <= 2
    f-load result2#0                                                                  (𝕗) result2#0,result1#0 | result2#0
    int 2                                                                             (𝕗) result2#0,result1#0 | result2#0,2
    <=                                                                                (𝕗) result2#0,result1#0 | tmp%5#0
    bz main_bool_false@7                                                              (𝕗) result2#0,result1#0 |
    // Implicit fall through to main_bool_true@6                                      (𝕗) result2#0,result1#0 |

main_bool_true@6:                                                                     (𝕗) result2#0,result1#0 |
    int 1                                                                             (𝕗) result2#0,result1#0 | and_result%1#0
    x-store and_result%1#0                                                            (𝕗) result2#0,result1#0 | (𝕏) and_result%1#0 |
    b main_bool_merge@8                                                               (𝕗) result2#0,result1#0 | (𝕏) and_result%1#0 |

main_bool_false@7:                                                                    (𝕗) result2#0,result1#0 |
    int 0                                                                             (𝕗) result2#0,result1#0 | and_result%1#0
    x-store and_result%1#0                                                            (𝕗) result2#0,result1#0 | (𝕏) and_result%1#0 |
    // Implicit fall through to main_bool_merge@8                                     (𝕗) result2#0,result1#0 | (𝕏) and_result%1#0 |

main_bool_merge@8:                                                                    (𝕗) result2#0,result1#0 | (𝕏) and_result%1#0 |
    // unssa/contract.py:12
    // assert 1 <= result2 <= 2
    x-load and_result%1#0                                                             (𝕗) result2#0,result1#0 | and_result%1#0
    assert                                                                            (𝕗) result2#0,result1#0 |
    // unssa/contract.py:13
    // test_swap_loop(UInt64(7), UInt64(11))
    int 7                                                                             (𝕗) result2#0,result1#0 | 7
    int 11                                                                            (𝕗) result2#0,result1#0 | 7,11
    callsub test_swap_loop                                                            (𝕗) result2#0,result1#0 | {test_swap_loop}
    pop 1                                                                             (𝕗) result2#0,result1#0 |
    // unssa/contract.py:14
    // assert test_param_update_with_reentrant_entry_block(UInt64(0)) == 10
    int 0                                                                             (𝕗) result2#0,result1#0 | 0
    callsub test_param_update_with_reentrant_entry_block                              (𝕗) result2#0,result1#0 | tmp%6#0
    int 10                                                                            (𝕗) result2#0,result1#0 | tmp%6#0,10
    ==                                                                                (𝕗) result2#0,result1#0 | tmp%7#0
    assert                                                                            (𝕗) result2#0,result1#0 |
    // unssa/contract.py:15
    // test_param_update_with_reentrant_entry_block_v2(UInt64(0))
    int 0                                                                             (𝕗) result2#0,result1#0 | 0
    callsub test_param_update_with_reentrant_entry_block_v2                           (𝕗) result2#0,result1#0 | {test_param_update_with_reentrant_entry_block_v2}
    pop 1                                                                             (𝕗) result2#0,result1#0 |
    // unssa/contract.py:16
    // test_param_update_with_reentrant_entry_block_v3()
    callsub test_param_update_with_reentrant_entry_block_v3                           (𝕗) result2#0,result1#0 |
    // unssa/contract.py:17
    // test_swap_args()
    callsub test_swap_args                                                            (𝕗) result2#0,result1#0 |
    // unssa/contract.py:19
    // (a, b) = test_tuple_swap(UInt64(100), UInt64(200), UInt64(0))
    int 100                                                                           (𝕗) result2#0,result1#0 | 100
    int 200                                                                           (𝕗) result2#0,result1#0 | 100,200
    int 0                                                                             (𝕗) result2#0,result1#0 | 100,200,0
    callsub test_tuple_swap                                                           (𝕗) result2#0,result1#0 | a#0,b#0
    // unssa/contract.py:20
    // assert a == UInt64(100)
    l-load a#0 1                                                                      (𝕗) result2#0,result1#0 | b#0,a#0
    int 100                                                                           (𝕗) result2#0,result1#0 | b#0,a#0,100
    ==                                                                                (𝕗) result2#0,result1#0 | b#0,tmp%8#0
    assert                                                                            (𝕗) result2#0,result1#0 | b#0
    // unssa/contract.py:21
    // assert b == UInt64(200)
    l-load b#0 0                                                                      (𝕗) result2#0,result1#0 | b#0
    int 200                                                                           (𝕗) result2#0,result1#0 | b#0,200
    ==                                                                                (𝕗) result2#0,result1#0 | tmp%9#0
    assert                                                                            (𝕗) result2#0,result1#0 |
    // unssa/contract.py:22
    // (a, b) = test_tuple_swap(UInt64(100), UInt64(200), UInt64(1))
    int 100                                                                           (𝕗) result2#0,result1#0 | 100
    int 200                                                                           (𝕗) result2#0,result1#0 | 100,200
    int 1                                                                             (𝕗) result2#0,result1#0 | 100,200,1
    callsub test_tuple_swap                                                           (𝕗) result2#0,result1#0 | a#0,b#0
    // unssa/contract.py:23
    // assert a == UInt64(200)
    l-load a#0 1                                                                      (𝕗) result2#0,result1#0 | b#0,a#0
    int 200                                                                           (𝕗) result2#0,result1#0 | b#0,a#0,200
    ==                                                                                (𝕗) result2#0,result1#0 | b#0,tmp%10#0
    assert                                                                            (𝕗) result2#0,result1#0 | b#0
    // unssa/contract.py:24
    // assert b == UInt64(100)
    l-load b#0 0                                                                      (𝕗) result2#0,result1#0 | b#0
    int 100                                                                           (𝕗) result2#0,result1#0 | b#0,100
    ==                                                                                (𝕗) result2#0,result1#0 | tmp%11#0
    assert                                                                            (𝕗) result2#0,result1#0 |
    // unssa/contract.py:26
    // return True
    int 1                                                                             (𝕗) result2#0,result1#0 | 1
    return                                                                            (𝕗) result2#0,result1#0 |


// test_cases.unssa.contract.test_self_ref_phi() -> uint64:
test_self_ref_phi:
    // unssa/contract.py:32-33
    // @subroutine
    // def test_self_ref_phi() -> UInt64:
    proto 0 1

test_self_ref_phi_block@0:
    // unssa/contract.py:34
    // a = UInt64(1)
    int 1                                                                             a#0
    f-store a#0                                                                       (𝕗) a#0 |
    // Implicit fall through to test_self_ref_phi_while_top@1                         (𝕗) a#0 |

test_self_ref_phi_while_top@1:                                                        (𝕗) a#0 |
    // unssa/contract.py:35
    // while a < 100:
    f-load a#0                                                                        (𝕗) a#0 | a#0
    int 100                                                                           (𝕗) a#0 | a#0,100
    <                                                                                 (𝕗) a#0 | tmp%0#0
    bz test_self_ref_phi_after_while@7                                                (𝕗) a#0 |
    // Implicit fall through to test_self_ref_phi_while_body@2                        (𝕗) a#0 |

test_self_ref_phi_while_body@2:                                                       (𝕗) a#0 |
    // unssa/contract.py:36
    // if a % 105 == 0:
    f-load a#0                                                                        (𝕗) a#0 | a#0
    int 105                                                                           (𝕗) a#0 | a#0,105
    %                                                                                 (𝕗) a#0 | tmp%1#0
    bz test_self_ref_phi_while_top@1                                                  (𝕗) a#0 |
    // Implicit fall through to test_self_ref_phi_after_if_else@4                     (𝕗) a#0 |

test_self_ref_phi_after_if_else@4:                                                    (𝕗) a#0 |
    // unssa/contract.py:38
    // if not a % 21:
    f-load a#0                                                                        (𝕗) a#0 | a#0
    int 21                                                                            (𝕗) a#0 | a#0,21
    %                                                                                 (𝕗) a#0 | tmp%3#0
    bz test_self_ref_phi_after_while@7                                                (𝕗) a#0 |
    // Implicit fall through to test_self_ref_phi_after_if_else@6                     (𝕗) a#0 |

test_self_ref_phi_after_if_else@6:                                                    (𝕗) a#0 |
    // unssa/contract.py:40
    // a += 1
    f-load a#0                                                                        (𝕗) a#0 | a#0
    int 1                                                                             (𝕗) a#0 | a#0,1
    +                                                                                 (𝕗) a#0 | a#0
    f-store a#0                                                                       (𝕗) a#0 |
    b test_self_ref_phi_while_top@1                                                   (𝕗) a#0 |

test_self_ref_phi_after_while@7:                                                      (𝕗) a#0 |
    // unssa/contract.py:41
    // return a
    f-load a#0                                                                        (𝕗) a#0 | a#0
    retsub                                                                            a#0


// test_cases.unssa.contract.test_swap(i: uint64) -> uint64:
test_swap:                                                                            (𝕡) i#0 |
    // unssa/contract.py:44-45
    // @subroutine
    // def test_swap(i: UInt64) -> UInt64:
    proto 1 1                                                                         (𝕡) i#0 |

test_swap_block@0:                                                                    (𝕡) i#0 |
    // unssa/contract.py:46
    // x = UInt64(1)
    int 1                                                                             (𝕡) i#0 | x#0
    f-store x#0                                                                       (𝕡) i#0 | (𝕗) x#0 |
    // unssa/contract.py:47
    // y = UInt64(2)
    int 2                                                                             (𝕡) i#0 | (𝕗) x#0 | y#0
    f-store y#0                                                                       (𝕡) i#0 | (𝕗) x#0,y#0 |
    // Implicit fall through to test_swap_while_top@1                                 (𝕡) i#0 | (𝕗) x#0,y#0 |

test_swap_while_top@1:                                                                (𝕡) i#0 | (𝕗) x#0,y#0 |
    // unssa/contract.py:48
    // while i > 0:
    p-load i#0                                                                        (𝕡) i#0 | (𝕗) x#0,y#0 | i#0 (copy)
    bz test_swap_after_while@3                                                        (𝕡) i#0 | (𝕗) x#0,y#0 |
    // Implicit fall through to test_swap_while_body@2                                (𝕡) i#0 | (𝕗) x#0,y#0 |

test_swap_while_body@2:                                                               (𝕡) i#0 | (𝕗) x#0,y#0 |
    // unssa/contract.py:52
    // i = i - 1
    p-load i#0                                                                        (𝕡) i#0 | (𝕗) x#0,y#0 | i#0 (copy)
    int 1                                                                             (𝕡) i#0 | (𝕗) x#0,y#0 | i#0 (copy),1
    -                                                                                 (𝕡) i#0 | (𝕗) x#0,y#0 | i#0
    p-store i#0                                                                       (𝕡) i#0 | (𝕗) x#0,y#0 |
    f-load y#0                                                                        (𝕡) i#0 | (𝕗) x#0,y#0 | parcopy%0#0
    f-load x#0                                                                        (𝕡) i#0 | (𝕗) x#0,y#0 | parcopy%0#0,y#0
    f-store y#0                                                                       (𝕡) i#0 | (𝕗) x#0,y#0 | parcopy%0#0
    l-load parcopy%0#0 0                                                              (𝕡) i#0 | (𝕗) x#0,y#0 | x#0
    f-store x#0                                                                       (𝕡) i#0 | (𝕗) x#0,y#0 |
    b test_swap_while_top@1                                                           (𝕡) i#0 | (𝕗) x#0,y#0 |

test_swap_after_while@3:                                                              (𝕡) i#0 | (𝕗) x#0,y#0 |
    // unssa/contract.py:53
    // return x
    f-load x#0                                                                        (𝕡) i#0 | (𝕗) x#0,y#0 | x#0
    retsub                                                                            x#0


// test_cases.unssa.contract.test_swap_loop(i: uint64, j: uint64) -> uint64:
test_swap_loop:                                                                       (𝕡) i#0,j#0 |
    // unssa/contract.py:56-57
    // @subroutine
    // def test_swap_loop(i: UInt64, j: UInt64) -> UInt64:
    proto 2 1                                                                         (𝕡) i#0,j#0 |

test_swap_loop_block@0:                                                               (𝕡) i#0,j#0 |
    // unssa/contract.py:58
    // x = UInt64(1)
    int 1                                                                             (𝕡) i#0,j#0 | x#0
    f-store x#0                                                                       (𝕡) i#0,j#0 | (𝕗) x#0 |
    // unssa/contract.py:59
    // y = UInt64(2)
    int 2                                                                             (𝕡) i#0,j#0 | (𝕗) x#0 | y#0
    f-store y#0                                                                       (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    // Implicit fall through to test_swap_loop_while_top@1                            (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |

test_swap_loop_while_top@1:                                                           (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    // unssa/contract.py:60
    // while i > 0:
    p-load i#0                                                                        (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | i#0 (copy)
    bz test_swap_loop_after_while@6                                                   (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    // Implicit fall through to test_swap_loop_while_top@3                            (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |

test_swap_loop_while_top@3:                                                           (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    // unssa/contract.py:61
    // while j > 0:
    p-load j#0                                                                        (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | j#0 (copy)
    bz test_swap_loop_after_while@5                                                   (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    // Implicit fall through to test_swap_loop_while_body@4                           (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |

test_swap_loop_while_body@4:                                                          (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    // unssa/contract.py:65
    // j = j - 1
    p-load j#0                                                                        (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | j#0 (copy)
    int 1                                                                             (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | j#0 (copy),1
    -                                                                                 (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | j#0
    p-store j#0                                                                       (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    f-load y#0                                                                        (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | parcopy%0#0
    f-load x#0                                                                        (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | parcopy%0#0,y#0
    f-store y#0                                                                       (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | parcopy%0#0
    l-load parcopy%0#0 0                                                              (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | x#0
    f-store x#0                                                                       (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    b test_swap_loop_while_top@3                                                      (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |

test_swap_loop_after_while@5:                                                         (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    // unssa/contract.py:66
    // i = i - 1
    p-load i#0                                                                        (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | i#0 (copy)
    int 1                                                                             (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | i#0 (copy),1
    -                                                                                 (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | i#0
    p-store i#0                                                                       (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    b test_swap_loop_while_top@1                                                      (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |

test_swap_loop_after_while@6:                                                         (𝕡) i#0,j#0 | (𝕗) x#0,y#0 |
    // unssa/contract.py:67
    // return x
    f-load x#0                                                                        (𝕡) i#0,j#0 | (𝕗) x#0,y#0 | x#0
    retsub                                                                            x#0


// test_cases.unssa.contract.test_param_update_with_reentrant_entry_block(x: uint64) -> uint64:
test_param_update_with_reentrant_entry_block:                                         (𝕡) x#0 |
    // unssa/contract.py:77-78
    // @subroutine
    // def test_param_update_with_reentrant_entry_block(x: UInt64) -> UInt64:
    proto 1 1                                                                         (𝕡) x#0 |

test_param_update_with_reentrant_entry_block_while_top@1:                             (𝕡) x#0 |
    // unssa/contract.py:80
    // x = x + 1
    p-load x#0                                                                        (𝕡) x#0 | x#0 (copy)
    int 1                                                                             (𝕡) x#0 | x#0 (copy),1
    +                                                                                 (𝕡) x#0 | x#0
    p-store x#0                                                                       (𝕡) x#0 |
    // unssa/contract.py:81
    // if x >= 10:
    p-load x#0                                                                        (𝕡) x#0 | x#0 (copy)
    int 10                                                                            (𝕡) x#0 | x#0 (copy),10
    >=                                                                                (𝕡) x#0 | tmp%0#0
    bz test_param_update_with_reentrant_entry_block_while_top@1                       (𝕡) x#0 |
    // Implicit fall through to test_param_update_with_reentrant_entry_block_if_body@3 (𝕡) x#0 | 

test_param_update_with_reentrant_entry_block_if_body@3:                               (𝕡) x#0 |
    // unssa/contract.py:83
    // return x
    p-load x#0                                                                        (𝕡) x#0 | x#0 (copy)
    retsub                                                                            x#0 (copy)


// test_cases.unssa.contract.test_param_update_with_reentrant_entry_block_v2(x: uint64) -> uint64:
test_param_update_with_reentrant_entry_block_v2:                                      (𝕡) x#0 |
    // unssa/contract.py:86-87
    // @subroutine
    // def test_param_update_with_reentrant_entry_block_v2(x: UInt64) -> UInt64:
    proto 1 1                                                                         (𝕡) x#0 |

test_param_update_with_reentrant_entry_block_v2_block@0:                              (𝕡) x#0 |
    // unssa/contract.py:88
    // x = x + 1
    p-load x#0                                                                        (𝕡) x#0 | x#0 (copy)
    int 1                                                                             (𝕡) x#0 | x#0 (copy),1
    +                                                                                 (𝕡) x#0 | x#0
    p-store x#0                                                                       (𝕡) x#0 |
    // Implicit fall through to test_param_update_with_reentrant_entry_block_v2_while_top@1 (𝕡) x#0 | 

test_param_update_with_reentrant_entry_block_v2_while_top@1:                          (𝕡) x#0 |
    // unssa/contract.py:90
    // if x >= 1:
    p-load x#0                                                                        (𝕡) x#0 | x#0 (copy)
    int 1                                                                             (𝕡) x#0 | x#0 (copy),1
    >=                                                                                (𝕡) x#0 | tmp%0#0
    bz test_param_update_with_reentrant_entry_block_v2_while_top@1                    (𝕡) x#0 |
    // Implicit fall through to test_param_update_with_reentrant_entry_block_v2_if_body@3 (𝕡) x#0 | 

test_param_update_with_reentrant_entry_block_v2_if_body@3:                            (𝕡) x#0 |
    // unssa/contract.py:92
    // return x
    p-load x#0                                                                        (𝕡) x#0 | x#0 (copy)
    retsub                                                                            x#0 (copy)


// test_cases.unssa.contract.test_param_update_with_reentrant_entry_block_v3() -> void:
test_param_update_with_reentrant_entry_block_v3:
    // unssa/contract.py:95-96
    // @subroutine
    // def test_param_update_with_reentrant_entry_block_v3() -> None:
    proto 0 0

test_param_update_with_reentrant_entry_block_v3_while_top@1:
    // unssa/contract.py:98
    // if one():
    callsub one                                                                       tmp%0#0
    bz test_param_update_with_reentrant_entry_block_v3_while_top@1
    // Implicit fall through to test_param_update_with_reentrant_entry_block_v3_if_body@3 

test_param_update_with_reentrant_entry_block_v3_if_body@3:
    retsub


// test_cases.unssa.contract.one() -> uint64:
one:
    // unssa/contract.py:102-103
    // @subroutine
    // def one() -> UInt64:
    proto 0 1

one_block@0:
    // unssa/contract.py:104
    // return UInt64(1)
    int 1                                                                             1
    retsub                                                                            1


// test_cases.unssa.contract.test_swap_args() -> void:
test_swap_args:
    // unssa/contract.py:112-113
    // @subroutine
    // def test_swap_args() -> None:
    proto 0 0

test_swap_args_block@0:
    // unssa/contract.py:114
    // a = one() + 123
    callsub one                                                                       tmp%0#0
    int 123                                                                           tmp%0#0,123
    +                                                                                 a#0
    // unssa/contract.py:115
    // b = one() + 234
    callsub one                                                                       a#0,tmp%1#0
    int 234                                                                           a#0,tmp%1#0,234
    +                                                                                 a#0,b#0
    // unssa/contract.py:116
    // a, b = swap_args(a, b)
    l-load a#0 1                                                                      b#0,a#0
    l-load b#0 1                                                                      a#0,b#0
    callsub swap_args                                                                 a#0,b#0
    // unssa/contract.py:117
    // assert a == 235, "a == 235"
    l-load a#0 1                                                                      b#0,a#0
    int 235                                                                           b#0,a#0,235
    ==                                                                                b#0,tmp%2#0
    assert // a == 235                                                                b#0
    // unssa/contract.py:118
    // assert b == 124, "b = 124"
    l-load b#0 0                                                                      b#0
    int 124                                                                           b#0,124
    ==                                                                                tmp%3#0
    assert // b = 124
    retsub


// test_cases.unssa.contract.swap_args(a: uint64, b: uint64) -> uint64, uint64:
swap_args:                                                                            (𝕡) a#0,b#0 |
    // unssa/contract.py:107-108
    // @subroutine
    // def swap_args(a: UInt64, b: UInt64) -> tuple[UInt64, UInt64]:
    proto 2 2                                                                         (𝕡) a#0,b#0 |

swap_args_block@0:                                                                    (𝕡) a#0,b#0 |
    // unssa/contract.py:109
    // return b, a
    p-load b#0                                                                        (𝕡) a#0,b#0 | b#0 (copy)
    p-load a#0                                                                        (𝕡) a#0,b#0 | b#0 (copy),a#0 (copy)
    retsub                                                                            b#0 (copy),a#0 (copy)


// test_cases.unssa.contract.test_tuple_swap(a: uint64, b: uint64, i: uint64) -> uint64, uint64:
test_tuple_swap:                                                                      (𝕡) a#0,b#0,i#0 |
    // unssa/contract.py:70-71
    // @subroutine
    // def test_tuple_swap(a: UInt64, b: UInt64, i: UInt64) -> tuple[UInt64, UInt64]:
    proto 3 2                                                                         (𝕡) a#0,b#0,i#0 |

test_tuple_swap_block@0:                                                              (𝕡) a#0,b#0,i#0 |
    // unssa/contract.py:72
    // for _item in urange(i):
    int 0                                                                             (𝕡) a#0,b#0,i#0 | _item#0
    f-store _item#0                                                                   (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |
    // Implicit fall through to test_tuple_swap_for_header@1                          (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |

test_tuple_swap_for_header@1:                                                         (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |
    // unssa/contract.py:72
    // for _item in urange(i):
    f-load _item#0                                                                    (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | _item#0
    p-load i#0                                                                        (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | _item#0,i#0 (copy)
    <                                                                                 (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | continue_looping%0#0
    bz test_tuple_swap_after_for@4                                                    (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |
    // Implicit fall through to test_tuple_swap_for_body@2                            (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |

test_tuple_swap_for_body@2:                                                           (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |
    // unssa/contract.py:72
    // for _item in urange(i):
    f-load _item#0                                                                    (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | _item#0
    int 1                                                                             (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | _item#0,1
    +                                                                                 (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | _item#0
    f-store _item#0                                                                   (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |
    p-load a#0                                                                        (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | parcopy%0#0
    p-load b#0                                                                        (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | parcopy%0#0,a#0
    p-store a#0                                                                       (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | parcopy%0#0
    l-load parcopy%0#0 0                                                              (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | parcopy%0#0
    p-store b#0                                                                       (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |
    b test_tuple_swap_for_header@1                                                    (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |

test_tuple_swap_after_for@4:                                                          (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 |
    // unssa/contract.py:74
    // return a, b
    p-load a#0                                                                        (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | a#0 (copy)
    p-load b#0                                                                        (𝕡) a#0,b#0,i#0 | (𝕗) _item#0 | a#0 (copy),b#0 (copy)
    retsub                                                                            a#0 (copy),b#0 (copy)


