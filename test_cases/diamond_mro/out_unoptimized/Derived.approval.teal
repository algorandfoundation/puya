#pragma version 10
#pragma typetrack false

// test_cases.diamond_mro.derived.Derived.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1
    txn ApplicationID
    bnz main_after_if_else@2

main_call___init__@1:
    callsub __init__

main_after_if_else@2:
    callsub approval_program
    return


// test_cases.diamond_mro.derived.Derived.__init__() -> void:
__init__:
    // diamond_mro/derived.py:8
    // def __init__(self) -> None:
    proto 0 0
    // diamond_mro/derived.py:9
    // log("derived.__init__")
    pushbytes "derived.__init__"
    log
    // diamond_mro/derived.py:10
    // super().__init__()
    callsub test_cases.diamond_mro.base1.Base1.__init__
    retsub


// test_cases.diamond_mro.derived.Derived.method() -> void:
method:
    // diamond_mro/derived.py:12-13
    // @arc4.abimethod
    // def method(self) -> None:
    proto 0 0
    // diamond_mro/derived.py:14
    // log("derived.method")
    pushbytes "derived.method"
    log
    // diamond_mro/derived.py:15
    // super().method()
    callsub test_cases.diamond_mro.base1.Base1.method
    retsub


// test_cases.diamond_mro.base1.Base1.__init__() -> void:
test_cases.diamond_mro.base1.Base1.__init__:
    // diamond_mro/base1.py:7
    // def __init__(self) -> None:
    proto 0 0
    // diamond_mro/base1.py:8
    // log("base1.__init__")
    pushbytes "base1.__init__"
    log
    // diamond_mro/base1.py:9
    // super().__init__()
    callsub test_cases.diamond_mro.base2.Base2.__init__
    retsub


// test_cases.diamond_mro.base1.Base1.method() -> void:
test_cases.diamond_mro.base1.Base1.method:
    // diamond_mro/base1.py:11-12
    // @arc4.abimethod
    // def method(self) -> None:
    proto 0 0
    // diamond_mro/base1.py:13
    // log("base1.method")
    pushbytes "base1.method"
    log
    // diamond_mro/base1.py:14
    // super().method()
    callsub test_cases.diamond_mro.base2.Base2.method
    retsub


// test_cases.diamond_mro.base2.Base2.__init__() -> void:
test_cases.diamond_mro.base2.Base2.__init__:
    // diamond_mro/base2.py:7
    // def __init__(self) -> None:
    proto 0 0
    // diamond_mro/base2.py:8
    // log("base2.__init__")
    pushbytes "base2.__init__"
    log
    // diamond_mro/base2.py:9
    // super().__init__()
    callsub test_cases.diamond_mro.gp.GP.__init__
    retsub


// test_cases.diamond_mro.base2.Base2.method() -> void:
test_cases.diamond_mro.base2.Base2.method:
    // diamond_mro/base2.py:11-12
    // @arc4.abimethod
    // def method(self) -> None:
    proto 0 0
    // diamond_mro/base2.py:13
    // log("base2.method")
    pushbytes "base2.method"
    log
    // diamond_mro/base2.py:14
    // super().method()
    callsub test_cases.diamond_mro.gp.GP.method
    retsub


// test_cases.diamond_mro.gp.GP.__init__() -> void:
test_cases.diamond_mro.gp.GP.__init__:
    // diamond_mro/gp.py:7
    // def __init__(self) -> None:
    proto 0 0
    // diamond_mro/gp.py:8
    // log("gp.__init__")
    pushbytes "gp.__init__"
    log
    retsub


// test_cases.diamond_mro.gp.GP.create() -> void:
create:
    // diamond_mro/gp.py:11-12
    // @arc4.abimethod(create="require")
    // def create(self) -> None:
    proto 0 0
    retsub


// test_cases.diamond_mro.gp.GP.method() -> void:
test_cases.diamond_mro.gp.GP.method:
    // diamond_mro/gp.py:15-16
    // @arc4.abimethod
    // def method(self) -> None:
    proto 0 0
    // diamond_mro/gp.py:17
    // log("gp.method")
    pushbytes "gp.method"
    log
    retsub


// algopy.arc4.ARC4Contract.approval_program() -> uint64:
approval_program:
    proto 0 1

approval_program_block@1:
    // diamond_mro/derived.py:7
    // class Derived(Base1, Base2):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz approval_program_bare_routing@7

approval_program_abi_routing@2:
    // diamond_mro/derived.py:7
    // class Derived(Base1, Base2):
    txna ApplicationArgs 0
    pushbytes 0x4f045d84 // method "method()void"
    pushbytes 0x4c5c61ba // method "create()void"
    uncover 2
    match approval_program_method_route@3 approval_program_create_route@4

approval_program_switch_case_default@5:

approval_program_switch_case_next@6:

approval_program_after_if_else@8:
    // diamond_mro/derived.py:7
    // class Derived(Base1, Base2):
    intc_0 // 0

approval_program_after_inlined_test_cases.diamond_mro.derived.Derived.__puya_arc4_router__@9:
    retsub

approval_program_create_route@4:
    // diamond_mro/gp.py:11
    // @arc4.abimethod(create="require")
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub create
    intc_1 // 1
    b approval_program_after_inlined_test_cases.diamond_mro.derived.Derived.__puya_arc4_router__@9

approval_program_method_route@3:
    // diamond_mro/derived.py:12
    // @arc4.abimethod
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub method
    intc_1 // 1
    b approval_program_after_inlined_test_cases.diamond_mro.derived.Derived.__puya_arc4_router__@9

approval_program_bare_routing@7:
    b approval_program_after_if_else@8
