#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1
    b main_block@0

main_block@0:
    txn ApplicationID
    bnz main_after_if_else@2
    b main_call___init__@1

main_call___init__@1:
    callsub __init__
    b main_after_if_else@2

main_after_if_else@2:
    b main_block@3

main_block@3:
    // diamond_mro/gp.py:6
    // class GP(ARC4Contract, abc.ABC):
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion must be NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    bz main_create_NoOp@7
    b main_call_NoOp@4

main_call_NoOp@4:
    // diamond_mro/gp.py:6
    // class GP(ARC4Contract, abc.ABC):
    txna ApplicationArgs 0
    pushbytes 0x4f045d84 // method "method()void"
    uncover 1
    match main_method_route@5
    b main_switch_case_next@6

main_switch_case_next@6:
    b main_after_if_else@10

main_after_if_else@10:
    // diamond_mro/gp.py:6
    // class GP(ARC4Contract, abc.ABC):
    err

main_method_route@5:
    // diamond_mro/gp.py:15
    // @arc4.abimethod
    callsub method
    b main_switch_case_next@6

main_create_NoOp@7:
    // diamond_mro/gp.py:6
    // class GP(ARC4Contract, abc.ABC):
    txna ApplicationArgs 0
    pushbytes 0x4c5c61ba // method "create()void"
    uncover 1
    match main_create_route@8
    b main_switch_case_next@9

main_switch_case_next@9:
    b main_after_if_else@10

main_create_route@8:
    // diamond_mro/gp.py:11
    // @arc4.abimethod(create="require")
    callsub create
    b main_switch_case_next@9


// test_cases.diamond_mro.gp.GP.create[routing]() -> void:
create:
    b create_block@0

create_block@0:
    // diamond_mro/gp.py:11
    // @arc4.abimethod(create="require")
    callsub test_cases.diamond_mro.gp.GP.create
    intc_1 // 1
    return


// test_cases.diamond_mro.gp.GP.method[routing]() -> void:
method:
    b method_block@0

method_block@0:
    // diamond_mro/gp.py:15
    // @arc4.abimethod
    callsub test_cases.diamond_mro.gp.GP.method
    intc_1 // 1
    return


// test_cases.diamond_mro.gp.GP.__init__() -> void:
__init__:
    b __init___block@0

__init___block@0:
    // diamond_mro/gp.py:8
    // log("gp.__init__")
    pushbytes "gp.__init__"
    log
    // diamond_mro/gp.py:9
    // super().__init__()
    callsub algopy._contract.Contract.__init__
    retsub


// test_cases.diamond_mro.gp.GP.create() -> void:
test_cases.diamond_mro.gp.GP.create:
    b test_cases.diamond_mro.gp.GP.create_block@0

test_cases.diamond_mro.gp.GP.create_block@0:
    retsub


// test_cases.diamond_mro.gp.GP.method() -> void:
test_cases.diamond_mro.gp.GP.method:
    b test_cases.diamond_mro.gp.GP.method_block@0

test_cases.diamond_mro.gp.GP.method_block@0:
    // diamond_mro/gp.py:17
    // log("gp.method")
    pushbytes "gp.method"
    log
    retsub


// algopy._contract.Contract.__init__() -> void:
algopy._contract.Contract.__init__:
    b algopy._contract.Contract.__init___block@0

algopy._contract.Contract.__init___block@0:
    retsub
