main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        test_cases.diamond_mro.base2.Base2.__init__()
        goto block@2
    block@2: // after_if_else_L1
        goto block@3
    block@3: // L6
        let tmp%0#1: uint64 = (txn OnCompletion)
        let tmp%1#0: bool = (== tmp%0#1 NoOp)
        (assert tmp%1#0) // OnCompletion must be NoOp
        let tmp%2#0: uint64 = (txn ApplicationID)
        let tmp%3#0: bool = (!= tmp%2#0 0u)
        goto tmp%3#0 ? block@4 : block@7
    block@4: // call_NoOp_L6
        let tmp%4#0: bytes = (txna ApplicationArgs 0)
        switch tmp%4#0 {method "method()void" => block@5, * => block@6}
    block@5: // method_route_L11
        test_cases.diamond_mro.base2.Base2.method[routing]()
        goto block@6
    block@6: // switch_case_next_L6
        goto block@10
    block@7: // create_NoOp_L6
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "create()void" => block@8, * => block@9}
    block@8: // create_route_L11
        test_cases.diamond_mro.gp.GP.create[routing]()
        goto block@9
    block@9: // switch_case_next_L6
        goto block@10
    block@10: // after_if_else_L6
        exit 0u
    block@11: // after_inlined_test_cases.diamond_mro.base2.Base2.__puya_arc4_router___L1
        let tmp%1#0: bool = undefined
        return tmp%1#0

subroutine test_cases.diamond_mro.base2.Base2.method[routing]() -> void:
    block@0: // L11
        test_cases.diamond_mro.base2.Base2.method()
        exit 1u

subroutine test_cases.diamond_mro.gp.GP.create[routing]() -> void:
    block@0: // L11
        test_cases.diamond_mro.gp.GP.create()
        exit 1u

subroutine test_cases.diamond_mro.base2.Base2.__init__() -> void:
    block@0: // L7
        (log "base2.__init__")
        test_cases.diamond_mro.gp.GP.__init__()
        return 

subroutine test_cases.diamond_mro.base2.Base2.method() -> void:
    block@0: // L11
        (log "base2.method")
        test_cases.diamond_mro.gp.GP.method()
        return 

subroutine test_cases.diamond_mro.gp.GP.__init__() -> void:
    block@0: // L7
        (log "gp.__init__")
        algopy._contract.Contract.__init__()
        return 

subroutine test_cases.diamond_mro.gp.GP.create() -> void:
    block@0: // L11
        return 

subroutine test_cases.diamond_mro.gp.GP.method() -> void:
    block@0: // L15
        (log "gp.method")
        return 

subroutine algopy._contract.Contract.__init__() -> void:
    block@0: // L1
        return 