main test_cases.diamond_mro.derived.Derived.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        test_cases.diamond_mro.derived.Derived.__init__()
        goto block@2
    block@2: // after_if_else_L1
        let tmp%1#0: bool = algopy.arc4.ARC4Contract.approval_program()
        return tmp%1#0

subroutine test_cases.diamond_mro.derived.Derived.method[routing]() -> void:
    block@0: // L12
        test_cases.diamond_mro.derived.Derived.method()
        exit 1u

subroutine test_cases.diamond_mro.gp.GP.create[routing]() -> void:
    block@0: // L11
        test_cases.diamond_mro.gp.GP.create()
        exit 1u

subroutine test_cases.diamond_mro.derived.Derived.__init__() -> void:
    block@0: // L8
        (log "derived.__init__")
        test_cases.diamond_mro.base1.Base1.__init__()
        return 

subroutine test_cases.diamond_mro.derived.Derived.method() -> void:
    block@0: // L12
        (log "derived.method")
        test_cases.diamond_mro.base1.Base1.method()
        return 

subroutine test_cases.diamond_mro.base1.Base1.__init__() -> void:
    block@0: // L7
        (log "base1.__init__")
        test_cases.diamond_mro.base2.Base2.__init__()
        return 

subroutine test_cases.diamond_mro.base1.Base1.method() -> void:
    block@0: // L11
        (log "base1.method")
        test_cases.diamond_mro.base2.Base2.method()
        return 

subroutine test_cases.diamond_mro.base2.Base2.__init__() -> void:
    block@0: // L7
        (log "base2.__init__")
        test_cases.diamond_mro.gp.GP.__init__()
        return 

subroutine test_cases.diamond_mro.base2.Base2.method() -> void:
    block@0: // L11
        (log "base2.method")
        test_cases.diamond_mro.gp.GP.method()
        return 

subroutine test_cases.diamond_mro.gp.GP.__init__() -> void:
    block@0: // L7
        (log "gp.__init__")
        algopy._contract.Contract.__init__()
        return 

subroutine test_cases.diamond_mro.gp.GP.create() -> void:
    block@0: // L11
        return 

subroutine test_cases.diamond_mro.gp.GP.method() -> void:
    block@0: // L15
        (log "gp.method")
        return 

subroutine algopy.arc4.ARC4Contract.approval_program() -> bool:
    block@0: // L1
        goto block@1
    block@1: // L7
        let tmp%0#0: bool = (txn ApplicationID)
        let tmp%1#0: bool = (! tmp%0#0)
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: uint64 = (shl tmp%2#0 1u)
        let tmp%4#0: uint64 = (+ tmp%1#0 tmp%3#0)
        switch tmp%4#0 {0u => block@2, 1u => block@6, 2u => block@10, 3u => block@11, 4u => block@12, 5u => block@13, 6u => block@14, 7u => block@15, 8u => block@16, 9u => block@17, 10u => block@18, 11u => block@19, * => block@20}
    block@2: // switch_case_0_L7
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "method()void" => block@3, * => block@4}
    block@3: // method_route_L12
        test_cases.diamond_mro.derived.Derived.method[routing]()
        goto block@5
    block@4: // switch_case_default_L7
        goto block@5
    block@5: // switch_case_next_L7
        fail // this contract does not implement the given ABI method for call NoOp
    block@6: // switch_case_1_L7
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "create()void" => block@7, * => block@8}
    block@7: // create_route_L11
        test_cases.diamond_mro.gp.GP.create[routing]()
        goto block@9
    block@8: // switch_case_default_L7
        goto block@9
    block@9: // switch_case_next_L7
        fail // this contract does not implement the given ABI method for create NoOp
    block@10: // switch_case_2_L7
        goto block@20
    block@11: // switch_case_3_L7
        goto block@20
    block@12: // switch_case_4_L7
        goto block@20
    block@13: // switch_case_5_L7
        goto block@20
    block@14: // switch_case_6_L7
        goto block@20
    block@15: // switch_case_7_L7
        goto block@20
    block@16: // switch_case_8_L7
        goto block@20
    block@17: // switch_case_9_L7
        goto block@20
    block@18: // switch_case_10_L7
        goto block@20
    block@19: // switch_case_11_L7
        goto block@20
    block@20: // switch_case_default_L7
        fail // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
    block@21: // after_inlined_test_cases.diamond_mro.derived.Derived.__puya_arc4_router___L1
        let tmp%0#0: bool = undefined
        return tmp%0#0

subroutine algopy._contract.Contract.__init__() -> void:
    block@0: // L1
        return 