{
  "version": 3,
  "sources": [
    "../gp.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAOY;;;;;;;;;;;;;AAAJ;AACA;;;;;AAQI;;;;;;;;;;;AAAJ;;AAXR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;AASK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.diamond_mro.gp.GP.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "7": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "10": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.diamond_mro.gp.GP.__init__",
      "op": "callsub __init__"
    },
    "13": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "16": {
      "op": "return",
      "stack_out": []
    },
    "17": {
      "subroutine": "test_cases.diamond_mro.gp.GP.__init__",
      "params": {},
      "block": "__init___block@0",
      "stack_in": [],
      "op": "pushbytes \"gp.__init__\"",
      "defined_out": [
        "\"gp.__init__\""
      ],
      "stack_out": [
        "\"gp.__init__\""
      ]
    },
    "30": {
      "op": "log",
      "stack_out": []
    },
    "31": {
      "callsub": "algopy._contract.Contract.__init__",
      "op": "callsub algopy._contract.Contract.__init__"
    },
    "34": {
      "retsub": true,
      "op": "retsub"
    },
    "35": {
      "subroutine": "test_cases.diamond_mro.gp.GP.create",
      "params": {},
      "block": "create_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "36": {
      "subroutine": "test_cases.diamond_mro.gp.GP.method",
      "params": {},
      "block": "method_block@0",
      "stack_in": [],
      "op": "pushbytes \"gp.method\"",
      "defined_out": [
        "\"gp.method\""
      ],
      "stack_out": [
        "\"gp.method\""
      ]
    },
    "47": {
      "op": "log",
      "stack_out": []
    },
    "48": {
      "retsub": true,
      "op": "retsub"
    },
    "49": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "51": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "52": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "53": {
      "op": "bz approval_program_bare_routing@7",
      "stack_out": []
    },
    "56": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "59": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)"
      ]
    },
    "65": {
      "op": "pushbytes 0x4f045d84 // method \"method()void\"",
      "defined_out": [
        "Method(create()void)",
        "Method(method()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(method()void)"
      ]
    },
    "71": {
      "op": "uncover 2",
      "stack_out": [
        "Method(create()void)",
        "Method(method()void)",
        "tmp%2#0"
      ]
    },
    "73": {
      "op": "match approval_program_create_route@3 approval_program_method_route@4",
      "stack_out": []
    },
    "79": {
      "block": "approval_program_after_if_else@8",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "80": {
      "block": "approval_program_after_inlined_test_cases.diamond_mro.gp.GP.__puya_arc4_router__@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "81": {
      "block": "approval_program_method_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "83": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "84": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "85": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "86": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "88": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "89": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "90": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "91": {
      "callsub": "test_cases.diamond_mro.gp.GP.method",
      "op": "callsub method"
    },
    "94": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "b approval_program_after_inlined_test_cases.diamond_mro.gp.GP.__puya_arc4_router__@9"
    },
    "98": {
      "block": "approval_program_create_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "100": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "101": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "102": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "103": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "105": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "106": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "107": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "108": {
      "callsub": "test_cases.diamond_mro.gp.GP.create",
      "op": "callsub create"
    },
    "111": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "112": {
      "op": "b approval_program_after_inlined_test_cases.diamond_mro.gp.GP.__puya_arc4_router__@9"
    },
    "115": {
      "block": "approval_program_bare_routing@7",
      "stack_in": [],
      "op": "b approval_program_after_if_else@8"
    },
    "118": {
      "subroutine": "algopy._contract.Contract.__init__",
      "params": {},
      "block": "algopy._contract.Contract.__init___block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}