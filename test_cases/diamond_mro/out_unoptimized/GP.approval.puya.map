{
  "version": 3,
  "sources": [
    "../gp.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AASK;;;;;;AATL;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAKK;;;;;;;;;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AAPO;;;;;;;;;;;;;AAAJ;AACA;;;;;;;;;;;AAQI;;;;;;;;;;;AAAJ;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "b main_block@0"
    },
    "8": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "10": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "13": {
      "op": "b main_call___init__@1"
    },
    "16": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.diamond_mro.gp.GP.__init__",
      "op": "callsub __init__"
    },
    "19": {
      "op": "b main_after_if_else@2"
    },
    "22": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "b main_block@3"
    },
    "25": {
      "block": "main_block@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "27": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "NoOp"
      ]
    },
    "28": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "29": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "30": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "32": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "33": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "34": {
      "op": "bz main_create_NoOp@7",
      "stack_out": []
    },
    "37": {
      "op": "b main_call_NoOp@4"
    },
    "40": {
      "block": "main_call_NoOp@4",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "43": {
      "op": "pushbytes 0x4f045d84 // method \"method()void\"",
      "defined_out": [
        "Method(method()void)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "Method(method()void)"
      ]
    },
    "49": {
      "op": "uncover 1",
      "stack_out": [
        "Method(method()void)",
        "tmp%4#0"
      ]
    },
    "51": {
      "op": "match main_method_route@5",
      "stack_out": []
    },
    "55": {
      "op": "b main_switch_case_next@6"
    },
    "58": {
      "block": "main_switch_case_next@6",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "61": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "62": {
      "block": "main_method_route@5",
      "stack_in": [],
      "callsub": "test_cases.diamond_mro.gp.GP.method[routing]",
      "op": "callsub method"
    },
    "65": {
      "op": "b main_switch_case_next@6"
    },
    "68": {
      "block": "main_create_NoOp@7",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "71": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(create()void)"
      ]
    },
    "77": {
      "op": "uncover 1",
      "stack_out": [
        "Method(create()void)",
        "tmp%5#0"
      ]
    },
    "79": {
      "op": "match main_create_route@8",
      "stack_out": []
    },
    "83": {
      "op": "b main_switch_case_next@9"
    },
    "86": {
      "block": "main_switch_case_next@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "89": {
      "block": "main_create_route@8",
      "stack_in": [],
      "callsub": "test_cases.diamond_mro.gp.GP.create[routing]",
      "op": "callsub create"
    },
    "92": {
      "op": "b main_switch_case_next@9"
    },
    "95": {
      "subroutine": "test_cases.diamond_mro.gp.GP.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "b create_block@0"
    },
    "98": {
      "block": "create_block@0",
      "stack_in": [],
      "callsub": "test_cases.diamond_mro.gp.GP.create",
      "op": "callsub test_cases.diamond_mro.gp.GP.create"
    },
    "101": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "102": {
      "op": "return",
      "stack_out": []
    },
    "103": {
      "subroutine": "test_cases.diamond_mro.gp.GP.method[routing]",
      "params": {},
      "block": "method",
      "stack_in": [],
      "op": "b method_block@0"
    },
    "106": {
      "block": "method_block@0",
      "stack_in": [],
      "callsub": "test_cases.diamond_mro.gp.GP.method",
      "op": "callsub test_cases.diamond_mro.gp.GP.method"
    },
    "109": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "110": {
      "op": "return",
      "stack_out": []
    },
    "111": {
      "subroutine": "test_cases.diamond_mro.gp.GP.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "114": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "pushbytes \"gp.__init__\"",
      "defined_out": [
        "\"gp.__init__\""
      ],
      "stack_out": [
        "\"gp.__init__\""
      ]
    },
    "127": {
      "op": "log",
      "stack_out": []
    },
    "128": {
      "callsub": "algopy._contract.Contract.__init__",
      "op": "callsub algopy._contract.Contract.__init__"
    },
    "131": {
      "retsub": true,
      "op": "retsub"
    },
    "132": {
      "subroutine": "test_cases.diamond_mro.gp.GP.create",
      "params": {},
      "block": "test_cases.diamond_mro.gp.GP.create",
      "stack_in": [],
      "op": "b test_cases.diamond_mro.gp.GP.create_block@0"
    },
    "135": {
      "block": "test_cases.diamond_mro.gp.GP.create_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "136": {
      "subroutine": "test_cases.diamond_mro.gp.GP.method",
      "params": {},
      "block": "test_cases.diamond_mro.gp.GP.method",
      "stack_in": [],
      "op": "b test_cases.diamond_mro.gp.GP.method_block@0"
    },
    "139": {
      "block": "test_cases.diamond_mro.gp.GP.method_block@0",
      "stack_in": [],
      "op": "pushbytes \"gp.method\"",
      "defined_out": [
        "\"gp.method\""
      ],
      "stack_out": [
        "\"gp.method\""
      ]
    },
    "150": {
      "op": "log",
      "stack_out": []
    },
    "151": {
      "retsub": true,
      "op": "retsub"
    },
    "152": {
      "subroutine": "algopy._contract.Contract.__init__",
      "params": {},
      "block": "algopy._contract.Contract.__init__",
      "stack_in": [],
      "op": "b algopy._contract.Contract.__init___block@0"
    },
    "155": {
      "block": "algopy._contract.Contract.__init___block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}