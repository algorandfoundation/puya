{
  "version": 3,
  "sources": [
    "../gp.py"
  ],
  "mappings": ";AAcK;;;;;;;AAPO;;;;;;;;;;;;;AAAJ;AAFR;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;AAWY;;;;;;;;;;;AAAJ;AAFH;AATL;;;AAAA;;;;;;AAAA;AAKK",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.diamond_mro.gp.GP.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushint 1 // 1"
    },
    "3": {
      "op": "txn ApplicationID",
      "defined_out": [
        "lifted%return#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#0"
      ]
    },
    "5": {
      "op": "bnz main_after_if_else@2",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "8": {
      "op": "pushbytes \"gp.__init__\"",
      "defined_out": [
        "\"gp.__init__\"",
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "\"gp.__init__\""
      ]
    },
    "21": {
      "op": "log",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "22": {
      "block": "main_after_if_else@2",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%1#0"
      ]
    },
    "24": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%2#0"
      ]
    },
    "25": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "26": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%4#0"
      ]
    },
    "28": {
      "op": "bz main_create_NoOp@5",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "31": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%5#0"
      ]
    },
    "34": {
      "op": "pushbytes 0x4f045d84 // method \"method()void\"",
      "defined_out": [
        "Method(method()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%5#0",
        "Method(method()void)"
      ]
    },
    "40": {
      "op": "==",
      "defined_out": [
        "eq%tmp%5#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "eq%tmp%5#0"
      ]
    },
    "41": {
      "op": "assert",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "42": {
      "op": "pushbytes \"gp.method\"",
      "defined_out": [
        "\"gp.method\""
      ],
      "stack_out": [
        "lifted%return#0",
        "\"gp.method\""
      ]
    },
    "53": {
      "op": "log",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "54": {
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "55": {
      "block": "main_create_NoOp@5",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%6#0"
      ]
    },
    "58": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%6#0",
        "Method(create()void)"
      ]
    },
    "64": {
      "op": "==",
      "defined_out": [
        "eq%tmp%6#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "eq%tmp%6#0"
      ]
    },
    "65": {
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0"
      ]
    }
  }
}