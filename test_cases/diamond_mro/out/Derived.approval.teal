#pragma version 10
#pragma typetrack false

// test_cases.diamond_mro.derived.Derived.__algopy_entrypoint_with_init() -> uint64:
main:
    txn ApplicationID
    bnz after_if_else@2
    // diamond_mro/derived.py:9
    // log("derived.__init__")
    pushbytes "derived.__init__"
    log
    // diamond_mro/base1.py:8
    // log("base1.__init__")
    pushbytes "base1.__init__"
    log
    // diamond_mro/base2.py:8
    // log("base2.__init__")
    pushbytes "base2.__init__"
    log
    // diamond_mro/gp.py:8
    // log("gp.__init__")
    pushbytes "gp.__init__"
    log

after_if_else@2:
    // diamond_mro/derived.py:7
    // class Derived(Base1, Base2):
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    bz create_NoOp@6
    pushbytes 0x4f045d84 // method "method()void"
    txna ApplicationArgs 0
    match method
    err

create_NoOp@6:
    // diamond_mro/derived.py:7
    // class Derived(Base1, Base2):
    pushbytes 0x4c5c61ba // method "create()void"
    txna ApplicationArgs 0
    match create_route@7
    err

create_route@7:
    // diamond_mro/gp.py:11
    // @arc4.abimethod(create="require")
    pushint 1 // 1
    return


// test_cases.diamond_mro.derived.Derived.method[routing]() -> void:
method:
    // diamond_mro/derived.py:14
    // log("derived.method")
    pushbytes "derived.method"
    log
    // diamond_mro/base1.py:13
    // log("base1.method")
    pushbytes "base1.method"
    log
    // diamond_mro/base2.py:13
    // log("base2.method")
    pushbytes "base2.method"
    log
    // diamond_mro/gp.py:17
    // log("gp.method")
    pushbytes "gp.method"
    log
    // diamond_mro/derived.py:12
    // @arc4.abimethod
    pushint 1 // 1
    return
