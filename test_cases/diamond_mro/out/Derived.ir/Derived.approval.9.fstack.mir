// Op                                                                             Stack (out)
// test_cases.diamond_mro.derived.Derived.__algopy_entrypoint_with_init() -> uint64:
main:
    txn ApplicationID                                                             tmp%0#0
    bz main_call___init__@1 ; b main_after_if_else@2

main_call___init__@1:
    // diamond_mro/derived.py:9
    // log("derived.__init__")
    byte "derived.__init__"                                                       "derived.__init__"
    log
    // diamond_mro/base1.py:8
    // log("base1.__init__")
    byte "base1.__init__"                                                         "base1.__init__"
    log
    // diamond_mro/base2.py:8
    // log("base2.__init__")
    byte "base2.__init__"                                                         "base2.__init__"
    log
    // diamond_mro/gp.py:8
    // log("gp.__init__")
    byte "gp.__init__"                                                            "gp.__init__"
    log
    b main_after_if_else@2

main_after_if_else@2:
    // diamond_mro/derived.py:7
    // class Derived(Base1, Base2):
    txn NumAppArgs                                                                tmp%0#2
    bz main_after_if_else@7 ; b main_abi_routing@4

main_abi_routing@4:
    // diamond_mro/derived.py:7
    // class Derived(Base1, Base2):
    txna ApplicationArgs 0                                                        tmp%2#0
    method method()void                                                           tmp%2#0,Method(method()void)
    method create()void                                                           tmp%2#0,Method(method()void),Method(create()void)
    l-load tmp%2#0 2                                                              Method(method()void),Method(create()void),tmp%2#0
    match main_method_route@5 main_create_route@6 ; b main_after_if_else@7

main_method_route@5:
    // diamond_mro/derived.py:12
    // @arc4.abimethod
    txn OnCompletion                                                              tmp%3#0
    !                                                                             tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                             tmp%5#0
    assert // can only call when not creating
    callsub method
    int 1                                                                         tmp%0#0
    x-store tmp%0#0                                                               (𝕏) tmp%0#0 |
    b main_after_inlined_test_cases.diamond_mro.derived.Derived.__puya_arc4_router__@8 (𝕏) tmp%0#0 | 

main_create_route@6:
    // diamond_mro/gp.py:11
    // @arc4.abimethod(create="require")
    txn OnCompletion                                                              tmp%7#0
    !                                                                             tmp%8#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                             tmp%9#0
    !                                                                             tmp%10#0
    assert // can only call when creating
    int 1                                                                         tmp%0#0
    x-store tmp%0#0                                                               (𝕏) tmp%0#0 |
    b main_after_inlined_test_cases.diamond_mro.derived.Derived.__puya_arc4_router__@8 (𝕏) tmp%0#0 | 

main_after_if_else@7:
    // diamond_mro/derived.py:7
    // class Derived(Base1, Base2):
    int 0                                                                         tmp%0#0
    x-store tmp%0#0                                                               (𝕏) tmp%0#0 |
    b main_after_inlined_test_cases.diamond_mro.derived.Derived.__puya_arc4_router__@8 (𝕏) tmp%0#0 | 

main_after_inlined_test_cases.diamond_mro.derived.Derived.__puya_arc4_router__@8: (𝕏) tmp%0#0 |
    x-load tmp%0#0                                                                tmp%0#0
    return


// test_cases.diamond_mro.derived.Derived.method() -> void:
method:
    // diamond_mro/derived.py:14
    // log("derived.method")
    byte "derived.method"                                                         "derived.method"
    log
    // diamond_mro/base1.py:13
    // log("base1.method")
    byte "base1.method"                                                           "base1.method"
    log
    // diamond_mro/base2.py:13
    // log("base2.method")
    byte "base2.method"                                                           "base2.method"
    log
    // diamond_mro/gp.py:17
    // log("gp.method")
    byte "gp.method"                                                              "gp.method"
    log
    retsub


