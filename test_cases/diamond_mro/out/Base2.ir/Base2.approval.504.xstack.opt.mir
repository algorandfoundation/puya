// Op                                                    Stack (out)
// test_cases.diamond_mro.base2.Base2.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // diamond_mro/base2.py:8
        // log("base2.__init__")
        byte "base2.__init__"                            "base2.__init__"
        log
        // diamond_mro/gp.py:8
        // log("gp.__init__")
        byte "gp.__init__"                               "gp.__init__"
        log
        b main_after_if_else@2

    main_after_if_else@2:
        // diamond_mro/base2.py:6
        // class Base2(GP):
        txn OnCompletion                                 tmp%1#0
        !                                                tmp%2#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                tmp%4#0
        bz main_create_NoOp@6 ; b main_call_NoOp@4

    main_call_NoOp@4:
        // diamond_mro/base2.py:6
        // class Base2(GP):
        txna ApplicationArgs 0                           tmp%5#0
        method method()void                              tmp%5#0,Method(method()void)
        ==                                               eq%tmp%5#0
        assert
        // diamond_mro/base2.py:11
        // @arc4.abimethod
        callsub method
        // diamond_mro/base2.py:6
        // class Base2(GP):
        err

    main_create_NoOp@6:
        // diamond_mro/base2.py:6
        // class Base2(GP):
        txna ApplicationArgs 0                           tmp%6#0
        method create()void                              tmp%6#0,Method(create()void)
        ==                                               eq%tmp%6#0
        assert
        // diamond_mro/gp.py:11
        // @arc4.abimethod(create="require")
        int 1                                            1
        return


// test_cases.diamond_mro.base2.Base2.method[routing]() -> void:
subroutine method:
    method_block@0:
        // diamond_mro/base2.py:13
        // log("base2.method")
        byte "base2.method"                              "base2.method"
        log
        // diamond_mro/gp.py:17
        // log("gp.method")
        byte "gp.method"                                 "gp.method"
        log
        // diamond_mro/base2.py:11
        // @arc4.abimethod
        int 1                                            1
        return


