main test_cases.diamond_mro.base1.Base1.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        (log "base1.__init__")
        test_cases.diamond_mro.gp.GP.__init__()
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#1: bool = test_cases.diamond_mro.base1.Base1.__puya_arc4_router__()
        return tmp%0#1

subroutine test_cases.diamond_mro.base1.Base1.__puya_arc4_router__() -> bool:
    block@0: // L6
        let tmp%0#0: uint64 = (txn OnCompletion)
        let tmp%1#0: bool = (! tmp%0#0)
        (assert tmp%1#0) // OnCompletion must be NoOp
        let tmp%2#0: uint64 = (txn ApplicationID)
        let tmp%3#0: bool = (!= tmp%2#0 0u)
        goto tmp%2#0 ? block@1 : block@4
    block@1: // call_NoOp_L6
        let tmp%4#0: bytes = (txna ApplicationArgs 0)
        switch tmp%4#0 {method "method()void" => block@2, * => block@7}
    block@2: // method_route_L11
        test_cases.diamond_mro.base1.Base1.method[routing]()
        goto block@7
    block@4: // create_NoOp_L6
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "create()void" => block@5, * => block@7}
    block@5: // create_route_L11
        test_cases.diamond_mro.gp.GP.create[routing]()
        goto block@7
    block@7: // after_if_else_L6
        fail

subroutine test_cases.diamond_mro.base1.Base1.method[routing]() -> void:
    block@0: // L11
        (log "base1.method")
        test_cases.diamond_mro.gp.GP.method()
        exit 1u

subroutine test_cases.diamond_mro.gp.GP.create[routing]() -> void:
    block@0: // L11
        exit 1u

subroutine test_cases.diamond_mro.gp.GP.__init__() -> void:
    block@0: // L7
        (log "gp.__init__")
        return 

subroutine test_cases.diamond_mro.gp.GP.method() -> void:
    block@0: // L15
        (log "gp.method")
        return 