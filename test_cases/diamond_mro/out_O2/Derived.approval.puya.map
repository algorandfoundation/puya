{
  "version": 3,
  "sources": [
    "../base1.py",
    "../base2.py",
    "../derived.py",
    "../gp.py"
  ],
  "mappings": ";;;;;;AEQY;;;;;;;;;;;;;;;;;;AAAJ;AFDI;;;;;;;;;;;;;;;;AAAJ;ACAI;;;;;;;;;;;;;;;;AAAJ;AEAI;;;;;;;;;;;;;AAAJ;ADDR;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;ACIK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;ADCA;;AAAA;AAAA;AAAA;;AAAA;AAEO;;;;;;;;;;;;;;;;AAAJ;AFDI;;;;;;;;;;;;;;AAAJ;ACAI;;;;;;;;;;;;;;AAAJ;AEII;;;;;;;;;;;AAAJ;ADLH;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.diamond_mro.derived.Derived.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "6": {
      "op": "pushbytes \"derived.__init__\"",
      "defined_out": [
        "\"derived.__init__\""
      ],
      "stack_out": [
        "\"derived.__init__\""
      ]
    },
    "24": {
      "op": "log",
      "stack_out": []
    },
    "25": {
      "op": "pushbytes \"base1.__init__\"",
      "defined_out": [
        "\"base1.__init__\""
      ],
      "stack_out": [
        "\"base1.__init__\""
      ]
    },
    "41": {
      "op": "log",
      "stack_out": []
    },
    "42": {
      "op": "pushbytes \"base2.__init__\"",
      "defined_out": [
        "\"base2.__init__\""
      ],
      "stack_out": [
        "\"base2.__init__\""
      ]
    },
    "58": {
      "op": "log",
      "stack_out": []
    },
    "59": {
      "op": "pushbytes \"gp.__init__\"",
      "defined_out": [
        "\"gp.__init__\""
      ],
      "stack_out": [
        "\"gp.__init__\""
      ]
    },
    "72": {
      "op": "log",
      "stack_out": []
    },
    "73": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "75": {
      "op": "bz main_after_if_else@7",
      "stack_out": []
    },
    "78": {
      "op": "pushbytess 0x4f045d84 0x4c5c61ba // method \"method()void\", method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "Method(method()void)"
      ],
      "stack_out": [
        "Method(method()void)",
        "Method(create()void)"
      ]
    },
    "90": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create()void)",
        "Method(method()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(method()void)",
        "Method(create()void)",
        "tmp%2#0"
      ]
    },
    "93": {
      "op": "match main_method_route@5 main_create_route@6",
      "stack_out": []
    },
    "99": {
      "block": "main_after_if_else@7",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "100": {
      "block": "main_create_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "102": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "103": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "104": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "106": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "107": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "108": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "110": {
      "op": "return",
      "stack_out": []
    },
    "111": {
      "block": "main_method_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "113": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "114": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "115": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "117": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "118": {
      "op": "pushbytes \"derived.method\"",
      "defined_out": [
        "\"derived.method\""
      ],
      "stack_out": [
        "\"derived.method\""
      ]
    },
    "134": {
      "op": "log",
      "stack_out": []
    },
    "135": {
      "op": "pushbytes \"base1.method\"",
      "defined_out": [
        "\"base1.method\""
      ],
      "stack_out": [
        "\"base1.method\""
      ]
    },
    "149": {
      "op": "log",
      "stack_out": []
    },
    "150": {
      "op": "pushbytes \"base2.method\"",
      "defined_out": [
        "\"base2.method\""
      ],
      "stack_out": [
        "\"base2.method\""
      ]
    },
    "164": {
      "op": "log",
      "stack_out": []
    },
    "165": {
      "op": "pushbytes \"gp.method\"",
      "defined_out": [
        "\"gp.method\""
      ],
      "stack_out": [
        "\"gp.method\""
      ]
    },
    "176": {
      "op": "log",
      "stack_out": []
    },
    "177": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "179": {
      "op": "return",
      "stack_out": []
    }
  }
}