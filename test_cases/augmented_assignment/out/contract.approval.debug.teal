// Op                                                    // Op Description                                   Stack (out)                                                                     Source code                                               Source line

#pragma version 8

// test_cases.augmented_assignment.contract.Augmented.approval_program() -> uint64:
main:
        int 0                                            // allocate 1 to stack                              (𝕗) me#0 |

main_block@0:
        txn ApplicationID                                //                                                  (𝕗) me#0 | {txn}
        bnz main_entrypoint@2                            //                                                  (𝕗) me#0 |
        // Implicit fall through to main_on_create@1     //                                                  (𝕗) me#0 |

main_on_create@1:
        callsub __init__                                 //                                                  (𝕗) me#0 |
        // Implicit fall through to main_entrypoint@2    //                                                  (𝕗) me#0 |

main_entrypoint@2:
        txn Sender                                       //                                                  (𝕗) me#0 | {txn}                                                                Transaction.sender()                                      File "augmented_assignment/contract.py", line 20
        bury 1                                           // store me#0 to f-stack                            (𝕗) me#0 |                                                                      me                                                        File "augmented_assignment/contract.py", line 20
        txn OnCompletion                                 //                                                  (𝕗) me#0 | {txn}                                                                Transaction.on_completion()                               File "augmented_assignment/contract.py", line 22
        int OptIn                                        //                                                  (𝕗) me#0 | tmp%1#0,OptIn                                                        OnCompleteAction.OptIn                                    File "augmented_assignment/contract.py", line 22
        ==                                               //                                                  (𝕗) me#0 | {==}                                                                 Transaction.on_completion() == OnCompleteAction.OptIn:    File "augmented_assignment/contract.py", line 22
        bz main_after_if_else@4                          //                                                  (𝕗) me#0 |                                                                      if Transaction.on_completion() == OnCompleteAction.OptIn: File "augmented_assignment/contract.py", line 22
        // Implicit fall through to main_if_body@3       //                                                  (𝕗) me#0 |                                                                      if Transaction.on_completion() == OnCompleteAction.OptIn: File "augmented_assignment/contract.py", line 22

main_if_body@3:
        dup                                              // load me#0 from f-stack                           (𝕗) me#0 | me#0                                                                 me                                                        File "augmented_assignment/contract.py", line 20
        dup                                              // store me#0 to l-stack (copy)                     (𝕗) me#0 | me#0,me#0                                                            me                                                        File "augmented_assignment/contract.py", line 20
        byte "my_uint"                                   //                                                  (𝕗) me#0 | me#0,me#0,"my_uint"                                                  self.my_uint[me]                                          File "augmented_assignment/contract.py", line 23
        int 0                                            //                                                  (𝕗) me#0 | me#0,me#0,"my_uint",0                                                0                                                         File "augmented_assignment/contract.py", line 23
        app_local_put                                    //                                                  (𝕗) me#0 | me#0                                                                 self.my_uint[me] = UInt64(0)                              File "augmented_assignment/contract.py", line 23
        byte "my_bytes"                                  //                                                  (𝕗) me#0 | me#0,"my_bytes"                                                      self.my_bytes[me]                                         File "augmented_assignment/contract.py", line 24
        byte ""                                          //                                                  (𝕗) me#0 | me#0,"my_bytes",""                                                   b""                                                       File "augmented_assignment/contract.py", line 24
        app_local_put                                    //                                                  (𝕗) me#0 |                                                                      self.my_bytes[me] = Bytes(b"")                            File "augmented_assignment/contract.py", line 24
        // Implicit fall through to main_after_if_else@4 //                                                  (𝕗) me#0 |

main_after_if_else@4:
        txn ApplicationID                                //                                                  (𝕗) me#0 | {txn}                                                                Transaction.application_id()                              File "augmented_assignment/contract.py", line 25
        int 0                                            //                                                  (𝕗) me#0 | tmp%3#0,0                                                            0                                                         File "augmented_assignment/contract.py", line 25
        >                                                //                                                  (𝕗) me#0 | {>}                                                                  Transaction.application_id() > 0:                         File "augmented_assignment/contract.py", line 25
        bz main_after_if_else@6                          //                                                  (𝕗) me#0 |                                                                      if Transaction.application_id() > 0:                      File "augmented_assignment/contract.py", line 25
        // Implicit fall through to main_if_body@5       //                                                  (𝕗) me#0 |                                                                      if Transaction.application_id() > 0:                      File "augmented_assignment/contract.py", line 25

main_if_body@5:
        txn NumAppArgs                                   //                                                  (𝕗) me#0 | {txn}                                                                Transaction.num_app_args()                                File "augmented_assignment/contract.py", line 27
        dup                                              // load n#0 from l-stack (copy)                     (𝕗) me#0 | n#0,n#0                                                              n                                                         File "augmented_assignment/contract.py", line 27
        itob                                             //                                                  (𝕗) me#0 | n#0,{itob}                                                           BigUInt(n)                                                File "augmented_assignment/contract.py", line 28
        swap                                             // store bytes_to_add#0 to l-stack (no copy)        (𝕗) me#0 | bytes_to_add#0,n#0                                                   bytes_to_add                                              File "augmented_assignment/contract.py", line 28
        dig 2                                            // load me#0 from f-stack                           (𝕗) me#0 | bytes_to_add#0,n#0,me#0                                              me                                                        File "augmented_assignment/contract.py", line 20
        dup
        cover 2                                          // store me#0 to l-stack (copy)                     (𝕗) me#0 | bytes_to_add#0,me#0,n#0,me#0                                         me                                                        File "augmented_assignment/contract.py", line 20
        int 0                                            //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,me#0,0                                       self.my_uint[me]                                          File "augmented_assignment/contract.py", line 32
        byte "my_uint"                                   //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,me#0,0,"my_uint"                             self.my_uint[me]                                          File "augmented_assignment/contract.py", line 32
        app_local_get_ex                                 //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,{app_local_get_ex}.0,{app_local_get_ex}.1    self.my_uint[me]                                          File "augmented_assignment/contract.py", line 32
        assert // check value exists                     //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,app_local_get_ex_value%5#0                   self.my_uint[me]                                          File "augmented_assignment/contract.py", line 32
        dig 1                                            // load n#0 from l-stack (copy)                     (𝕗) me#0 | bytes_to_add#0,me#0,n#0,app_local_get_ex_value%5#0,n#0               n                                                         File "augmented_assignment/contract.py", line 27
        +                                                //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,{+}                                          self.my_uint[me] += n                                     File "augmented_assignment/contract.py", line 32
        dig 2                                            // load me#0 from l-stack (copy)                    (𝕗) me#0 | bytes_to_add#0,me#0,n#0,new_state_value%7#0,me#0                     me                                                        File "augmented_assignment/contract.py", line 20
        byte "my_uint"                                   //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,new_state_value%7#0,me#0,"my_uint"           self.my_uint[me]                                          File "augmented_assignment/contract.py", line 32
        uncover 2                                        // load new_state_value%7#0 from l-stack (no copy)  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,me#0,"my_uint",new_state_value%7#0           self.my_uint[me] += n                                     File "augmented_assignment/contract.py", line 32
        app_local_put                                    //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0                                              self.my_uint[me] += n                                     File "augmented_assignment/contract.py", line 32
        dig 1                                            // load me#0 from l-stack (copy)                    (𝕗) me#0 | bytes_to_add#0,me#0,n#0,me#0                                         me                                                        File "augmented_assignment/contract.py", line 20
        int 0                                            //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,me#0,0                                       self.my_bytes[me]                                         File "augmented_assignment/contract.py", line 33
        byte "my_bytes"                                  //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,me#0,0,"my_bytes"                            self.my_bytes[me]                                         File "augmented_assignment/contract.py", line 33
        app_local_get_ex                                 //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,{app_local_get_ex}.0,{app_local_get_ex}.1    self.my_bytes[me]                                         File "augmented_assignment/contract.py", line 33
        assert // check value exists                     //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,app_local_get_ex_value%8#0                   self.my_bytes[me]                                         File "augmented_assignment/contract.py", line 33
        dig 3                                            // load bytes_to_add#0 from l-stack (copy)          (𝕗) me#0 | bytes_to_add#0,me#0,n#0,app_local_get_ex_value%8#0,bytes_to_add#0    bytes_to_add                                              File "augmented_assignment/contract.py", line 28
        concat                                           //                                                  (𝕗) me#0 | bytes_to_add#0,me#0,n#0,{concat}                                     self.my_bytes[me] += bytes_to_add                         File "augmented_assignment/contract.py", line 33
        uncover 2                                        // load me#0 from l-stack (no copy)                 (𝕗) me#0 | bytes_to_add#0,n#0,new_state_value%10#0,me#0                         me                                                        File "augmented_assignment/contract.py", line 20
        byte "my_bytes"                                  //                                                  (𝕗) me#0 | bytes_to_add#0,n#0,new_state_value%10#0,me#0,"my_bytes"              self.my_bytes[me]                                         File "augmented_assignment/contract.py", line 33
        uncover 2                                        // load new_state_value%10#0 from l-stack (no copy) (𝕗) me#0 | bytes_to_add#0,n#0,me#0,"my_bytes",new_state_value%10#0              self.my_bytes[me] += bytes_to_add                         File "augmented_assignment/contract.py", line 33
        app_local_put                                    //                                                  (𝕗) me#0 | bytes_to_add#0,n#0                                                   self.my_bytes[me] += bytes_to_add                         File "augmented_assignment/contract.py", line 33
        int 0                                            //                                                  (𝕗) me#0 | bytes_to_add#0,n#0,0                                                 self.global_uint                                          File "augmented_assignment/contract.py", line 36
        byte "global_uint"                               //                                                  (𝕗) me#0 | bytes_to_add#0,n#0,0,"global_uint"                                   self.global_uint                                          File "augmented_assignment/contract.py", line 36
        app_global_get_ex                                //                                                  (𝕗) me#0 | bytes_to_add#0,n#0,{app_global_get_ex}.0,{app_global_get_ex}.1       self.global_uint                                          File "augmented_assignment/contract.py", line 36
        assert // check value exists                     //                                                  (𝕗) me#0 | bytes_to_add#0,n#0,app_global_get_ex_value%11#0                      self.global_uint                                          File "augmented_assignment/contract.py", line 36
        +                                                //                                                  (𝕗) me#0 | bytes_to_add#0,{+}                                                   self.global_uint += n                                     File "augmented_assignment/contract.py", line 36
        byte "global_uint"                               //                                                  (𝕗) me#0 | bytes_to_add#0,new_state_value%13#0,"global_uint"                    self.global_uint                                          File "augmented_assignment/contract.py", line 36
        swap                                             // load new_state_value%13#0 from l-stack (no copy) (𝕗) me#0 | bytes_to_add#0,"global_uint",new_state_value%13#0                    self.global_uint += n                                     File "augmented_assignment/contract.py", line 36
        app_global_put                                   //                                                  (𝕗) me#0 | bytes_to_add#0                                                       self.global_uint += n                                     File "augmented_assignment/contract.py", line 36
        int 0                                            //                                                  (𝕗) me#0 | bytes_to_add#0,0                                                     self.global_bytes                                         File "augmented_assignment/contract.py", line 37
        byte "global_bytes"                              //                                                  (𝕗) me#0 | bytes_to_add#0,0,"global_bytes"                                      self.global_bytes                                         File "augmented_assignment/contract.py", line 37
        app_global_get_ex                                //                                                  (𝕗) me#0 | bytes_to_add#0,{app_global_get_ex}.0,{app_global_get_ex}.1           self.global_bytes                                         File "augmented_assignment/contract.py", line 37
        assert // check value exists                     //                                                  (𝕗) me#0 | bytes_to_add#0,app_global_get_ex_value%14#0                          self.global_bytes                                         File "augmented_assignment/contract.py", line 37
        swap                                             // load bytes_to_add#0 from l-stack (no copy)       (𝕗) me#0 | app_global_get_ex_value%14#0,bytes_to_add#0                          bytes_to_add                                              File "augmented_assignment/contract.py", line 28
        concat                                           //                                                  (𝕗) me#0 | {concat}                                                             self.global_bytes += bytes_to_add                         File "augmented_assignment/contract.py", line 37
        byte "global_bytes"                              //                                                  (𝕗) me#0 | new_state_value%16#0,"global_bytes"                                  self.global_bytes                                         File "augmented_assignment/contract.py", line 37
        swap                                             // load new_state_value%16#0 from l-stack (no copy) (𝕗) me#0 | "global_bytes",new_state_value%16#0                                  self.global_bytes += bytes_to_add                         File "augmented_assignment/contract.py", line 37
        app_global_put                                   //                                                  (𝕗) me#0 |                                                                      self.global_bytes += bytes_to_add                         File "augmented_assignment/contract.py", line 37
        // Implicit fall through to main_after_if_else@6 //                                                  (𝕗) me#0 |

main_after_if_else@6:
        int 1                                            //                                                  (𝕗) me#0 | 1                                                                    True                                                      File "augmented_assignment/contract.py", line 38
        return                                           //                                                  (𝕗) me#0 |                                                                      return True                                               File "augmented_assignment/contract.py", line 38


// test_cases.augmented_assignment.contract.Augmented.__init__() -> void:
__init__:
        proto 0 0                                        //                                                                                                                                  def __init__(self) -> None:                               File "augmented_assignment/contract.py", line 13

__init___block@0:
        byte "global_uint"                               //                                                  "global_uint"                                                                   self.global_uint                                          File "augmented_assignment/contract.py", line 16
        int 0                                            //                                                  "global_uint",0                                                                 0                                                         File "augmented_assignment/contract.py", line 16
        app_global_put                                   //                                                                                                                                  self.global_uint = UInt64(0)                              File "augmented_assignment/contract.py", line 16
        byte "global_bytes"                              //                                                  "global_bytes"                                                                  self.global_bytes                                         File "augmented_assignment/contract.py", line 17
        byte ""                                          //                                                  "global_bytes",""                                                               b""                                                       File "augmented_assignment/contract.py", line 17
        app_global_put                                   //                                                                                                                                  self.global_bytes = Bytes(b"")                            File "augmented_assignment/contract.py", line 17
        retsub                                           //

