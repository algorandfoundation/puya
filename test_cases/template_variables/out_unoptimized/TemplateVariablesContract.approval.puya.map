{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAIA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;;;;AAAA;AAKK;;;;;;AAJA;;;;;;;;;AADL;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;AAAA;;;;;;;;;AAcK;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAJA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;;;;;;;;;;;;AATA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAF6B;AAAnB;;;AAAP;;;;AAII;AACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;;;AAIO;AAAP;;;;;AAIO;;AAAA;AAAA;AAAP;;AAER;;;;;;AAEQ;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 64 TMPL_UPDATABLE TMPL_DELETABLE"
    },
    "8": {
      "op": "bytecblock 0x151f7c75 TMPL_SOME_BYTES TMPL_SOME_BIG_UINT"
    },
    "17": {
      "op": "b main_block@0"
    },
    "20": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "23": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "25": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "26": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "27": {
      "op": "bz main_bare_routing@10",
      "stack_out": []
    },
    "30": {
      "op": "b main_abi_routing@2"
    },
    "33": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "35": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "36": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "37": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "38": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "40": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "41": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "42": {
      "op": "bz main_create_NoOp@8",
      "stack_out": []
    },
    "45": {
      "op": "b main_call_NoOp@3"
    },
    "48": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "51": {
      "op": "pushbytes 0x2fcaddf6 // method \"get_bytes()byte[]\"",
      "defined_out": [
        "Method(get_bytes()byte[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(get_bytes()byte[])"
      ]
    },
    "57": {
      "op": "pushbytes 0x37f64cf3 // method \"get_big_uint()uint512\"",
      "defined_out": [
        "Method(get_big_uint()uint512)",
        "Method(get_bytes()byte[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)"
      ]
    },
    "63": {
      "op": "uncover 2",
      "stack_out": [
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)",
        "tmp%6#0"
      ]
    },
    "65": {
      "op": "match main_get_bytes_route@4 main_get_big_uint_route@5",
      "stack_out": []
    },
    "71": {
      "op": "b main_switch_case_default@6"
    },
    "74": {
      "block": "main_switch_case_default@6",
      "stack_in": [],
      "op": "b main_switch_case_next@7"
    },
    "77": {
      "block": "main_switch_case_next@7",
      "stack_in": [],
      "op": "b main_after_if_else@9"
    },
    "80": {
      "block": "main_after_if_else@9",
      "stack_in": [],
      "op": "b main_after_if_else@16"
    },
    "83": {
      "block": "main_after_if_else@16",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "84": {
      "block": "main_get_big_uint_route@5",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint[routing]",
      "op": "callsub get_big_uint"
    },
    "87": {
      "op": "b main_switch_case_next@7"
    },
    "90": {
      "block": "main_get_bytes_route@4",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes[routing]",
      "op": "callsub get_bytes"
    },
    "93": {
      "op": "b main_switch_case_next@7"
    },
    "96": {
      "block": "main_create_NoOp@8",
      "stack_in": [],
      "op": "b main_after_if_else@9"
    },
    "99": {
      "block": "main_bare_routing@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "101": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "102": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "NoOp",
        "UpdateApplication",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp",
        "UpdateApplication"
      ]
    },
    "104": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "NoOp",
        "UpdateApplication",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp",
        "UpdateApplication",
        "DeleteApplication"
      ]
    },
    "106": {
      "op": "uncover 3",
      "stack_out": [
        "NoOp",
        "UpdateApplication",
        "DeleteApplication",
        "tmp%7#0"
      ]
    },
    "108": {
      "op": "match main___algopy_default_create@11 main_on_update@12 main_on_delete@13",
      "stack_out": []
    },
    "116": {
      "op": "b main_switch_case_default@14"
    },
    "119": {
      "block": "main_switch_case_default@14",
      "stack_in": [],
      "op": "b main_switch_case_next@15"
    },
    "122": {
      "block": "main_switch_case_next@15",
      "stack_in": [],
      "op": "b main_after_if_else@16"
    },
    "125": {
      "block": "main_on_delete@13",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "127": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "128": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "129": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "130": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.on_delete",
      "op": "callsub on_delete"
    },
    "133": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "134": {
      "op": "return",
      "stack_out": []
    },
    "135": {
      "block": "main_on_update@12",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "137": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "138": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "139": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "140": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.on_update",
      "op": "callsub on_update"
    },
    "143": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "144": {
      "op": "return",
      "stack_out": []
    },
    "145": {
      "block": "main___algopy_default_create@11",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "147": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "148": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "149": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "150": {
      "op": "b main_block@18"
    },
    "153": {
      "block": "main_block@18",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__algopy_default_create@19"
    },
    "156": {
      "block": "main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__algopy_default_create@19",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "157": {
      "op": "return",
      "stack_out": []
    },
    "158": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes[routing]",
      "params": {},
      "block": "get_bytes",
      "stack_in": [],
      "op": "b get_bytes_block@0"
    },
    "161": {
      "block": "get_bytes_block@0",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "op": "callsub test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "164": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "165": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%0#0"
      ]
    },
    "166": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "167": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "170": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ]
    },
    "172": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "173": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "174": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "176": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "177": {
      "op": "log",
      "stack_out": []
    },
    "178": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "179": {
      "op": "return",
      "stack_out": []
    },
    "180": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint[routing]",
      "params": {},
      "block": "get_big_uint",
      "stack_in": [],
      "op": "b get_big_uint_block@0"
    },
    "183": {
      "block": "get_big_uint_block@0",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "op": "callsub test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "186": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "187": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "189": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "190": {
      "op": "log",
      "stack_out": []
    },
    "191": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "192": {
      "op": "return",
      "stack_out": []
    },
    "193": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "params": {},
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "stack_in": [],
      "op": "b test_cases.template_variables.contract.TemplateVariablesContract.get_bytes_block@0"
    },
    "196": {
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes_block@0",
      "stack_in": [],
      "op": "bytec_1 // TMPL_SOME_BYTES",
      "defined_out": [
        "TMPL_SOME_BYTES"
      ],
      "stack_out": [
        "TMPL_SOME_BYTES"
      ]
    },
    "197": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.receive_value",
      "op": "callsub receive_value",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "200": {
      "retsub": true,
      "op": "retsub"
    },
    "201": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "params": {},
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "stack_in": [],
      "op": "b test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint_block@0"
    },
    "204": {
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint_block@0",
      "stack_in": [],
      "op": "bytec_2 // TMPL_SOME_BIG_UINT",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "205": {
      "op": "dup",
      "defined_out": [
        "x#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "x#0 (copy)"
      ]
    },
    "206": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%value_len%0#0"
      ]
    },
    "207": {
      "op": "intc_2 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "208": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "209": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "x#0"
      ]
    },
    "210": {
      "op": "intc_2 // 64",
      "stack_out": [
        "x#0",
        "64"
      ]
    },
    "211": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%bzero%0#0"
      ]
    },
    "212": {
      "op": "b|",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "213": {
      "retsub": true,
      "op": "retsub"
    },
    "214": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.on_update",
      "params": {},
      "block": "on_update",
      "stack_in": [],
      "op": "b on_update_block@0"
    },
    "217": {
      "block": "on_update_block@0",
      "stack_in": [],
      "op": "intc_3 // TMPL_UPDATABLE",
      "defined_out": [
        "TMPL_UPDATABLE"
      ],
      "stack_out": [
        "TMPL_UPDATABLE"
      ]
    },
    "218": {
      "op": "assert",
      "stack_out": []
    },
    "219": {
      "retsub": true,
      "op": "retsub"
    },
    "220": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.on_delete",
      "params": {},
      "block": "on_delete",
      "stack_in": [],
      "op": "b on_delete_block@0"
    },
    "223": {
      "block": "on_delete_block@0",
      "stack_in": [],
      "op": "intc 4 // TMPL_DELETABLE",
      "defined_out": [
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "TMPL_DELETABLE"
      ]
    },
    "225": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "TMPL_DELETABLE",
        "0"
      ]
    },
    "226": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "227": {
      "op": "assert",
      "stack_out": []
    },
    "228": {
      "retsub": true,
      "op": "retsub"
    },
    "229": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.receive_value",
      "params": {
        "value#0": "bytes"
      },
      "block": "receive_value",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "232": {
      "op": "b receive_value_block@0"
    },
    "235": {
      "block": "receive_value_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "237": {
      "retsub": true,
      "op": "retsub"
    }
  }
}