{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAAA;AA8BK;;;;;;AAJA;;;;;;AAJA;;;;;;AAjBA;;;;;;AAJA;;;;;;;;;AADL;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;AAAA;;;;;;;;;AAcK;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAJA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;;;;;;;;;;;;AATA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAiBA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA3B6B;;AAAnB;;;AAAP;;;;AAII;;AACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;;;AAIO;;AAAP;;;;;AAIO;;AAAA;AAAA;AAAP;;AAER;;;;;;AAEQ;;AAAA;;;;AAIO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;;;AAIO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;;;AAIO;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 64 TMPL_UPDATABLE TMPL_DELETABLE"
    },
    "9": {
      "op": "bytecblock 0x151f7c75 0x TMPL_NAMED_TUPLE TMPL_TUPLE TMPL_SOME_BYTES TMPL_SOME_BIG_UINT TMPL_STRUCT"
    },
    "70": {
      "op": "b main_block@0"
    },
    "73": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "76": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "78": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "79": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "80": {
      "op": "bz main_bare_routing@13",
      "stack_out": []
    },
    "83": {
      "op": "b main_abi_routing@2"
    },
    "86": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "88": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "89": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "90": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "91": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "94": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "95": {
      "op": "bz main_create_NoOp@11",
      "stack_out": []
    },
    "98": {
      "op": "b main_call_NoOp@3"
    },
    "101": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "104": {
      "op": "pushbytes 0x2fcaddf6 // method \"get_bytes()byte[]\"",
      "defined_out": [
        "Method(get_bytes()byte[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(get_bytes()byte[])"
      ]
    },
    "110": {
      "op": "pushbytes 0x37f64cf3 // method \"get_big_uint()uint512\"",
      "defined_out": [
        "Method(get_big_uint()uint512)",
        "Method(get_bytes()byte[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)"
      ]
    },
    "116": {
      "op": "pushbytes 0x25fcb1b1 // method \"get_a_named_tuple()(uint64,uint64)\"",
      "defined_out": [
        "Method(get_a_named_tuple()(uint64,uint64))",
        "Method(get_big_uint()uint512)",
        "Method(get_bytes()byte[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)",
        "Method(get_a_named_tuple()(uint64,uint64))"
      ]
    },
    "122": {
      "op": "pushbytes 0x95fd8ad1 // method \"get_a_tuple()(uint64,uint64)\"",
      "defined_out": [
        "Method(get_a_named_tuple()(uint64,uint64))",
        "Method(get_a_tuple()(uint64,uint64))",
        "Method(get_big_uint()uint512)",
        "Method(get_bytes()byte[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)",
        "Method(get_a_named_tuple()(uint64,uint64))",
        "Method(get_a_tuple()(uint64,uint64))"
      ]
    },
    "128": {
      "op": "pushbytes 0xb4cefa39 // method \"get_a_struct()(uint64,uint64)\"",
      "defined_out": [
        "Method(get_a_named_tuple()(uint64,uint64))",
        "Method(get_a_struct()(uint64,uint64))",
        "Method(get_a_tuple()(uint64,uint64))",
        "Method(get_big_uint()uint512)",
        "Method(get_bytes()byte[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)",
        "Method(get_a_named_tuple()(uint64,uint64))",
        "Method(get_a_tuple()(uint64,uint64))",
        "Method(get_a_struct()(uint64,uint64))"
      ]
    },
    "134": {
      "op": "uncover 5",
      "stack_out": [
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)",
        "Method(get_a_named_tuple()(uint64,uint64))",
        "Method(get_a_tuple()(uint64,uint64))",
        "Method(get_a_struct()(uint64,uint64))",
        "tmp%6#0"
      ]
    },
    "136": {
      "op": "match main_get_bytes_route@4 main_get_big_uint_route@5 main_get_a_named_tuple_route@6 main_get_a_tuple_route@7 main_get_a_struct_route@8",
      "stack_out": []
    },
    "148": {
      "op": "b main_switch_case_default@9"
    },
    "151": {
      "block": "main_switch_case_default@9",
      "stack_in": [],
      "op": "b main_switch_case_next@10"
    },
    "154": {
      "block": "main_switch_case_next@10",
      "stack_in": [],
      "op": "b main_after_if_else@12"
    },
    "157": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "b main_after_if_else@19"
    },
    "160": {
      "block": "main_after_if_else@19",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "161": {
      "block": "main_get_a_struct_route@8",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_struct[routing]",
      "op": "callsub get_a_struct"
    },
    "164": {
      "op": "b main_switch_case_next@10"
    },
    "167": {
      "block": "main_get_a_tuple_route@7",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_tuple[routing]",
      "op": "callsub get_a_tuple"
    },
    "170": {
      "op": "b main_switch_case_next@10"
    },
    "173": {
      "block": "main_get_a_named_tuple_route@6",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_named_tuple[routing]",
      "op": "callsub get_a_named_tuple"
    },
    "176": {
      "op": "b main_switch_case_next@10"
    },
    "179": {
      "block": "main_get_big_uint_route@5",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint[routing]",
      "op": "callsub get_big_uint"
    },
    "182": {
      "op": "b main_switch_case_next@10"
    },
    "185": {
      "block": "main_get_bytes_route@4",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes[routing]",
      "op": "callsub get_bytes"
    },
    "188": {
      "op": "b main_switch_case_next@10"
    },
    "191": {
      "block": "main_create_NoOp@11",
      "stack_in": [],
      "op": "b main_after_if_else@12"
    },
    "194": {
      "block": "main_bare_routing@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "196": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "197": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "NoOp",
        "UpdateApplication",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp",
        "UpdateApplication"
      ]
    },
    "199": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "NoOp",
        "UpdateApplication",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp",
        "UpdateApplication",
        "DeleteApplication"
      ]
    },
    "201": {
      "op": "uncover 3",
      "stack_out": [
        "NoOp",
        "UpdateApplication",
        "DeleteApplication",
        "tmp%7#0"
      ]
    },
    "203": {
      "op": "match main___algopy_default_create@14 main_on_update@15 main_on_delete@16",
      "stack_out": []
    },
    "211": {
      "op": "b main_switch_case_default@17"
    },
    "214": {
      "block": "main_switch_case_default@17",
      "stack_in": [],
      "op": "b main_switch_case_next@18"
    },
    "217": {
      "block": "main_switch_case_next@18",
      "stack_in": [],
      "op": "b main_after_if_else@19"
    },
    "220": {
      "block": "main_on_delete@16",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "222": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "223": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "224": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "225": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.on_delete",
      "op": "callsub on_delete"
    },
    "228": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "229": {
      "op": "return",
      "stack_out": []
    },
    "230": {
      "block": "main_on_update@15",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "232": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "233": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "234": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "235": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.on_update",
      "op": "callsub on_update"
    },
    "238": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "239": {
      "op": "return",
      "stack_out": []
    },
    "240": {
      "block": "main___algopy_default_create@14",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "242": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "243": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "244": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "245": {
      "op": "b main_block@21"
    },
    "248": {
      "block": "main_block@21",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__algopy_default_create@22"
    },
    "251": {
      "block": "main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__algopy_default_create@22",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "252": {
      "op": "return",
      "stack_out": []
    },
    "253": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes[routing]",
      "params": {},
      "block": "get_bytes",
      "stack_in": [],
      "op": "b get_bytes_block@0"
    },
    "256": {
      "block": "get_bytes_block@0",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "op": "callsub test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "259": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "260": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%0#0"
      ]
    },
    "261": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "262": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "265": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ]
    },
    "267": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "268": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "269": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "271": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "272": {
      "op": "log",
      "stack_out": []
    },
    "273": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "274": {
      "op": "return",
      "stack_out": []
    },
    "275": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint[routing]",
      "params": {},
      "block": "get_big_uint",
      "stack_in": [],
      "op": "b get_big_uint_block@0"
    },
    "278": {
      "block": "get_big_uint_block@0",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "op": "callsub test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "281": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "282": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "284": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "285": {
      "op": "log",
      "stack_out": []
    },
    "286": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "287": {
      "op": "return",
      "stack_out": []
    },
    "288": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_named_tuple[routing]",
      "params": {},
      "block": "get_a_named_tuple",
      "stack_in": [],
      "op": "b get_a_named_tuple_block@0"
    },
    "291": {
      "block": "get_a_named_tuple_block@0",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_named_tuple",
      "op": "callsub test_cases.template_variables.contract.TemplateVariablesContract.get_a_named_tuple",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "294": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "296": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "297": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "298": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "300": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0"
      ]
    },
    "301": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%1#0"
      ]
    },
    "303": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "304": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "305": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "306": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "308": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "309": {
      "op": "log",
      "stack_out": []
    },
    "310": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "311": {
      "op": "return",
      "stack_out": []
    },
    "312": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_tuple[routing]",
      "params": {},
      "block": "get_a_tuple",
      "stack_in": [],
      "op": "b get_a_tuple_block@0"
    },
    "315": {
      "block": "get_a_tuple_block@0",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_tuple",
      "op": "callsub test_cases.template_variables.contract.TemplateVariablesContract.get_a_tuple",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "318": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "320": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "321": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "322": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "324": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0"
      ]
    },
    "325": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%1#0"
      ]
    },
    "327": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "328": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "329": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "330": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "333": {
      "op": "log",
      "stack_out": []
    },
    "334": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "335": {
      "op": "return",
      "stack_out": []
    },
    "336": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_struct[routing]",
      "params": {},
      "block": "get_a_struct",
      "stack_in": [],
      "op": "b get_a_struct_block@0"
    },
    "339": {
      "block": "get_a_struct_block@0",
      "stack_in": [],
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_struct",
      "op": "callsub test_cases.template_variables.contract.TemplateVariablesContract.get_a_struct",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "342": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "343": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "345": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "346": {
      "op": "log",
      "stack_out": []
    },
    "347": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "348": {
      "op": "return",
      "stack_out": []
    },
    "349": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "params": {},
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "stack_in": [],
      "op": "b test_cases.template_variables.contract.TemplateVariablesContract.get_bytes_block@0"
    },
    "352": {
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes_block@0",
      "stack_in": [],
      "op": "bytec 4 // TMPL_SOME_BYTES",
      "defined_out": [
        "TMPL_SOME_BYTES"
      ],
      "stack_out": [
        "TMPL_SOME_BYTES"
      ]
    },
    "354": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.receive_value",
      "op": "callsub receive_value",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "357": {
      "retsub": true,
      "op": "retsub"
    },
    "358": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "params": {},
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "stack_in": [],
      "op": "b test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint_block@0"
    },
    "361": {
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint_block@0",
      "stack_in": [],
      "op": "bytec 5 // TMPL_SOME_BIG_UINT",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "363": {
      "op": "dup",
      "defined_out": [
        "x#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "x#0 (copy)"
      ]
    },
    "364": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%value_len%0#0"
      ]
    },
    "365": {
      "op": "intc_3 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "366": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "367": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "x#0"
      ]
    },
    "368": {
      "op": "intc_3 // 64",
      "stack_out": [
        "x#0",
        "64"
      ]
    },
    "369": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%bzero%0#0"
      ]
    },
    "370": {
      "op": "b|",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "371": {
      "retsub": true,
      "op": "retsub"
    },
    "372": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.on_update",
      "params": {},
      "block": "on_update",
      "stack_in": [],
      "op": "b on_update_block@0"
    },
    "375": {
      "block": "on_update_block@0",
      "stack_in": [],
      "op": "intc 4 // TMPL_UPDATABLE",
      "defined_out": [
        "TMPL_UPDATABLE"
      ],
      "stack_out": [
        "TMPL_UPDATABLE"
      ]
    },
    "377": {
      "op": "assert",
      "stack_out": []
    },
    "378": {
      "retsub": true,
      "op": "retsub"
    },
    "379": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.on_delete",
      "params": {},
      "block": "on_delete",
      "stack_in": [],
      "op": "b on_delete_block@0"
    },
    "382": {
      "block": "on_delete_block@0",
      "stack_in": [],
      "op": "intc 5 // TMPL_DELETABLE",
      "defined_out": [
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "TMPL_DELETABLE"
      ]
    },
    "384": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "TMPL_DELETABLE",
        "0"
      ]
    },
    "385": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "386": {
      "op": "assert",
      "stack_out": []
    },
    "387": {
      "retsub": true,
      "op": "retsub"
    },
    "388": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.receive_value",
      "params": {
        "value#0": "bytes"
      },
      "block": "receive_value",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "391": {
      "op": "b receive_value_block@0"
    },
    "394": {
      "block": "receive_value_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "396": {
      "retsub": true,
      "op": "retsub"
    },
    "397": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_named_tuple",
      "params": {},
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_named_tuple",
      "stack_in": [],
      "op": "b test_cases.template_variables.contract.TemplateVariablesContract.get_a_named_tuple_block@0"
    },
    "400": {
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_named_tuple_block@0",
      "stack_in": [],
      "op": "bytec_2 // TMPL_NAMED_TUPLE",
      "defined_out": [
        "TMPL_NAMED_TUPLE"
      ],
      "stack_out": [
        "TMPL_NAMED_TUPLE"
      ]
    },
    "401": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "TMPL_NAMED_TUPLE"
      ],
      "stack_out": [
        "TMPL_NAMED_TUPLE",
        "0"
      ]
    },
    "402": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "TMPL_NAMED_TUPLE"
      ],
      "stack_out": [
        "TMPL_NAMED_TUPLE",
        "0",
        "8"
      ]
    },
    "403": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0"
      ],
      "stack_out": [
        "aggregate%extract%0#0"
      ]
    },
    "404": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0"
      ]
    },
    "405": {
      "op": "bytec_2 // TMPL_NAMED_TUPLE",
      "stack_out": [
        "aggregate%item0%0#0",
        "TMPL_NAMED_TUPLE"
      ]
    },
    "406": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "TMPL_NAMED_TUPLE",
        "8"
      ]
    },
    "407": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "TMPL_NAMED_TUPLE",
        "8",
        "8"
      ]
    },
    "408": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "409": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "410": {
      "retsub": true,
      "op": "retsub"
    },
    "411": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_tuple",
      "params": {},
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_tuple",
      "stack_in": [],
      "op": "b test_cases.template_variables.contract.TemplateVariablesContract.get_a_tuple_block@0"
    },
    "414": {
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_tuple_block@0",
      "stack_in": [],
      "op": "bytec_3 // TMPL_TUPLE",
      "defined_out": [
        "TMPL_TUPLE"
      ],
      "stack_out": [
        "TMPL_TUPLE"
      ]
    },
    "415": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "TMPL_TUPLE"
      ],
      "stack_out": [
        "TMPL_TUPLE",
        "0"
      ]
    },
    "416": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "TMPL_TUPLE"
      ],
      "stack_out": [
        "TMPL_TUPLE",
        "0",
        "8"
      ]
    },
    "417": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0"
      ],
      "stack_out": [
        "aggregate%extract%0#0"
      ]
    },
    "418": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0"
      ]
    },
    "419": {
      "op": "bytec_3 // TMPL_TUPLE",
      "stack_out": [
        "aggregate%item0%0#0",
        "TMPL_TUPLE"
      ]
    },
    "420": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "TMPL_TUPLE",
        "8"
      ]
    },
    "421": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "TMPL_TUPLE",
        "8",
        "8"
      ]
    },
    "422": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "423": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "424": {
      "retsub": true,
      "op": "retsub"
    },
    "425": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_struct",
      "params": {},
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_struct",
      "stack_in": [],
      "op": "b test_cases.template_variables.contract.TemplateVariablesContract.get_a_struct_block@0"
    },
    "428": {
      "block": "test_cases.template_variables.contract.TemplateVariablesContract.get_a_struct_block@0",
      "stack_in": [],
      "op": "bytec 6 // TMPL_STRUCT",
      "defined_out": [
        "TMPL_STRUCT"
      ],
      "stack_out": [
        "TMPL_STRUCT"
      ]
    },
    "430": {
      "retsub": true,
      "op": "retsub"
    }
  }
}