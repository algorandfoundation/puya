{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;AAKK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAcK;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;;;;AAP6B;AAAnB;;;AAAP;;;;AAII;AACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;;;;AAIO;AAAP;;;;;AAIO;;AAAA;AAAA;AAAP;;AAER;;;;;;AAEQ;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 64 TMPL_UPDATABLE TMPL_DELETABLE"
    },
    "8": {
      "op": "bytecblock 0x151f7c75 TMPL_SOME_BYTES TMPL_SOME_BIG_UINT"
    },
    "17": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "19": {
      "op": "b main_block@0"
    },
    "22": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "25": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "27": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "28": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "29": {
      "op": "bz main_bare_routing@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "32": {
      "op": "b main_abi_routing@2"
    },
    "35": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "38": {
      "op": "pushbytes 0x2fcaddf6 // method \"get_bytes()byte[]\"",
      "defined_out": [
        "Method(get_bytes()byte[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(get_bytes()byte[])"
      ]
    },
    "44": {
      "op": "pushbytes 0x37f64cf3 // method \"get_big_uint()uint512\"",
      "defined_out": [
        "Method(get_big_uint()uint512)",
        "Method(get_bytes()byte[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)"
      ]
    },
    "50": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "Method(get_bytes()byte[])",
        "Method(get_big_uint()uint512)",
        "tmp%2#0"
      ]
    },
    "52": {
      "op": "match main_get_bytes_route@3 main_get_big_uint_route@4",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "58": {
      "op": "b main_switch_case_default@5"
    },
    "61": {
      "block": "main_switch_case_default@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@6"
    },
    "64": {
      "block": "main_switch_case_next@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@13"
    },
    "67": {
      "block": "main_after_if_else@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ]
    },
    "68": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "70": {
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14"
    },
    "73": {
      "block": "main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "74": {
      "block": "main_get_big_uint_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "76": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0",
        "NoOp"
      ]
    },
    "77": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "78": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "79": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "81": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "82": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "83": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "84": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "op": "callsub get_big_uint",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "87": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "88": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%14#0"
      ]
    },
    "90": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "91": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "92": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ]
    },
    "93": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14"
    },
    "98": {
      "block": "main_get_bytes_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "100": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "101": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "102": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "103": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "105": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "106": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "107": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "108": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "op": "callsub get_bytes",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "111": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "112": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "aggregate%length%0#0"
      ]
    },
    "113": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "114": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "117": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%7#0"
      ]
    },
    "119": {
      "op": "concat",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "120": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "121": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%8#0"
      ]
    },
    "123": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "124": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "125": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ]
    },
    "126": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "128": {
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14"
    },
    "131": {
      "block": "main_bare_routing@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0"
      ]
    },
    "133": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0",
        "4"
      ]
    },
    "135": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "4",
        "5",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0",
        "4",
        "5"
      ]
    },
    "137": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "4",
        "5",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0",
        "4",
        "5",
        "0"
      ]
    },
    "138": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "4",
        "5",
        "0",
        "tmp%16#0"
      ]
    },
    "140": {
      "op": "match main_on_update@8 main_on_delete@9 main___algopy_default_create@10",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "148": {
      "op": "b main_switch_case_default@11"
    },
    "151": {
      "block": "main_switch_case_default@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@12"
    },
    "154": {
      "block": "main_switch_case_next@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@13"
    },
    "157": {
      "block": "main___algopy_default_create@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%21#0"
      ]
    },
    "159": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%21#0",
        "0"
      ]
    },
    "160": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%22#0"
      ]
    },
    "161": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "162": {
      "op": "b main_block@15"
    },
    "165": {
      "block": "main_block@15",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__algopy_default_create@16"
    },
    "168": {
      "block": "main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__algopy_default_create@16",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ]
    },
    "169": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "171": {
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14"
    },
    "174": {
      "block": "main_on_delete@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0"
      ]
    },
    "176": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "0"
      ]
    },
    "177": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%20#0"
      ]
    },
    "178": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "179": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.on_delete",
      "op": "callsub on_delete"
    },
    "182": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ]
    },
    "183": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "185": {
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14"
    },
    "188": {
      "block": "main_on_update@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0"
      ]
    },
    "190": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0",
        "0"
      ]
    },
    "191": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0"
      ]
    },
    "192": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "193": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.on_update",
      "op": "callsub on_update"
    },
    "196": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0"
      ]
    },
    "197": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "199": {
      "op": "b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14"
    },
    "202": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_bytes",
      "params": {},
      "block": "get_bytes",
      "stack_in": [],
      "op": "b get_bytes_block@0"
    },
    "205": {
      "block": "get_bytes_block@0",
      "stack_in": [],
      "op": "bytec_1 // TMPL_SOME_BYTES",
      "defined_out": [
        "TMPL_SOME_BYTES"
      ],
      "stack_out": [
        "TMPL_SOME_BYTES"
      ]
    },
    "206": {
      "callsub": "test_cases.template_variables.contract.TemplateVariablesContract.receive_value",
      "op": "callsub receive_value",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "209": {
      "retsub": true,
      "op": "retsub"
    },
    "210": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint",
      "params": {},
      "block": "get_big_uint",
      "stack_in": [],
      "op": "b get_big_uint_block@0"
    },
    "213": {
      "block": "get_big_uint_block@0",
      "stack_in": [],
      "op": "bytec_2 // TMPL_SOME_BIG_UINT",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "214": {
      "op": "dup",
      "defined_out": [
        "x#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "x#0 (copy)"
      ]
    },
    "215": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%value_len%0#0"
      ]
    },
    "216": {
      "op": "intc_2 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "217": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "218": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "x#0"
      ]
    },
    "219": {
      "op": "intc_2 // 64",
      "stack_out": [
        "x#0",
        "64"
      ]
    },
    "220": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "aggregate%bzero%0#0"
      ]
    },
    "221": {
      "op": "b|",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "222": {
      "retsub": true,
      "op": "retsub"
    },
    "223": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.on_update",
      "params": {},
      "block": "on_update",
      "stack_in": [],
      "op": "b on_update_block@0"
    },
    "226": {
      "block": "on_update_block@0",
      "stack_in": [],
      "op": "intc_3 // TMPL_UPDATABLE",
      "defined_out": [
        "TMPL_UPDATABLE"
      ],
      "stack_out": [
        "TMPL_UPDATABLE"
      ]
    },
    "227": {
      "op": "assert",
      "stack_out": []
    },
    "228": {
      "retsub": true,
      "op": "retsub"
    },
    "229": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.on_delete",
      "params": {},
      "block": "on_delete",
      "stack_in": [],
      "op": "b on_delete_block@0"
    },
    "232": {
      "block": "on_delete_block@0",
      "stack_in": [],
      "op": "intc 4 // TMPL_DELETABLE",
      "defined_out": [
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "TMPL_DELETABLE"
      ]
    },
    "234": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "TMPL_DELETABLE"
      ],
      "stack_out": [
        "TMPL_DELETABLE",
        "0"
      ]
    },
    "235": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "236": {
      "op": "assert",
      "stack_out": []
    },
    "237": {
      "retsub": true,
      "op": "retsub"
    },
    "238": {
      "subroutine": "test_cases.template_variables.contract.TemplateVariablesContract.receive_value",
      "params": {
        "value#0": "bytes"
      },
      "block": "receive_value",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "241": {
      "op": "b receive_value_block@0"
    },
    "244": {
      "block": "receive_value_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "246": {
      "retsub": true,
      "op": "retsub"
    }
  }
}