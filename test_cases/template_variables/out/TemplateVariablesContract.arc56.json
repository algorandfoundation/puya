{
    "name": "TemplateVariablesContract",
    "structs": {
        "AStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint64"
            }
        ],
        "ATuple": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "get_bytes",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_big_uint",
            "args": [],
            "returns": {
                "type": "uint512"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_a_named_tuple",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "ATuple"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_a_tuple",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_a_struct",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "AStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "DeleteApplication",
            "UpdateApplication"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        75
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        152
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        141,
                        146
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        175
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDY0IFRNUExfREVMRVRBQkxFIFRNUExfVVBEQVRBQkxFCiAgICBieXRlY2Jsb2NrIDB4MTUxZjdjNzUgVE1QTF9TT01FX0JZVEVTIFRNUExfU09NRV9CSUdfVUlOVCBUTVBMX05BTUVEX1RVUExFIFRNUExfVFVQTEUgVE1QTF9TVFJVQ1QKICAgIC8vIHRlbXBsYXRlX3ZhcmlhYmxlcy9jb250cmFjdC5weToxNwogICAgLy8gY2xhc3MgVGVtcGxhdGVWYXJpYWJsZXNDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdAMTIKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0CiAgICBwdXNoYnl0ZXNzIDB4MmZjYWRkZjYgMHgzN2Y2NGNmMyAweDI1ZmNiMWIxIDB4OTVmZDhhZDEgMHhiNGNlZmEzOSAvLyBtZXRob2QgImdldF9ieXRlcygpYnl0ZVtdIiwgbWV0aG9kICJnZXRfYmlnX3VpbnQoKXVpbnQ1MTIiLCBtZXRob2QgImdldF9hX25hbWVkX3R1cGxlKCkodWludDY0LHVpbnQ2NCkiLCBtZXRob2QgImdldF9hX3R1cGxlKCkodWludDY0LHVpbnQ2NCkiLCBtZXRob2QgImdldF9hX3N0cnVjdCgpKHVpbnQ2NCx1aW50NjQpIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggZ2V0X2J5dGVzIGdldF9iaWdfdWludCBnZXRfYV9uYW1lZF90dXBsZSBnZXRfYV90dXBsZSBnZXRfYV9zdHJ1Y3QKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxNzoKICAgIC8vIHRlbXBsYXRlX3ZhcmlhYmxlcy9jb250cmFjdC5weToxNwogICAgLy8gY2xhc3MgVGVtcGxhdGVWYXJpYWJsZXNDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICBlcnIKCm1haW5fYmFyZV9yb3V0aW5nQDEyOgogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjE3CiAgICAvLyBjbGFzcyBUZW1wbGF0ZVZhcmlhYmxlc0NvbnRyYWN0KGFyYzQuQVJDNENvbnRyYWN0KToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIHN3aXRjaCBtYWluX19fYWxnb3B5X2RlZmF1bHRfY3JlYXRlQDEzIG1haW5fYWZ0ZXJfaWZfZWxzZUAxNyBtYWluX2FmdGVyX2lmX2Vsc2VAMTcgbWFpbl9hZnRlcl9pZl9lbHNlQDE3IG1haW5fb25fdXBkYXRlQDE0IG1haW5fb25fZGVsZXRlQDE1CiAgICBlcnIKCm1haW5fb25fZGVsZXRlQDE1OgogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjMxCiAgICAvLyBAYXJjNC5iYXJlbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJEZWxldGVBcHBsaWNhdGlvbiJdKQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6MzMKICAgIC8vIGFzc2VydCBUZW1wbGF0ZVZhcltVSW50NjRdKCJERUxFVEFCTEUiKQogICAgaW50Y18yIC8vIFRNUExfREVMRVRBQkxFCiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6MzEKICAgIC8vIEBhcmM0LmJhcmVtZXRob2QoYWxsb3dfYWN0aW9ucz1bIkRlbGV0ZUFwcGxpY2F0aW9uIl0pCiAgICByZXR1cm4KCm1haW5fb25fdXBkYXRlQDE0OgogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjI3CiAgICAvLyBAYXJjNC5iYXJlbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJVcGRhdGVBcHBsaWNhdGlvbiJdKQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6MjkKICAgIC8vIGFzc2VydCBUZW1wbGF0ZVZhcltib29sXSgiVVBEQVRBQkxFIikKICAgIGludGNfMyAvLyBUTVBMX1VQREFUQUJMRQogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjI3CiAgICAvLyBAYXJjNC5iYXJlbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJVcGRhdGVBcHBsaWNhdGlvbiJdKQogICAgcmV0dXJuCgptYWluX19fYWxnb3B5X2RlZmF1bHRfY3JlYXRlQDEzOgogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLnRlbXBsYXRlX3ZhcmlhYmxlcy5jb250cmFjdC5UZW1wbGF0ZVZhcmlhYmxlc0NvbnRyYWN0LmdldF9ieXRlc1tyb3V0aW5nXSgpIC0+IHZvaWQ6CmdldF9ieXRlczoKICAgIC8vIHRlbXBsYXRlX3ZhcmlhYmxlcy9jb250cmFjdC5weToyMAogICAgLy8gcmV0dXJuIHNlbGYucmVjZWl2ZV92YWx1ZShUZW1wbGF0ZVZhcltCeXRlc10oIlNPTUVfQllURVMiKSkKICAgIGJ5dGVjXzEgLy8gVE1QTF9TT01FX0JZVEVTCiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6MTgKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBkdXAKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RfY2FzZXMudGVtcGxhdGVfdmFyaWFibGVzLmNvbnRyYWN0LlRlbXBsYXRlVmFyaWFibGVzQ29udHJhY3QuZ2V0X2JpZ191aW50W3JvdXRpbmddKCkgLT4gdm9pZDoKZ2V0X2JpZ191aW50OgogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjI0CiAgICAvLyB4ID0gVGVtcGxhdGVWYXJbQmlnVUludF0oIlNPTUVfQklHX1VJTlQiKQogICAgYnl0ZWNfMiAvLyBUTVBMX1NPTUVfQklHX1VJTlQKICAgIC8vIHRlbXBsYXRlX3ZhcmlhYmxlcy9jb250cmFjdC5weToyNQogICAgLy8gcmV0dXJuIFVJbnQ1MTIoeCkKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzEgLy8gNjQKICAgIDw9CiAgICBhc3NlcnQgLy8gb3ZlcmZsb3cKICAgIGludGNfMSAvLyA2NAogICAgYnplcm8KICAgIGJ8CiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6MjIKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy50ZW1wbGF0ZV92YXJpYWJsZXMuY29udHJhY3QuVGVtcGxhdGVWYXJpYWJsZXNDb250cmFjdC5nZXRfYV9uYW1lZF90dXBsZVtyb3V0aW5nXSgpIC0+IHZvaWQ6CmdldF9hX25hbWVkX3R1cGxlOgogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjM5CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjQxCiAgICAvLyByZXR1cm4gVGVtcGxhdGVWYXJbQVR1cGxlXSgiTkFNRURfVFVQTEUiKQogICAgYnl0ZWNfMyAvLyBUTVBMX05BTUVEX1RVUExFCiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6MzkKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLnRlbXBsYXRlX3ZhcmlhYmxlcy5jb250cmFjdC5UZW1wbGF0ZVZhcmlhYmxlc0NvbnRyYWN0LmdldF9hX3R1cGxlW3JvdXRpbmddKCkgLT4gdm9pZDoKZ2V0X2FfdHVwbGU6CiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6NDMKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6NDUKICAgIC8vIHJldHVybiBUZW1wbGF0ZVZhclt0dXBsZVtVSW50NjQsIFVJbnQ2NF1dKCJUVVBMRSIpCiAgICBieXRlYyA0IC8vIFRNUExfVFVQTEUKICAgIC8vIHRlbXBsYXRlX3ZhcmlhYmxlcy9jb250cmFjdC5weTo0MwogICAgLy8gQGFyYzQuYWJpbWV0aG9kCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RfY2FzZXMudGVtcGxhdGVfdmFyaWFibGVzLmNvbnRyYWN0LlRlbXBsYXRlVmFyaWFibGVzQ29udHJhY3QuZ2V0X2Ffc3RydWN0W3JvdXRpbmddKCkgLT4gdm9pZDoKZ2V0X2Ffc3RydWN0OgogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjQ3CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgLy8gdGVtcGxhdGVfdmFyaWFibGVzL2NvbnRyYWN0LnB5OjQ5CiAgICAvLyByZXR1cm4gVGVtcGxhdGVWYXJbQVN0cnVjdF0oIlNUUlVDVCIpCiAgICBieXRlYyA1IC8vIFRNUExfU1RSVUNUCiAgICAvLyB0ZW1wbGF0ZV92YXJpYWJsZXMvY29udHJhY3QucHk6NDcKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4K",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAUAAACYGBBUffHUAABAAAAAAAAAAAwAAAAAAAAAEEAAAAAAAAAABAAAAAAAAAAIQAAAAAAAAAAUAAAAAAAAABjEbQQAyMRkURDEYRIIFBC/K3fYEN/ZM8wQl/LGxBJX9itEEtM76OTYaAI4FACIAMQBAAEYATQAxGY0GAAv/7//v/+8ABgABADEYRCRDMRhEJUMxGBREIkMpSRUWVwYCTFAoTFCwIkMqSRUjDkQjr6soTFCwIkMoK1CwIkMoJwRQsCJDKCcFULAiQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {
        "DELETABLE": {
            "type": "AVMUint64",
            "value": "AAAAAAAAAAA="
        },
        "UPDATABLE": {
            "type": "AVMUint64",
            "value": "AAAAAAAAAAA="
        },
        "SOME_BYTES": {
            "type": "AVMBytes",
            "value": ""
        },
        "SOME_BIG_UINT": {
            "type": "AVMBytes",
            "value": ""
        },
        "NAMED_TUPLE": {
            "type": "ATuple",
            "value": "AAAAAAAAAAMAAAAAAAAABA=="
        },
        "TUPLE": {
            "type": "(uint64,uint64)",
            "value": "AAAAAAAAAAEAAAAAAAAAAg=="
        },
        "STRUCT": {
            "type": "AStruct",
            "value": "AAAAAAAAAAUAAAAAAAAABg=="
        }
    }
}