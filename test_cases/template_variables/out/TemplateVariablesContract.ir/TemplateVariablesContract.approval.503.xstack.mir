// Op                                                                                                            Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // template_variables/contract.py:5
        // class TemplateVariablesContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                                           tmp%0#1
        bz main_bare_routing@7 ; b main_abi_routing@2

    main_abi_routing@2:
        // template_variables/contract.py:5
        // class TemplateVariablesContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                                   tmp%2#0
        method get_bytes()byte[]                                                                                 tmp%2#0,Method(get_bytes()byte[])
        method get_big_uint()uint512                                                                             tmp%2#0,Method(get_bytes()byte[]),Method(get_big_uint()uint512)
        l-load tmp%2#0 2                                                                                         Method(get_bytes()byte[]),Method(get_big_uint()uint512),tmp%2#0
        match main_get_bytes_route@3 main_get_big_uint_route@4 ; b main_after_if_else@13

    main_get_bytes_route@3:
        // template_variables/contract.py:6
        // @arc4.abimethod()
        txn OnCompletion                                                                                         tmp%3#0
        !                                                                                                        tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                        tmp%5#0
        assert // can only call when not creating
        callsub get_bytes                                                                                        tmp%7#0
        l-load-copy tmp%7#0 0                                                                                    tmp%7#0,tmp%7#0 (copy)
        len                                                                                                      tmp%7#0,aggregate%length%0#1
        itob                                                                                                     tmp%7#0,aggregate%as_bytes%0#1
        extract 6 2                                                                                              tmp%7#0,aggregate%length_uint16%0#1
        l-load tmp%7#0 1                                                                                         aggregate%length_uint16%0#1,tmp%7#0
        concat                                                                                                   aggregate%encoded_value%0#1
        byte 0x151f7c75                                                                                          aggregate%encoded_value%0#1,0x151f7c75
        l-load aggregate%encoded_value%0#1 1                                                                     0x151f7c75,aggregate%encoded_value%0#1
        concat                                                                                                   tmp%9#0
        log
        int 1                                                                                                    test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14 (𝕏) tmp%0#0 | 

    main_get_big_uint_route@4:
        // template_variables/contract.py:10
        // @arc4.abimethod()
        txn OnCompletion                                                                                         tmp%10#0
        !                                                                                                        tmp%11#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                        tmp%12#0
        assert // can only call when not creating
        callsub get_big_uint                                                                                     tmp%14#0
        byte 0x151f7c75                                                                                          tmp%14#0,0x151f7c75
        l-load tmp%14#0 1                                                                                        0x151f7c75,tmp%14#0
        concat                                                                                                   tmp%15#0
        log
        int 1                                                                                                    test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14 (𝕏) tmp%0#0 | 

    main_bare_routing@7:
        // template_variables/contract.py:5
        // class TemplateVariablesContract(arc4.ARC4Contract):
        txn OnCompletion                                                                                         tmp%16#0
        switch main___algopy_default_create@10 main_after_if_else@13 main_after_if_else@13 main_after_if_else@13 main_on_update@8 main_on_delete@9 ; b main_after_if_else@13 

    main_on_update@8:
        // template_variables/contract.py:15
        // @arc4.baremethod(allow_actions=["UpdateApplication"])
        txn ApplicationID                                                                                        tmp%17#0
        assert // can only call when not creating
        callsub on_update
        int 1                                                                                                    test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14 (𝕏) tmp%0#0 | 

    main_on_delete@9:
        // template_variables/contract.py:19
        // @arc4.baremethod(allow_actions=["DeleteApplication"])
        txn ApplicationID                                                                                        tmp%19#0
        assert // can only call when not creating
        callsub on_delete
        int 1                                                                                                    test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14 (𝕏) tmp%0#0 | 

    main___algopy_default_create@10:
        txn ApplicationID                                                                                        tmp%21#0
        !                                                                                                        tmp%22#0
        assert // can only call when creating
        int 1                                                                                                    test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14 (𝕏) tmp%0#0 | 

    main_after_if_else@13:
        // template_variables/contract.py:5
        // class TemplateVariablesContract(arc4.ARC4Contract):
        int 0                                                                                                    test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14 (𝕏) tmp%0#0 | 

    main_after_inlined_test_cases.template_variables.contract.TemplateVariablesContract.__puya_arc4_router__@14: (𝕏) tmp%0#0 |
        x-load tmp%0#0                                                                                           tmp%0#0
        return


// test_cases.template_variables.contract.TemplateVariablesContract.get_bytes() -> bytes:
subroutine get_bytes:
    get_bytes_block@0:
        // template_variables/contract.py:8
        // return self.receive_value(TemplateVar[Bytes]("SOME_BYTES"))
        byte TMPL_SOME_BYTES                                                                                     value#0
        retsub                                                                                                   value#0


// test_cases.template_variables.contract.TemplateVariablesContract.get_big_uint() -> bytes:
subroutine get_big_uint:
    get_big_uint_block@0:
        // template_variables/contract.py:12
        // x = TemplateVar[BigUInt]("SOME_BIG_UINT")
        byte TMPL_SOME_BIG_UINT                                                                                  x#0
        // template_variables/contract.py:13
        // return UInt512(x)
        l-load-copy x#0 0                                                                                        x#0,x#0 (copy)
        len                                                                                                      x#0,aggregate%value_len%0#1
        int 64                                                                                                   x#0,aggregate%value_len%0#1,64
        <=                                                                                                       x#0,aggregate%len_ok%0#1
        assert // overflow                                                                                       x#0
        int 64                                                                                                   x#0,64
        bzero                                                                                                    x#0,aggregate%bzero%0#1
        l-load x#0 1                                                                                             aggregate%bzero%0#1,x#0
        l-load aggregate%bzero%0#1 1                                                                             x#0,aggregate%bzero%0#1
        b|                                                                                                       aggregate%arc4_encoded%0#1
        retsub                                                                                                   aggregate%arc4_encoded%0#1


// test_cases.template_variables.contract.TemplateVariablesContract.on_update() -> void:
subroutine on_update:
    on_update_block@0:
        // template_variables/contract.py:17
        // assert TemplateVar[bool]("UPDATABLE")
        int TMPL_UPDATABLE                                                                                       TMPL_UPDATABLE
        assert
        retsub


// test_cases.template_variables.contract.TemplateVariablesContract.on_delete() -> void:
subroutine on_delete:
    on_delete_block@0:
        // template_variables/contract.py:21
        // assert TemplateVar[UInt64]("DELETABLE")
        int TMPL_DELETABLE                                                                                       TMPL_DELETABLE
        assert
        retsub


