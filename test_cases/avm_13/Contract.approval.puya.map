{
  "version": 3,
  "sources": [
    "contract.py"
  ],
  "mappings": ";;;;;;;;;AAGA;;;AAAA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAAA;AAEK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAFL;;AAAA;;;;;;;;;AAAA;AAAA;AAEA;;;AAGoC;;AAAK;;AAAtB;AAAJ;AAAP;AACqB;;AAAd;AAAA;AAAP;AACO;AAAP;AAQ6B;AAAtB;;AAAA;;AAAA;AAAP;AACmC;AAA5B;;AAAP;AAC0B;AAAnB;;AAAP;AAC2B;AAApB;;AAAA;AAAP;AAC6B;AAAtB;;AAAA;;AAAA;AAAP;AAC6B;AAAtB;;AAAA;AAAP;AACgC;AAAzB;;AAAP;AACoC;AAA7B;;AAAP;AAGO;;AAAP;AACO;;AAAP;AACO;;AAAP;AACO;;AAAP;AACO;;AAAP;AAGuC;AAAhC;;AAAA;;AAC2C;AAA3C;;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.avm_11.contract.Contract.approval_program",
      "params": {},
      "block": "test_cases.avm_11.contract.Contract.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "callsub": "test_cases.avm_11.contract.Contract.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "8": {
      "op": "return",
      "stack_out": []
    },
    "9": {
      "subroutine": "test_cases.avm_11.contract.Contract.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "12": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "14": {
      "op": "bz __puya_arc4_router___bare_routing@5",
      "stack_out": []
    },
    "17": {
      "op": "pushbytes 0xc2b8dd8a // method \"test_new_ops()void\""
    },
    "23": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_new_ops()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_new_ops()void)",
        "tmp%2#0"
      ]
    },
    "26": {
      "op": "match __puya_arc4_router___test_new_ops_route@2",
      "stack_out": []
    },
    "30": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "31": {
      "retsub": true,
      "op": "retsub"
    },
    "32": {
      "block": "__puya_arc4_router___test_new_ops_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "34": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "35": {
      "op": "assert // OnCompletion is NoOp",
      "stack_out": []
    },
    "36": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "38": {
      "op": "assert // is not creating",
      "stack_out": []
    },
    "39": {
      "callsub": "test_cases.avm_11.contract.Contract.test_new_ops",
      "op": "callsub test_new_ops"
    },
    "42": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "43": {
      "retsub": true,
      "op": "retsub"
    },
    "44": {
      "block": "__puya_arc4_router___bare_routing@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "46": {
      "op": "bnz __puya_arc4_router___after_if_else@9",
      "stack_out": []
    },
    "49": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "51": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "52": {
      "op": "assert // is creating",
      "stack_out": []
    },
    "53": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "54": {
      "retsub": true,
      "op": "retsub"
    },
    "55": {
      "block": "__puya_arc4_router___after_if_else@9",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "56": {
      "retsub": true,
      "op": "retsub"
    },
    "57": {
      "subroutine": "test_cases.avm_11.contract.Contract.test_new_ops",
      "params": {},
      "block": "test_new_ops",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "60": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "62": {
      "op": "dupn 2",
      "stack_out": [
        "0x",
        "0x",
        "0x"
      ]
    },
    "64": {
      "op": "falcon_verify",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "65": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "66": {
      "op": "assert",
      "stack_out": []
    },
    "67": {
      "op": "pushbytes 0x",
      "stack_out": [
        "0x"
      ]
    },
    "69": {
      "op": "sumhash512",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "70": {
      "op": "len",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "71": {
      "op": "assert",
      "stack_out": []
    },
    "72": {
      "op": "online_stake",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "73": {
      "op": "assert",
      "stack_out": []
    },
    "74": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "75": {
      "op": "block BlkProposer",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "77": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "79": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "80": {
      "op": "assert // proposer",
      "stack_out": []
    },
    "81": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "82": {
      "op": "block BlkFeesCollected",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "84": {
      "op": "assert // fees collected",
      "stack_out": []
    },
    "85": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "86": {
      "op": "block BlkBonus",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "88": {
      "op": "assert // bonus",
      "stack_out": []
    },
    "89": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "90": {
      "op": "block BlkBranch",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "92": {
      "op": "len",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "93": {
      "op": "assert // branch",
      "stack_out": []
    },
    "94": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "95": {
      "op": "block BlkFeeSink",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "97": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "99": {
      "op": "!=",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "100": {
      "op": "assert // fee sink",
      "stack_out": []
    },
    "101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "102": {
      "op": "block BlkProtocol",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "104": {
      "op": "len",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "105": {
      "op": "assert // protocol",
      "stack_out": []
    },
    "106": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "107": {
      "op": "block BlkTxnCounter",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "109": {
      "op": "assert // txn counter",
      "stack_out": []
    },
    "110": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "111": {
      "op": "block BlkProposerPayout",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "113": {
      "op": "assert // proposer payout",
      "stack_out": []
    },
    "114": {
      "op": "global PayoutsEnabled",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "116": {
      "op": "assert // payouts_enabled",
      "stack_out": []
    },
    "117": {
      "op": "global PayoutsGoOnlineFee",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "119": {
      "op": "assert // payouts_go_online_fee",
      "stack_out": []
    },
    "120": {
      "op": "global PayoutsPercent",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "122": {
      "op": "assert // payouts_percent",
      "stack_out": []
    },
    "123": {
      "op": "global PayoutsMinBalance",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "125": {
      "op": "assert // payouts_min_balance",
      "stack_out": []
    },
    "126": {
      "op": "global PayoutsMaxBalance",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "128": {
      "op": "assert // payouts_max_balance",
      "stack_out": []
    },
    "129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "130": {
      "op": "voter_params_get VoterBalance",
      "defined_out": [
        "g#0",
        "h#0"
      ],
      "stack_out": [
        "g#0",
        "h#0"
      ]
    },
    "132": {
      "op": "popn 2",
      "stack_out": []
    },
    "134": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "135": {
      "op": "voter_params_get VoterIncentiveEligible",
      "defined_out": [
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "i#0",
        "j#0"
      ]
    },
    "137": {
      "op": "popn 2",
      "stack_out": []
    },
    "139": {
      "retsub": true,
      "op": "retsub"
    }
  }
}