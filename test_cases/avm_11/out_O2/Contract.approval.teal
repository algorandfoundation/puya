#pragma version 11
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0
    pushint 1 // 1
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0xc2b8dd8a // method "test_new_ops()void"
    txna ApplicationArgs 0
    match main_test_new_ops_route@3
    err

main_test_new_ops_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    online_stake
    assert
    pushint 32 // 32
    bzero
    mimc BN254Mp110
    pop
    intc_0 // 0
    block BlkProposer
    global ZeroAddress
    ==
    assert // proposer
    intc_0 // 0
    block BlkFeesCollected
    assert // fees collected
    intc_0 // 0
    block BlkBonus
    assert // bonus
    intc_0 // 0
    block BlkFeeSink
    global ZeroAddress
    !=
    assert // fee sink
    intc_0 // 0
    block BlkProtocol
    len
    assert // protocol
    intc_0 // 0
    block BlkTxnCounter
    assert // txn counter
    intc_0 // 0
    block BlkProposerPayout
    assert // proposer payout
    global PayoutsEnabled
    assert // payouts_enabled
    global PayoutsGoOnlineFee
    assert // payouts_go_online_fee
    global PayoutsPercent
    assert // payouts_percent
    global PayoutsMinBalance
    assert // payouts_min_balance
    global PayoutsMaxBalance
    assert // payouts_max_balance
    intc_0 // 0
    voter_params_get VoterBalance
    popn 2
    intc_0 // 0
    voter_params_get VoterIncentiveEligible
    popn 2
    return

main_bare_routing@6:
    txn OnCompletion
    !
    assert
    txn ApplicationID
    !
    return // on error: can only call when creating
