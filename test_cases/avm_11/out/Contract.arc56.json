{
    "name": "Contract",
    "structs": {},
    "methods": [
        {
            "name": "test_new_ops",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        35
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        93
                    ],
                    "errorMessage": "bonus"
                },
                {
                    "pc": [
                        98
                    ],
                    "errorMessage": "branch"
                },
                {
                    "pc": [
                        52
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        38
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        105
                    ],
                    "errorMessage": "fee sink"
                },
                {
                    "pc": [
                        89
                    ],
                    "errorMessage": "fees collected"
                },
                {
                    "pc": [
                        121
                    ],
                    "errorMessage": "payouts_enabled"
                },
                {
                    "pc": [
                        124
                    ],
                    "errorMessage": "payouts_go_online_fee"
                },
                {
                    "pc": [
                        133
                    ],
                    "errorMessage": "payouts_max_balance"
                },
                {
                    "pc": [
                        130
                    ],
                    "errorMessage": "payouts_min_balance"
                },
                {
                    "pc": [
                        127
                    ],
                    "errorMessage": "payouts_percent"
                },
                {
                    "pc": [
                        85
                    ],
                    "errorMessage": "proposer"
                },
                {
                    "pc": [
                        118
                    ],
                    "errorMessage": "proposer payout"
                },
                {
                    "pc": [
                        110
                    ],
                    "errorMessage": "protocol"
                },
                {
                    "pc": [
                        114
                    ],
                    "errorMessage": "txn counter"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCgp0ZXN0X2Nhc2VzLmF2bV8xMS5jb250cmFjdC5Db250cmFjdC5hcHByb3ZhbF9wcm9ncmFtOgogICAgaW50Y2Jsb2NrIDAgMQogICAgY2FsbHN1YiBfX3B1eWFfYXJjNF9yb3V0ZXJfXwogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5hdm1fMTEuY29udHJhY3QuQ29udHJhY3QuX19wdXlhX2FyYzRfcm91dGVyX18oKSAtPiB1aW50NjQ6Cl9fcHV5YV9hcmM0X3JvdXRlcl9fOgogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjkKICAgIC8vIGNsYXNzIENvbnRyYWN0KEFSQzRDb250cmFjdCwgYXZtX3ZlcnNpb249MTEpOgogICAgcHJvdG8gMCAxCiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogX19wdXlhX2FyYzRfcm91dGVyX19fYmFyZV9yb3V0aW5nQDUKICAgIHB1c2hieXRlcyAweGMyYjhkZDhhIC8vIG1ldGhvZCAidGVzdF9uZXdfb3BzKCl2b2lkIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggX19wdXlhX2FyYzRfcm91dGVyX19fdGVzdF9uZXdfb3BzX3JvdXRlQDIKICAgIGludGNfMCAvLyAwCiAgICByZXRzdWIKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX3Rlc3RfbmV3X29wc19yb3V0ZUAyOgogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjEwCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgY2FsbHN1YiB0ZXN0X25ld19vcHMKICAgIGludGNfMSAvLyAxCiAgICByZXRzdWIKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX2JhcmVfcm91dGluZ0A1OgogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjkKICAgIC8vIGNsYXNzIENvbnRyYWN0KEFSQzRDb250cmFjdCwgYXZtX3ZlcnNpb249MTEpOgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IF9fcHV5YV9hcmM0X3JvdXRlcl9fX2FmdGVyX2lmX2Vsc2VAOQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMSAvLyAxCiAgICByZXRzdWIKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX2FmdGVyX2lmX2Vsc2VAOToKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTo5CiAgICAvLyBjbGFzcyBDb250cmFjdChBUkM0Q29udHJhY3QsIGF2bV92ZXJzaW9uPTExKToKICAgIGludGNfMCAvLyAwCiAgICByZXRzdWIKCgovLyB0ZXN0X2Nhc2VzLmF2bV8xMS5jb250cmFjdC5Db250cmFjdC50ZXN0X25ld19vcHMoKSAtPiB2b2lkOgp0ZXN0X25ld19vcHM6CiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MTAtMTEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgLy8gZGVmIHRlc3RfbmV3X29wcyhzZWxmKSAtPiBOb25lOgogICAgcHJvdG8gMCAwCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MTItMTMKICAgIC8vICMgb3AgZnVuY3Rpb25zCiAgICAvLyBhc3NlcnQgbm90IG9wLmZhbGNvbl92ZXJpZnkoYiIiLCBiIiIsIG9wLmJ6ZXJvKDE3OTMpKQogICAgcHVzaGludCAxNzkzIC8vIDE3OTMKICAgIGJ6ZXJvCiAgICBwdXNoYnl0ZXMgMHgKICAgIGR1cAogICAgdW5jb3ZlciAyCiAgICBmYWxjb25fdmVyaWZ5CiAgICAhCiAgICBhc3NlcnQKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weToxNAogICAgLy8gYXNzZXJ0IG9wLnN1bWhhc2g1MTIoYiIiKQogICAgcHVzaGJ5dGVzIDB4CiAgICBzdW1oYXNoNTEyCiAgICBsZW4KICAgIGFzc2VydAogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjE1CiAgICAvLyBhc3NlcnQgb3Aub25saW5lX3N0YWtlKCkKICAgIG9ubGluZV9zdGFrZQogICAgYXNzZXJ0CiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MjItMjMKICAgIC8vICMgQmxvY2sKICAgIC8vIGFzc2VydCBub3Qgb3AuQmxvY2suYmxrX3Byb3Bvc2VyKDApLCAicHJvcG9zZXIiCiAgICBpbnRjXzAgLy8gMAogICAgYmxvY2sgQmxrUHJvcG9zZXIKICAgIGdsb2JhbCBaZXJvQWRkcmVzcwogICAgPT0KICAgIGFzc2VydCAvLyBwcm9wb3NlcgogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjI0CiAgICAvLyBhc3NlcnQgb3AuQmxvY2suYmxrX2ZlZXNfY29sbGVjdGVkKDApLCAiZmVlcyBjb2xsZWN0ZWQiCiAgICBpbnRjXzAgLy8gMAogICAgYmxvY2sgQmxrRmVlc0NvbGxlY3RlZAogICAgYXNzZXJ0IC8vIGZlZXMgY29sbGVjdGVkCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MjUKICAgIC8vIGFzc2VydCBvcC5CbG9jay5ibGtfYm9udXMoMCksICJib251cyIKICAgIGludGNfMCAvLyAwCiAgICBibG9jayBCbGtCb251cwogICAgYXNzZXJ0IC8vIGJvbnVzCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MjYKICAgIC8vIGFzc2VydCBvcC5CbG9jay5ibGtfYnJhbmNoKDApLCAiYnJhbmNoIgogICAgaW50Y18wIC8vIDAKICAgIGJsb2NrIEJsa0JyYW5jaAogICAgbGVuCiAgICBhc3NlcnQgLy8gYnJhbmNoCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MjcKICAgIC8vIGFzc2VydCBvcC5CbG9jay5ibGtfZmVlX3NpbmsoMCksICJmZWUgc2luayIKICAgIGludGNfMCAvLyAwCiAgICBibG9jayBCbGtGZWVTaW5rCiAgICBnbG9iYWwgWmVyb0FkZHJlc3MKICAgICE9CiAgICBhc3NlcnQgLy8gZmVlIHNpbmsKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weToyOAogICAgLy8gYXNzZXJ0IG9wLkJsb2NrLmJsa19wcm90b2NvbCgwKSwgInByb3RvY29sIgogICAgaW50Y18wIC8vIDAKICAgIGJsb2NrIEJsa1Byb3RvY29sCiAgICBsZW4KICAgIGFzc2VydCAvLyBwcm90b2NvbAogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjI5CiAgICAvLyBhc3NlcnQgb3AuQmxvY2suYmxrX3R4bl9jb3VudGVyKDApLCAidHhuIGNvdW50ZXIiCiAgICBpbnRjXzAgLy8gMAogICAgYmxvY2sgQmxrVHhuQ291bnRlcgogICAgYXNzZXJ0IC8vIHR4biBjb3VudGVyCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MzAKICAgIC8vIGFzc2VydCBvcC5CbG9jay5ibGtfcHJvcG9zZXJfcGF5b3V0KDApLCAicHJvcG9zZXIgcGF5b3V0IgogICAgaW50Y18wIC8vIDAKICAgIGJsb2NrIEJsa1Byb3Bvc2VyUGF5b3V0CiAgICBhc3NlcnQgLy8gcHJvcG9zZXIgcGF5b3V0CiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MzItMzMKICAgIC8vICMgR2xvYmFsCiAgICAvLyBhc3NlcnQgb3AuR2xvYmFsLnBheW91dHNfZW5hYmxlZCwgInBheW91dHNfZW5hYmxlZCIKICAgIGdsb2JhbCBQYXlvdXRzRW5hYmxlZAogICAgYXNzZXJ0IC8vIHBheW91dHNfZW5hYmxlZAogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjM0CiAgICAvLyBhc3NlcnQgb3AuR2xvYmFsLnBheW91dHNfZ29fb25saW5lX2ZlZSwgInBheW91dHNfZ29fb25saW5lX2ZlZSIKICAgIGdsb2JhbCBQYXlvdXRzR29PbmxpbmVGZWUKICAgIGFzc2VydCAvLyBwYXlvdXRzX2dvX29ubGluZV9mZWUKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTozNQogICAgLy8gYXNzZXJ0IG9wLkdsb2JhbC5wYXlvdXRzX3BlcmNlbnQsICJwYXlvdXRzX3BlcmNlbnQiCiAgICBnbG9iYWwgUGF5b3V0c1BlcmNlbnQKICAgIGFzc2VydCAvLyBwYXlvdXRzX3BlcmNlbnQKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTozNgogICAgLy8gYXNzZXJ0IG9wLkdsb2JhbC5wYXlvdXRzX21pbl9iYWxhbmNlLCAicGF5b3V0c19taW5fYmFsYW5jZSIKICAgIGdsb2JhbCBQYXlvdXRzTWluQmFsYW5jZQogICAgYXNzZXJ0IC8vIHBheW91dHNfbWluX2JhbGFuY2UKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTozNwogICAgLy8gYXNzZXJ0IG9wLkdsb2JhbC5wYXlvdXRzX21heF9iYWxhbmNlLCAicGF5b3V0c19tYXhfYmFsYW5jZSIKICAgIGdsb2JhbCBQYXlvdXRzTWF4QmFsYW5jZQogICAgYXNzZXJ0IC8vIHBheW91dHNfbWF4X2JhbGFuY2UKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTozOS00MAogICAgLy8gIyBWb3RlciBwYXJhbXMKICAgIC8vIGcsIGggPSBvcC5Wb3RlclBhcmFtc0dldC52b3Rlcl9iYWxhbmNlKDApCiAgICBpbnRjXzAgLy8gMAogICAgdm90ZXJfcGFyYW1zX2dldCBWb3RlckJhbGFuY2UKICAgIHBvcG4gMgogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjQxCiAgICAvLyBpLCBqID0gb3AuVm90ZXJQYXJhbXNHZXQudm90ZXJfaW5jZW50aXZlX2VsaWdpYmxlKDApCiAgICBpbnRjXzAgLy8gMAogICAgdm90ZXJfcGFyYW1zX2dldCBWb3RlckluY2VudGl2ZUVsaWdpYmxlCiAgICBwb3BuIDIKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCgp0ZXN0X2Nhc2VzLmF2bV8xMS5jb250cmFjdC5Db250cmFjdC5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CyACAAGIAAFDigABMRtBABuABMK43Yo2GgCOAQACIokxGRREMRhEiAAPI4kxGUAABjEYFEQjiSKJigAAgYEOr4AASU8ChRREgACGFUR1RCLRAjIDEkQi0QNEItEERCLRBRVEItEGMgMTRCLRBxVEItEIRCLRCUQyEkQyE0QyFEQyFUQyFkQidABGAiJ0AUYCiQ==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}