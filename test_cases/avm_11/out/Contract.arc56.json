{
    "name": "Contract",
    "structs": {},
    "methods": [
        {
            "name": "test_new_ops",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        28
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        84
                    ],
                    "errorMessage": "bonus"
                },
                {
                    "pc": [
                        89
                    ],
                    "errorMessage": "branch"
                },
                {
                    "pc": [
                        45
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        31
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        96
                    ],
                    "errorMessage": "fee sink"
                },
                {
                    "pc": [
                        80
                    ],
                    "errorMessage": "fees collected"
                },
                {
                    "pc": [
                        112
                    ],
                    "errorMessage": "payouts_enabled"
                },
                {
                    "pc": [
                        115
                    ],
                    "errorMessage": "payouts_go_online_fee"
                },
                {
                    "pc": [
                        124
                    ],
                    "errorMessage": "payouts_max_balance"
                },
                {
                    "pc": [
                        121
                    ],
                    "errorMessage": "payouts_min_balance"
                },
                {
                    "pc": [
                        118
                    ],
                    "errorMessage": "payouts_percent"
                },
                {
                    "pc": [
                        76
                    ],
                    "errorMessage": "proposer"
                },
                {
                    "pc": [
                        109
                    ],
                    "errorMessage": "proposer payout"
                },
                {
                    "pc": [
                        101
                    ],
                    "errorMessage": "protocol"
                },
                {
                    "pc": [
                        105
                    ],
                    "errorMessage": "txn counter"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAwIDEKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTo5CiAgICAvLyBjbGFzcyBDb250cmFjdChBUkM0Q29udHJhY3QsIGF2bV92ZXJzaW9uPTExKToKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A2CiAgICBwdXNoYnl0ZXMgMHhjMmI4ZGQ4YSAvLyBtZXRob2QgInRlc3RfbmV3X29wcygpdm9pZCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fdGVzdF9uZXdfb3BzX3JvdXRlQDMKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTo5CiAgICAvLyBjbGFzcyBDb250cmFjdChBUkM0Q29udHJhY3QsIGF2bV92ZXJzaW9uPTExKToKICAgIGludGNfMCAvLyAwCiAgICByZXR1cm4KCm1haW5fdGVzdF9uZXdfb3BzX3JvdXRlQDM6CiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MTAKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIHRlc3RfbmV3X29wcwogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdANjoKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTo5CiAgICAvLyBjbGFzcyBDb250cmFjdChBUkM0Q29udHJhY3QsIGF2bV92ZXJzaW9uPTExKToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5hdm1fMTEuY29udHJhY3QuQ29udHJhY3QudGVzdF9uZXdfb3BzKCkgLT4gdm9pZDoKdGVzdF9uZXdfb3BzOgogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjEwLTExCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIC8vIGRlZiB0ZXN0X25ld19vcHMoc2VsZikgLT4gTm9uZToKICAgIHByb3RvIDAgMAogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjEyLTEzCiAgICAvLyAjIG9wIGZ1bmN0aW9ucwogICAgLy8gYXNzZXJ0IG5vdCBvcC5mYWxjb25fdmVyaWZ5KGIiIiwgYiIiLCBvcC5iemVybygxNzkzKSkKICAgIHB1c2hpbnQgMTc5MyAvLyAxNzkzCiAgICBiemVybwogICAgcHVzaGJ5dGVzIDB4CiAgICBkdXAKICAgIHVuY292ZXIgMgogICAgZmFsY29uX3ZlcmlmeQogICAgIQogICAgYXNzZXJ0CiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MTQKICAgIC8vIGFzc2VydCBvcC5zdW1oYXNoNTEyKGIiIikKICAgIHB1c2hieXRlcyAweAogICAgc3VtaGFzaDUxMgogICAgbGVuCiAgICBhc3NlcnQKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weToxNQogICAgLy8gYXNzZXJ0IG9wLm9ubGluZV9zdGFrZSgpCiAgICBvbmxpbmVfc3Rha2UKICAgIGFzc2VydAogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjIyLTIzCiAgICAvLyAjIEJsb2NrCiAgICAvLyBhc3NlcnQgbm90IG9wLkJsb2NrLmJsa19wcm9wb3NlcigwKSwgInByb3Bvc2VyIgogICAgaW50Y18wIC8vIDAKICAgIGJsb2NrIEJsa1Byb3Bvc2VyCiAgICBnbG9iYWwgWmVyb0FkZHJlc3MKICAgID09CiAgICBhc3NlcnQgLy8gcHJvcG9zZXIKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weToyNAogICAgLy8gYXNzZXJ0IG9wLkJsb2NrLmJsa19mZWVzX2NvbGxlY3RlZCgwKSwgImZlZXMgY29sbGVjdGVkIgogICAgaW50Y18wIC8vIDAKICAgIGJsb2NrIEJsa0ZlZXNDb2xsZWN0ZWQKICAgIGFzc2VydCAvLyBmZWVzIGNvbGxlY3RlZAogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjI1CiAgICAvLyBhc3NlcnQgb3AuQmxvY2suYmxrX2JvbnVzKDApLCAiYm9udXMiCiAgICBpbnRjXzAgLy8gMAogICAgYmxvY2sgQmxrQm9udXMKICAgIGFzc2VydCAvLyBib251cwogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjI2CiAgICAvLyBhc3NlcnQgb3AuQmxvY2suYmxrX2JyYW5jaCgwKSwgImJyYW5jaCIKICAgIGludGNfMCAvLyAwCiAgICBibG9jayBCbGtCcmFuY2gKICAgIGxlbgogICAgYXNzZXJ0IC8vIGJyYW5jaAogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjI3CiAgICAvLyBhc3NlcnQgb3AuQmxvY2suYmxrX2ZlZV9zaW5rKDApLCAiZmVlIHNpbmsiCiAgICBpbnRjXzAgLy8gMAogICAgYmxvY2sgQmxrRmVlU2luawogICAgZ2xvYmFsIFplcm9BZGRyZXNzCiAgICAhPQogICAgYXNzZXJ0IC8vIGZlZSBzaW5rCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MjgKICAgIC8vIGFzc2VydCBvcC5CbG9jay5ibGtfcHJvdG9jb2woMCksICJwcm90b2NvbCIKICAgIGludGNfMCAvLyAwCiAgICBibG9jayBCbGtQcm90b2NvbAogICAgbGVuCiAgICBhc3NlcnQgLy8gcHJvdG9jb2wKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weToyOQogICAgLy8gYXNzZXJ0IG9wLkJsb2NrLmJsa190eG5fY291bnRlcigwKSwgInR4biBjb3VudGVyIgogICAgaW50Y18wIC8vIDAKICAgIGJsb2NrIEJsa1R4bkNvdW50ZXIKICAgIGFzc2VydCAvLyB0eG4gY291bnRlcgogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjMwCiAgICAvLyBhc3NlcnQgb3AuQmxvY2suYmxrX3Byb3Bvc2VyX3BheW91dCgwKSwgInByb3Bvc2VyIHBheW91dCIKICAgIGludGNfMCAvLyAwCiAgICBibG9jayBCbGtQcm9wb3NlclBheW91dAogICAgYXNzZXJ0IC8vIHByb3Bvc2VyIHBheW91dAogICAgLy8gYXZtXzExL2NvbnRyYWN0LnB5OjMyLTMzCiAgICAvLyAjIEdsb2JhbAogICAgLy8gYXNzZXJ0IG9wLkdsb2JhbC5wYXlvdXRzX2VuYWJsZWQsICJwYXlvdXRzX2VuYWJsZWQiCiAgICBnbG9iYWwgUGF5b3V0c0VuYWJsZWQKICAgIGFzc2VydCAvLyBwYXlvdXRzX2VuYWJsZWQKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTozNAogICAgLy8gYXNzZXJ0IG9wLkdsb2JhbC5wYXlvdXRzX2dvX29ubGluZV9mZWUsICJwYXlvdXRzX2dvX29ubGluZV9mZWUiCiAgICBnbG9iYWwgUGF5b3V0c0dvT25saW5lRmVlCiAgICBhc3NlcnQgLy8gcGF5b3V0c19nb19vbmxpbmVfZmVlCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MzUKICAgIC8vIGFzc2VydCBvcC5HbG9iYWwucGF5b3V0c19wZXJjZW50LCAicGF5b3V0c19wZXJjZW50IgogICAgZ2xvYmFsIFBheW91dHNQZXJjZW50CiAgICBhc3NlcnQgLy8gcGF5b3V0c19wZXJjZW50CiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MzYKICAgIC8vIGFzc2VydCBvcC5HbG9iYWwucGF5b3V0c19taW5fYmFsYW5jZSwgInBheW91dHNfbWluX2JhbGFuY2UiCiAgICBnbG9iYWwgUGF5b3V0c01pbkJhbGFuY2UKICAgIGFzc2VydCAvLyBwYXlvdXRzX21pbl9iYWxhbmNlCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MzcKICAgIC8vIGFzc2VydCBvcC5HbG9iYWwucGF5b3V0c19tYXhfYmFsYW5jZSwgInBheW91dHNfbWF4X2JhbGFuY2UiCiAgICBnbG9iYWwgUGF5b3V0c01heEJhbGFuY2UKICAgIGFzc2VydCAvLyBwYXlvdXRzX21heF9iYWxhbmNlCiAgICAvLyBhdm1fMTEvY29udHJhY3QucHk6MzktNDAKICAgIC8vICMgVm90ZXIgcGFyYW1zCiAgICAvLyBnLCBoID0gb3AuVm90ZXJQYXJhbXNHZXQudm90ZXJfYmFsYW5jZSgwKQogICAgaW50Y18wIC8vIDAKICAgIHZvdGVyX3BhcmFtc19nZXQgVm90ZXJCYWxhbmNlCiAgICBwb3BuIDIKICAgIC8vIGF2bV8xMS9jb250cmFjdC5weTo0MQogICAgLy8gaSwgaiA9IG9wLlZvdGVyUGFyYW1zR2V0LnZvdGVyX2luY2VudGl2ZV9lbGlnaWJsZSgwKQogICAgaW50Y18wIC8vIDAKICAgIHZvdGVyX3BhcmFtc19nZXQgVm90ZXJJbmNlbnRpdmVFbGlnaWJsZQogICAgcG9wbiAyCiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyACAAExG0EAG4AEwrjdijYaAI4BAAIiQzEZFEQxGESIAA0jQzEZQP/tMRgURCNDigAAgYEOr4AASU8ChRREgACGFUR1RCLRAjIDEkQi0QNEItEERCLRBRVEItEGMgMTRCLRBxVEItEIRCLRCUQyEkQyE0QyFEQyFUQyFkQidABGAiJ0AUYCiQ==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}