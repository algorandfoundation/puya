debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['array'], output_awst=True, output_awst_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
array/uint64.py:236:9 warning: expression result is ignored
info: writing array/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@3
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@2) in block@2
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@2, i#2 <- block@5) in block@5
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@5) in block@5
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@5) in block@5
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Sealing block@6
debug: Terminated block@6
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.quicksort_window
debug: Sealing block@0
array/uint64.py:172:13 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:172:17 debug: encountered already materialized expression (window_left + window_right // 2u), reusing result: tmp%1#0
debug: Terminated block@0
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let left#1: uint64 = undefined while trying to resolve 'left' in block@3
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@3
array/uint64.py:177:15 debug: encountered already materialized expression (arr), reusing result: arr#1
array/uint64.py:177:19 debug: encountered already materialized expression (left), reusing result: left#1
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let pivot#1: uint64 = undefined while trying to resolve 'pivot' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@3
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let left#3: uint64 = undefined while trying to resolve 'left' in block@1
debug: Added left#3 to Phi node: let left#1: uint64 = φ(left#3 <- block@2) in block@2
debug: Added left#2 to Phi node: let left#1: uint64 = φ(left#3 <- block@2, left#2 <- block@4) in block@4
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#2: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Added arr#2 to Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2) in block@2
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) (arr#1) with arr#2
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) (arr#1) with arr#2 in current definition for 2 blocks
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let pivot#2: uint64 = undefined while trying to resolve 'pivot' in block@1
debug: Added pivot#2 to Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2) in block@2
debug: Added pivot#1 to Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) (pivot#1) with pivot#2
debug: Deleting Phi assignment: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4)
debug: Replaced trivial Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) (pivot#1) with pivot#2 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let pivot#3: uint64 = undefined while trying to resolve 'pivot' in block@6
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let right#1: uint64 = undefined while trying to resolve 'right' in block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let arr#3: uint64[]* = undefined while trying to resolve 'arr' in block@6
array/uint64.py:180:23 debug: encountered already materialized expression (arr), reusing result: arr#3
array/uint64.py:180:27 debug: encountered already materialized expression (right), reusing result: right#1
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@6
debug: Added pivot#2 to Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5) in block@5
debug: Added pivot#3 to Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) (pivot#3) with pivot#2
debug: Deleting Phi assignment: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9)
debug: Replaced trivial Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) (pivot#3) with pivot#2 in current definition for 3 blocks
debug: Created Phi assignment: let right#3: uint64 = undefined while trying to resolve 'right' in block@3
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let right#4: uint64 = undefined while trying to resolve 'right' in block@1
debug: Added right#4 to Phi node: let right#3: uint64 = φ(right#4 <- block@2) in block@2
debug: Added right#3 to Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) in block@4
debug: Replacing trivial Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) (right#3) with right#4
debug: Deleting Phi assignment: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4)
debug: Replaced trivial Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) (right#3) with right#4 in current definition for 2 blocks
debug: Added right#4 to Phi node: let right#1: uint64 = φ(right#4 <- block@5) in block@5
debug: Added right#2 to Phi node: let right#1: uint64 = φ(right#4 <- block@5, right#2 <- block@9) in block@9
debug: Added arr#2 to Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5) in block@5
debug: Added arr#3 to Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) (arr#3) with arr#2
debug: Deleting Phi assignment: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9)
debug: Replaced trivial Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) (arr#3) with arr#2 in current definition for 3 blocks
debug: Sealing block@10
debug: Created Phi assignment: let left#4: uint64 = undefined while trying to resolve 'left' in block@6
debug: Added left#1 to Phi node: let left#4: uint64 = φ(left#1 <- block@5) in block@5
debug: Added left#4 to Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) in block@9
debug: Replacing trivial Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) (left#4) with left#1
debug: Deleting Phi assignment: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9)
debug: Replaced trivial Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) (left#4) with left#1 in current definition for 3 blocks
debug: Terminated block@10
debug: Sealing block@11
array/uint64.py:188:41 debug: encountered already materialized expression (arr), reusing result: arr#2
array/uint64.py:188:45 debug: encountered already materialized expression (right), reusing result: right#1
array/uint64.py:188:53 debug: encountered already materialized expression (arr), reusing result: arr#2
array/uint64.py:188:57 debug: encountered already materialized expression (left), reusing result: left#1
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Terminated block@21
debug: Sealing block@1
debug: Added left#0 to Phi node: let left#3: uint64 = φ(left#0 <- block@0) in block@0
debug: Added left#5 to Phi node: let left#3: uint64 = φ(left#0 <- block@0, left#5 <- block@14) in block@14
debug: Added arr#0 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14)
debug: Replaced trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) (arr#2) with arr#0 in current definition for 12 blocks
debug: Added pivot#0 to Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0) in block@0
debug: Added pivot#2 to Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) (pivot#2) with pivot#0
debug: Deleting Phi assignment: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14)
debug: Replaced trivial Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) (pivot#2) with pivot#0 in current definition for 12 blocks
debug: Added right#0 to Phi node: let right#4: uint64 = φ(right#0 <- block@0) in block@0
debug: Added right#5 to Phi node: let right#4: uint64 = φ(right#0 <- block@0, right#5 <- block@14) in block@14
debug: Sealing block@22
debug: Created Phi assignment: let window_left#1: uint64 = undefined while trying to resolve 'window_left' in block@22
debug: Created Phi assignment: let window_left#2: uint64 = undefined while trying to resolve 'window_left' in block@1
debug: Added window_left#0 to Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0) in block@0
debug: Created Phi assignment: let window_left#3: uint64 = undefined while trying to resolve 'window_left' in block@6
debug: Created Phi assignment: let window_left#4: uint64 = undefined while trying to resolve 'window_left' in block@3
debug: Added window_left#2 to Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2) in block@2
debug: Added window_left#4 to Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) in block@4
debug: Replacing trivial Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) (window_left#4) with window_left#2
debug: Deleting Phi assignment: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4)
debug: Replaced trivial Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) (window_left#4) with window_left#2 in current definition for 2 blocks
debug: Added window_left#2 to Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5) in block@5
debug: Added window_left#3 to Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) (window_left#3) with window_left#2
debug: Deleting Phi assignment: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9)
debug: Replaced trivial Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) (window_left#3) with window_left#2 in current definition for 3 blocks
debug: Added window_left#2 to Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) (window_left#2) with window_left#0
debug: Deleting Phi assignment: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14)
debug: Replaced trivial Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) (window_left#2) with window_left#0 in current definition for 12 blocks
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1) in block@1
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12) in block@12
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15) in block@15
debug: Created Phi assignment: let window_left#5: uint64 = undefined while trying to resolve 'window_left' in block@19
debug: Added window_left#0 to Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17) in block@17
debug: Added window_left#0 to Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) (window_left#5) with window_left#0
debug: Deleting Phi assignment: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18)
debug: Replaced trivial Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) (window_left#5) with window_left#0 in current definition for 1 blocks
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19) in block@19
debug: Looking for 'window_left' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let window_left#6: uint64 = undefined while trying to resolve 'window_left' in block@21
debug: Added window_left#6 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#6 <- block@21) in block@21
debug: Created Phi assignment: let right#7: uint64 = undefined while trying to resolve 'right' in block@22
debug: Added right#4 to Phi node: let right#7: uint64 = φ(right#4 <- block@1) in block@1
debug: Added right#1 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12) in block@12
debug: Added right#5 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15) in block@15
debug: Created Phi assignment: let right#8: uint64 = undefined while trying to resolve 'right' in block@19
debug: Added right#1 to Phi node: let right#8: uint64 = φ(right#1 <- block@17) in block@17
debug: Added right#6 to Phi node: let right#8: uint64 = φ(right#1 <- block@17, right#6 <- block@18) in block@18
debug: Added right#8 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15, right#8 <- block@19) in block@19
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let right#9: uint64 = undefined while trying to resolve 'right' in block@21
debug: Added right#9 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15, right#8 <- block@19, right#9 <- block@21) in block@21
debug: Terminated block@22
debug: Sealing block@23
debug: Created Phi assignment: let arr#4: uint64[]* = undefined while trying to resolve 'arr' in block@22
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1) in block@1
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12) in block@12
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15) in block@15
debug: Created Phi assignment: let arr#5: uint64[]* = undefined while trying to resolve 'arr' in block@19
debug: Added arr#0 to Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17) in block@17
debug: Added arr#0 to Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) (arr#5) with arr#0
debug: Deleting Phi assignment: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18)
debug: Replaced trivial Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) (arr#5) with arr#0 in current definition for 1 blocks
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19) in block@19
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let arr#6: uint64[]* = undefined while trying to resolve 'arr' in block@21
debug: Added arr#6 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#6 <- block@21) in block@21
debug: Terminated block@23
debug: Sealing block@24
debug: Created Phi assignment: let left#7: uint64 = undefined while trying to resolve 'left' in block@24
debug: Created Phi assignment: let left#8: uint64 = undefined while trying to resolve 'left' in block@22
debug: Added left#3 to Phi node: let left#8: uint64 = φ(left#3 <- block@1) in block@1
debug: Added left#5 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12) in block@12
debug: Added left#5 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15) in block@15
debug: Created Phi assignment: let left#9: uint64 = undefined while trying to resolve 'left' in block@19
debug: Added left#6 to Phi node: let left#9: uint64 = φ(left#6 <- block@17) in block@17
debug: Added left#6 to Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) in block@18
debug: Replacing trivial Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) (left#9) with left#6
debug: Deleting Phi assignment: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18)
debug: Replaced trivial Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) (left#9) with left#6 in current definition for 1 blocks
debug: Added left#6 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15, left#6 <- block@19) in block@19
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let left#10: uint64 = undefined while trying to resolve 'left' in block@21
debug: Added left#10 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15, left#6 <- block@19, left#10 <- block@21) in block@21
debug: Added left#8 to Phi node: let left#7: uint64 = φ(left#8 <- block@22) in block@22
debug: Added left#8 to Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) in block@23
debug: Replacing trivial Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) (left#7) with left#8
debug: Deleting Phi assignment: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23)
debug: Replaced trivial Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) (left#7) with left#8 in current definition for 1 blocks
debug: Created Phi assignment: let window_right#1: uint64 = undefined while trying to resolve 'window_right' in block@24
debug: Created Phi assignment: let window_right#2: uint64 = undefined while trying to resolve 'window_right' in block@22
debug: Created Phi assignment: let window_right#3: uint64 = undefined while trying to resolve 'window_right' in block@1
debug: Added window_right#0 to Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0) in block@0
debug: Created Phi assignment: let window_right#4: uint64 = undefined while trying to resolve 'window_right' in block@6
debug: Created Phi assignment: let window_right#5: uint64 = undefined while trying to resolve 'window_right' in block@3
debug: Added window_right#3 to Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2) in block@2
debug: Added window_right#5 to Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) in block@4
debug: Replacing trivial Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) (window_right#5) with window_right#3
debug: Deleting Phi assignment: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4)
debug: Replaced trivial Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) (window_right#5) with window_right#3 in current definition for 2 blocks
debug: Added window_right#3 to Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5) in block@5
debug: Added window_right#4 to Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) in block@9
debug: Replacing trivial Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) (window_right#4) with window_right#3
debug: Deleting Phi assignment: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9)
debug: Replaced trivial Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) (window_right#4) with window_right#3 in current definition for 3 blocks
debug: Added window_right#3 to Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) in block@14
debug: Replacing trivial Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) (window_right#3) with window_right#0
debug: Deleting Phi assignment: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14)
debug: Replaced trivial Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) (window_right#3) with window_right#0 in current definition for 12 blocks
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1) in block@1
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12) in block@12
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15) in block@15
debug: Created Phi assignment: let window_right#6: uint64 = undefined while trying to resolve 'window_right' in block@19
debug: Added window_right#0 to Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17) in block@17
debug: Added window_right#0 to Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) (window_right#6) with window_right#0
debug: Deleting Phi assignment: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18)
debug: Replaced trivial Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) (window_right#6) with window_right#0 in current definition for 1 blocks
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19) in block@19
debug: Looking for 'window_right' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let window_right#7: uint64 = undefined while trying to resolve 'window_right' in block@21
debug: Added window_right#7 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#7 <- block@21) in block@21
debug: Added window_right#2 to Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22) in block@22
debug: Added window_right#2 to Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) in block@23
debug: Replacing trivial Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) (window_right#1) with window_right#2
debug: Deleting Phi assignment: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23)
debug: Replaced trivial Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) (window_right#1) with window_right#2 in current definition for 1 blocks
debug: Terminated block@24
debug: Sealing block@25
debug: Created Phi assignment: let arr#7: uint64[]* = undefined while trying to resolve 'arr' in block@24
debug: Added arr#4 to Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22) in block@22
debug: Added arr#4 to Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) in block@23
debug: Replacing trivial Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) (arr#7) with arr#4
debug: Deleting Phi assignment: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23)
debug: Replaced trivial Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) (arr#7) with arr#4 in current definition for 1 blocks
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@21
debug: Added window_left#0 to Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8) in block@8
debug: Added window_left#0 to Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) (window_left#6) with window_left#0
debug: Deleting Phi assignment: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20)
debug: Replacing trivial Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21) (window_left#1) with window_left#0
debug: Deleting Phi assignment: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21)
debug: Replaced trivial Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) (window_left#6) with window_left#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21) (window_left#1) with window_left#0 in current definition for 2 blocks
debug: Added right#1 to Phi node: let right#9: uint64 = φ(right#1 <- block@8) in block@8
debug: Added right#1 to Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) in block@20
debug: Replacing trivial Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) (right#9) with right#1
debug: Deleting Phi assignment: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20)
debug: Replaced trivial Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) (right#9) with right#1 in current definition for 1 blocks
debug: Added arr#0 to Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8) in block@8
debug: Added arr#0 to Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) (arr#6) with arr#0
debug: Deleting Phi assignment: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20)
debug: Replacing trivial Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21) (arr#4) with arr#0
debug: Deleting Phi assignment: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21)
debug: Replaced trivial Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) (arr#6) with arr#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21) (arr#4) with arr#0 in current definition for 4 blocks
debug: Added left#1 to Phi node: let left#10: uint64 = φ(left#1 <- block@8) in block@8
debug: Added left#1 to Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) in block@20
debug: Replacing trivial Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) (left#10) with left#1
debug: Deleting Phi assignment: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20)
debug: Replaced trivial Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) (left#10) with left#1 in current definition for 1 blocks
debug: Added window_right#0 to Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8) in block@8
debug: Added window_right#0 to Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) (window_right#7) with window_right#0
debug: Deleting Phi assignment: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20)
debug: Replacing trivial Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21) (window_right#2) with window_right#0
debug: Deleting Phi assignment: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21)
debug: Replaced trivial Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) (window_right#7) with window_right#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21) (window_right#2) with window_right#0 in current definition for 4 blocks
debug: Building IR for function test_cases.array.uint64.return_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.add_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.pop_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.append_5_and_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.do_something_with_array
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.fixed_size.path_length
debug: Sealing block@0
array/fixed_size.py:99:18 debug: encountered already materialized expression (path), reusing result: path#0
array/fixed_size.py:99:23 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Looking for 'point_idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let point_idx#1: uint64 = undefined while trying to resolve 'point_idx' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'path' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@1
array/fixed_size.py:102:17 debug: encountered already materialized expression (path), reusing result: path#1
array/fixed_size.py:102:22 debug: encountered already materialized expression (point_idx), reusing result: point_idx#1
debug: Looking for 'last_point.x' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.x#1: bytes[8] = undefined while trying to resolve 'last_point.x' in block@1
debug: Looking for 'last_point.y' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.y#1: uint64 = undefined while trying to resolve 'last_point.y' in block@1
debug: Looking for 'last_point.other.a' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.a#1: uint64 = undefined while trying to resolve 'last_point.other.a' in block@1
debug: Looking for 'last_point.other.b' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.b#1: uint64 = undefined while trying to resolve 'last_point.other.b' in block@1
debug: Looking for 'last_point.other.c' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.c#1: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@1
debug: Looking for 'last_point.other.d' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.d#1: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let point.x#1: bytes[8] = undefined while trying to resolve 'point.x' in block@5
debug: Added point.x#0 to Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3) in block@3
debug: Added point.x#0 to Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) (point.x#1) with point.x#0
debug: Deleting Phi assignment: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4)
debug: Replaced trivial Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) (point.x#1) with point.x#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.y#1: uint64 = undefined while trying to resolve 'point.y' in block@5
debug: Added point.y#0 to Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3) in block@3
debug: Added point.y#0 to Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) (point.y#1) with point.y#0
debug: Deleting Phi assignment: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4)
debug: Replaced trivial Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) (point.y#1) with point.y#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.a#1: uint64 = undefined while trying to resolve 'point.other.a' in block@5
debug: Added point.other.a#0 to Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3) in block@3
debug: Added point.other.a#0 to Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) (point.other.a#1) with point.other.a#0
debug: Deleting Phi assignment: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) (point.other.a#1) with point.other.a#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.b#1: uint64 = undefined while trying to resolve 'point.other.b' in block@5
debug: Added point.other.b#0 to Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3) in block@3
debug: Added point.other.b#0 to Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) (point.other.b#1) with point.other.b#0
debug: Deleting Phi assignment: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) (point.other.b#1) with point.other.b#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.c#1: bytes[32] = undefined while trying to resolve 'point.other.c' in block@5
debug: Added point.other.c#0 to Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3) in block@3
debug: Added point.other.c#0 to Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) (point.other.c#1) with point.other.c#0
debug: Deleting Phi assignment: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) (point.other.c#1) with point.other.c#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.d#1: bytes[16] = undefined while trying to resolve 'point.other.d' in block@5
debug: Added point.other.d#0 to Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3) in block@3
debug: Added point.other.d#0 to Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) (point.other.d#1) with point.other.d#0
debug: Deleting Phi assignment: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) (point.other.d#1) with point.other.d#0 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.x#2: bytes[8] = undefined while trying to resolve 'last_point.x' in block@5
debug: Added last_point.x#1 to Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3) in block@3
debug: Added last_point.x#1 to Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) (last_point.x#2) with last_point.x#1
debug: Deleting Phi assignment: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) (last_point.x#2) with last_point.x#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.y#2: uint64 = undefined while trying to resolve 'last_point.y' in block@5
debug: Added last_point.y#1 to Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3) in block@3
debug: Added last_point.y#1 to Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) (last_point.y#2) with last_point.y#1
debug: Deleting Phi assignment: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) (last_point.y#2) with last_point.y#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.a#2: uint64 = undefined while trying to resolve 'last_point.other.a' in block@5
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3) in block@3
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) (last_point.other.a#2) with last_point.other.a#1
debug: Deleting Phi assignment: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) (last_point.other.a#2) with last_point.other.a#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.b#2: uint64 = undefined while trying to resolve 'last_point.other.b' in block@5
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3) in block@3
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) (last_point.other.b#2) with last_point.other.b#1
debug: Deleting Phi assignment: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) (last_point.other.b#2) with last_point.other.b#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.c#2: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@5
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3) in block@3
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) (last_point.other.c#2) with last_point.other.c#1
debug: Deleting Phi assignment: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) (last_point.other.c#2) with last_point.other.c#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.d#2: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@5
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3) in block@3
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) (last_point.other.d#2) with last_point.other.d#1
debug: Deleting Phi assignment: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) (last_point.other.d#2) with last_point.other.d#1 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@8
debug: Created Phi assignment: let length#2: uint64 = undefined while trying to resolve 'length' in block@5
debug: Looking for 'length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let length#3: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#3 to Phi node: let length#2: uint64 = φ(length#3 <- block@3) in block@3
debug: Added length#3 to Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) in block@4
debug: Replacing trivial Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) (length#2) with length#3
debug: Deleting Phi assignment: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4)
debug: Replaced trivial Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) (length#2) with length#3 in current definition for 1 blocks
debug: Added length#3 to Phi node: let length#1: uint64 = φ(length#3 <- block@6) in block@6
debug: Added length#3 to Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) (length#1) with length#3
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) (length#1) with length#3 in current definition for 1 blocks
debug: Created Phi assignment: let dx#2: uint64 = undefined while trying to resolve 'dx' in block@8
debug: Created Phi assignment: let dx#3: uint64 = undefined while trying to resolve 'dx' in block@5
debug: Added dx#0 to Phi node: let dx#3: uint64 = φ(dx#0 <- block@3) in block@3
debug: Added dx#1 to Phi node: let dx#3: uint64 = φ(dx#0 <- block@3, dx#1 <- block@4) in block@4
debug: Added dx#3 to Phi node: let dx#2: uint64 = φ(dx#3 <- block@6) in block@6
debug: Added dx#3 to Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) (dx#2) with dx#3
debug: Deleting Phi assignment: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7)
debug: Replaced trivial Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) (dx#2) with dx#3 in current definition for 1 blocks
debug: Created Phi assignment: let dy#2: uint64 = undefined while trying to resolve 'dy' in block@8
debug: Added dy#0 to Phi node: let dy#2: uint64 = φ(dy#0 <- block@6) in block@6
debug: Added dy#1 to Phi node: let dy#2: uint64 = φ(dy#0 <- block@6, dy#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@1
debug: Added point_idx#0 to Phi node: let point_idx#1: uint64 = φ(point_idx#0 <- block@0) in block@0
debug: Added point_idx#2 to Phi node: let point_idx#1: uint64 = φ(point_idx#0 <- block@0, point_idx#2 <- block@9) in block@9
debug: Added path#0 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0) in block@0
debug: Created Phi assignment: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@8
debug: Created Phi assignment: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@5
debug: Added path#1 to Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3) in block@3
debug: Added path#1 to Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) (path#3) with path#1
debug: Deleting Phi assignment: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4)
debug: Replaced trivial Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) (path#3) with path#1 in current definition for 1 blocks
debug: Added path#1 to Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6) in block@6
debug: Added path#1 to Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) (path#2) with path#1
debug: Deleting Phi assignment: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7)
debug: Replaced trivial Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) (path#2) with path#1 in current definition for 1 blocks
debug: Added path#1 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) (path#1) with path#0
debug: Deleting Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9)
debug: Replaced trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) (path#1) with path#0 in current definition for 9 blocks
debug: Added last_point.x#0 to Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.x#3: bytes[8] = undefined while trying to resolve 'last_point.x' in block@8
debug: Added last_point.x#1 to Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6) in block@6
debug: Added last_point.x#1 to Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) (last_point.x#3) with last_point.x#1
debug: Deleting Phi assignment: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) (last_point.x#3) with last_point.x#1 in current definition for 1 blocks
debug: Added last_point.x#1 to Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) (last_point.x#1) with last_point.x#0
debug: Deleting Phi assignment: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) (last_point.x#1) with last_point.x#0 in current definition for 9 blocks
debug: Added last_point.y#0 to Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.y#3: uint64 = undefined while trying to resolve 'last_point.y' in block@8
debug: Added last_point.y#1 to Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6) in block@6
debug: Added last_point.y#1 to Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) (last_point.y#3) with last_point.y#1
debug: Deleting Phi assignment: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) (last_point.y#3) with last_point.y#1 in current definition for 1 blocks
debug: Added last_point.y#1 to Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) (last_point.y#1) with last_point.y#0
debug: Deleting Phi assignment: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) (last_point.y#1) with last_point.y#0 in current definition for 9 blocks
debug: Added last_point.other.a#0 to Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.a#3: uint64 = undefined while trying to resolve 'last_point.other.a' in block@8
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6) in block@6
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) (last_point.other.a#3) with last_point.other.a#1
debug: Deleting Phi assignment: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) (last_point.other.a#3) with last_point.other.a#1 in current definition for 1 blocks
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) (last_point.other.a#1) with last_point.other.a#0
debug: Deleting Phi assignment: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) (last_point.other.a#1) with last_point.other.a#0 in current definition for 9 blocks
debug: Added last_point.other.b#0 to Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.b#3: uint64 = undefined while trying to resolve 'last_point.other.b' in block@8
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6) in block@6
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) (last_point.other.b#3) with last_point.other.b#1
debug: Deleting Phi assignment: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) (last_point.other.b#3) with last_point.other.b#1 in current definition for 1 blocks
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) (last_point.other.b#1) with last_point.other.b#0
debug: Deleting Phi assignment: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) (last_point.other.b#1) with last_point.other.b#0 in current definition for 9 blocks
debug: Added last_point.other.c#0 to Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.c#3: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@8
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6) in block@6
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) (last_point.other.c#3) with last_point.other.c#1
debug: Deleting Phi assignment: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) (last_point.other.c#3) with last_point.other.c#1 in current definition for 1 blocks
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) (last_point.other.c#1) with last_point.other.c#0
debug: Deleting Phi assignment: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) (last_point.other.c#1) with last_point.other.c#0 in current definition for 9 blocks
debug: Added last_point.other.d#0 to Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.d#3: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@8
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6) in block@6
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) (last_point.other.d#3) with last_point.other.d#1
debug: Deleting Phi assignment: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) (last_point.other.d#3) with last_point.other.d#1 in current definition for 1 blocks
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) (last_point.other.d#1) with last_point.other.d#0
debug: Deleting Phi assignment: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) (last_point.other.d#1) with last_point.other.d#0 in current definition for 9 blocks
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#4 to Phi node: let length#3: uint64 = φ(length#0 <- block@0, length#4 <- block@9) in block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Building IR for function test_cases.array.uint64.Contract.test_array
debug: Sealing block@0
array/uint64.py:12:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:12:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:12:16 debug: encountered already materialized expression (arr.length - 1u), reusing result: tmp%5#0
array/uint64.py:16:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:16:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:16:16 debug: encountered already materialized expression (arr.length - 1u), reusing result: tmp%11#0
array/uint64.py:20:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:20:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:20:16 debug: encountered already materialized expression (arr.length - 1u), reusing result: tmp%17#0
array/uint64.py:21:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:21:20 debug: encountered already materialized expression (0u), reusing result: 0u
array/uint64.py:25:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:25:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:25:16 debug: encountered already materialized expression (arr.length - 1u), reusing result: tmp%25#0
array/uint64.py:29:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:29:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:29:16 debug: encountered already materialized expression (arr.length - 1u), reusing result: tmp%31#0
array/uint64.py:33:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:33:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:33:16 debug: encountered already materialized expression (arr.length - 1u), reusing result: tmp%37#0
array/uint64.py:35:9 debug: encountered already materialized expression (test_cases.array.uint64.return_ref(arr, arr)), reusing result: tmp%40#0
array/uint64.py:35:30 debug: encountered already materialized expression (0u), reusing result: 0u
array/uint64.py:35:9 debug: encountered already materialized expression (test_cases.array.uint64.return_ref(arr, arr)), reusing result: tmp%40#0
array/uint64.py:35:30 debug: encountered already materialized expression (0u), reusing result: 0u
array/uint64.py:37:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:37:20 debug: encountered already materialized expression (0u), reusing result: 0u
array/uint64.py:38:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:38:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:38:16 debug: encountered already materialized expression (arr.length - 2u), reusing result: tmp%47#0
array/uint64.py:39:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:39:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:39:16 debug: encountered already materialized expression (arr.length - 1u), reusing result: tmp%51#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_extend
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_multiple_append
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.overhead
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_too_long
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array#1: uint64[]* = undefined while trying to resolve 'array' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added array#0 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0
debug: Deleting Phi assignment: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array#1: uint64[]* = undefined while trying to resolve 'array' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added array#0 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0
debug: Deleting Phi assignment: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0 in current definition for 3 blocks
debug: Sealing block@4
array/uint64.py:84:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:84:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:84:16 debug: encountered already materialized expression (array.length - 1u), reusing result: tmp%3#0
array/uint64.py:87:16 debug: encountered already materialized expression (array2), reusing result: array2#0
array/uint64.py:87:16 debug: encountered already materialized expression (array2), reusing result: array2#0
array/uint64.py:87:16 debug: encountered already materialized expression (array2.length - 1u), reusing result: tmp%9#0
array/uint64.py:92:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:92:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:92:16 debug: encountered already materialized expression (array.length - 1u), reusing result: tmp%17#0
array/uint64.py:93:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:93:22 debug: encountered already materialized expression (4u), reusing result: 4u
array/uint64.py:94:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:94:22 debug: encountered already materialized expression (5u), reusing result: 5u
array/uint64.py:95:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:95:22 debug: encountered already materialized expression (6u), reusing result: 6u
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Sealing block@0
array/uint64.py:103:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:103:20 debug: encountered already materialized expression (0u), reusing result: 0u
array/uint64.py:104:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:104:20 debug: encountered already materialized expression (1u), reusing result: 1u
array/uint64.py:105:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:105:20 debug: encountered already materialized expression (2u), reusing result: 2u
array/uint64.py:106:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:106:20 debug: encountered already materialized expression (3u), reusing result: 3u
array/uint64.py:107:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:107:20 debug: encountered already materialized expression (4u), reusing result: 4u
array/uint64.py:108:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:108:20 debug: encountered already materialized expression (5u), reusing result: 5u
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_allocations
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_iteration
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'val' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let val#1: uint64 = undefined while trying to resolve 'val' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added val#0 to Phi node: let val#1: uint64 = φ(val#0 <- block@0) in block@0
debug: Added val#2 to Phi node: let val#1: uint64 = φ(val#0 <- block@0, val#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let last#1: uint64 = undefined while trying to resolve 'last' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@7) in block@7
debug: Added last#0 to Phi node: let last#1: uint64 = φ(last#0 <- block@4) in block@4
debug: Added last#2 to Phi node: let last#1: uint64 = φ(last#0 <- block@4, last#2 <- block@7) in block@7
debug: Sealing block@8
debug: Created Phi assignment: let arr#2: uint64[]* = undefined while trying to resolve 'arr' in block@5
debug: Added arr#0 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4) in block@4
debug: Added arr#2 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7)
debug: Replaced trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) (arr#2) with arr#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@8) in block@8
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@8, item_index_internal%1#2 <- block@11) in block@11
debug: Sealing block@12
debug: Created Phi assignment: let arr#3: uint64[]* = undefined while trying to resolve 'arr' in block@9
debug: Added arr#0 to Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8) in block@8
debug: Added arr#3 to Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) in block@11
debug: Replacing trivial Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) (arr#3) with arr#0
debug: Deleting Phi assignment: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11)
debug: Replaced trivial Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) (arr#3) with arr#0 in current definition for 3 blocks
debug: Terminated block@12
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@13
debug: Looking for 'reverse_index_internal%2' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let reverse_index_internal%2#1: uint64 = undefined while trying to resolve 'reverse_index_internal%2' in block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let last#3: uint64 = undefined while trying to resolve 'last' in block@13
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@13
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12) in block@12
debug: Added item_index_internal%2#1 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) in block@15
debug: Replacing trivial Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) (item_index_internal%2#1) with item_index_internal%2#0
debug: Deleting Phi assignment: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15)
debug: Replaced trivial Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) (item_index_internal%2#1) with item_index_internal%2#0 in current definition for 3 blocks
debug: Added reverse_index_internal%2#0 to Phi node: let reverse_index_internal%2#1: uint64 = φ(reverse_index_internal%2#0 <- block@12) in block@12
debug: Added reverse_index_internal%2#2 to Phi node: let reverse_index_internal%2#1: uint64 = φ(reverse_index_internal%2#0 <- block@12, reverse_index_internal%2#2 <- block@15) in block@15
debug: Created Phi assignment: let last#5: uint64 = undefined while trying to resolve 'last' in block@9
debug: Added last#1 to Phi node: let last#5: uint64 = φ(last#1 <- block@8) in block@8
debug: Added last#5 to Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) in block@11
debug: Replacing trivial Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) (last#5) with last#1
debug: Deleting Phi assignment: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11)
debug: Replaced trivial Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) (last#5) with last#1 in current definition for 3 blocks
debug: Added last#1 to Phi node: let last#3: uint64 = φ(last#1 <- block@12) in block@12
debug: Added last#4 to Phi node: let last#3: uint64 = φ(last#1 <- block@12, last#4 <- block@15) in block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Looking for 'arc4_arr' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let arc4_arr#1: bytes = undefined while trying to resolve 'arc4_arr' in block@17
debug: Looking for 'native_arr' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let native_arr#1: bytes[8][]* = undefined while trying to resolve 'native_arr' in block@17
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@17
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@16) in block@16
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@16, i#2 <- block@19) in block@19
debug: Added arc4_arr#0 to Phi node: let arc4_arr#1: bytes = φ(arc4_arr#0 <- block@16) in block@16
debug: Added arc4_arr#2 to Phi node: let arc4_arr#1: bytes = φ(arc4_arr#0 <- block@16, arc4_arr#2 <- block@19) in block@19
debug: Added native_arr#0 to Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16) in block@16
debug: Added native_arr#1 to Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) in block@19
debug: Replacing trivial Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) (native_arr#1) with native_arr#0
debug: Deleting Phi assignment: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19)
debug: Replaced trivial Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) (native_arr#1) with native_arr#0 in current definition for 3 blocks
debug: Sealing block@20
debug: Terminated block@20
debug: Building IR for function test_cases.array.uint64.Contract.test_quicksort
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'rnd' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let rnd#1: uint64[]* = undefined while trying to resolve 'rnd' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added rnd#0 to Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0) in block@0
debug: Added rnd#1 to Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) (rnd#1) with rnd#0
debug: Deleting Phi assignment: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3)
debug: Replaced trivial Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) (rnd#1) with rnd#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let last#1: uint64 = undefined while trying to resolve 'last' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added last#0 to Phi node: let last#1: uint64 = φ(last#0 <- block@4) in block@4
debug: Added last#2 to Phi node: let last#1: uint64 = φ(last#0 <- block@4, last#2 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function test_cases.array.uint64.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.fixed_size.path_length
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_5_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.fixed_size.path_length
debug: removing unused subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: removing unused subroutine test_cases.array.uint64.Contract.overhead
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: removing unused subroutine test_cases.array.uint64.Contract.test_allocations
debug: removing unused subroutine test_cases.array.uint64.Contract.test_iteration
debug: removing unused subroutine test_cases.array.uint64.Contract.test_quicksort
debug: removing unused subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'path' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@1
array/fixed_size.py:37:20 debug: encountered already materialized expression (path), reusing result: path#1
array/fixed_size.py:37:25 debug: encountered already materialized expression (i), reusing result: i#1
array/fixed_size.py:38:20 debug: encountered already materialized expression (path), reusing result: path#1
array/fixed_size.py:38:25 debug: encountered already materialized expression (i), reusing result: i#1
array/fixed_size.py:39:20 debug: encountered already materialized expression (path), reusing result: path#1
array/fixed_size.py:39:25 debug: encountered already materialized expression (i), reusing result: i#1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added path#0 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0) in block@0
debug: Added path#1 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) (path#1) with path#0
debug: Deleting Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3)
debug: Replaced trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) (path#1) with path#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bool[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'count' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let count#1: uint64 = undefined while trying to resolve 'count' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@9) in block@9
debug: Added count#0 to Phi node: let count#1: uint64 = φ(count#0 <- block@4) in block@4
debug: Created Phi assignment: let count#3: uint64 = undefined while trying to resolve 'count' in block@8
debug: Added count#1 to Phi node: let count#3: uint64 = φ(count#1 <- block@6) in block@6
debug: Added count#2 to Phi node: let count#3: uint64 = φ(count#1 <- block@6, count#2 <- block@7) in block@7
debug: Added count#3 to Phi node: let count#1: uint64 = φ(count#0 <- block@4, count#3 <- block@9) in block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bytes[8][]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'count' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let count#1: uint64 = undefined while trying to resolve 'count' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@9) in block@9
debug: Added count#0 to Phi node: let count#1: uint64 = φ(count#0 <- block@4) in block@4
debug: Created Phi assignment: let count#3: uint64 = undefined while trying to resolve 'count' in block@8
debug: Added count#1 to Phi node: let count#3: uint64 = φ(count#1 <- block@6) in block@6
debug: Added count#2 to Phi node: let count#3: uint64 = φ(count#1 <- block@6, count#2 <- block@7) in block@7
debug: Added count#3 to Phi node: let count#1: uint64 = φ(count#0 <- block@4, count#3 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let arr#2: bytes[8][]* = undefined while trying to resolve 'arr' in block@5
debug: Added arr#0 to Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4) in block@4
debug: Created Phi assignment: let arr#3: bytes[8][]* = undefined while trying to resolve 'arr' in block@8
debug: Added arr#2 to Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6) in block@6
debug: Added arr#2 to Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) (arr#3) with arr#2
debug: Deleting Phi assignment: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7)
debug: Replaced trivial Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) (arr#3) with arr#2 in current definition for 1 blocks
debug: Added arr#2 to Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9)
debug: Replaced trivial Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) (arr#2) with arr#0 in current definition for 5 blocks
debug: Terminated block@10
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Sealing block@0
array/fixed_size.py:88:9 debug: encountered already materialized expression ('count'), reusing result: "count"
debug: Terminated block@0
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_5_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_5_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.fixed_size.path_length
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.__init__
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.test_array
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.xtra
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Output IR to array/out/Contract.ir/Contract.approval.0.ssa.ir
debug: Output IR to array/out/Contract.ir/Contract.clear.0.ssa.ir
debug: optimizing approval program of test_cases.array.uint64.Contract at level 1
debug: Begin optimization pass 1/100
array/uint64.py:168 debug: function is auto-recursive: test_cases.array.uint64.quicksort_window
debug: marking single-use function test_cases.array.uint64.return_ref for inlining
debug: marking single-use function test_cases.array.uint64.pop_x for inlining
debug: marking trivial method test_cases.array.uint64.Contract.overhead as inlineable
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%15#0 NoOp) to (! tmp%15#0)
debug: Simplified (== tmp%19#0 NoOp) to (! tmp%19#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== tmp%27#0 NoOp) to (! tmp%27#0)
debug: Simplified (== tmp%31#0 NoOp) to (! tmp%31#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%45#0 0u) to (! tmp%45#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@15 from switch tmp%44#0 {0u => block@16, * => block@17} to goto_nth [block@16][tmp%44#0] else goto block@17
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@15 from goto_nth [block@16][tmp%44#0] else goto block@17 to goto tmp%44#0 ? block@17 : block@16
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@15
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@14 with block@13 in block@19
debug: Merged linear block@14 into block@13
debug: Replaced predecessor block@18 with block@17 in block@19
debug: Merged linear block@18 into block@17
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@13
debug: Removed empty block: block@17
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: window_left#0, left#0
debug: Found equivalence set: window_right#0, right#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== right#1 0u) to (! right#1)
debug: Simplified (== right#1 0u) to (! right#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@2 : block@22 to goto block@2
debug: simplified branch on !tmp%6#0 by swapping zero and non-zero targets
debug: simplified terminator of block@7 from goto tmp%6#0 ? block@8 : block@9 to goto right#1 ? block@9 : block@8
debug: simplified branch on !tmp%10#0 by swapping zero and non-zero targets
debug: simplified terminator of block@11 from goto tmp%10#0 ? block@12 : block@13 to goto right#1 ? block@13 : block@12
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Removed empty block: block@8
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Removed empty block: block@20
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_5_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__algopy_default_create in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:62:6 debug: inlining call to test_cases.array.uint64.Contract.overhead in test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%15#0 NoOp) to (! tmp%15#0)
debug: Simplified (== tmp%19#0 NoOp) to (! tmp%19#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== tmp%27#0 NoOp) to (! tmp%27#0)
debug: Simplified (== tmp%31#0 NoOp) to (! tmp%31#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%45#0 0u) to (! tmp%45#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@14 from switch tmp%44#0 {0u => block@15, * => block@16} to goto_nth [block@15][tmp%44#0] else goto block@16
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@14 from goto_nth [block@15][tmp%44#0] else goto block@16 to goto tmp%44#0 ? block@16 : block@15
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@21 with block@5 in block@22
debug: Merged linear block@21 into block@5
debug: Merged linear block@22 into block@5
debug: Replaced predecessor block@13 with block@12 in block@18
debug: Merged linear block@13 into block@12
debug: Replaced predecessor block@19 with block@15 in block@20
debug: Merged linear block@19 into block@15
debug: Merged linear block@20 into block@15
debug: Replaced predecessor block@17 with block@16 in block@18
debug: Merged linear block@17 into block@16
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@12
debug: Removed empty block: block@16
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
array/uint64.py:23:9 debug: inlining call to test_cases.array.uint64.pop_x in test_cases.array.uint64.Contract.test_array
array/uint64.py:35:9 debug: inlining call to test_cases.array.uint64.return_ref in test_cases.array.uint64.Contract.test_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0, arr#1, arr#2, arr2#0, tmp%40#0
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@6 with block@4 in block@7
debug: Merged linear block@6 into block@4
debug: Merged linear block@7 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: Found equivalence set: slot%1#0, arr2#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, array#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, array#0
debug: Found equivalence set: slot%1#0, array2#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%24#0 0u) to (! tmp%24#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, alloc_test#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: Found equivalence set: value#0, last#2
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: Found equivalence set: item_index_internal%1#1, idx#0
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: Found equivalence set: value#2, last#4
debug: Found equivalence set: array_data%0#0, arc4_arr#0
debug: Found equivalence set: slot%1#0, native_arr#0
debug: Found equivalence set: concat_result%0#0, arc4_arr#2
debug: Found equivalence set: concat_result%1#0, combined_arr#0
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%2#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (* 0u 8u) to 0u
debug: couldn't simplify (extract3 array_head_and_tail%0#0 0u 8u) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Simplified (* 4u 8u) to 32u
debug: couldn't simplify (extract3 array_head_and_tail%1#0 32u 8u) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Simplified (* 5u 8u) to 40u
debug: couldn't simplify (extract3 array_head_and_tail%2#0 40u 8u) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Simplified (* 9u 8u) to 72u
debug: couldn't simplify (extract3 array_head_and_tail%3#0 72u 8u) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Simplified (extract3 array_head_and_tail%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) array_head_and_tail%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 array_head_and_tail%1#0 32u 8u) // on error: Index access is out of bounds to ((extract 32 8) array_head_and_tail%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 array_head_and_tail%2#0 40u 8u) // on error: Index access is out of bounds to ((extract 40 8) array_head_and_tail%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 array_head_and_tail%3#0 72u 8u) // on error: Index access is out of bounds to ((extract 72 8) array_head_and_tail%3#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@11 with block@10 in block@9
debug: Merged linear block@11 into block@10
debug: Replaced predecessor block@15 with block@14 in block@13
debug: Merged linear block@15 into block@14
debug: Replaced predecessor block@19 with block@18 in block@17
debug: Merged linear block@19 into block@18
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let val_as_bytes%1#0: bytes[8] = (itob i#1) with copy of existing registers (Register(source_location=array/uint64.py:141:28-42, ir_type=bytes[8], name='val_as_bytes%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%1#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:145:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%2#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:145:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%3#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:145:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, data%0#0, val_as_bytes%1#0
debug: Found equivalence set: array_head_and_tail%0#0, array_head_and_tail%1#0, array_head_and_tail%2#0, array_head_and_tail%3#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, rnd#0
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Found equivalence set: array_length%0#0, reverse_index_internal%1#0
debug: Found equivalence set: value#0, last#2
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi b#0) to (getbyte tmp%0#0 item_index_internal%0#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Output IR to array/out/Contract.ir/Contract.approval.1.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking trivial method test_cases.array.uint64.Contract.overhead as inlineable
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:62:6 debug: inlining call to test_cases.array.uint64.Contract.overhead in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%34#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%43#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@23 with block@6 in block@24
debug: Merged linear block@23 into block@6
debug: Replaced predecessor block@24 with block@6 in block@20
debug: Merged linear block@24 into block@6
debug: Replaced predecessor block@21 with block@16 in block@22
debug: Merged linear block@21 into block@16
debug: Replaced predecessor block@22 with block@16 in block@20
debug: Merged linear block@22 into block@16
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%3#0, slot_contents%4#0, slot_contents%5#0
debug: Found equivalence set: updated_array%0#0, slot_contents%6#0
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%13#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_5_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, slot_contents%0#0, slot_contents%1#0
debug: Found equivalence set: extended%0#0, slot_contents%2#0, slot_contents%3#0, slot_contents%4#0
debug: Found equivalence set: slot_contents%5#0, slot_contents%6#0, slot_contents%7#0, slot_contents%8#0
debug: Found equivalence set: extended%1#0, slot_contents%9#0, slot_contents%10#0, slot_contents%11#0, slot_contents%12#0
debug: Found equivalence set: slot_contents%13#0, slot_contents%14#0, slot_contents%15#0
debug: Found equivalence set: slot_contents%16#0, slot_contents%17#0, slot_contents%18#0, slot_contents%19#0
debug: Found equivalence set: extended%2#0, slot_contents%20#0, slot_contents%21#0, slot_contents%22#0, slot_contents%0#2
debug: Found equivalence set: extended%0#1, slot_contents%1#1
debug: Found equivalence set: extended%1#1, slot_contents%23#0, slot_contents%24#0
debug: Found equivalence set: updated_array%0#0, slot_contents%25#0, slot_contents%26#0, slot_contents%27#0, slot_contents%28#0, slot_contents%29#0, slot_contents%30#0
debug: Copy propagation made 30 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%1#0, slot_contents%0#0
debug: Found equivalence set: extended%0#0, slot_contents%1#0
debug: Found equivalence set: extended%1#0, slot_contents%2#0
debug: Found equivalence set: extended%2#0, slot_contents%3#0
debug: Found equivalence set: extended%3#0, slot_contents%5#0
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: extended%0#0, slot_contents%1#0
debug: Found equivalence set: extended%1#0, slot_contents%2#0
debug: Found equivalence set: extended%2#0, slot_contents%3#0
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%1#0, slot_contents%2#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: extended%1#0, slot_contents%3#0, slot_contents%4#0, slot_contents%5#0, slot_contents%10#0
debug: Found equivalence set: slot_contents%6#0, slot_contents%7#0, slot_contents%8#0, slot_contents%9#0
debug: Found equivalence set: extended%2#0, slot_contents%11#0, slot_contents%13#0, slot_contents%14#0, slot_contents%15#0, slot_contents%16#0, slot_contents%17#0
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: Found equivalence set: slot_contents%3#0, slot_contents%4#0, slot_contents%5#0, slot_contents%6#0, slot_contents%7#0, slot_contents%8#0, slot_contents%9#0
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%1#0, slot_contents%2#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable continue_looping%3#0
debug: Removing unused variable item_offset%0#0
debug: Removing unused variable item_offset%1#0
debug: Removing unused variable item_offset%2#0
debug: Removing unused variable item_offset%3#0
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 32 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 40 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 72 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%1#0, slot_contents%2#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable b#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.uint64.Contract.overhead
debug: removing unused subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Unused subroutines removed
debug: Output IR to array/out/Contract.ir/Contract.approval.2.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_5_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 32 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 40 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 72 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.uint64.Contract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.uint64.Contract
debug: Output IR to array/out/Contract.ir/Contract.approval.3.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.array.uint64.Contract
debug: Output IR to array/out/Contract.ir/Contract.clear.1.ssa.array.ir
debug: optimizing approval program of test_cases.array.uint64.Contract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%1#1, pivot#0
debug: Found equivalence set: array%sub_item%3#1, tmp%2#0
debug: Found equivalence set: array%sub_item%5#1, tmp%4#0
debug: Found equivalence set: array%sub_item%7#1, tmp%8#0
debug: Found equivalence set: array%sub_item%9#1, tmp%9#0
debug: Found equivalence set: array%updated_array%0#1, updated_array%0#0
debug: Found equivalence set: array%updated_array%1#1, updated_array%1#0
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 array%value%0#1 0u 8u) to (extract3 slot_contents%0#0 array%bytes_index%0#1 8u)
debug: Simplified (btoi array%sub_item%0#1) to (extract_uint64 slot_contents%0#0 array%bytes_index%0#1)
debug: Simplified (extract3 array%value%1#1 0u 8u) to (extract3 slot_contents%1#0 array%bytes_index%1#1 8u)
debug: Simplified (btoi array%sub_item%2#1) to (extract_uint64 slot_contents%1#0 array%bytes_index%1#1)
debug: Simplified (extract3 array%value%2#1 0u 8u) to (extract3 slot_contents%2#0 array%bytes_index%2#1 8u)
debug: Simplified (btoi array%sub_item%4#1) to (extract_uint64 slot_contents%2#0 array%bytes_index%2#1)
debug: Simplified (extract3 array%value%3#1 0u 8u) to (extract3 slot_contents%3#0 array%bytes_index%3#1 8u)
debug: Simplified (btoi array%sub_item%6#1) to (extract_uint64 slot_contents%3#0 array%bytes_index%3#1)
debug: Simplified (extract3 array%value%4#1 0u 8u) to (extract3 slot_contents%3#0 array%bytes_index%4#1 8u)
debug: Simplified (btoi array%sub_item%8#1) to (extract_uint64 slot_contents%3#0 array%bytes_index%4#1)
debug: Simplified (concat 0x array%sub_item%10#1) to array%sub_item%10#1
debug: Simplified (concat 0x array%sub_item%11#1) to array%sub_item%11#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%sub_item%0#1: bytes = (extract3 slot_contents%0#0 array%bytes_index%0#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:172:12-50, ir_type=bytes, name='array%value%0', version=1),)
debug: Replacing redundant declaration let array%sub_item%2#1: bytes = (extract3 slot_contents%1#0 array%bytes_index%1#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:177:14-23, ir_type=bytes, name='array%value%1', version=1),)
debug: Replacing redundant declaration let array%sub_item%4#1: bytes = (extract3 slot_contents%2#0 array%bytes_index%2#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:180:22-32, ir_type=bytes, name='array%value%2', version=1),)
debug: Replacing redundant declaration let array%sub_item%6#1: bytes = (extract3 slot_contents%3#0 array%bytes_index%3#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:188:40-50, ir_type=bytes, name='array%value%3', version=1),)
debug: Replacing redundant declaration let array%sub_item%8#1: bytes = (extract3 slot_contents%3#0 array%bytes_index%4#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:188:52-61, ir_type=bytes, name='array%value%4', version=1),)
debug: Replacing redundant declaration let array%bytes_index%5#1: uint64 = (* left#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:188:52-61, ir_type=uint64, name='array%bytes_index%4', version=1),)
debug: Replacing redundant declaration let array%bytes_index%6#1: uint64 = (* right#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:188:40-50, ir_type=uint64, name='array%bytes_index%3', version=1),)
debug: Replacing redundant declaration let array%bytes_index%3#1: uint64 = (* right#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:180:22-32, ir_type=uint64, name='array%bytes_index%2', version=1),)
debug: Replacing redundant declaration let array%bytes_index%4#1: uint64 = (* left#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:177:14-23, ir_type=uint64, name='array%bytes_index%1', version=1),)
debug: Found equivalence set: array%value%0#1, array%sub_item%0#1
debug: Found equivalence set: array%value%1#1, array%sub_item%2#1
debug: Found equivalence set: array%value%2#1, array%sub_item%4#1
debug: Found equivalence set: array%bytes_index%2#1, array%bytes_index%3#1, array%bytes_index%6#1
debug: Found equivalence set: array%value%3#1, array%sub_item%6#1
debug: Found equivalence set: array%bytes_index%1#1, array%bytes_index%4#1, array%bytes_index%5#1
debug: Found equivalence set: array%value%4#1, array%sub_item%8#1
debug: Found equivalence set: array%sub_item%10#1, array%encoded%0#1
debug: Found equivalence set: array%sub_item%11#1, array%encoded%1#1
debug: Copy propagation made 6 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%0#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_5_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%0#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%array_len%1#1, tmp%2#0
debug: Found equivalence set: array%array_len%2#1, tmp%4#0
debug: Found equivalence set: array%sub_item%2#1, tmp%6#0
debug: Found equivalence set: array%array_len%3#1, tmp%8#0
debug: Found equivalence set: array%array_len%4#1, tmp%10#0
debug: Found equivalence set: array%sub_item%4#1, tmp%12#0
debug: Found equivalence set: array%data%1#1, encoded%2#0
debug: Found equivalence set: array%array_contents%1#1, extended%1#0
debug: Found equivalence set: array%array_len%5#1, tmp%14#0
debug: Found equivalence set: array%array_len%6#1, tmp%16#0
debug: Found equivalence set: array%sub_item%7#1, tmp%18#0
debug: Found equivalence set: array%sub_item%9#1, tmp%20#0
debug: Found equivalence set: array%array_contents%2#1, new_contents%0#0
debug: Found equivalence set: array%sub_item%11#1, popped_item.0%0#0
debug: Found equivalence set: array%array_len%7#1, tmp%22#0
debug: Found equivalence set: array%array_len%8#1, tmp%24#0
debug: Found equivalence set: array%sub_item%13#1, tmp%26#0
debug: Found equivalence set: array%array_len%9#1, tmp%28#0
debug: Found equivalence set: array%array_len%10#1, tmp%30#0
debug: Found equivalence set: array%sub_item%15#1, tmp%32#0
debug: Found equivalence set: array%data%2#1, encoded%3#0
debug: Found equivalence set: array%array_contents%3#1, extended%2#0
debug: Found equivalence set: array%array_len%11#1, tmp%34#0
debug: Found equivalence set: array%array_len%12#1, tmp%36#0
debug: Found equivalence set: array%sub_item%18#1, tmp%38#0
debug: Found equivalence set: array%data%3#1, encoded%0#1
debug: Found equivalence set: array%array_contents%4#1, extended%0#1
debug: Found equivalence set: array%data%4#1, encoded%1#1
debug: Found equivalence set: array%array_contents%5#1, extended%1#1
debug: Found equivalence set: array%sub_item%22#1, tmp%41#0
debug: Found equivalence set: array%updated_array%0#1, updated_array%0#0
debug: Found equivalence set: array%array_len%13#1, tmp%42#0
debug: Found equivalence set: array%sub_item%25#1, tmp%44#0
debug: Found equivalence set: array%array_len%14#1, tmp%46#0
debug: Found equivalence set: array%sub_item%27#1, tmp%48#0
debug: Found equivalence set: array%array_len%15#1, tmp%50#0
debug: Found equivalence set: array%sub_item%29#1, tmp%52#0
debug: Copy propagation made 56 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Removing unused variable array%sub_item%11#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x) to 0u
debug: Simplified (/ 0u 8u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) // on error: max array length exceeded to array%sub_item%0#1
debug: Simplified (len array%sub_item%0#1) to 8u
debug: Simplified (/ 8u 8u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (len array%sub_item%0#1) to 8u
debug: Simplified (/ 8u 8u) to 1u
debug: Simplified (- 1u 1u) to 0u
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array%sub_item%0#1 0u 8u) to 0x000000000000002a
debug: Simplified (extract3 0x000000000000002a 0u 8u) to 0x000000000000002a
debug: Simplified (btoi 0x000000000000002a) to 42u
debug: Simplified (== 42u 42u) to 1u
debug: Simplified (extract3 array%value%1#1 0u 8u) to (extract3 slot_contents%5#0 array%bytes_index%1#1 8u)
debug: Simplified (btoi array%sub_item%3#1) to (extract_uint64 slot_contents%5#0 array%bytes_index%1#1)
debug: Simplified (concat 0x array%sub_item%5#1) to array%sub_item%5#1
debug: Simplified (concat 0x array%sub_item%5#1) to array%sub_item%5#1
debug: Simplified (extract3 array%value%2#1 0u 8u) to (extract3 array%array_contents%1#1 array%bytes_index%2#1 8u)
debug: Simplified (btoi array%sub_item%6#1) to (extract_uint64 array%array_contents%1#1 array%bytes_index%2#1)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array%value%3#1 0u 8u) to (extract3 array%array_contents%1#1 0u 8u)
debug: Simplified (btoi array%sub_item%8#1) to (extract_uint64 array%array_contents%1#1 0u)
debug: Simplified (extract3 array%value%4#1 0u 8u) to (extract3 slot_contents%0#1 array%bytes_index%4#1 8u)
debug: Simplified (extract3 array%value%5#1 0u 8u) to (extract3 slot_contents%13#0 array%bytes_index%5#1 8u)
debug: Simplified (btoi array%sub_item%12#1) to (extract_uint64 slot_contents%13#0 array%bytes_index%5#1)
debug: Simplified (extract3 array%value%6#1 0u 8u) to (extract3 slot_contents%16#0 array%bytes_index%6#1 8u)
debug: Simplified (btoi array%sub_item%14#1) to (extract_uint64 slot_contents%16#0 array%bytes_index%6#1)
debug: Simplified (concat 0x array%sub_item%16#1) to array%sub_item%16#1
debug: Simplified (concat 0x array%sub_item%16#1) to array%sub_item%16#1
debug: Simplified (extract3 array%value%7#1 0u 8u) to (extract3 array%array_contents%3#1 array%bytes_index%7#1 8u)
debug: Simplified (btoi array%sub_item%17#1) to (extract_uint64 array%array_contents%3#1 array%bytes_index%7#1)
debug: Simplified (concat 0x array%sub_item%19#1) to array%sub_item%19#1
debug: Simplified (concat 0x array%sub_item%19#1) to array%sub_item%19#1
debug: Simplified (concat 0x array%sub_item%20#1) to array%sub_item%20#1
debug: Simplified (concat 0x array%sub_item%20#1) to array%sub_item%20#1
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array%value%8#1 0u 8u) to (extract3 array%array_contents%5#1 0u 8u)
debug: Simplified (btoi array%sub_item%21#1) to (extract_uint64 array%array_contents%5#1 0u)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (concat 0x array%sub_item%23#1) to array%sub_item%23#1
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array%value%9#1 0u 8u) to (extract3 array%updated_array%0#1 0u 8u)
debug: Simplified (btoi array%sub_item%24#1) to (extract_uint64 array%updated_array%0#1 0u)
debug: Simplified (extract3 array%value%10#1 0u 8u) to (extract3 array%updated_array%0#1 array%bytes_index%11#1 8u)
debug: Simplified (btoi array%sub_item%26#1) to (extract_uint64 array%updated_array%0#1 array%bytes_index%11#1)
debug: Simplified (extract3 array%value%11#1 0u 8u) to (extract3 array%updated_array%0#1 array%bytes_index%12#1 8u)
debug: Simplified (btoi array%sub_item%28#1) to (extract_uint64 array%updated_array%0#1 array%bytes_index%12#1)
debug: Simplified (extract3 array%array_contents%1#1 0u 8u) to ((extract 0 8) array%array_contents%1#1)
debug: Simplified (extract3 array%array_contents%1#1 0u 8u) to ((extract 0 8) array%array_contents%1#1)
debug: Simplified (extract3 array%array_contents%5#1 0u 8u) to ((extract 0 8) array%array_contents%5#1)
debug: Simplified (extract3 array%array_contents%5#1 0u 8u) to ((extract 0 8) array%array_contents%5#1)
debug: Simplified (replace3 array%array_contents%5#1 0u array%sub_item%23#1) to ((replace2 0) array%array_contents%5#1 array%sub_item%23#1)
debug: Simplified (extract3 array%updated_array%0#1 0u 8u) to ((extract 0 8) array%updated_array%0#1)
debug: Simplified (extract3 array%updated_array%0#1 0u 8u) to ((extract 0 8) array%updated_array%0#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_len%4#1: uint64 = (len slot_contents%5#0) with copy of existing registers (Register(source_location=array/uint64.py:15:15-25, ir_type=uint64, name='array%bytes_len%3', version=1),)
debug: Replacing redundant declaration let array%sub_item%3#1: bytes = (extract3 slot_contents%5#0 array%bytes_index%1#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:16:15-22, ir_type=bytes, name='array%value%1', version=1),)
debug: Replacing redundant declaration let array%bytes_len%6#1: uint64 = (len array%array_contents%1#1) with copy of existing registers (Register(source_location=array/uint64.py:19:15-25, ir_type=uint64, name='array%bytes_len%5', version=1),)
debug: Replacing redundant declaration let array%sub_item%6#1: bytes = (extract3 array%array_contents%1#1 array%bytes_index%2#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:20:15-22, ir_type=bytes, name='array%value%2', version=1),)
debug: Replacing redundant declaration let array%sub_item%8#1: bytes = ((extract 0 8) array%array_contents%1#1) with copy of existing registers (Register(source_location=array/uint64.py:21:15-21, ir_type=bytes, name='array%value%3', version=1),)
debug: Replacing redundant declaration let array%sub_item%10#1: bytes = (extract3 slot_contents%0#1 array%bytes_index%4#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:236:8-17, ir_type=bytes, name='array%value%4', version=1),)
debug: Replacing redundant declaration let array%bytes_len%8#1: uint64 = (len slot_contents%13#0) with copy of existing registers (Register(source_location=array/uint64.py:24:15-25, ir_type=uint64, name='array%bytes_len%7', version=1),)
debug: Replacing redundant declaration let array%sub_item%12#1: bytes = (extract3 slot_contents%13#0 array%bytes_index%5#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:25:15-22, ir_type=bytes, name='array%value%5', version=1),)
debug: Replacing redundant declaration let array%bytes_len%10#1: uint64 = (len slot_contents%16#0) with copy of existing registers (Register(source_location=array/uint64.py:28:15-25, ir_type=uint64, name='array%bytes_len%9', version=1),)
debug: Replacing redundant declaration let array%sub_item%14#1: bytes = (extract3 slot_contents%16#0 array%bytes_index%6#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:29:15-22, ir_type=bytes, name='array%value%6', version=1),)
debug: Replacing redundant declaration let array%bytes_len%12#1: uint64 = (len array%array_contents%3#1) with copy of existing registers (Register(source_location=array/uint64.py:32:15-25, ir_type=uint64, name='array%bytes_len%11', version=1),)
debug: Replacing redundant declaration let array%sub_item%17#1: bytes = (extract3 array%array_contents%3#1 array%bytes_index%7#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:33:15-22, ir_type=bytes, name='array%value%7', version=1),)
debug: Replacing redundant declaration let array%sub_item%21#1: bytes = ((extract 0 8) array%array_contents%5#1) with copy of existing registers (Register(source_location=array/uint64.py:35:8-31, ir_type=bytes, name='array%value%8', version=1),)
debug: Replacing redundant declaration let array%sub_item%24#1: bytes = ((extract 0 8) array%updated_array%0#1) with copy of existing registers (Register(source_location=array/uint64.py:37:15-21, ir_type=bytes, name='array%value%9', version=1),)
debug: Replacing redundant declaration let array%bytes_len%14#1: uint64 = (len array%updated_array%0#1) with copy of existing registers (Register(source_location=array/uint64.py:36:15-25, ir_type=uint64, name='array%bytes_len%13', version=1),)
debug: Replacing redundant declaration let array%sub_item%26#1: bytes = (extract3 array%updated_array%0#1 array%bytes_index%11#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:38:15-22, ir_type=bytes, name='array%value%10', version=1),)
debug: Replacing redundant declaration let array%bytes_len%15#1: uint64 = (len array%updated_array%0#1) with copy of existing registers (Register(source_location=array/uint64.py:36:15-25, ir_type=uint64, name='array%bytes_len%13', version=1),)
debug: Replacing redundant declaration let array%sub_item%28#1: bytes = (extract3 array%updated_array%0#1 array%bytes_index%12#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:39:15-22, ir_type=bytes, name='array%value%11', version=1),)
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1, array%array_contents%0#1
debug: Found equivalence set: array%bytes_len%3#1, array%bytes_len%4#1
debug: Found equivalence set: array%value%1#1, array%sub_item%3#1
debug: Found equivalence set: array%sub_item%5#1, array%encoded%1#1, array%data%1#1
debug: Found equivalence set: array%bytes_len%5#1, array%bytes_len%6#1
debug: Found equivalence set: array%value%2#1, array%sub_item%6#1
debug: Found equivalence set: array%value%3#1, array%sub_item%8#1
debug: Found equivalence set: array%value%4#1, array%sub_item%10#1
debug: Found equivalence set: array%bytes_len%7#1, array%bytes_len%8#1
debug: Found equivalence set: array%value%5#1, array%sub_item%12#1
debug: Found equivalence set: array%bytes_len%9#1, array%bytes_len%10#1
debug: Found equivalence set: array%value%6#1, array%sub_item%14#1
debug: Found equivalence set: array%sub_item%16#1, array%encoded%2#1, array%data%2#1
debug: Found equivalence set: array%bytes_len%11#1, array%bytes_len%12#1
debug: Found equivalence set: array%value%7#1, array%sub_item%17#1
debug: Found equivalence set: array%sub_item%19#1, array%encoded%3#1, array%data%3#1
debug: Found equivalence set: array%sub_item%20#1, array%encoded%4#1, array%data%4#1
debug: Found equivalence set: array%value%8#1, array%sub_item%21#1
debug: Found equivalence set: array%sub_item%23#1, array%encoded%5#1
debug: Found equivalence set: array%value%9#1, array%sub_item%24#1
debug: Found equivalence set: array%bytes_len%13#1, array%bytes_len%14#1, array%bytes_len%15#1
debug: Found equivalence set: array%value%10#1, array%sub_item%26#1
debug: Found equivalence set: array%value%11#1, array%sub_item%28#1
debug: Copy propagation made 7 modifications
debug: Replacing redundant declaration let array%array_len%4#1: uint64 = (/ array%bytes_len%3#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:15:15-25, ir_type=uint64, name='array%array_len%3', version=1),)
debug: Replacing redundant declaration let array%array_len%6#1: uint64 = (/ array%bytes_len%5#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:19:15-25, ir_type=uint64, name='array%array_len%5', version=1),)
debug: Replacing redundant declaration let array%array_len%8#1: uint64 = (/ array%bytes_len%7#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:24:15-25, ir_type=uint64, name='array%array_len%7', version=1),)
debug: Replacing redundant declaration let array%array_len%10#1: uint64 = (/ array%bytes_len%9#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:28:15-25, ir_type=uint64, name='array%array_len%9', version=1),)
debug: Replacing redundant declaration let array%array_len%12#1: uint64 = (/ array%bytes_len%11#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:32:15-25, ir_type=uint64, name='array%array_len%11', version=1),)
debug: Replacing redundant declaration let array%array_len%14#1: uint64 = (/ array%bytes_len%13#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:36:15-25, ir_type=uint64, name='array%array_len%13', version=1),)
debug: Replacing redundant declaration let array%array_len%15#1: uint64 = (/ array%bytes_len%13#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:36:15-25, ir_type=uint64, name='array%array_len%13', version=1),)
debug: Found equivalence set: array%array_len%3#1, array%array_len%4#1
debug: Found equivalence set: array%array_len%5#1, array%array_len%6#1
debug: Found equivalence set: array%array_len%7#1, array%array_len%8#1
debug: Found equivalence set: array%array_len%9#1, array%array_len%10#1
debug: Found equivalence set: array%array_len%11#1, array%array_len%12#1
debug: Found equivalence set: array%array_len%13#1, array%array_len%14#1, array%array_len%15#1
debug: Copy propagation made 7 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%2#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%data%1#1, encoded%3#0
debug: Found equivalence set: array%array_contents%1#1, extended%1#0
debug: Found equivalence set: array%data%2#1, encoded%4#0
debug: Found equivalence set: array%array_contents%2#1, extended%2#0
debug: Found equivalence set: array%array_contents%3#1, extended%3#0
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Removing unused variable encoded%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) // on error: max array length exceeded to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (concat array%sub_item%0#1 array%sub_item%1#1) // on error: max array length exceeded to 0x00000000000000010000000000000002
debug: Simplified (concat 0x array%sub_item%2#1) to array%sub_item%2#1
debug: Simplified (concat 0x array%sub_item%2#1) to array%sub_item%2#1
debug: Simplified (concat 0x00000000000000010000000000000002 array%sub_item%2#1) // on error: max array length exceeded to 0x000000000000000100000000000000020000000000000003
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%data%1#1, encoded%2#0
debug: Found equivalence set: array%array_contents%1#1, extended%1#0
debug: Found equivalence set: array%data%2#1, encoded%3#0
debug: Found equivalence set: array%array_contents%2#1, extended%2#0
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (concat 0x array%sub_item%2#1) to array%sub_item%2#1
debug: Simplified (concat 0x array%sub_item%2#1) to array%sub_item%2#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: Found equivalence set: array%data%1#1, encoded%2#0
debug: Found equivalence set: array%array_contents%1#1, extended%1#0
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%data%1#1, encoded%2#0
debug: Found equivalence set: array%array_contents%1#1, extended%1#0
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: Found equivalence set: array%array_len%1#1, tmp%2#0
debug: Found equivalence set: array%sub_item%3#1, tmp%4#0
debug: Found equivalence set: array%array_len%2#1, tmp%6#0
debug: Found equivalence set: array%array_len%3#1, tmp%8#0
debug: Found equivalence set: array%sub_item%5#1, tmp%10#0
debug: Found equivalence set: array%array_contents%2#1, extended%2#0
debug: Found equivalence set: array%array_len%4#1, tmp%12#0
debug: Found equivalence set: array%array_len%5#1, tmp%14#0
debug: Found equivalence set: array%array_len%6#1, tmp%16#0
debug: Found equivalence set: array%sub_item%7#1, tmp%18#0
debug: Found equivalence set: array%sub_item%9#1, tmp%20#0
debug: Found equivalence set: array%sub_item%11#1, tmp%22#0
debug: Found equivalence set: array%sub_item%13#1, tmp%24#0
debug: Copy propagation made 28 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (extract3 array%value%0#1 0u 8u) to (extract3 array%array_contents%1#1 array%bytes_index%0#1 8u)
debug: Simplified (btoi array%sub_item%2#1) to (extract_uint64 array%array_contents%1#1 array%bytes_index%0#1)
debug: Simplified (extract3 array%value%1#1 0u 8u) to (extract3 slot_contents%6#0 array%bytes_index%1#1 8u)
debug: Simplified (btoi array%sub_item%4#1) to (extract_uint64 slot_contents%6#0 array%bytes_index%1#1)
debug: Simplified (extract3 array%value%2#1 0u 8u) to (extract3 array%array_contents%2#1 array%bytes_index%2#1 8u)
debug: Simplified (btoi array%sub_item%6#1) to (extract_uint64 array%array_contents%2#1 array%bytes_index%2#1)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (extract3 array%value%3#1 0u 8u) to (extract3 array%array_contents%2#1 32u 8u)
debug: Simplified (btoi array%sub_item%8#1) to (extract_uint64 array%array_contents%2#1 32u)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (extract3 array%value%4#1 0u 8u) to (extract3 array%array_contents%2#1 40u 8u)
debug: Simplified (btoi array%sub_item%10#1) to (extract_uint64 array%array_contents%2#1 40u)
debug: Simplified (* 6u 8u) to 48u
debug: Simplified (extract3 array%value%5#1 0u 8u) to (extract3 array%array_contents%2#1 48u 8u)
debug: Simplified (btoi array%sub_item%12#1) to (extract_uint64 array%array_contents%2#1 48u)
debug: Simplified (extract3 array%array_contents%2#1 32u 8u) to ((extract 32 8) array%array_contents%2#1)
debug: Simplified (extract3 array%array_contents%2#1 32u 8u) to ((extract 32 8) array%array_contents%2#1)
debug: Simplified (extract3 array%array_contents%2#1 40u 8u) to ((extract 40 8) array%array_contents%2#1)
debug: Simplified (extract3 array%array_contents%2#1 40u 8u) to ((extract 40 8) array%array_contents%2#1)
debug: Simplified (extract3 array%array_contents%2#1 48u 8u) to ((extract 48 8) array%array_contents%2#1)
debug: Simplified (extract3 array%array_contents%2#1 48u 8u) to ((extract 48 8) array%array_contents%2#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_len%1#1: uint64 = (len array%array_contents%1#1) with copy of existing registers (Register(source_location=array/uint64.py:83:15-27, ir_type=uint64, name='array%bytes_len%0', version=1),)
debug: Replacing redundant declaration let array%sub_item%2#1: bytes = (extract3 array%array_contents%1#1 array%bytes_index%0#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:84:15-24, ir_type=bytes, name='array%value%0', version=1),)
debug: Replacing redundant declaration let array%bytes_len%3#1: uint64 = (len slot_contents%6#0) with copy of existing registers (Register(source_location=array/uint64.py:86:15-28, ir_type=uint64, name='array%bytes_len%2', version=1),)
debug: Replacing redundant declaration let array%sub_item%4#1: bytes = (extract3 slot_contents%6#0 array%bytes_index%1#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:87:15-25, ir_type=bytes, name='array%value%1', version=1),)
debug: Replacing redundant declaration let array%bytes_len%6#1: uint64 = (len array%array_contents%2#1) with copy of existing registers (Register(source_location=array/uint64.py:90:15-27, ir_type=uint64, name='array%bytes_len%4', version=1),)
debug: Replacing redundant declaration let array%sub_item%6#1: bytes = (extract3 array%array_contents%2#1 array%bytes_index%2#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:92:15-24, ir_type=bytes, name='array%value%2', version=1),)
debug: Replacing redundant declaration let array%sub_item%8#1: bytes = ((extract 32 8) array%array_contents%2#1) with copy of existing registers (Register(source_location=array/uint64.py:93:15-23, ir_type=bytes, name='array%value%3', version=1),)
debug: Replacing redundant declaration let array%sub_item%10#1: bytes = ((extract 40 8) array%array_contents%2#1) with copy of existing registers (Register(source_location=array/uint64.py:94:15-23, ir_type=bytes, name='array%value%4', version=1),)
debug: Replacing redundant declaration let array%sub_item%12#1: bytes = ((extract 48 8) array%array_contents%2#1) with copy of existing registers (Register(source_location=array/uint64.py:95:15-23, ir_type=bytes, name='array%value%5', version=1),)
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: Found equivalence set: array%sub_item%1#1, array%encoded%1#1, array%data%1#1
debug: Found equivalence set: array%bytes_len%0#1, array%bytes_len%1#1
debug: Found equivalence set: array%value%0#1, array%sub_item%2#1
debug: Found equivalence set: array%bytes_len%2#1, array%bytes_len%3#1
debug: Found equivalence set: array%value%1#1, array%sub_item%4#1
debug: Found equivalence set: array%bytes_len%4#1, array%bytes_len%6#1
debug: Found equivalence set: array%value%2#1, array%sub_item%6#1
debug: Found equivalence set: array%value%3#1, array%sub_item%8#1
debug: Found equivalence set: array%value%4#1, array%sub_item%10#1
debug: Found equivalence set: array%value%5#1, array%sub_item%12#1
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let array%array_len%1#1: uint64 = (/ array%bytes_len%0#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:83:15-27, ir_type=uint64, name='array%array_len%0', version=1),)
debug: Replacing redundant declaration let array%array_len%3#1: uint64 = (/ array%bytes_len%2#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:86:15-28, ir_type=uint64, name='array%array_len%2', version=1),)
debug: Replacing redundant declaration let array%array_len%6#1: uint64 = (/ array%bytes_len%4#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:90:15-27, ir_type=uint64, name='array%array_len%4', version=1),)
debug: Found equivalence set: array%array_len%0#1, array%array_len%1#1
debug: Found equivalence set: array%array_len%2#1, array%array_len%3#1
debug: Found equivalence set: array%array_len%4#1, array%array_len%6#1
debug: Copy propagation made 3 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%array_contents%1#1, extended%1#0
debug: Found equivalence set: array%array_len%0#1, tmp%2#0
debug: Found equivalence set: array%sub_item%2#1, tmp%4#0
debug: Found equivalence set: array%sub_item%4#1, tmp%6#0
debug: Found equivalence set: array%sub_item%6#1, tmp%8#0
debug: Found equivalence set: array%sub_item%8#1, tmp%10#0
debug: Found equivalence set: array%sub_item%10#1, tmp%12#0
debug: Found equivalence set: array%sub_item%12#1, tmp%14#0
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) // on error: max array length exceeded to array%sub_item%0#1
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array%value%0#1 0u 8u) to (extract3 slot_contents%3#0 0u 8u)
debug: Simplified (btoi array%sub_item%1#1) to (extract_uint64 slot_contents%3#0 0u)
debug: Simplified (* 1u 8u) to 8u
debug: Simplified (extract3 array%value%1#1 0u 8u) to (extract3 slot_contents%3#0 8u 8u)
debug: Simplified (btoi array%sub_item%3#1) to (extract_uint64 slot_contents%3#0 8u)
debug: Simplified (* 2u 8u) to 16u
debug: Simplified (extract3 array%value%2#1 0u 8u) to (extract3 slot_contents%3#0 16u 8u)
debug: Simplified (btoi array%sub_item%5#1) to (extract_uint64 slot_contents%3#0 16u)
debug: Simplified (* 3u 8u) to 24u
debug: Simplified (extract3 array%value%3#1 0u 8u) to (extract3 slot_contents%3#0 24u 8u)
debug: Simplified (btoi array%sub_item%7#1) to (extract_uint64 slot_contents%3#0 24u)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (extract3 array%value%4#1 0u 8u) to (extract3 slot_contents%3#0 32u 8u)
debug: Simplified (btoi array%sub_item%9#1) to (extract_uint64 slot_contents%3#0 32u)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (extract3 array%value%5#1 0u 8u) to (extract3 slot_contents%3#0 40u 8u)
debug: Simplified (btoi array%sub_item%11#1) to (extract_uint64 slot_contents%3#0 40u)
debug: Simplified (extract3 slot_contents%3#0 0u 8u) to ((extract 0 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 0u 8u) to ((extract 0 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 8u 8u) to ((extract 8 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 8u 8u) to ((extract 8 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 16u 8u) to ((extract 16 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 16u 8u) to ((extract 16 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 24u 8u) to ((extract 24 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 24u 8u) to ((extract 24 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 32u 8u) to ((extract 32 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 32u 8u) to ((extract 32 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 40u 8u) to ((extract 40 8) slot_contents%3#0)
debug: Simplified (extract3 slot_contents%3#0 40u 8u) to ((extract 40 8) slot_contents%3#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%sub_item%1#1: bytes = ((extract 0 8) slot_contents%3#0) with copy of existing registers (Register(source_location=array/uint64.py:103:15-21, ir_type=bytes, name='array%value%0', version=1),)
debug: Replacing redundant declaration let array%sub_item%3#1: bytes = ((extract 8 8) slot_contents%3#0) with copy of existing registers (Register(source_location=array/uint64.py:104:15-21, ir_type=bytes, name='array%value%1', version=1),)
debug: Replacing redundant declaration let array%sub_item%5#1: bytes = ((extract 16 8) slot_contents%3#0) with copy of existing registers (Register(source_location=array/uint64.py:105:15-21, ir_type=bytes, name='array%value%2', version=1),)
debug: Replacing redundant declaration let array%sub_item%7#1: bytes = ((extract 24 8) slot_contents%3#0) with copy of existing registers (Register(source_location=array/uint64.py:106:15-21, ir_type=bytes, name='array%value%3', version=1),)
debug: Replacing redundant declaration let array%sub_item%9#1: bytes = ((extract 32 8) slot_contents%3#0) with copy of existing registers (Register(source_location=array/uint64.py:107:15-21, ir_type=bytes, name='array%value%4', version=1),)
debug: Replacing redundant declaration let array%sub_item%11#1: bytes = ((extract 40 8) slot_contents%3#0) with copy of existing registers (Register(source_location=array/uint64.py:108:15-21, ir_type=bytes, name='array%value%5', version=1),)
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1, array%array_contents%0#1
debug: Found equivalence set: array%value%0#1, array%sub_item%1#1
debug: Found equivalence set: array%value%1#1, array%sub_item%3#1
debug: Found equivalence set: array%value%2#1, array%sub_item%5#1
debug: Found equivalence set: array%value%3#1, array%sub_item%7#1
debug: Found equivalence set: array%value%4#1, array%sub_item%9#1
debug: Found equivalence set: array%value%5#1, array%sub_item%11#1
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: Found equivalence set: array%array_len%1#1, array_length%0#0
debug: Found equivalence set: array%sub_item%2#1, value#0
debug: Found equivalence set: array%array_len%2#1, array_length%1#0
debug: Found equivalence set: array%sub_item%4#1, value#1
debug: Found equivalence set: array%array_len%3#1, array_length%2#0
debug: Found equivalence set: array%sub_item%6#1, value#2
debug: Found equivalence set: array%data%1#1, encoded%3#0
debug: Found equivalence set: array%array_contents%1#1, extended%1#0
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Removing unused variable encoded%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (extract3 array%value%0#1 0u 8u) to (extract3 slot_contents%3#0 array%bytes_index%0#1 8u)
debug: Simplified (btoi array%sub_item%1#1) to (extract_uint64 slot_contents%3#0 array%bytes_index%0#1)
debug: Simplified (extract3 array%value%1#1 0u 8u) to (extract3 slot_contents%5#0 array%bytes_index%1#1 8u)
debug: Simplified (btoi array%sub_item%3#1) to (extract_uint64 slot_contents%5#0 array%bytes_index%1#1)
debug: Simplified (extract3 array%value%2#1 0u 8u) to (extract3 slot_contents%7#0 array%bytes_index%2#1 8u)
debug: Simplified (btoi array%sub_item%5#1) to (extract_uint64 slot_contents%7#0 array%bytes_index%2#1)
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: couldn't simplify ((extract 0 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 32 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 40 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 72 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_len%1#1: uint64 = (len slot_contents%1#0) with copy of existing registers (Register(source_location=array/uint64.py:121:15-25, ir_type=uint64, name='array%bytes_len%0', version=1),)
debug: Replacing redundant declaration let array%sub_item%1#1: bytes = (extract3 slot_contents%3#0 array%bytes_index%0#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:125, ir_type=bytes, name='array%value%0', version=1),)
debug: Replacing redundant declaration let array%sub_item%3#1: bytes = (extract3 slot_contents%5#0 array%bytes_index%1#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:130, ir_type=bytes, name='array%value%1', version=1),)
debug: Replacing redundant declaration let array%sub_item%5#1: bytes = (extract3 slot_contents%7#0 array%bytes_index%2#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:134, ir_type=bytes, name='array%value%2', version=1),)
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: Found equivalence set: array%bytes_len%0#1, array%bytes_len%1#1
debug: Found equivalence set: array%value%0#1, array%sub_item%1#1
debug: Found equivalence set: array%value%1#1, array%sub_item%3#1
debug: Found equivalence set: array%value%2#1, array%sub_item%5#1
debug: Found equivalence set: val_as_bytes%0#0, array%encoded%1#1, array%data%1#1
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let array%array_len%1#1: uint64 = (/ array%bytes_len%0#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:121:15-25, ir_type=uint64, name='array%array_len%0', version=1),)
debug: Found equivalence set: array%array_len%0#1, array%array_len%1#1
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%array_len%0#1, tmp%2#0
debug: Found equivalence set: array%array_len%1#1, tmp%4#0
debug: Found equivalence set: array%array_len%2#1, array_length%0#0
debug: Found equivalence set: array%sub_item%2#1, value#0
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (extract3 array%value%0#1 0u 8u) to (extract3 slot_contents%4#0 array%bytes_index%0#1 8u)
debug: Simplified (btoi array%sub_item%1#1) to (extract_uint64 slot_contents%4#0 array%bytes_index%0#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_len%1#1: uint64 = (len slot_contents%1#0) with copy of existing registers (Register(source_location=array/uint64.py:156:15-25, ir_type=uint64, name='array%bytes_len%0', version=1),)
debug: Replacing redundant declaration let array%sub_item%1#1: bytes = (extract3 slot_contents%4#0 array%bytes_index%0#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:163, ir_type=bytes, name='array%value%0', version=1),)
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: Found equivalence set: array%bytes_len%0#1, array%bytes_len%1#1
debug: Found equivalence set: array%value%0#1, array%sub_item%1#1
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let array%array_len%1#1: uint64 = (/ array%bytes_len%0#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:156:15-25, ir_type=uint64, name='array%array_len%0', version=1),)
debug: Found equivalence set: array%array_len%0#1, array%array_len%1#1
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Output IR to array/out/Contract.ir/Contract.approval.4.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%value%0#1
debug: Removing unused variable array%value%1#1
debug: Removing unused variable array%value%2#1
debug: Removing unused variable array%value%3#1
debug: Removing unused variable array%value%4#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_5_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%bytes_len%0#1
debug: Removing unused variable array%array_len%0#1
debug: Removing unused variable tmp%1#0
debug: Removing unused variable array%bytes_len%1#1
debug: Removing unused variable array%array_len%1#1
debug: Removing unused variable tmp%3#0
debug: Removing unused variable array%bytes_len%2#1
debug: Removing unused variable array%array_len%2#1
debug: Removing unused variable tmp%5#0
debug: Removing unused variable array%bytes_index%0#1
debug: Removing unused variable array%value%0#1
debug: Removing unused variable array%sub_item%1#1
debug: Removing unused variable array%sub_item%2#1
debug: Removing unused variable tmp%7#0
debug: Removing unused variable array%value%1#1
debug: Removing unused variable array%value%2#1
debug: Removing unused variable array%bytes_index%3#1
debug: Removing unused variable array%value%3#1
debug: Removing unused variable array%value%4#1
debug: Removing unused variable array%value%5#1
debug: Removing unused variable array%value%6#1
debug: Removing unused variable array%value%7#1
debug: Removing unused variable array%bytes_index%8#1
debug: Removing unused variable array%value%8#1
debug: Removing unused variable array%bytes_index%9#1
debug: Removing unused variable array%bytes_index%10#1
debug: Removing unused variable array%value%9#1
debug: Removing unused variable array%value%10#1
debug: Removing unused variable array%value%11#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1, array%array_contents%0#1
debug: Found equivalence set: array%sub_item%1#1, array%encoded%1#1, array%data%1#1
debug: Found equivalence set: array%sub_item%2#1, array%encoded%2#1, array%data%2#1
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%0#1
debug: Removing unused variable array%sub_item%1#1
debug: Removing unused variable array%array_contents%1#1
debug: Removing unused variable array%sub_item%2#1
debug: Removing unused variable array%array_contents%2#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: Found equivalence set: array%sub_item%1#1, array%encoded%1#1, array%data%1#1
debug: Found equivalence set: array%sub_item%2#1, array%encoded%2#1, array%data%2#1
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: Found equivalence set: array%sub_item%1#1, array%encoded%1#1, array%data%1#1
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%value%0#1
debug: Removing unused variable array%value%1#1
debug: Removing unused variable array%value%2#1
debug: Removing unused variable array%bytes_index%3#1
debug: Removing unused variable array%value%3#1
debug: Removing unused variable array%bytes_index%4#1
debug: Removing unused variable array%value%4#1
debug: Removing unused variable array%bytes_index%5#1
debug: Removing unused variable array%value%5#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%bytes_index%0#1
debug: Removing unused variable array%value%0#1
debug: Removing unused variable array%bytes_index%1#1
debug: Removing unused variable array%value%1#1
debug: Removing unused variable array%bytes_index%2#1
debug: Removing unused variable array%value%2#1
debug: Removing unused variable array%bytes_index%3#1
debug: Removing unused variable array%value%3#1
debug: Removing unused variable array%bytes_index%4#1
debug: Removing unused variable array%value%4#1
debug: Removing unused variable array%bytes_index%5#1
debug: Removing unused variable array%value%5#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%value%0#1
debug: Removing unused variable array%value%1#1
debug: Removing unused variable array%value%2#1
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 32 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 40 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 72 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%value%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Output IR to array/out/Contract.ir/Contract.approval.5.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_5_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%bytes_index%4#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 32 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 40 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 72 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Output IR to array/out/Contract.ir/Contract.approval.6.ssa.array.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_5_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 32 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 40 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: couldn't simplify ((extract 72 8) array_head_and_tail%0#0) // on error: Index access is out of bounds due to lengths: src_length=0, op_length=8
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.array.uint64.Contract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.uint64.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
array/uint64.py:168 debug: auto reserving slots in test_cases.array.uint64.quicksort_window, []
array/uint64.py:227 debug: auto reserving slots in test_cases.array.uint64.add_x, []
array/uint64.py:239 debug: auto reserving slots in test_cases.array.uint64.append_5_and_return, []
array/uint64.py:5 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array, []
array/uint64.py:41 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_extend, []
array/uint64.py:45:9 debug: eliminating local static slot assigned to arr2#0
debug: Removing unused variable arr2#0
array/uint64.py:53 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_multiple_append, []
array/uint64.py:66 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_too_long, []
array/uint64.py:68:9 debug: eliminating local static slot assigned to array#0
debug: Removing unused variable array#0
array/uint64.py:75 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_copy_and_extend, []
array/uint64.py:77:9 debug: eliminating local static slot assigned to array#0
array/uint64.py:80:9 debug: eliminating local static slot assigned to array2#0
debug: Removing unused variable array#0
debug: Removing unused variable array2#0
array/uint64.py:97 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_evaluation_order, []
array/uint64.py:110 debug: auto reserving slots in test_cases.array.uint64.Contract.test_allocations, []
array/uint64.py:116 debug: auto reserving slots in test_cases.array.uint64.Contract.test_iteration, []
array/uint64.py:118:9 debug: eliminating local static slot assigned to arr#0
array/uint64.py:139:9 debug: eliminating local static slot assigned to native_arr#0
debug: Removing unused variable arr#0
debug: Removing unused variable native_arr#0
array/uint64.py:150 debug: auto reserving slots in test_cases.array.uint64.Contract.test_quicksort, []
debug: Using dynamic slot allocation strategy
debug: Output IR to array/out/Contract.ir/Contract.approval.7.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.array.uint64.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to array/out/Contract.ir/Contract.clear.2.ssa.slot.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 with [test_cases.array.uint64.Contract.__puya_arc4_router__%0#1, test_cases.array.uint64.Contract.__puya_arc4_router__%0#2, test_cases.array.uint64.Contract.__puya_arc4_router__%0#3, test_cases.array.uint64.Contract.__puya_arc4_router__%0#4, test_cases.array.uint64.Contract.__puya_arc4_router__%0#5, test_cases.array.uint64.Contract.__puya_arc4_router__%0#6, test_cases.array.uint64.Contract.__puya_arc4_router__%0#7, test_cases.array.uint64.Contract.__puya_arc4_router__%0#8, test_cases.array.uint64.Contract.__puya_arc4_router__%0#9, test_cases.array.uint64.Contract.__puya_arc4_router__%0#10, test_cases.array.uint64.Contract.__puya_arc4_router__%0#11]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 35 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.quicksort_window
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.quicksort_window using strategy RootOperandGrouping
debug: Coalescing left#1 with [left#10, left#3, left#13, left#2, left#5, left#18, left#6, left#8]
debug: Coalescing right#1 with [right#10, right#4, right#13, right#2, right#21, right#5, right#6, right#8, right#7]
debug: Coalescing resulted in 51 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.quicksort_window
debug: loc: {left#1=None, right#1=None, window_left#0=window_left#0, window_right#0=window_right#0}
debug: pred: {left#1=window_left#0, right#1=window_right#0}
debug: ready: left#1, right#1
debug: to_do: left#1, right#1
debug: * avail right#1
debug: * avail window_right#0
debug: * avail left#1
debug: * avail window_left#0
debug: * to_do right#1
debug: * to_do left#1
debug: loc: {left#1=left#1, right#1=right#1}
debug: pred: {left#1=left#1, right#1=right#1}
debug: ready: 
debug: to_do: left#1, right#1
debug: * to_do right#1
debug: * to_do left#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {left#1=left#1, right#1=right#1}
debug: pred: {left#1=left#1, right#1=right#1}
debug: ready: 
debug: to_do: left#1, right#1
debug: * to_do right#1
debug: * to_do left#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@1
debug: Removing jump block block@5
debug: Removing jump block block@12
debug: Removing jump block block@14
debug: Removing jump block block@15
debug: Removing jump block block@21
debug: branching to block@1 will be replaced with block@3
debug: branching to block@5 will be replaced with block@6
debug: branching to block@12 will be replaced with block@22
debug: branching to block@14 will be replaced with block@3
debug: branching to block@15 will be replaced with block@22
debug: branching to block@21 will be replaced with block@22
debug: Performing SSA IR destructuring for test_cases.array.uint64.add_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.add_x using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.add_x
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.append_5_and_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.append_5_and_return using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.append_5_and_return
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array using strategy RootOperandGrouping
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 8 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_extend
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_extend using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_extend
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_multiple_append
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_multiple_append using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_multiple_append
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_too_long
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_too_long using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_too_long
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_copy_and_extend using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_evaluation_order using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_allocations
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_allocations using strategy RootOperandGrouping
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 8 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_allocations
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_iteration
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_iteration using strategy RootOperandGrouping
debug: Coalescing val#0 with [val#5, val#1, val#2]
debug: Coalescing last#0 with [last#5, last#1, last#7, last#3]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing value#0 with [value#1, value#2]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#2]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing reverse_index_internal%2#1 with [reverse_index_internal%2#4, reverse_index_internal%2#2]
debug: Coalescing arc4_arr#0 with [arc4_arr#5, arc4_arr#1, arc4_arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 62 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_iteration
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=None, value#0=value#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=value#0}
debug: ready: last#0
debug: to_do: item_index_internal%0#0, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {reverse_index_internal%2#1=None, last#0=last#0, array%array_len%3#1=array%array_len%3#1}
debug: pred: {reverse_index_internal%2#1=array%array_len%3#1, last#0=last#0}
debug: ready: reverse_index_internal%2#1
debug: to_do: reverse_index_internal%2#1, last#0
debug: * avail reverse_index_internal%2#1
debug: * avail array%array_len%3#1
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=last#0}
debug: pred: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=last#0}
debug: ready: 
debug: to_do: reverse_index_internal%2#1, last#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=None, value#0=value#0}
debug: pred: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=value#0}
debug: ready: last#0
debug: to_do: reverse_index_internal%2#1, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_quicksort
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_quicksort using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing last#0 with [last#3, last#1]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing resulted in 23 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_quicksort
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=None, value#0=value#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=value#0}
debug: ready: last#0
debug: to_do: item_index_internal%1#0, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: Performing post-SSA optimizations at level 1
debug: Output IR to array/out/Contract.ir/Contract.approval.8.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to array/out/Contract.ir/Contract.clear.3.destructured.ir
debug: Inserted main.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced main.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_array_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_array_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_array_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_array_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@3.ops[16]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_route@3.ops[18]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_extend_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_array_extend_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_array_extend_route@4.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_array_extend_route@4.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_array_extend_route@4.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_array_extend_route@4.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_array_extend_route@4.ops[16]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_extend_route@4.ops[18]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[5]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[16]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[18]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_overhead_route@6.ops[1]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_overhead_route@6.ops[3]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_overhead_route@6.ops[5]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_overhead_route@6.ops[7]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_overhead_route@6.ops[10]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_overhead_route@6.ops[12]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_overhead_route@6.ops[15]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_overhead_route@6.ops[17]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_too_long_route@7.ops[1]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[3]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_test_array_too_long_route@7.ops[5]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[7]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_array_too_long_route@7.ops[10]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[12]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_test_array_too_long_route@7.ops[16]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[18]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[1]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[3]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[5]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[7]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[10]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[12]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[16]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[18]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[1]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[3]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[5]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[7]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[10]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[12]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[16]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[18]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_allocations_route@10.ops[1]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_test_allocations_route@10.ops[3]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_test_allocations_route@10.ops[5]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_test_allocations_route@10.ops[7]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_test_allocations_route@10.ops[10]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_test_allocations_route@10.ops[12]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_test_allocations_route@10.ops[15]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced main_test_allocations_route@10.ops[17]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted main_test_allocations_route@10.ops[19]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_test_allocations_route@10.ops[21]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_test_allocations_route@10.ops[24]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_allocations_route@10.ops[26]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_iteration_route@11.ops[1]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_iteration_route@11.ops[3]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_iteration_route@11.ops[5]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_test_iteration_route@11.ops[7]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_test_iteration_route@11.ops[10]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_test_iteration_route@11.ops[12]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_test_iteration_route@11.ops[16]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_iteration_route@11.ops[18]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_quicksort_route@12.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_test_quicksort_route@12.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_test_quicksort_route@12.ops[5]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_test_quicksort_route@12.ops[7]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_test_quicksort_route@12.ops[10]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_test_quicksort_route@12.ops[12]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_test_quicksort_route@12.ops[16]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_quicksort_route@12.ops[18]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_bare_routing@15.ops[1]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_bare_routing@15.ops[3]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main___algopy_default_create@16.ops[1]: 'l-store-copy tmp%45#0 0'
debug: Replaced main___algopy_default_create@16.ops[3]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main___algopy_default_create@16.ops[5]: 'l-store-copy tmp%46#0 0'
debug: Replaced main___algopy_default_create@16.ops[7]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main___algopy_default_create@16.ops[10]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@16.ops[12]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@19.ops[1]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@19.ops[3]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted quicksort_window.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced quicksort_window.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted quicksort_window.ops[15]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced quicksort_window.ops[18]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted quicksort_window.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced quicksort_window.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted quicksort_window.ops[12]: 'l-store-copy slot_contents%0#0 1'
debug: Replaced quicksort_window.ops[19]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted quicksort_window_while_top@3.ops[10]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced quicksort_window_while_top@3.ops[12]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted quicksort_window_while_top@3.ops[15]: 'l-store-copy tmp%3#0 0'
debug: Replaced quicksort_window_while_top@3.ops[17]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted quicksort_window_while_top@3.ops[6]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced quicksort_window_while_top@3.ops[9]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted quicksort_window_while_top@3.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced quicksort_window_while_top@3.ops[9]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted quicksort_window_while_top@6.ops[14]: 'l-store-copy tmp%5#0 0'
debug: Replaced quicksort_window_while_top@6.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted quicksort_window_while_top@6.ops[6]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced quicksort_window_while_top@6.ops[9]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted quicksort_window_while_top@6.ops[11]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced quicksort_window_while_top@6.ops[14]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted quicksort_window_while_top@6.ops[2]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced quicksort_window_while_top@6.ops[9]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted quicksort_window_after_while@10.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced quicksort_window_after_while@10.ops[5]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted quicksort_window_if_body@11.ops[2]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced quicksort_window_if_body@11.ops[4]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[27]: 'l-store-copy array%updated_array%1#1 0'
debug: Replaced quicksort_window_if_body@11.ops[30]: 'v-load array%updated_array%1#1' with 'l-load array%updated_array%1#1'
debug: Inserted quicksort_window_if_body@11.ops[14]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced quicksort_window_if_body@11.ops[18]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted quicksort_window_if_body@11.ops[23]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced quicksort_window_if_body@11.ops[27]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted quicksort_window_if_body@11.ops[5]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced quicksort_window_if_body@11.ops[9]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[21]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced quicksort_window_if_body@11.ops[27]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted quicksort_window_if_body@11.ops[8]: 'l-store-copy array%sub_item%7#1 1'
debug: Replaced quicksort_window_if_body@11.ops[14]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted quicksort_window_if_body@11.ops[11]: 'l-store-copy slot_contents%3#0 1'
debug: Replaced quicksort_window_if_body@11.ops[19]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[13]: 'l-store-copy array%bytes_index%1#1 3'
debug: Replaced quicksort_window_if_body@11.ops[21]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted quicksort_window_if_body@11.ops[15]: 'l-store-copy array%sub_item%9#1 3'
debug: Replaced quicksort_window_if_body@11.ops[27]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted quicksort_window_if_body@11.ops[7]: 'l-store-copy array%bytes_index%2#1 2'
debug: Replaced quicksort_window_if_body@11.ops[33]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted quicksort_window_after_if_else@13.ops[7]: 'l-store-copy tmp%11#0 0'
debug: Replaced quicksort_window_after_if_else@13.ops[9]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted quicksort_window_after_if_else@13.ops[3]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_after_if_else@13.ops[6]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_after_if_else@16.ops[3]: 'l-store-copy tmp%12#0 0'
debug: Replaced quicksort_window_after_if_else@16.ops[5]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted quicksort_window_if_body@17.ops[5]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_if_body@17.ops[7]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_if_body@18.ops[3]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_if_body@18.ops[5]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_after_while@22.ops[3]: 'l-store-copy tmp%14#0 0'
debug: Replaced quicksort_window_after_while@22.ops[5]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted quicksort_window_after_if_else@24.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced quicksort_window_after_if_else@24.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted add_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced add_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_body@2.ops[5]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced add_x_for_body@2.ops[7]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted add_x_for_body@2.ops[10]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced add_x_for_body@2.ops[13]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted add_x_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced add_x_for_body@2.ops[9]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted add_x_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced add_x_for_body@2.ops[17]: 'v-load i#0' with 'l-load i#0'
debug: Inserted append_5_and_return.ops[5]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced append_5_and_return.ops[7]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted append_5_and_return.ops[10]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced append_5_and_return.ops[13]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted append_5_and_return.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced append_5_and_return.ops[9]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array.ops[13]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_array.ops[15]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_array.ops[17]: 'l-store-copy array%bytes_len%3#1 0'
debug: Replaced test_array.ops[19]: 'v-load array%bytes_len%3#1' with 'l-load array%bytes_len%3#1'
debug: Inserted test_array.ops[22]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced test_array.ops[24]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted test_array.ops[27]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_array.ops[29]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array.ops[34]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_array.ops[36]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_array.ops[43]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_array.ops[45]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_array.ops[48]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_array.ops[50]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_array.ops[64]: 'l-store-copy array%bytes_len%5#1 0'
debug: Replaced test_array.ops[66]: 'v-load array%bytes_len%5#1' with 'l-load array%bytes_len%5#1'
debug: Inserted test_array.ops[69]: 'l-store-copy array%array_len%5#1 0'
debug: Replaced test_array.ops[71]: 'v-load array%array_len%5#1' with 'l-load array%array_len%5#1'
debug: Inserted test_array.ops[74]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_array.ops[76]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_array.ops[81]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_array.ops[83]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_array.ops[90]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced test_array.ops[92]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted test_array.ops[95]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_array.ops[97]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_array.ops[102]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced test_array.ops[104]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted test_array.ops[107]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_array.ops[109]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_array.ops[4]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array.ops[7]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array.ops[40]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced test_array.ops[43]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted test_array.ops[56]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_array.ops[59]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_array.ops[61]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array.ops[64]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array.ops[65]: 'l-store-copy array%array_contents%1#1 1'
debug: Replaced test_array.ops[67]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array.ops[91]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced test_array.ops[94]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted test_array.ops[7]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[10]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[11]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[14]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[7]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[29]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced test_array.ops[36]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted test_array.ops[81]: 'l-store-copy array%array_len%5#1 0'
debug: Replaced test_array.ops[88]: 'v-load array%array_len%5#1' with 'l-load array%array_len%5#1'
debug: Inserted test_array.ops[99]: 'l-store-copy array%array_contents%1#1 1'
debug: Replaced test_array.ops[111]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array.ops[47]: 'l-store-copy slot_contents%5#0 1'
debug: Replaced test_array.ops[63]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_array.ops[20]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_array.ops[47]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_array.ops[74]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array.ops[101]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array.ops[16]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[70]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_array_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_array_for_body@3.ops[2]: 'l-store-copy slot_contents%0#1 0'
debug: Replaced test_array_for_body@3.ops[4]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted test_array_for_body@3.ops[6]: 'l-store-copy array%array_length%0#1 0'
debug: Replaced test_array_for_body@3.ops[8]: 'v-load array%array_length%0#1' with 'l-load array%array_length%0#1'
debug: Inserted test_array_for_body@3.ops[16]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_for_body@3.ops[19]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_for_body@3.ops[11]: 'l-store-copy array%new_length%0#1 0'
debug: Replaced test_array_for_body@3.ops[15]: 'v-load array%new_length%0#1' with 'l-load array%new_length%0#1'
debug: Inserted test_array_for_body@3.ops[5]: 'l-store-copy slot_contents%0#1 0'
debug: Replaced test_array_for_body@3.ops[14]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted test_array_for_body@3.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_array_for_body@3.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_after_for@4.ops[2]: 'l-store-copy slot_contents%13#0 0'
debug: Replaced test_array_after_for@4.ops[4]: 'v-load slot_contents%13#0' with 'l-load slot_contents%13#0'
debug: Inserted test_array_after_for@4.ops[6]: 'l-store-copy array%bytes_len%7#1 0'
debug: Replaced test_array_after_for@4.ops[8]: 'v-load array%bytes_len%7#1' with 'l-load array%bytes_len%7#1'
debug: Inserted test_array_after_for@4.ops[11]: 'l-store-copy array%array_len%7#1 0'
debug: Replaced test_array_after_for@4.ops[13]: 'v-load array%array_len%7#1' with 'l-load array%array_len%7#1'
debug: Inserted test_array_after_for@4.ops[16]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_array_after_for@4.ops[18]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_array_after_for@4.ops[23]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_array_after_for@4.ops[25]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_array_after_for@4.ops[32]: 'l-store-copy array%sub_item%13#1 0'
debug: Replaced test_array_after_for@4.ops[34]: 'v-load array%sub_item%13#1' with 'l-load array%sub_item%13#1'
debug: Inserted test_array_after_for@4.ops[37]: 'l-store-copy tmp%27#0 0'
debug: Replaced test_array_after_for@4.ops[39]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_array_after_for@4.ops[46]: 'l-store-copy slot_contents%16#0 0'
debug: Replaced test_array_after_for@4.ops[48]: 'v-load slot_contents%16#0' with 'l-load slot_contents%16#0'
debug: Inserted test_array_after_for@4.ops[50]: 'l-store-copy array%bytes_len%9#1 0'
debug: Replaced test_array_after_for@4.ops[52]: 'v-load array%bytes_len%9#1' with 'l-load array%bytes_len%9#1'
debug: Inserted test_array_after_for@4.ops[55]: 'l-store-copy array%array_len%9#1 0'
debug: Replaced test_array_after_for@4.ops[57]: 'v-load array%array_len%9#1' with 'l-load array%array_len%9#1'
debug: Inserted test_array_after_for@4.ops[60]: 'l-store-copy tmp%29#0 0'
debug: Replaced test_array_after_for@4.ops[62]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted test_array_after_for@4.ops[67]: 'l-store-copy tmp%31#0 0'
debug: Replaced test_array_after_for@4.ops[69]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted test_array_after_for@4.ops[76]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced test_array_after_for@4.ops[78]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted test_array_after_for@4.ops[81]: 'l-store-copy tmp%33#0 0'
debug: Replaced test_array_after_for@4.ops[83]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted test_array_after_for@4.ops[91]: 'l-store-copy array%array_contents%3#1 0'
debug: Replaced test_array_after_for@4.ops[93]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted test_array_after_for@4.ops[95]: 'l-store-copy array%bytes_len%11#1 0'
debug: Replaced test_array_after_for@4.ops[97]: 'v-load array%bytes_len%11#1' with 'l-load array%bytes_len%11#1'
debug: Inserted test_array_after_for@4.ops[100]: 'l-store-copy array%array_len%11#1 0'
debug: Replaced test_array_after_for@4.ops[102]: 'v-load array%array_len%11#1' with 'l-load array%array_len%11#1'
debug: Inserted test_array_after_for@4.ops[105]: 'l-store-copy tmp%35#0 0'
debug: Replaced test_array_after_for@4.ops[107]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted test_array_after_for@4.ops[112]: 'l-store-copy tmp%37#0 0'
debug: Replaced test_array_after_for@4.ops[114]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted test_array_after_for@4.ops[121]: 'l-store-copy array%sub_item%18#1 0'
debug: Replaced test_array_after_for@4.ops[123]: 'v-load array%sub_item%18#1' with 'l-load array%sub_item%18#1'
debug: Inserted test_array_after_for@4.ops[126]: 'l-store-copy tmp%39#0 0'
debug: Replaced test_array_after_for@4.ops[128]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted test_array_after_for@4.ops[143]: 'l-store-copy array%array_contents%5#1 0'
debug: Replaced test_array_after_for@4.ops[145]: 'v-load array%array_contents%5#1' with 'l-load array%array_contents%5#1'
debug: Inserted test_array_after_for@4.ops[148]: 'l-store-copy array%sub_item%22#1 0'
debug: Replaced test_array_after_for@4.ops[150]: 'v-load array%sub_item%22#1' with 'l-load array%sub_item%22#1'
debug: Inserted test_array_after_for@4.ops[153]: 'l-store-copy new_box_value%0#0 0'
debug: Replaced test_array_after_for@4.ops[155]: 'v-load new_box_value%0#0' with 'l-load new_box_value%0#0'
debug: Inserted test_array_after_for@4.ops[167]: 'l-store-copy array%bytes_len%13#1 0'
debug: Replaced test_array_after_for@4.ops[169]: 'v-load array%bytes_len%13#1' with 'l-load array%bytes_len%13#1'
debug: Inserted test_array_after_for@4.ops[172]: 'l-store-copy array%array_len%13#1 0'
debug: Replaced test_array_after_for@4.ops[174]: 'v-load array%array_len%13#1' with 'l-load array%array_len%13#1'
debug: Inserted test_array_after_for@4.ops[177]: 'l-store-copy tmp%43#0 0'
debug: Replaced test_array_after_for@4.ops[179]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted test_array_after_for@4.ops[184]: 'l-store-copy array%sub_item%25#1 0'
debug: Replaced test_array_after_for@4.ops[186]: 'v-load array%sub_item%25#1' with 'l-load array%sub_item%25#1'
debug: Inserted test_array_after_for@4.ops[189]: 'l-store-copy tmp%45#0 0'
debug: Replaced test_array_after_for@4.ops[191]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted test_array_after_for@4.ops[196]: 'l-store-copy tmp%47#0 0'
debug: Replaced test_array_after_for@4.ops[198]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted test_array_after_for@4.ops[205]: 'l-store-copy array%sub_item%27#1 0'
debug: Replaced test_array_after_for@4.ops[207]: 'v-load array%sub_item%27#1' with 'l-load array%sub_item%27#1'
debug: Inserted test_array_after_for@4.ops[210]: 'l-store-copy tmp%49#0 0'
debug: Replaced test_array_after_for@4.ops[212]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted test_array_after_for@4.ops[217]: 'l-store-copy tmp%51#0 0'
debug: Replaced test_array_after_for@4.ops[219]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted test_array_after_for@4.ops[226]: 'l-store-copy array%sub_item%29#1 0'
debug: Replaced test_array_after_for@4.ops[228]: 'v-load array%sub_item%29#1' with 'l-load array%sub_item%29#1'
debug: Inserted test_array_after_for@4.ops[231]: 'l-store-copy tmp%53#0 0'
debug: Replaced test_array_after_for@4.ops[233]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted test_array_after_for@4.ops[28]: 'l-store-copy array%bytes_index%5#1 0'
debug: Replaced test_array_after_for@4.ops[31]: 'v-load array%bytes_index%5#1' with 'l-load array%bytes_index%5#1'
debug: Inserted test_array_after_for@4.ops[73]: 'l-store-copy array%bytes_index%6#1 0'
debug: Replaced test_array_after_for@4.ops[76]: 'v-load array%bytes_index%6#1' with 'l-load array%bytes_index%6#1'
debug: Inserted test_array_after_for@4.ops[89]: 'l-store-copy array%sub_item%16#1 0'
debug: Replaced test_array_after_for@4.ops[92]: 'v-load array%sub_item%16#1' with 'l-load array%sub_item%16#1'
debug: Inserted test_array_after_for@4.ops[120]: 'l-store-copy array%bytes_index%7#1 0'
debug: Replaced test_array_after_for@4.ops[123]: 'v-load array%bytes_index%7#1' with 'l-load array%bytes_index%7#1'
debug: Inserted test_array_after_for@4.ops[136]: 'l-store-copy array%sub_item%19#1 0'
debug: Replaced test_array_after_for@4.ops[139]: 'v-load array%sub_item%19#1' with 'l-load array%sub_item%19#1'
debug: Inserted test_array_after_for@4.ops[144]: 'l-store-copy array%sub_item%20#1 0'
debug: Replaced test_array_after_for@4.ops[147]: 'v-load array%sub_item%20#1' with 'l-load array%sub_item%20#1'
debug: Inserted test_array_after_for@4.ops[163]: 'l-store-copy array%sub_item%23#1 0'
debug: Replaced test_array_after_for@4.ops[166]: 'v-load array%sub_item%23#1' with 'l-load array%sub_item%23#1'
debug: Inserted test_array_after_for@4.ops[168]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced test_array_after_for@4.ops[171]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted test_array_after_for@4.ops[172]: 'l-store-copy array%updated_array%0#1 1'
debug: Replaced test_array_after_for@4.ops[174]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted test_array_after_for@4.ops[210]: 'l-store-copy array%bytes_index%11#1 0'
debug: Replaced test_array_after_for@4.ops[213]: 'v-load array%bytes_index%11#1' with 'l-load array%bytes_index%11#1'
debug: Inserted test_array_after_for@4.ops[232]: 'l-store-copy array%bytes_index%12#1 0'
debug: Replaced test_array_after_for@4.ops[235]: 'v-load array%bytes_index%12#1' with 'l-load array%bytes_index%12#1'
debug: Inserted test_array_after_for@4.ops[43]: 'l-store-copy arr#0 0'
debug: Replaced test_array_after_for@4.ops[46]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_after_for@4.ops[142]: 'l-store-copy array%array_contents%4#1 0'
debug: Replaced test_array_after_for@4.ops[148]: 'v-load array%array_contents%4#1' with 'l-load array%array_contents%4#1'
debug: Inserted test_array_after_for@4.ops[14]: 'l-store-copy array%array_len%7#1 0'
debug: Replaced test_array_after_for@4.ops[21]: 'v-load array%array_len%7#1' with 'l-load array%array_len%7#1'
debug: Inserted test_array_after_for@4.ops[61]: 'l-store-copy array%array_len%9#1 0'
debug: Replaced test_array_after_for@4.ops[68]: 'v-load array%array_len%9#1' with 'l-load array%array_len%9#1'
debug: Inserted test_array_after_for@4.ops[109]: 'l-store-copy array%array_len%11#1 0'
debug: Replaced test_array_after_for@4.ops[116]: 'v-load array%array_len%11#1' with 'l-load array%array_len%11#1'
debug: Inserted test_array_after_for@4.ops[157]: 'l-store-copy array%array_contents%5#1 0'
debug: Replaced test_array_after_for@4.ops[171]: 'v-load array%array_contents%5#1' with 'l-load array%array_contents%5#1'
debug: Inserted test_array_after_for@4.ops[79]: 'l-store-copy slot_contents%16#0 1'
debug: Replaced test_array_after_for@4.ops[95]: 'v-load slot_contents%16#0' with 'l-load slot_contents%16#0'
debug: Inserted test_array_after_for@4.ops[128]: 'l-store-copy array%array_contents%3#1 1'
debug: Replaced test_array_after_for@4.ops[144]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted test_array_after_for@4.ops[183]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced test_array_after_for@4.ops[199]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted test_array_after_for@4.ops[193]: 'l-store-copy array%array_len%13#1 1'
debug: Replaced test_array_after_for@4.ops[212]: 'v-load array%array_len%13#1' with 'l-load array%array_len%13#1'
debug: Inserted test_array_after_for@4.ops[201]: 'l-store-copy array%updated_array%0#1 1'
debug: Replaced test_array_after_for@4.ops[223]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted test_array_after_for@4.ops[214]: 'l-store-copy array%array_len%13#1 1'
debug: Replaced test_array_after_for@4.ops[236]: 'v-load array%array_len%13#1' with 'l-load array%array_len%13#1'
debug: Inserted test_array_after_for@4.ops[225]: 'l-store-copy array%updated_array%0#1 2'
debug: Replaced test_array_after_for@4.ops[247]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted test_array_after_for@4.ops[5]: 'l-store-copy slot_contents%13#0 0'
debug: Replaced test_array_after_for@4.ops[32]: 'v-load slot_contents%13#0' with 'l-load slot_contents%13#0'
debug: Inserted test_array_after_for@4.ops[53]: 'l-store-copy slot_contents%16#0 0'
debug: Replaced test_array_after_for@4.ops[80]: 'v-load slot_contents%16#0' with 'l-load slot_contents%16#0'
debug: Inserted test_array_after_for@4.ops[103]: 'l-store-copy array%array_contents%3#1 0'
debug: Replaced test_array_after_for@4.ops[130]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted test_array_after_for@4.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_array_after_for@4.ops[45]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_after_for@4.ops[50]: 'l-store-copy arr#0 0'
debug: Replaced test_array_after_for@4.ops[183]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_extend.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_array_extend.ops[3]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_extend.ops[13]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_array_extend.ops[15]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_array_extend.ops[24]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_extend.ops[26]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_extend.ops[29]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_extend.ops[31]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_extend.ops[34]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_extend.ops[36]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_extend.ops[18]: 'l-store-copy array%array_contents%3#1 0'
debug: Replaced test_array_extend.ops[21]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted test_array_extend.ops[22]: 'l-store-copy array%array_contents%3#1 1'
debug: Replaced test_array_extend.ops[24]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted test_array_extend.ops[4]: 'l-store-copy arr#0 0'
debug: Replaced test_array_extend.ops[7]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_extend.ops[8]: 'l-store-copy arr#0 0'
debug: Replaced test_array_extend.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_extend.ops[14]: 'l-store-copy arr#0 0'
debug: Replaced test_array_extend.ops[23]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_array_multiple_append.ops[3]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[14]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_multiple_append.ops[16]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_multiple_append.ops[39]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_multiple_append.ops[41]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_multiple_append.ops[44]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_multiple_append.ops[46]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_multiple_append.ops[49]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_multiple_append.ops[51]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_multiple_append.ops[22]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array_multiple_append.ops[25]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array_multiple_append.ops[30]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array_multiple_append.ops[33]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array_multiple_append.ops[35]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_multiple_append.ops[38]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_multiple_append.ops[39]: 'l-store-copy array%array_contents%2#1 1'
debug: Replaced test_array_multiple_append.ops[41]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_multiple_append.ops[4]: 'l-store-copy arr#0 0'
debug: Replaced test_array_multiple_append.ops[7]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[20]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array_multiple_append.ops[26]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array_multiple_append.ops[29]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_multiple_append.ops[35]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_multiple_append.ops[12]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_multiple_append.ops[19]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_multiple_append.ops[8]: 'l-store-copy arr#0 0'
debug: Replaced test_array_multiple_append.ops[15]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[16]: 'l-store-copy arr#0 1'
debug: Replaced test_array_multiple_append.ops[43]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_too_long_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_array_too_long_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_array_too_long_for_body@2.ops[4]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_too_long_for_body@2.ops[6]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_too_long_for_body@2.ops[9]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array_too_long_for_body@2.ops[11]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array_too_long_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_too_long_for_body@2.ops[8]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_too_long_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced test_array_too_long_for_body@2.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_too_long_after_for@4.ops[1]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[3]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_too_long_after_for@4.ops[5]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[7]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_too_long_after_for@4.ops[10]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[12]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_too_long_after_for@4.ops[15]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[17]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_too_long_after_for@4.ops[25]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[27]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_too_long_after_for@4.ops[21]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[24]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array_too_long_after_for@4.ops[4]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[24]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_copy_and_extend_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_array_copy_and_extend_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[4]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[6]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[9]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[11]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[8]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[1]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[3]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[9]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[11]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[14]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[16]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[20]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[22]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[25]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[27]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[30]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[32]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[37]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[39]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[46]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[48]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[51]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[53]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[56]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[58]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[60]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[62]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[65]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[67]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[70]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[72]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[77]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[79]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[86]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[88]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[91]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[93]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[98]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[100]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[104]: 'l-store-copy array%bytes_len%4#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[106]: 'v-load array%bytes_len%4#1' with 'l-load array%bytes_len%4#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[109]: 'l-store-copy array%array_len%4#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[111]: 'v-load array%array_len%4#1' with 'l-load array%array_len%4#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[114]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[116]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[119]: 'l-store-copy slot_contents%12#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[121]: 'v-load slot_contents%12#0' with 'l-load slot_contents%12#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[123]: 'l-store-copy array%bytes_len%5#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[125]: 'v-load array%bytes_len%5#1' with 'l-load array%bytes_len%5#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[128]: 'l-store-copy array%array_len%5#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[130]: 'v-load array%array_len%5#1' with 'l-load array%array_len%5#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[133]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[135]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[140]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[142]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[149]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[151]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[154]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[156]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[161]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[163]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[166]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[168]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[173]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[175]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[178]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[180]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[185]: 'l-store-copy array%sub_item%13#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[187]: 'v-load array%sub_item%13#1' with 'l-load array%sub_item%13#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[189]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[191]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[17]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[19]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[43]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[46]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[84]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[87]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[104]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[106]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[149]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[152]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[7]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[13]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[30]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[37]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[72]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[79]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[1]: 'l-store-copy slot%0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[10]: 'v-load slot%0' with 'l-load slot%0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[156]: 'l-store-copy array%array_contents%2#1 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[168]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[169]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[181]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[182]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[194]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[91]: 'l-store-copy slot_contents%6#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[104]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[22]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[49]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[65]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[92]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[123]: 'l-store-copy array%array_len%4#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[149]: 'v-load array%array_len%4#1' with 'l-load array%array_len%4#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[114]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[160]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[5]: 'l-store-copy slot%1 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[62]: 'v-load slot%1' with 'l-load slot%1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[51]: 'l-store-copy array%array_contents%1#1 2'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[107]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[64]: 'l-store-copy slot%1 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[134]: 'v-load slot%1' with 'l-load slot%1'
debug: Inserted test_array_evaluation_order.ops[13]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_evaluation_order.ops[15]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_evaluation_order.ops[20]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array_evaluation_order.ops[22]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array_evaluation_order.ops[31]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_evaluation_order.ops[33]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_evaluation_order.ops[35]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_evaluation_order.ops[37]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_evaluation_order.ops[40]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_evaluation_order.ops[42]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_evaluation_order.ops[45]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_array_evaluation_order.ops[47]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_array_evaluation_order.ops[52]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array_evaluation_order.ops[54]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array_evaluation_order.ops[57]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_array_evaluation_order.ops[59]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_array_evaluation_order.ops[64]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_array_evaluation_order.ops[66]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_array_evaluation_order.ops[69]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_array_evaluation_order.ops[71]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_array_evaluation_order.ops[76]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced test_array_evaluation_order.ops[78]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted test_array_evaluation_order.ops[81]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_array_evaluation_order.ops[83]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array_evaluation_order.ops[88]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced test_array_evaluation_order.ops[90]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted test_array_evaluation_order.ops[93]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_array_evaluation_order.ops[95]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_array_evaluation_order.ops[100]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced test_array_evaluation_order.ops[102]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted test_array_evaluation_order.ops[105]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_array_evaluation_order.ops[107]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_array_evaluation_order.ops[112]: 'l-store-copy array%sub_item%12#1 0'
debug: Replaced test_array_evaluation_order.ops[114]: 'v-load array%sub_item%12#1' with 'l-load array%sub_item%12#1'
debug: Inserted test_array_evaluation_order.ops[117]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_array_evaluation_order.ops[119]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_array_evaluation_order.ops[4]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_evaluation_order.ops[7]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_evaluation_order.ops[26]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_evaluation_order.ops[29]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_evaluation_order.ops[7]: 'l-store-copy arr#0 1'
debug: Replaced test_array_evaluation_order.ops[10]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[11]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[14]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[7]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[21]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_evaluation_order.ops[28]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_evaluation_order.ops[14]: 'l-store-copy tmp%0#0 1'
debug: Replaced test_array_evaluation_order.ops[24]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array_evaluation_order.ops[25]: 'l-store-copy tmp%0#0 1'
debug: Replaced test_array_evaluation_order.ops[34]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array_evaluation_order.ops[58]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_evaluation_order.ops[70]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_evaluation_order.ops[71]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_evaluation_order.ops[83]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_evaluation_order.ops[84]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_evaluation_order.ops[96]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_evaluation_order.ops[97]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_evaluation_order.ops[109]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_evaluation_order.ops[110]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_evaluation_order.ops[122]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_evaluation_order.ops[42]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_evaluation_order.ops[58]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_evaluation_order.ops[17]: 'l-store-copy arr#0 1'
debug: Replaced test_array_evaluation_order.ops[38]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_allocations_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_allocations_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_allocations_for_body@2.ops[1]: 'l-store-copy alloc_test#0 0'
debug: Replaced test_allocations_for_body@2.ops[3]: 'v-load alloc_test#0' with 'l-load alloc_test#0'
debug: Inserted test_allocations_for_body@2.ops[4]: 'l-store-copy alloc_test#0 0'
debug: Replaced test_allocations_for_body@2.ops[7]: 'v-load alloc_test#0' with 'l-load alloc_test#0'
debug: Inserted test_iteration_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_iteration_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_iteration_for_body@2.ops[4]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_iteration_for_body@2.ops[6]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_iteration_for_body@2.ops[9]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_iteration_for_body@2.ops[11]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_iteration_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_iteration_for_body@2.ops[8]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_iteration_for_body@2.ops[1]: 'l-store-copy val#0 0'
debug: Replaced test_iteration_for_body@2.ops[15]: 'v-load val#0' with 'l-load val#0'
debug: Inserted test_iteration_after_for@4.ops[1]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_iteration_after_for@4.ops[3]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_iteration_after_for@4.ops[5]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_iteration_after_for@4.ops[7]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_iteration_after_for@4.ops[10]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_iteration_after_for@4.ops[12]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_iteration_after_for@4.ops[15]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_iteration_after_for@4.ops[17]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_iteration_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_iteration_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_iteration_for_body@6.ops[9]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@6.ops[11]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_for_body@6.ops[14]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_iteration_for_body@6.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_iteration_for_body@6.ops[5]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_iteration_for_body@6.ops[8]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_iteration_for_body@6.ops[1]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_iteration_for_body@6.ops[8]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_iteration_for_body@6.ops[14]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@6.ops[25]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_for_body@6.ops[4]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced test_iteration_for_body@6.ops[22]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted test_iteration_after_for@8.ops[1]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_iteration_after_for@8.ops[3]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_iteration_after_for@8.ops[5]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_iteration_after_for@8.ops[7]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_iteration_after_for@8.ops[12]: 'l-store-copy item_index_internal%1#0 0'
debug: Replaced test_iteration_after_for@8.ops[14]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted test_iteration_for_header@9.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced test_iteration_for_header@9.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted test_iteration_for_body@10.ops[9]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@10.ops[11]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_for_body@10.ops[14]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_iteration_for_body@10.ops[16]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_iteration_for_body@10.ops[21]: 'l-store-copy item_index_internal%1#0 0'
debug: Replaced test_iteration_for_body@10.ops[23]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted test_iteration_for_body@10.ops[5]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced test_iteration_for_body@10.ops[8]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted test_iteration_for_body@10.ops[1]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_iteration_for_body@10.ops[8]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_iteration_for_body@10.ops[15]: 'l-store-copy idx#0 1'
debug: Replaced test_iteration_for_body@10.ops[21]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_iteration_for_body@10.ops[4]: 'l-store-copy idx#0 1'
debug: Replaced test_iteration_for_body@10.ops[15]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_iteration_after_for@12.ops[1]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced test_iteration_after_for@12.ops[3]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted test_iteration_after_for@12.ops[5]: 'l-store-copy array%bytes_len%3#1 0'
debug: Replaced test_iteration_after_for@12.ops[7]: 'v-load array%bytes_len%3#1' with 'l-load array%bytes_len%3#1'
debug: Inserted test_iteration_after_for@12.ops[10]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced test_iteration_after_for@12.ops[12]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted test_iteration_for_body@14.ops[13]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@14.ops[15]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_for_body@14.ops[18]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_iteration_for_body@14.ops[20]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_iteration_for_body@14.ops[9]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced test_iteration_for_body@14.ops[12]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted test_iteration_for_body@14.ops[3]: 'l-store-copy reverse_index_internal%2#1 0'
debug: Replaced test_iteration_for_body@14.ops[7]: 'v-load reverse_index_internal%2#1' with 'l-load reverse_index_internal%2#1'
debug: Inserted test_iteration_for_body@14.ops[6]: 'l-store-copy slot_contents%7#0 1'
debug: Replaced test_iteration_for_body@14.ops[13]: 'v-load slot_contents%7#0' with 'l-load slot_contents%7#0'
debug: Inserted test_iteration_for_body@14.ops[19]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@14.ops[26]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_for_header@17.ops[3]: 'l-store-copy continue_looping%4#0 0'
debug: Replaced test_iteration_for_header@17.ops[5]: 'v-load continue_looping%4#0' with 'l-load continue_looping%4#0'
debug: Inserted test_iteration_for_body@18.ops[9]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[11]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_iteration_for_body@18.ops[13]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[15]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_iteration_for_body@18.ops[18]: 'l-store-copy len_%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[20]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_iteration_for_body@18.ops[22]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[24]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_iteration_for_body@18.ops[26]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[28]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_iteration_for_body@18.ops[33]: 'l-store-copy slot_contents%8#0 0'
debug: Replaced test_iteration_for_body@18.ops[35]: 'v-load slot_contents%8#0' with 'l-load slot_contents%8#0'
debug: Inserted test_iteration_for_body@18.ops[38]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_iteration_for_body@18.ops[40]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_iteration_for_body@18.ops[5]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[8]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_iteration_for_body@18.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[8]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_iteration_for_body@18.ops[14]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[32]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_iteration_for_body@18.ops[10]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced test_iteration_for_body@18.ops[40]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_iteration_for_body@18.ops[5]: 'l-store-copy i#0 1'
debug: Replaced test_iteration_for_body@18.ops[47]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_iteration_after_for@20.ops[8]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[10]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_iteration_after_for@20.ops[12]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[14]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_iteration_after_for@20.ops[17]: 'l-store-copy len_%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[19]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_iteration_after_for@20.ops[21]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[23]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_iteration_after_for@20.ops[25]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[27]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_iteration_after_for@20.ops[30]: 'l-store-copy combined_arr#0 0'
debug: Replaced test_iteration_after_for@20.ops[32]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted test_iteration_after_for@20.ops[35]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_iteration_after_for@20.ops[37]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_iteration_after_for@20.ops[40]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_iteration_after_for@20.ops[42]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_iteration_after_for@20.ops[46]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_iteration_after_for@20.ops[48]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_iteration_after_for@20.ops[50]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced test_iteration_after_for@20.ops[52]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted test_iteration_after_for@20.ops[55]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_iteration_after_for@20.ops[57]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_iteration_after_for@20.ops[61]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced test_iteration_after_for@20.ops[63]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted test_iteration_after_for@20.ops[66]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_iteration_after_for@20.ops[68]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_iteration_after_for@20.ops[72]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced test_iteration_after_for@20.ops[74]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted test_iteration_after_for@20.ops[77]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_iteration_after_for@20.ops[79]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_iteration_after_for@20.ops[83]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced test_iteration_after_for@20.ops[85]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted test_iteration_after_for@20.ops[88]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_iteration_after_for@20.ops[90]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_iteration_after_for@20.ops[4]: 'l-store-copy slot_contents%9#0 0'
debug: Replaced test_iteration_after_for@20.ops[7]: 'v-load slot_contents%9#0' with 'l-load slot_contents%9#0'
debug: Inserted test_iteration_after_for@20.ops[2]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[7]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_iteration_after_for@20.ops[51]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_iteration_after_for@20.ops[62]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_iteration_after_for@20.ops[63]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_iteration_after_for@20.ops[74]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_iteration_after_for@20.ops[75]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_iteration_after_for@20.ops[86]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_iteration_after_for@20.ops[35]: 'l-store-copy combined_arr#0 0'
debug: Replaced test_iteration_after_for@20.ops[47]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted test_iteration_after_for@20.ops[13]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[31]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_quicksort.ops[1]: 'l-store-copy rnd#0 0'
debug: Replaced test_quicksort.ops[3]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted test_quicksort.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_quicksort.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_quicksort_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_quicksort_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_quicksort_for_body@2.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_quicksort_for_body@2.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_quicksort_for_body@2.ops[10]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_quicksort_for_body@2.ops[12]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_quicksort_for_body@2.ops[15]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_quicksort_for_body@2.ops[18]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_quicksort_for_body@2.ops[7]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_quicksort_for_body@2.ops[14]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_quicksort_for_body@2.ops[10]: 'l-store-copy rnd#0 1'
debug: Replaced test_quicksort_for_body@2.ops[19]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted test_quicksort_for_body@2.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced test_quicksort_for_body@2.ops[23]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted test_quicksort_after_for@4.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_quicksort_after_for@4.ops[4]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_quicksort_after_for@4.ops[6]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_quicksort_after_for@4.ops[8]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_quicksort_after_for@4.ops[11]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_quicksort_after_for@4.ops[13]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_quicksort_after_for@4.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_quicksort_after_for@4.ops[18]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_quicksort_after_for@4.ops[32]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_quicksort_after_for@4.ops[34]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_quicksort_after_for@4.ops[36]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_quicksort_after_for@4.ops[38]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_quicksort_after_for@4.ops[23]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_quicksort_after_for@4.ops[27]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_quicksort_after_for@4.ops[14]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_quicksort_after_for@4.ops[21]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_quicksort_after_for@4.ops[27]: 'l-store-copy rnd#0 1'
debug: Replaced test_quicksort_after_for@4.ops[33]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted test_quicksort_after_for@4.ops[1]: 'l-store-copy rnd#0 0'
debug: Replaced test_quicksort_after_for@4.ops[27]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted test_quicksort_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_quicksort_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_quicksort_for_body@6.ops[10]: 'l-store-copy value#0 0'
debug: Replaced test_quicksort_for_body@6.ops[12]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_quicksort_for_body@6.ops[15]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_quicksort_for_body@6.ops[17]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_quicksort_for_body@6.ops[6]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_quicksort_for_body@6.ops[9]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_quicksort_for_body@6.ops[2]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_quicksort_for_body@6.ops[9]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_quicksort_for_body@6.ops[15]: 'l-store-copy value#0 0'
debug: Replaced test_quicksort_for_body@6.ops[26]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_quicksort_for_body@6.ops[5]: 'l-store-copy item_index_internal%1#0 1'
debug: Replaced test_quicksort_for_body@6.ops[23]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted _puya_lib.mem.new_slot.ops[2]: 'l-store-copy free_slot#0 0'
debug: Replaced _puya_lib.mem.new_slot.ops[6]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Inserted _puya_lib.mem.new_slot.ops[7]: 'l-store-copy free_slot#0 2'
debug: Replaced _puya_lib.mem.new_slot.ops[12]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Found 3 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_array_route@3 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_extend_route@4 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_multiple_append_route@5 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_overhead_route@6 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_too_long_route@7 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_copy_and_extend_route@8 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_evaluation_order_route@9 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_allocations_route@10 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_iteration_route@11 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_quicksort_route@12 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main___algopy_default_create@16 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_if_else@19 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: Found 7 edge set/s for test_cases.array.uint64.quicksort_window
debug: Found 2 edge set/s for test_cases.array.uint64.add_x
debug: Found 2 edge set/s for test_cases.array.uint64.Contract.test_array
debug: Found 2 edge set/s for test_cases.array.uint64.Contract.test_array_too_long
debug: Found 2 edge set/s for test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Found 2 edge set/s for test_cases.array.uint64.Contract.test_allocations
debug: Found 10 edge set/s for test_cases.array.uint64.Contract.test_iteration
debug: Found 4 edge set/s for test_cases.array.uint64.Contract.test_quicksort
debug: test_cases.array.uint64.quicksort_window f-stack entry: ['array%bytes_index%1#1', 'array%bytes_index%2#1', 'right#16']
debug: test_cases.array.uint64.quicksort_window f-stack on first store: ['pivot#0', 'right#1', 'left#1']
debug: test_cases.array.uint64.add_x f-stack entry: []
debug: test_cases.array.uint64.add_x f-stack on first store: ['i#0']
debug: test_cases.array.uint64.Contract.test_array f-stack entry: []
debug: test_cases.array.uint64.Contract.test_array f-stack on first store: ['arr#0', '_i#0']
debug: test_cases.array.uint64.Contract.test_array_too_long f-stack entry: []
debug: test_cases.array.uint64.Contract.test_array_too_long f-stack on first store: ['slot%0', 'i#0']
debug: test_cases.array.uint64.Contract.test_array_copy_and_extend f-stack entry: []
debug: test_cases.array.uint64.Contract.test_array_copy_and_extend f-stack on first store: ['slot%0', 'i#0']
debug: test_cases.array.uint64.Contract.test_allocations f-stack entry: []
debug: test_cases.array.uint64.Contract.test_allocations f-stack on first store: ['_i#0']
debug: test_cases.array.uint64.Contract.test_iteration f-stack entry: ['arc4_arr#0', 'slot%1', 'array%array_len%0#1', 'array%array_len%2#1', 'i#0', 'idx#0', 'item_index_internal%0#0', 'last#0', 'reverse_index_internal%2#1']
debug: test_cases.array.uint64.Contract.test_iteration f-stack on first store: ['slot%0', 'val#0']
debug: test_cases.array.uint64.Contract.test_quicksort f-stack entry: ['array%array_len%2#1', 'item_index_internal%1#0', 'last#0']
debug: test_cases.array.uint64.Contract.test_quicksort f-stack on first store: ['rnd#0', 'tmp%0#0', 'bytes_length%0#0', 'item_index_internal%0#0']
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20 into main_after_if_else@19
debug: inlining single reference block main___algopy_default_create@16 into main_bare_routing@15
debug: removing explicit jump to fall-through block main_after_if_else@19
array/uint64.py:168 debug: optimizing TEAL subroutine test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
debug: inlining single reference block quicksort_window_while_body@4 into quicksort_window_while_top@3
debug: inlining single reference block quicksort_window_while_body@7 into quicksort_window_while_top@6
debug: inlining single reference block quicksort_window_after_if_else@9 into quicksort_window_while_top@6
debug: inlining single reference block quicksort_window_if_body@23 into quicksort_window_after_while@22
debug: inlining single reference block quicksort_window_if_body@25 into quicksort_window_after_if_else@24
debug: inlining single reference block quicksort_window_if_body@11 into quicksort_window_after_while@10
debug: inlining single reference block quicksort_window_after_if_else@13 into quicksort_window_after_while@10
debug: inlining single reference block quicksort_window_if_body@17 into quicksort_window_after_if_else@16
debug: inlining single reference block quicksort_window_if_body@18 into quicksort_window_after_if_else@16
debug: removing explicit jump to fall-through block quicksort_window_while_top@3
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@24
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@26
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@19
array/uint64.py:227 debug: optimizing TEAL subroutine test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
debug: inlining single reference block add_x_for_body@2 into add_x_for_header@1
debug: removing explicit jump to fall-through block add_x_for_header@1
array/uint64.py:239 debug: optimizing TEAL subroutine test_cases.array.uint64.append_5_and_return(arr: uint64) -> uint64:
array/uint64.py:5 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array() -> void:
debug: inlining single reference block test_array_for_body@3 into test_array_for_header@2
debug: removing explicit jump to fall-through block test_array_for_header@2
array/uint64.py:41 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_extend() -> void:
array/uint64.py:53 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_multiple_append() -> void:
array/uint64.py:66 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_too_long() -> void:
debug: inlining single reference block test_array_too_long_for_body@2 into test_array_too_long_for_header@1
debug: removing explicit jump to fall-through block test_array_too_long_for_header@1
array/uint64.py:75 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend() -> void:
debug: inlining single reference block test_array_copy_and_extend_for_body@2 into test_array_copy_and_extend_for_header@1
debug: removing explicit jump to fall-through block test_array_copy_and_extend_for_header@1
array/uint64.py:97 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_evaluation_order() -> void:
array/uint64.py:110 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_allocations(num: uint64) -> void:
debug: inlining single reference block test_allocations_for_body@2 into test_allocations_for_header@1
debug: removing explicit jump to fall-through block test_allocations_for_header@1
array/uint64.py:116 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_iteration() -> void:
debug: inlining single reference block test_iteration_for_body@2 into test_iteration_for_header@1
debug: inlining single reference block test_iteration_for_body@6 into test_iteration_for_header@5
debug: inlining single reference block test_iteration_for_body@10 into test_iteration_for_header@9
debug: inlining single reference block test_iteration_for_body@14 into test_iteration_for_header@13
debug: inlining single reference block test_iteration_for_body@18 into test_iteration_for_header@17
debug: removing explicit jump to fall-through block test_iteration_for_header@1
debug: removing explicit jump to fall-through block test_iteration_for_header@5
debug: removing explicit jump to fall-through block test_iteration_for_header@9
debug: removing explicit jump to fall-through block test_iteration_for_header@13
debug: removing explicit jump to fall-through block test_iteration_for_header@17
array/uint64.py:150 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_quicksort() -> void:
debug: inlining single reference block test_quicksort_for_body@2 into test_quicksort_for_header@1
debug: inlining single reference block test_quicksort_for_body@6 into test_quicksort_for_header@5
debug: removing explicit jump to fall-through block test_quicksort_for_header@1
debug: removing explicit jump to fall-through block test_quicksort_for_header@5
debug: optimizing TEAL subroutine _puya_lib.mem.new_slot() -> uint64:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.approval.0.ssa.ir
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.clear.0.ssa.ir
debug: optimizing approval program of test_cases.array.fixed_size.FixedSizeContract at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.array.fixed_size.path_length for inlining
debug: marking single-use function test_cases.array.fixed_size.FixedSizeContract.__init__ for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: inlining call to test_cases.array.fixed_size.FixedSizeContract.__init__ in test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: point.x#0, reinterpret_biguint%0#0
debug: Found equivalence set: last_point.x#0, reinterpret_biguint%1#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@9 with block@8 in block@1
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.fixed_size.FixedSizeContract.__algopy_default_create in test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%10#0 NoOp) to (! tmp%10#0)
debug: Simplified (== tmp%16#0 NoOp) to (! tmp%16#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== tmp%30#0 0u) to (! tmp%30#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@8 from switch tmp%29#0 {0u => block@9, * => block@10} to goto_nth [block@9][tmp%29#0] else goto block@10
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@8 from goto_nth [block@9][tmp%29#0] else goto block@10 to goto tmp%29#0 ? block@10 : block@9
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@7 with block@6 in block@12
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@13 with block@9 in block@14
debug: Merged linear block@13 into block@9
debug: Merged linear block@14 into block@9
debug: Replaced predecessor block@11 with block@10 in block@12
debug: Merged linear block@11 into block@10
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@6
debug: Removed empty block: block@10
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
array/fixed_size.py:41:16 debug: inlining call to test_cases.array.fixed_size.path_length in test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, path#0, path#1
debug: Found equivalence set: slot_contents%0#1, slot_contents%1#1
debug: Found equivalence set: length#3, tmp%40#0
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 tmp%25#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) tmp%25#0) // on error: Index access is out of bounds
debug: Simplified (extract3 tmp%34#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) tmp%34#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Merged linear block@15 into block@14
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%35#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/fixed_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=0),)
debug: Replacing redundant declaration let tmp%36#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/fixed_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=0),)
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/fixed_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=0),)
debug: Found equivalence set: tmp%18#0, tmp%35#0, tmp%36#0, i#2
debug: Copy propagation made 4 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%3#0 0u) to (! tmp%3#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@5
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: Found equivalence set: array_data%0#0, arc4_arr#0
debug: Found equivalence set: concat_result%0#0, arc4_arr#1
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%5#0) to slot_contents%5#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@5
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%26#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@7
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.fixed_size.path_length
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.__init__
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.approval.1.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__ in test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%26#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@9
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%26#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%0#0, slot_contents%1#0, slot_contents%2#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: Found equivalence set: slot_contents%2#0, slot_contents%3#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: Found equivalence set: slot_contents%2#0, slot_contents%3#0
debug: Found equivalence set: slot_contents%5#0, concatenated%0#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable arc4_arr#0
debug: Removing unused variable expr_value_trimmed%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: Found equivalence set: extended%0#0, slot_contents%1#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.approval.2.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.fixed_size.FixedSizeContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.fixed_size.FixedSizeContract
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.approval.3.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.array.fixed_size.FixedSizeContract
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.clear.1.ssa.array.ir
debug: optimizing approval program of test_cases.array.fixed_size.FixedSizeContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%2#1, encoded%0#0
debug: Found equivalence set: array%sub_item%9#1, tmp%12#0
debug: Found equivalence set: array%sub_item%11#1, tmp%13#0
debug: Found equivalence set: array%sub_item%13#1, tmp%14#0
debug: Found equivalence set: array%sub_item%15#1, tmp%15#0
debug: Found equivalence set: array%sub_item%16#1, tmp%16#0
debug: Found equivalence set: array%sub_item%17#1, tmp%17#0
debug: Found equivalence set: array%sub_item%18#1, tmp%20#0
debug: Found equivalence set: array%sub_item%20#1, tmp%21#0
debug: Found equivalence set: array%sub_item%22#1, tmp%22#0
debug: Found equivalence set: array%sub_item%24#1, tmp%23#0
debug: Found equivalence set: array%sub_item%25#1, tmp%24#0
debug: Found equivalence set: array%sub_item%26#1, tmp%25#0
debug: Found equivalence set: array%sub_item%27#1, tmp%29#0
debug: Found equivalence set: array%sub_item%29#1, tmp%30#0
debug: Found equivalence set: array%sub_item%31#1, tmp%31#0
debug: Found equivalence set: array%sub_item%33#1, tmp%32#0
debug: Found equivalence set: array%sub_item%34#1, tmp%33#0
debug: Found equivalence set: array%sub_item%35#1, tmp%34#0
debug: Found equivalence set: array%sub_item%36#1, last_point.x#0
debug: Found equivalence set: array%sub_item%38#1, last_point.y#0
debug: Found equivalence set: array%sub_item%40#1, last_point.other.a#0
debug: Found equivalence set: array%sub_item%42#1, last_point.other.b#0
debug: Found equivalence set: array%sub_item%43#1, last_point.other.c#0
debug: Found equivalence set: array%sub_item%44#1, last_point.other.d#0
debug: Found equivalence set: array%array_len%0#1, tmp%0#1
debug: Found equivalence set: array%sub_item%45#1, point.x#0
debug: Found equivalence set: array%sub_item%47#1, point.y#0
debug: Found equivalence set: array%sub_item%49#1, point.other.a#0
debug: Found equivalence set: array%sub_item%51#1, point.other.b#0
debug: Found equivalence set: array%sub_item%52#1, point.other.c#0
debug: Found equivalence set: array%sub_item%53#1, point.other.d#0
debug: Copy propagation made 17 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%9#1
debug: Removing unused variable array%sub_item%11#1
debug: Removing unused variable array%sub_item%13#1
debug: Removing unused variable array%sub_item%16#1
debug: Removing unused variable array%sub_item%17#1
debug: Removing unused variable array%sub_item%18#1
debug: Removing unused variable array%sub_item%20#1
debug: Removing unused variable array%sub_item%22#1
debug: Removing unused variable array%sub_item%24#1
debug: Removing unused variable array%sub_item%25#1
debug: Removing unused variable array%sub_item%27#1
debug: Removing unused variable array%sub_item%29#1
debug: Removing unused variable array%sub_item%31#1
debug: Removing unused variable array%sub_item%33#1
debug: Removing unused variable array%sub_item%34#1
debug: Removing unused variable last_point.other.a#0
debug: Removing unused variable last_point.other.b#0
debug: Removing unused variable last_point.other.c#0
debug: Removing unused variable last_point.other.d#0
debug: Removing unused variable point.other.a#0
debug: Removing unused variable point.other.b#0
debug: Removing unused variable point.other.c#0
debug: Removing unused variable point.other.d#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x0000000000000000) to 0x0000000000000000
debug: Simplified (concat 0x0000000000000000 array%sub_item%0#1) to 0x00000000000000000000000000000000
debug: Simplified (concat 0x array%encoded%5#1) to array%encoded%5#1
debug: Simplified (concat 0x x1#0) to x1#0
debug: Simplified (concat 0x x2#0) to x2#0
debug: couldn't simplify (extract3 array%value%0#1 8u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1), op_start=8
debug: couldn't simplify (extract3 array%value%0#1 16u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1), op_start=16
debug: couldn't simplify (extract3 array%value%0#1 24u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1), op_start=24
debug: Simplified (btoi array%sub_item%14#1) to (extract_uint64 array%value%0#1 24u)
debug: couldn't simplify (extract3 array%value%1#1 8u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:38:19-26, ir_type=uint64, name='array%bytes_index%1', version=1), op_start=8
debug: couldn't simplify (extract3 array%value%1#1 16u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:38:19-26, ir_type=uint64, name='array%bytes_index%1', version=1), op_start=16
debug: couldn't simplify (extract3 array%value%1#1 24u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:38:19-26, ir_type=uint64, name='array%bytes_index%1', version=1), op_start=24
debug: couldn't simplify (extract3 array%value%1#1 64u 16u) due to starts: src_start=Register(source_location=array/fixed_size.py:38:19-26, ir_type=uint64, name='array%bytes_index%1', version=1), op_start=64
debug: Simplified ((extract 0 8) array%sub_item%26#1) // on error: Index access is out of bounds to (extract3 array%value%1#1 64u 8u)
debug: couldn't simplify (extract3 array%value%2#1 8u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:39:19-26, ir_type=uint64, name='array%bytes_index%2', version=1), op_start=8
debug: couldn't simplify (extract3 array%value%2#1 16u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:39:19-26, ir_type=uint64, name='array%bytes_index%2', version=1), op_start=16
debug: couldn't simplify (extract3 array%value%2#1 24u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:39:19-26, ir_type=uint64, name='array%bytes_index%2', version=1), op_start=24
debug: couldn't simplify (extract3 array%value%2#1 64u 16u) due to starts: src_start=Register(source_location=array/fixed_size.py:39:19-26, ir_type=uint64, name='array%bytes_index%2', version=1), op_start=64
debug: Simplified ((extract 8 8) array%sub_item%35#1) // on error: Index access is out of bounds to (extract3 array%value%2#1 72u 8u)
debug: Simplified (* 0u 80u) to 0u
debug: Simplified (extract3 array%value%3#1 0u 8u) to (extract3 slot_contents%0#1 0u 8u)
debug: Simplified (extract3 array%value%3#1 8u 8u) to (extract3 slot_contents%0#1 8u 8u)
debug: Simplified (btoi array%sub_item%37#1) to (extract_uint64 slot_contents%0#1 8u)
debug: Simplified (extract3 array%value%3#1 16u 8u) to (extract3 slot_contents%0#1 16u 8u)
debug: Simplified (extract3 array%value%3#1 24u 8u) to (extract3 slot_contents%0#1 24u 8u)
debug: Simplified (extract3 array%value%4#1 0u 8u) to (extract3 slot_contents%2#1 array%bytes_index%4#1 8u)
debug: couldn't simplify (extract3 array%value%4#1 8u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:102:16-31, ir_type=uint64, name='array%bytes_index%4', version=1), op_start=8
debug: Simplified (btoi array%sub_item%46#1) to (extract_uint64 array%value%4#1 8u)
debug: couldn't simplify (extract3 array%value%4#1 16u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:102:16-31, ir_type=uint64, name='array%bytes_index%4', version=1), op_start=16
debug: couldn't simplify (extract3 array%value%4#1 24u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:102:16-31, ir_type=uint64, name='array%bytes_index%4', version=1), op_start=24
debug: Simplified (btoi last_point.x#0) to (extract_uint64 slot_contents%0#1 0u)
debug: Simplified (btoi point.x#0) to (extract_uint64 slot_contents%2#1 array%bytes_index%4#1)
debug: Simplified (btoi point.x#0) to (extract_uint64 slot_contents%2#1 array%bytes_index%4#1)
debug: Simplified (btoi last_point.x#0) to (extract_uint64 slot_contents%0#1 0u)
debug: couldn't simplify (extract3 array%value%1#1 64u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:38:19-26, ir_type=uint64, name='array%bytes_index%1', version=1), op_start=64
debug: couldn't simplify (extract3 array%value%2#1 72u 8u) due to starts: src_start=Register(source_location=array/fixed_size.py:39:19-26, ir_type=uint64, name='array%bytes_index%2', version=1), op_start=72
debug: Simplified (extract3 array%value%0#1 8u 8u) to ((extract 8 8) array%value%0#1)
debug: Simplified (extract3 array%value%0#1 16u 8u) to ((extract 16 8) array%value%0#1)
debug: Simplified (extract3 array%value%0#1 24u 8u) to ((extract 24 8) array%value%0#1)
debug: Simplified (extract3 array%value%1#1 8u 8u) to ((extract 8 8) array%value%1#1)
debug: Simplified (extract3 array%value%1#1 16u 8u) to ((extract 16 8) array%value%1#1)
debug: Simplified (extract3 array%value%1#1 24u 8u) to ((extract 24 8) array%value%1#1)
debug: Simplified (extract3 array%value%1#1 64u 16u) to ((extract 64 16) array%value%1#1)
debug: Simplified (extract3 array%value%1#1 64u 8u) to ((extract 64 8) array%value%1#1)
debug: Simplified (extract3 array%value%2#1 8u 8u) to ((extract 8 8) array%value%2#1)
debug: Simplified (extract3 array%value%2#1 16u 8u) to ((extract 16 8) array%value%2#1)
debug: Simplified (extract3 array%value%2#1 24u 8u) to ((extract 24 8) array%value%2#1)
debug: Simplified (extract3 array%value%2#1 64u 16u) to ((extract 64 16) array%value%2#1)
debug: Simplified (extract3 array%value%2#1 72u 8u) to ((extract 72 8) array%value%2#1)
debug: Simplified (extract3 slot_contents%0#1 0u 80u) to ((extract 0 80) slot_contents%0#1)
debug: Simplified (extract3 slot_contents%0#1 0u 8u) to ((extract 0 8) slot_contents%0#1)
debug: Simplified (extract3 slot_contents%0#1 8u 8u) to ((extract 8 8) slot_contents%0#1)
debug: Simplified (extract3 slot_contents%0#1 16u 8u) to ((extract 16 8) slot_contents%0#1)
debug: Simplified (extract3 slot_contents%0#1 24u 8u) to ((extract 24 8) slot_contents%0#1)
debug: Simplified (extract3 array%value%4#1 8u 8u) to ((extract 8 8) array%value%4#1)
debug: Simplified (extract3 array%value%4#1 16u 8u) to ((extract 16 8) array%value%4#1)
debug: Simplified (extract3 array%value%4#1 24u 8u) to ((extract 24 8) array%value%4#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_index%1#1: uint64 = (* i#1 80u) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1),)
debug: Replacing redundant declaration let array%bytes_index%2#1: uint64 = (* i#1 80u) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1),)
debug: Found equivalence set: array%encoded%5#1, array%data%0#1
debug: Found equivalence set: x1#0, array%encoded%6#1
debug: Found equivalence set: x2#0, array%encoded%12#1
debug: Found equivalence set: array%bytes_index%0#1, array%bytes_index%1#1, array%bytes_index%2#1
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%value%1#1: bytes = (extract3 slot_contents%0#0 array%bytes_index%0#1 80u) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=bytes, name='array%value%0', version=1),)
debug: Replacing redundant declaration let array%value%2#1: bytes = (extract3 slot_contents%0#0 array%bytes_index%0#1 80u) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=bytes, name='array%value%0', version=1),)
debug: Found equivalence set: array%value%0#1, array%value%1#1, array%value%2#1
debug: Copy propagation made 10 modifications
debug: Replacing redundant declaration let array%sub_item%19#1: bytes = ((extract 8 8) array%value%0#1) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=bytes, name='array%sub_item%10', version=1),)
debug: Replacing redundant declaration let array%sub_item%21#1: bytes = ((extract 16 8) array%value%0#1) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=bytes, name='array%sub_item%12', version=1),)
debug: Replacing redundant declaration let array%sub_item%23#1: bytes = ((extract 24 8) array%value%0#1) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=bytes, name='array%sub_item%14', version=1),)
debug: Replacing redundant declaration let array%sub_item%28#1: bytes = ((extract 8 8) array%value%0#1) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=bytes, name='array%sub_item%10', version=1),)
debug: Replacing redundant declaration let array%sub_item%30#1: bytes = ((extract 16 8) array%value%0#1) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=bytes, name='array%sub_item%12', version=1),)
debug: Replacing redundant declaration let array%sub_item%32#1: bytes = ((extract 24 8) array%value%0#1) with copy of existing registers (Register(source_location=array/fixed_size.py:37:19-26, ir_type=bytes, name='array%sub_item%14', version=1),)
debug: Replacing redundant declaration let array%sub_item%35#1: bytes = ((extract 64 16) array%value%0#1) with copy of existing registers (Register(source_location=array/fixed_size.py:38:19-26, ir_type=bytes, name='array%sub_item%26', version=1),)
debug: Found equivalence set: array%sub_item%10#1, array%sub_item%19#1, array%sub_item%28#1
debug: Found equivalence set: array%sub_item%12#1, array%sub_item%21#1, array%sub_item%30#1
debug: Found equivalence set: array%sub_item%14#1, array%sub_item%23#1, array%sub_item%32#1
debug: Found equivalence set: array%sub_item%26#1, array%sub_item%35#1
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%array_len%1#1, tmp%5#0
debug: Found equivalence set: array%array_len%2#1, array_length%0#0
debug: Found equivalence set: array%sub_item%2#1, val#0
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x) to 0u
debug: Simplified (/ 0u 1u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x array%sub_item_truncated%0#1) to array%sub_item_truncated%0#1
debug: Simplified (concat 0x array%sub_item_truncated%0#1) to array%sub_item_truncated%0#1
debug: Simplified (* item_index_internal%0#1 1u) to item_index_internal%0#1
debug: Simplified (extract3 array%value%0#1 0u 1u) to (extract3 slot_contents%4#0 item_index_internal%0#1 1u)
debug: Simplified (btoi array%sub_item%1#1) to (getbyte slot_contents%4#0 item_index_internal%0#1)
debug: Simplified (extract3 array%sub_item%0#1 7u 1u) to ((extract 7 1) array%sub_item%0#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_len%2#1: uint64 = (len slot_contents%2#0) with copy of existing registers (Register(source_location=array/fixed_size.py:50:15-25, ir_type=uint64, name='array%bytes_len%1', version=1),)
debug: Replacing redundant declaration let array%sub_item%1#1: bytes = (extract3 slot_contents%4#0 item_index_internal%0#1 1u) with copy of existing registers (Register(source_location=array/fixed_size.py:52, ir_type=bytes, name='array%value%0', version=1),)
debug: Found equivalence set: array%sub_item_truncated%0#1, array%encoded%0#1, array%data%0#1
debug: Found equivalence set: array%bytes_len%1#1, array%bytes_len%2#1
debug: Found equivalence set: item_index_internal%0#1, array%bytes_index%0#1
debug: Found equivalence set: array%value%0#1, array%sub_item%1#1
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let array%array_len%2#1: uint64 = (/ array%bytes_len%1#1 1u) with copy of existing registers (Register(source_location=array/fixed_size.py:50:15-25, ir_type=uint64, name='array%array_len%1', version=1),)
debug: Found equivalence set: array%array_len%1#1, array%array_len%2#1
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: Found equivalence set: array%data%0#1, encoded%1#0
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%array_len%1#1, tmp%3#0
debug: Found equivalence set: array%array_len%2#1, array_length%0#0
debug: Found equivalence set: array%sub_item%0#1, val#0
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x) to 0u
debug: Simplified (/ 0u 8u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (extract3 array%value%0#1 0u 8u) to (extract3 slot_contents%4#0 array%bytes_index%0#1 8u)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_len%2#1: uint64 = (len slot_contents%2#0) with copy of existing registers (Register(source_location=array/fixed_size.py:64:15-25, ir_type=uint64, name='array%bytes_len%1', version=1),)
debug: Replacing redundant declaration let val#0: bytes[8] = (extract3 slot_contents%4#0 array%bytes_index%0#1 8u) with copy of existing registers (Register(source_location=array/fixed_size.py:66, ir_type=bytes, name='array%value%0', version=1),)
debug: Found equivalence set: val_as_bytes%0#0, array%encoded%0#1, array%data%0#1
debug: Found equivalence set: array%bytes_len%1#1, array%bytes_len%2#1
debug: Found equivalence set: array%value%0#1, val#0
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%array_len%2#1: uint64 = (/ array%bytes_len%1#1 8u) with copy of existing registers (Register(source_location=array/fixed_size.py:64:15-25, ir_type=uint64, name='array%array_len%1', version=1),)
debug: Found equivalence set: array%array_len%1#1, array%array_len%2#1
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: Found equivalence set: array%array_len%0#1, array_length%0#0
debug: Found equivalence set: array%sub_item%0#1, item#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x expr_value_trimmed%0#0) // on error: max array length exceeded to expr_value_trimmed%0#0
debug: Simplified (extract3 array%value%0#1 0u 8u) to (extract3 slot_contents%2#0 array%bytes_index%0#1 8u)
debug: Simplified (btoi item#0) to (extract_uint64 slot_contents%2#0 array%bytes_index%0#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let item#0: bytes[8] = (extract3 slot_contents%2#0 array%bytes_index%0#1 8u) with copy of existing registers (Register(source_location=array/fixed_size.py:81, ir_type=bytes, name='array%value%0', version=1),)
debug: Found equivalence set: expr_value_trimmed%0#0, array%array_contents%0#1
debug: Found equivalence set: array%value%0#1, item#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.approval.4.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%encoded%0#1
debug: Removing unused variable array%sub_item%0#1
debug: Removing unused variable array%encoded%1#1
debug: Removing unused variable array%sub_item%10#1
debug: Removing unused variable array%sub_item%12#1
debug: Removing unused variable array%sub_item%14#1
debug: Removing unused variable array%sub_item%26#1
debug: Removing unused variable array%bytes_index%3#1
debug: Removing unused variable array%value%3#1
debug: Removing unused variable array%sub_item%37#1
debug: Removing unused variable array%sub_item%39#1
debug: Removing unused variable array%sub_item%41#1
debug: Removing unused variable array%sub_item%46#1
debug: Removing unused variable array%sub_item%48#1
debug: Removing unused variable array%sub_item%50#1
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 64 8) array%value%0#1) due to starts: src_start=Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1), op_start=64
debug: couldn't simplify ((extract 72 8) array%value%0#1) due to starts: src_start=Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1), op_start=72
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%bytes_len%0#1
debug: Removing unused variable array%array_len%0#1
debug: Removing unused variable tmp%1#0
debug: Removing unused variable array%value%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%bytes_len%0#1
debug: Removing unused variable array%array_len%0#1
debug: Removing unused variable tmp%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.approval.5.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 64 8) array%value%0#1) due to starts: src_start=Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1), op_start=64
debug: couldn't simplify ((extract 72 8) array%value%0#1) due to starts: src_start=Register(source_location=array/fixed_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1), op_start=72
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.fixed_size.FixedSizeContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.fixed_size.FixedSizeContract
debug: auto reserving slots in test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init, []
array/fixed_size.py:28 debug: auto reserving slots in test_cases.array.fixed_size.FixedSizeContract.test_array, []
array/fixed_size.py:31:9 debug: eliminating local static slot assigned to path#0
debug: Removing unused variable path#0
array/fixed_size.py:43 debug: auto reserving slots in test_cases.array.fixed_size.FixedSizeContract.test_bool_array, []
array/fixed_size.py:45:9 debug: eliminating local static slot assigned to arr#0
debug: Removing unused variable arr#0
array/fixed_size.py:57 debug: auto reserving slots in test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion, []
array/fixed_size.py:59:9 debug: eliminating local static slot assigned to arr#0
debug: Removing unused variable arr#0
array/fixed_size.py:75 debug: auto reserving slots in test_cases.array.fixed_size.FixedSizeContract.sum_array, []
array/fixed_size.py:77:9 debug: eliminating local static slot assigned to arr#0
debug: Removing unused variable arr#0
array/fixed_size.py:86 debug: auto reserving slots in test_cases.array.fixed_size.FixedSizeContract.xtra, []
debug: Slot allocation not required
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.approval.6.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.array.fixed_size.FixedSizeContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.clear.2.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing tmp%0#0 with [tmp%0#3, tmp%0#1]
debug: Coalescing test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0 with [test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#1, test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#2, test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#3, test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#4, test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#5]
debug: Coalescing resulted in 19 replacement/s
debug: Sequentializing parallel copies in test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.fixed_size.FixedSizeContract.test_array using strategy RootOperandGrouping
debug: Coalescing tmp%4#0 with [tmp%4#1]
debug: Coalescing tmp%5#0 with [tmp%5#1]
debug: Coalescing tmp%8#0 with [tmp%8#1]
debug: Coalescing tmp%9#0 with [tmp%9#1]
debug: Coalescing i#0 with [i#5, i#1]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#1]
debug: Coalescing slot_contents%0#0 with [slot_contents%0#1]
debug: Coalescing length#0 with [length#7, length#3, length#4]
debug: Coalescing point_idx#0 with [point_idx#5, point_idx#1, point_idx#2]
debug: Coalescing dx#0 with [dx#6, dx#1, dx#3]
debug: Coalescing dy#0 with [dy#5, dy#1, dy#2]
debug: Coalescing resulted in 57 replacement/s
debug: Sequentializing parallel copies in test_cases.array.fixed_size.FixedSizeContract.test_array
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.fixed_size.FixedSizeContract.test_bool_array using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing count#0 with [count#6, count#1, count#2, count#3]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing count#0 with [count#6, count#1, count#2, count#3]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 28 replacement/s
debug: Sequentializing parallel copies in test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.fixed_size.FixedSizeContract.sum_array using strategy RootOperandGrouping
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.fixed_size.FixedSizeContract.xtra using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.fixed_size.FixedSizeContract.xtra
debug: Performing post-SSA optimizations at level 1
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.approval.7.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to array/out/FixedSizeContract.ir/FixedSizeContract.clear.3.destructured.ir
debug: Inserted main.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[7]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_array_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_array_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_array_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_array_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@5.ops[17]: 'l-store-copy reinterpret_bytes[8]%1#0 0'
debug: Replaced main_test_array_route@5.ops[19]: 'v-load reinterpret_bytes[8]%1#0' with 'l-load reinterpret_bytes[8]%1#0'
debug: Inserted main_test_array_route@5.ops[25]: 'l-store-copy reinterpret_bytes[8]%3#0 0'
debug: Replaced main_test_array_route@5.ops[27]: 'v-load reinterpret_bytes[8]%3#0' with 'l-load reinterpret_bytes[8]%3#0'
debug: Inserted main_test_array_route@5.ops[35]: 'l-store-copy to_encode%0#0 0'
debug: Replaced main_test_array_route@5.ops[37]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted main_test_array_route@5.ops[43]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_array_route@5.ops[45]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_array_route@5.ops[48]: 'l-store-copy test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_route@5.ops[50]: 'v-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_route@5.ops[39]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced main_test_array_route@5.ops[42]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_test_array_route@5.ops[29]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_array_route@5.ops[34]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_array_route@5.ops[23]: 'l-store-copy reinterpret_bytes[8]%2#0 0'
debug: Replaced main_test_array_route@5.ops[34]: 'v-load reinterpret_bytes[8]%2#0' with 'l-load reinterpret_bytes[8]%2#0'
debug: Inserted main_test_array_route@5.ops[21]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_array_route@5.ops[34]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_array_route@5.ops[15]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced main_test_array_route@5.ops[34]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted main_test_bool_array_route@6.ops[1]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_test_bool_array_route@6.ops[3]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_test_bool_array_route@6.ops[5]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_bool_array_route@6.ops[7]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_bool_array_route@6.ops[10]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_bool_array_route@6.ops[12]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_bool_array_route@6.ops[15]: 'l-store-copy reinterpret_bytes[8]%4#0 0'
debug: Replaced main_test_bool_array_route@6.ops[17]: 'v-load reinterpret_bytes[8]%4#0' with 'l-load reinterpret_bytes[8]%4#0'
debug: Inserted main_test_bool_array_route@6.ops[19]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_test_bool_array_route@6.ops[21]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_test_bool_array_route@6.ops[23]: 'l-store-copy to_encode%1#0 0'
debug: Replaced main_test_bool_array_route@6.ops[25]: 'v-load to_encode%1#0' with 'l-load to_encode%1#0'
debug: Inserted main_test_bool_array_route@6.ops[31]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_test_bool_array_route@6.ops[33]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_test_bool_array_route@6.ops[36]: 'l-store-copy test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_bool_array_route@6.ops[38]: 'v-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_bool_array_route@6.ops[27]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced main_test_bool_array_route@6.ops[30]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted main_test_arc4_conversion_route@7.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_test_arc4_conversion_route@7.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_test_arc4_conversion_route@7.ops[5]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_arc4_conversion_route@7.ops[7]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_arc4_conversion_route@7.ops[10]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_test_arc4_conversion_route@7.ops[12]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_test_arc4_conversion_route@7.ops[15]: 'l-store-copy reinterpret_bytes[8]%5#0 0'
debug: Replaced main_test_arc4_conversion_route@7.ops[17]: 'v-load reinterpret_bytes[8]%5#0' with 'l-load reinterpret_bytes[8]%5#0'
debug: Inserted main_test_arc4_conversion_route@7.ops[19]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_arc4_conversion_route@7.ops[21]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_arc4_conversion_route@7.ops[27]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_test_arc4_conversion_route@7.ops[29]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_test_arc4_conversion_route@7.ops[32]: 'l-store-copy test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_arc4_conversion_route@7.ops[34]: 'v-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_arc4_conversion_route@7.ops[23]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_arc4_conversion_route@7.ops[26]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_sum_array_route@8.ops[1]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_sum_array_route@8.ops[3]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_sum_array_route@8.ops[5]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_sum_array_route@8.ops[7]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_sum_array_route@8.ops[10]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_sum_array_route@8.ops[12]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_sum_array_route@8.ops[15]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_sum_array_route@8.ops[17]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_sum_array_route@8.ops[19]: 'l-store-copy to_encode%2#0 0'
debug: Replaced main_sum_array_route@8.ops[21]: 'v-load to_encode%2#0' with 'l-load to_encode%2#0'
debug: Inserted main_sum_array_route@8.ops[27]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_sum_array_route@8.ops[29]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_sum_array_route@8.ops[32]: 'l-store-copy test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_sum_array_route@8.ops[34]: 'v-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_sum_array_route@8.ops[23]: 'l-store-copy val_as_bytes%2#0 0'
debug: Replaced main_sum_array_route@8.ops[26]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted main_bare_routing@9.ops[1]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_bare_routing@9.ops[3]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main___algopy_default_create@10.ops[1]: 'l-store-copy tmp%30#0 0'
debug: Replaced main___algopy_default_create@10.ops[3]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main___algopy_default_create@10.ops[5]: 'l-store-copy tmp%31#0 0'
debug: Replaced main___algopy_default_create@10.ops[7]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main___algopy_default_create@10.ops[10]: 'l-store-copy test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@10.ops[12]: 'v-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@11.ops[1]: 'l-store-copy test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@11.ops[3]: 'v-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__%0#0'
debug: Inserted test_array.ops[31]: 'l-store-copy array%encoded%3#1 0'
debug: Replaced test_array.ops[33]: 'v-load array%encoded%3#1' with 'l-load array%encoded%3#1'
debug: Inserted test_array.ops[36]: 'l-store-copy array%encoded%4#1 0'
debug: Replaced test_array.ops[38]: 'v-load array%encoded%4#1' with 'l-load array%encoded%4#1'
debug: Inserted test_array.ops[62]: 'l-store-copy array%encoded%9#1 0'
debug: Replaced test_array.ops[64]: 'v-load array%encoded%9#1' with 'l-load array%encoded%9#1'
debug: Inserted test_array.ops[67]: 'l-store-copy array%encoded%10#1 0'
debug: Replaced test_array.ops[69]: 'v-load array%encoded%10#1' with 'l-load array%encoded%10#1'
debug: Inserted test_array.ops[97]: 'l-store-copy array%encoded%15#1 0'
debug: Replaced test_array.ops[99]: 'v-load array%encoded%15#1' with 'l-load array%encoded%15#1'
debug: Inserted test_array.ops[102]: 'l-store-copy array%encoded%16#1 0'
debug: Replaced test_array.ops[104]: 'v-load array%encoded%16#1' with 'l-load array%encoded%16#1'
debug: Inserted test_array.ops[111]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_array.ops[113]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_array.ops[20]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array.ops[23]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array.ops[28]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array.ops[31]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array.ops[46]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_array.ops[49]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_array.ops[54]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_array.ops[57]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_array.ops[62]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_array.ops[65]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_array.ops[77]: 'l-store-copy array%encoded%11#1 0'
debug: Replaced test_array.ops[80]: 'v-load array%encoded%11#1' with 'l-load array%encoded%11#1'
debug: Inserted test_array.ops[85]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced test_array.ops[88]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted test_array.ops[93]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced test_array.ops[96]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted test_array.ops[101]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced test_array.ops[104]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted test_array.ops[116]: 'l-store-copy array%encoded%17#1 0'
debug: Replaced test_array.ops[119]: 'v-load array%encoded%17#1' with 'l-load array%encoded%17#1'
debug: Inserted test_array.ops[25]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_array.ops[31]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_array.ops[52]: 'l-store-copy array%encoded%7#1 0'
debug: Replaced test_array.ops[58]: 'v-load array%encoded%7#1' with 'l-load array%encoded%7#1'
debug: Inserted test_array.ops[61]: 'l-store-copy array%encoded%8#1 0'
debug: Replaced test_array.ops[67]: 'v-load array%encoded%8#1' with 'l-load array%encoded%8#1'
debug: Inserted test_array.ops[93]: 'l-store-copy array%encoded%13#1 0'
debug: Replaced test_array.ops[99]: 'v-load array%encoded%13#1' with 'l-load array%encoded%13#1'
debug: Inserted test_array.ops[102]: 'l-store-copy array%encoded%14#1 0'
debug: Replaced test_array.ops[108]: 'v-load array%encoded%14#1' with 'l-load array%encoded%14#1'
debug: Inserted test_array.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_array.ops[19]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array.ops[6]: 'l-store-copy tmp%1#0 1'
debug: Replaced test_array.ops[29]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array.ops[5]: 'l-store-copy tmp%2#0 2'
debug: Replaced test_array.ops[40]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_array.ops[47]: 'l-store-copy array%encoded%5#1 0'
debug: Replaced test_array.ops[86]: 'v-load array%encoded%5#1' with 'l-load array%encoded%5#1'
debug: Inserted test_array.ops[89]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_array.ops[128]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_array.ops[4]: 'l-store-copy tmp%3#0 3'
debug: Replaced test_array.ops[46]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_array.ops[16]: 'l-store-copy tmp%4#0 4'
debug: Replaced test_array.ops[60]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_array.ops[15]: 'l-store-copy tmp%5#0 5'
debug: Replaced test_array.ops[70]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_array.ops[14]: 'l-store-copy tmp%6#0 6'
debug: Replaced test_array.ops[81]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_array.ops[13]: 'l-store-copy tmp%7#0 7'
debug: Replaced test_array.ops[87]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_array.ops[25]: 'l-store-copy tmp%8#0 8'
debug: Replaced test_array.ops[106]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_array.ops[24]: 'l-store-copy tmp%9#0 9'
debug: Replaced test_array.ops[116]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array.ops[23]: 'l-store-copy tmp%10#0 10'
debug: Replaced test_array.ops[127]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_array.ops[22]: 'l-store-copy tmp%11#0 11'
debug: Replaced test_array.ops[133]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_array_for_body@2.ops[10]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_array_for_body@2.ops[12]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_array_for_body@2.ops[23]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_array_for_body@2.ops[25]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_array_for_body@2.ops[33]: 'l-store-copy tmp%26#0 0'
debug: Replaced test_array_for_body@2.ops[35]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted test_array_for_body@2.ops[41]: 'l-store-copy tmp%28#0 0'
debug: Replaced test_array_for_body@2.ops[43]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted test_array_for_body@2.ops[49]: 'l-store-copy i#2 0'
debug: Replaced test_array_for_body@2.ops[50]: 'v-load i#2' with 'l-load i#2'
debug: Inserted test_array_for_body@2.ops[52]: 'l-store-copy tmp%37#0 0'
debug: Replaced test_array_for_body@2.ops[54]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted test_array_for_body@2.ops[60]: 'l-store-copy tmp%39#0 0'
debug: Replaced test_array_for_body@2.ops[62]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted test_array_for_body@2.ops[5]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_array_for_body@2.ops[8]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_array_for_body@2.ops[20]: 'l-store-copy i#2 0'
debug: Replaced test_array_for_body@2.ops[23]: 'v-load i#2' with 'l-load i#2'
debug: Inserted test_array_for_body@2.ops[39]: 'l-store-copy tmp%27#0 0'
debug: Replaced test_array_for_body@2.ops[42]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_array_for_body@2.ops[59]: 'l-store-copy tmp%38#0 0'
debug: Replaced test_array_for_body@2.ops[62]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted test_array_for_body@2.ops[1]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_for_body@2.ops[8]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_for_body@2.ops[17]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced test_array_for_body@2.ops[24]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted test_array_for_body@2.ops[33]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced test_array_for_body@2.ops[44]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted test_array_for_body@2.ops[53]: 'l-store-copy reinterpret_biguint%1#0 0'
debug: Replaced test_array_for_body@2.ops[65]: 'v-load reinterpret_biguint%1#0' with 'l-load reinterpret_biguint%1#0'
debug: Inserted test_array_for_body@2.ops[58]: 'l-store-copy i#2 2'
debug: Replaced test_array_for_body@2.ops[73]: 'v-load i#2' with 'l-load i#2'
debug: Inserted test_array_for_body@2.ops[4]: 'l-store-copy i#0 1'
debug: Replaced test_array_for_body@2.ops[20]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_for_body@2.ops[21]: 'l-store-copy i#0 1'
debug: Replaced test_array_for_body@2.ops[37]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_for_body@2.ops[16]: 'l-store-copy array%value%0#1 1'
debug: Replaced test_array_for_body@2.ops[34]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_array_for_body@2.ops[35]: 'l-store-copy array%value%0#1 1'
debug: Replaced test_array_for_body@2.ops[55]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_array_for_body@2.ops[29]: 'l-store-copy i#2 3'
debug: Replaced test_array_for_body@2.ops[60]: 'v-load i#2' with 'l-load i#2'
debug: Inserted test_array_after_for@4.ops[1]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_after_for@4.ops[3]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_after_for@4.ops[14]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_after_for@4.ops[16]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_after_for@4.ops[4]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_after_for@4.ops[7]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_after_for@4.ops[8]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_after_for@4.ops[14]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_for_header@6.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_array_for_header@6.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_array_for_body@7.ops[23]: 'l-store-copy tmp%1#1 0'
debug: Replaced test_array_for_body@7.ops[25]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted test_array_for_body@7.ops[5]: 'l-store-copy array%bytes_index%4#1 0'
debug: Replaced test_array_for_body@7.ops[8]: 'v-load array%bytes_index%4#1' with 'l-load array%bytes_index%4#1'
debug: Inserted test_array_for_body@7.ops[1]: 'l-store-copy slot_contents%2#1 0'
debug: Replaced test_array_for_body@7.ops[8]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted test_array_for_body@7.ops[9]: 'l-store-copy slot_contents%2#1 1'
debug: Replaced test_array_for_body@7.ops[14]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted test_array_for_body@7.ops[11]: 'l-store-copy array%bytes_index%4#1 2'
debug: Replaced test_array_for_body@7.ops[16]: 'v-load array%bytes_index%4#1' with 'l-load array%bytes_index%4#1'
debug: Inserted test_array_for_body@7.ops[19]: 'l-store-copy point.x#0 0'
debug: Replaced test_array_for_body@7.ops[25]: 'v-load point.x#0' with 'l-load point.x#0'
debug: Inserted test_array_for_body@7.ops[14]: 'l-store-copy array%value%4#1 2'
debug: Replaced test_array_for_body@7.ops[22]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted test_array_if_body@8.ops[7]: 'l-store-copy tmp%3#1 0'
debug: Replaced test_array_if_body@8.ops[10]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted test_array_if_body@8.ops[3]: 'l-store-copy tmp%2#1 0'
debug: Replaced test_array_if_body@8.ops[10]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted test_array_else_body@9.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_array_else_body@9.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_array_else_body@9.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_array_else_body@9.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_array_after_if_else@10.ops[3]: 'l-store-copy tmp%6#1 0'
debug: Replaced test_array_after_if_else@10.ops[5]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted test_array_after_if_else@13.ops[1]: 'l-store-copy dx#0 0'
debug: Replaced test_array_after_if_else@13.ops[2]: 'v-load dx#0' with 'l-load dx#0'
debug: Inserted test_array_after_if_else@13.ops[6]: 'l-store-copy dy#0 0'
debug: Replaced test_array_after_if_else@13.ops[7]: 'v-load dy#0' with 'l-load dy#0'
debug: Inserted test_array_after_if_else@13.ops[13]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_array_after_if_else@13.ops[15]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array_after_if_else@13.ops[9]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_array_after_if_else@13.ops[12]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_array_after_if_else@13.ops[18]: 'l-store-copy tmp%10#1 0'
debug: Replaced test_array_after_if_else@13.ops[21]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted test_array_after_if_else@13.ops[4]: 'l-store-copy tmp%7#1 0'
debug: Replaced test_array_after_if_else@13.ops[12]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted test_bool_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_bool_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_bool_array_for_body@2.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_bool_array_for_body@2.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_bool_array_for_body@2.ops[7]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_bool_array_for_body@2.ops[9]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_bool_array_for_body@2.ops[11]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_bool_array_for_body@2.ops[13]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_bool_array_for_body@2.ops[17]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_bool_array_for_body@2.ops[19]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_bool_array_for_body@2.ops[22]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_bool_array_for_body@2.ops[24]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_bool_array_for_body@2.ops[15]: 'l-store-copy array%sub_item_truncated%0#1 0'
debug: Replaced test_bool_array_for_body@2.ops[21]: 'v-load array%sub_item_truncated%0#1' with 'l-load array%sub_item_truncated%0#1'
debug: Inserted test_bool_array_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced test_bool_array_for_body@2.ops[28]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bool_array_after_for@4.ops[1]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_bool_array_after_for@4.ops[3]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_bool_array_after_for@4.ops[5]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_bool_array_after_for@4.ops[7]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_bool_array_after_for@4.ops[10]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_bool_array_after_for@4.ops[12]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_bool_array_after_for@4.ops[15]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_bool_array_after_for@4.ops[17]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_bool_array_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_bool_array_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_bool_array_for_body@6.ops[1]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_bool_array_for_body@6.ops[3]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_bool_array_for_body@6.ops[6]: 'l-store-copy val#0 0'
debug: Replaced test_bool_array_for_body@6.ops[10]: 'v-load val#0' with 'l-load val#0'
debug: Inserted test_bool_array_if_body@7.ops[3]: 'l-store-copy count#0 0'
debug: Replaced test_bool_array_if_body@7.ops[5]: 'v-load count#0' with 'l-load count#0'
debug: Inserted test_arc4_conversion_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_arc4_conversion_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_arc4_conversion_for_body@2.ops[4]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[6]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_arc4_conversion_for_body@2.ops[9]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[11]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_arc4_conversion_for_body@2.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[8]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_arc4_conversion_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_arc4_conversion_after_for@4.ops[1]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[3]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_arc4_conversion_after_for@4.ops[5]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[7]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_arc4_conversion_after_for@4.ops[10]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[12]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_arc4_conversion_after_for@4.ops[15]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[17]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_arc4_conversion_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_arc4_conversion_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_arc4_conversion_for_body@6.ops[10]: 'l-store-copy val#0 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[12]: 'v-load val#0' with 'l-load val#0'
debug: Inserted test_arc4_conversion_for_body@6.ops[5]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[8]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_arc4_conversion_for_body@6.ops[16]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[20]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_arc4_conversion_for_body@6.ops[1]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[8]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_arc4_conversion_if_body@7.ops[3]: 'l-store-copy count#0 0'
debug: Replaced test_arc4_conversion_if_body@7.ops[5]: 'v-load count#0' with 'l-load count#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[1]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[3]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[5]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[7]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[10]: 'l-store-copy len_%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[12]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[14]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[16]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[18]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[20]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[23]: 'l-store-copy arc4_arr#1 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[25]: 'v-load arc4_arr#1' with 'l-load arc4_arr#1'
debug: Inserted test_arc4_conversion_after_for@10.ops[4]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[22]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted sum_array.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced sum_array.ops[4]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted sum_array.ops[10]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced sum_array.ops[12]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted sum_array.ops[5]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced sum_array.ops[9]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted sum_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_array_for_body@2.ops[5]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced sum_array_for_body@2.ops[8]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted sum_array_for_body@2.ops[10]: 'l-store-copy tmp%0#0 0'
debug: Replaced sum_array_for_body@2.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_array_for_body@2.ops[1]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced sum_array_for_body@2.ops[8]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted sum_array_for_body@2.ops[4]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced sum_array_for_body@2.ops[18]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted xtra.ops[35]: 'l-store-copy to_encode%0#0 0'
debug: Replaced xtra.ops[37]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted xtra.ops[57]: 'l-store-copy to_encode%1#0 0'
debug: Replaced xtra.ops[59]: 'v-load to_encode%1#0' with 'l-load to_encode%1#0'
debug: Inserted xtra.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced xtra.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted xtra.ops[11]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced xtra.ops[14]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted xtra.ops[21]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced xtra.ops[24]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted xtra.ops[31]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced xtra.ops[34]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted xtra.ops[47]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced xtra.ops[50]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted xtra.ops[55]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced xtra.ops[58]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted xtra.ops[67]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced xtra.ops[70]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted xtra.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced xtra.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted xtra.ops[34]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced xtra.ops[38]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted xtra.ops[59]: 'l-store-copy maybe_value%4#0 1'
debug: Replaced xtra.ops[64]: 'v-load maybe_value%4#0' with 'l-load maybe_value%4#0'
debug: Inserted xtra.ops[75]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced xtra.ops[80]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted xtra.ops[51]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced xtra.ops[64]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted xtra.ops[45]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced xtra.ops[74]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted xtra.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced xtra.ops[82]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted xtra.ops[24]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced xtra.ops[82]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted xtra.ops[18]: 'l-store-copy tmp%0#0 0'
debug: Replaced xtra.ops[82]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Found 4 edge set/s for test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_array_route@5 -> main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main_test_bool_array_route@6 -> main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main_test_arc4_conversion_route@7 -> main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main_sum_array_route@8 -> main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main___algopy_default_create@10 -> main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main_after_if_else@11 -> main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12: tmp%0#0
debug: Found 8 edge set/s for test_cases.array.fixed_size.FixedSizeContract.test_array
debug: Allocated 2 variable/s to x-stack: dy#0, slot_contents%2#1
debug: shared x-stack for test_array_for_body@7 -> test_array_if_body@8: slot_contents%2#1
debug: shared x-stack for test_array_for_body@7 -> test_array_else_body@9: slot_contents%2#1
debug: shared x-stack for test_array_if_body@11 -> test_array_after_if_else@13: dy#0
debug: shared x-stack for test_array_else_body@12 -> test_array_after_if_else@13: dy#0
debug: Found 5 edge set/s for test_cases.array.fixed_size.FixedSizeContract.test_bool_array
debug: Found 5 edge set/s for test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion
debug: Found 2 edge set/s for test_cases.array.fixed_size.FixedSizeContract.sum_array
debug: test_cases.array.fixed_size.FixedSizeContract.test_array f-stack entry: ['last_point.x#0', 'slot_contents%0#0', 'array%array_len%0#1', 'array%bytes_index%4#1', 'dx#0', 'last_point.y#0', 'length#0', 'point.y#0', 'point_idx#0']
debug: test_cases.array.fixed_size.FixedSizeContract.test_array f-stack on first store: ['slot%0', 'i#0']
debug: test_cases.array.fixed_size.FixedSizeContract.test_bool_array f-stack entry: ['array%array_len%1#1', 'count#0', 'count#9', 'item_index_internal%0#0']
debug: test_cases.array.fixed_size.FixedSizeContract.test_bool_array f-stack on first store: ['slot%0', 'tmp%2#0', 'i#0']
debug: test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion f-stack entry: ['array%array_len%1#1', 'count#0', 'count#9', 'item_index_internal%0#0']
debug: test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion f-stack on first store: ['slot%0', 'tmp%2#0', 'i#0']
debug: test_cases.array.fixed_size.FixedSizeContract.sum_array f-stack entry: []
debug: test_cases.array.fixed_size.FixedSizeContract.sum_array f-stack on first store: ['slot%0', 'total#0', 'array%array_len%0#1', 'item_index_internal%0#0']
debug: optimizing TEAL subroutine test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12` with `return`
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
debug: inlining single reference block main_after_inlined_test_cases.array.fixed_size.FixedSizeContract.__puya_arc4_router__@12 into main_after_if_else@11
debug: inlining single reference block main___algopy_default_create@10 into main_bare_routing@9
debug: removing explicit jump to fall-through block main_after_if_else@2
debug: removing explicit jump to fall-through block main_after_if_else@11
array/fixed_size.py:28 debug: optimizing TEAL subroutine test_cases.array.fixed_size.FixedSizeContract.test_array(x1: bytes, y1: uint64, x2: bytes, y2: uint64) -> uint64:
debug: inlining single reference block test_array_for_body@2 into test_array_for_header@1
debug: inlining single reference block test_array_for_body@7 into test_array_for_header@6
debug: inlining single reference block test_array_if_body@8 into test_array_for_header@6
debug: inlining single reference block test_array_if_body@11 into test_array_after_if_else@10
debug: removing explicit jump to fall-through block test_array_for_header@1
debug: removing explicit jump to fall-through block test_array_for_header@6
debug: removing explicit jump to fall-through block test_array_after_if_else@10
debug: removing explicit jump to fall-through block test_array_after_if_else@13
array/fixed_size.py:43 debug: optimizing TEAL subroutine test_cases.array.fixed_size.FixedSizeContract.test_bool_array(length: uint64) -> uint64:
debug: inlining single reference block test_bool_array_for_body@2 into test_bool_array_for_header@1
debug: inlining single reference block test_bool_array_for_body@6 into test_bool_array_for_header@5
debug: inlining single reference block test_bool_array_if_body@7 into test_bool_array_for_header@5
debug: removing explicit jump to fall-through block test_bool_array_for_header@1
debug: removing explicit jump to fall-through block test_bool_array_for_header@5
debug: removing explicit jump to fall-through block test_bool_array_after_if_else@8
array/fixed_size.py:57 debug: optimizing TEAL subroutine test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion(length: uint64) -> bytes:
debug: inlining single reference block test_arc4_conversion_for_body@2 into test_arc4_conversion_for_header@1
debug: inlining single reference block test_arc4_conversion_for_body@6 into test_arc4_conversion_for_header@5
debug: inlining single reference block test_arc4_conversion_if_body@7 into test_arc4_conversion_for_header@5
debug: removing explicit jump to fall-through block test_arc4_conversion_for_header@1
debug: removing explicit jump to fall-through block test_arc4_conversion_for_header@5
debug: removing explicit jump to fall-through block test_arc4_conversion_after_if_else@8
array/fixed_size.py:75 debug: optimizing TEAL subroutine test_cases.array.fixed_size.FixedSizeContract.sum_array(arc4_arr: bytes) -> uint64:
debug: inlining single reference block sum_array_for_body@2 into sum_array_for_header@1
debug: removing explicit jump to fall-through block sum_array_for_header@1
array/fixed_size.py:86 debug: optimizing TEAL subroutine test_cases.array.fixed_size.FixedSizeContract.xtra() -> uint64, uint64, bytes, bytes:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
info: Writing array/out/Contract.arc32.json
info: Writing array/out/Contract.arc56.json
info: Writing array/out/Contract.approval.teal
info: Writing array/out/Contract.clear.teal
info: Writing array/out/Contract.approval.bin
info: Writing array/out/Contract.clear.bin
info: Writing array/out/Contract.approval.puya.map
info: Writing array/out/Contract.clear.puya.map
info: Writing array/out/FixedSizeContract.arc32.json
info: Writing array/out/FixedSizeContract.arc56.json
info: Writing array/out/FixedSizeContract.approval.teal
info: Writing array/out/FixedSizeContract.clear.teal
info: Writing array/out/FixedSizeContract.approval.bin
info: Writing array/out/FixedSizeContract.clear.bin
info: Writing array/out/FixedSizeContract.approval.puya.map
info: Writing array/out/FixedSizeContract.clear.puya.map
info: writing array/out/client_Contract.py
info: writing array/out/client_FixedSizeContract.py