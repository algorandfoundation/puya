debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['array'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
array/uint64.py:242:9 warning: expression result is ignored
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.quicksort_window
debug: Sealing block@0
debug: Terminated block@0
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let left#1: uint64 = undefined while trying to resolve 'left' in block@3
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@3
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let pivot#1: uint64 = undefined while trying to resolve 'pivot' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@3
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let left#3: uint64 = undefined while trying to resolve 'left' in block@1
debug: Added left#3 to Phi node: let left#1: uint64 = φ(left#3 <- block@2) in block@2
debug: Added left#2 to Phi node: let left#1: uint64 = φ(left#3 <- block@2, left#2 <- block@4) in block@4
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#2: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Added arr#2 to Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2) in block@2
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) (arr#1) with arr#2
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) (arr#1) with arr#2 in current definition for 2 blocks
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let pivot#2: uint64 = undefined while trying to resolve 'pivot' in block@1
debug: Added pivot#2 to Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2) in block@2
debug: Added pivot#1 to Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) (pivot#1) with pivot#2
debug: Deleting Phi assignment: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4)
debug: Replaced trivial Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) (pivot#1) with pivot#2 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let pivot#3: uint64 = undefined while trying to resolve 'pivot' in block@6
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let right#1: uint64 = undefined while trying to resolve 'right' in block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let arr#3: uint64[]* = undefined while trying to resolve 'arr' in block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@6
debug: Added pivot#2 to Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5) in block@5
debug: Added pivot#3 to Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) (pivot#3) with pivot#2
debug: Deleting Phi assignment: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9)
debug: Replaced trivial Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) (pivot#3) with pivot#2 in current definition for 3 blocks
debug: Created Phi assignment: let right#3: uint64 = undefined while trying to resolve 'right' in block@3
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let right#4: uint64 = undefined while trying to resolve 'right' in block@1
debug: Added right#4 to Phi node: let right#3: uint64 = φ(right#4 <- block@2) in block@2
debug: Added right#3 to Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) in block@4
debug: Replacing trivial Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) (right#3) with right#4
debug: Deleting Phi assignment: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4)
debug: Replaced trivial Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) (right#3) with right#4 in current definition for 2 blocks
debug: Added right#4 to Phi node: let right#1: uint64 = φ(right#4 <- block@5) in block@5
debug: Added right#2 to Phi node: let right#1: uint64 = φ(right#4 <- block@5, right#2 <- block@9) in block@9
debug: Added arr#2 to Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5) in block@5
debug: Added arr#3 to Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) (arr#3) with arr#2
debug: Deleting Phi assignment: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9)
debug: Replaced trivial Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) (arr#3) with arr#2 in current definition for 3 blocks
debug: Sealing block@10
debug: Created Phi assignment: let left#4: uint64 = undefined while trying to resolve 'left' in block@6
debug: Added left#1 to Phi node: let left#4: uint64 = φ(left#1 <- block@5) in block@5
debug: Added left#4 to Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) in block@9
debug: Replacing trivial Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) (left#4) with left#1
debug: Deleting Phi assignment: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9)
debug: Replaced trivial Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) (left#4) with left#1 in current definition for 3 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Terminated block@21
debug: Sealing block@1
debug: Added left#0 to Phi node: let left#3: uint64 = φ(left#0 <- block@0) in block@0
debug: Added left#5 to Phi node: let left#3: uint64 = φ(left#0 <- block@0, left#5 <- block@14) in block@14
debug: Added arr#0 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14)
debug: Replaced trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) (arr#2) with arr#0 in current definition for 12 blocks
debug: Added pivot#0 to Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0) in block@0
debug: Added pivot#2 to Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) (pivot#2) with pivot#0
debug: Deleting Phi assignment: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14)
debug: Replaced trivial Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) (pivot#2) with pivot#0 in current definition for 12 blocks
debug: Added right#0 to Phi node: let right#4: uint64 = φ(right#0 <- block@0) in block@0
debug: Added right#5 to Phi node: let right#4: uint64 = φ(right#0 <- block@0, right#5 <- block@14) in block@14
debug: Sealing block@22
debug: Created Phi assignment: let window_left#1: uint64 = undefined while trying to resolve 'window_left' in block@22
debug: Created Phi assignment: let window_left#2: uint64 = undefined while trying to resolve 'window_left' in block@1
debug: Added window_left#0 to Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0) in block@0
debug: Created Phi assignment: let window_left#3: uint64 = undefined while trying to resolve 'window_left' in block@6
debug: Created Phi assignment: let window_left#4: uint64 = undefined while trying to resolve 'window_left' in block@3
debug: Added window_left#2 to Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2) in block@2
debug: Added window_left#4 to Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) in block@4
debug: Replacing trivial Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) (window_left#4) with window_left#2
debug: Deleting Phi assignment: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4)
debug: Replaced trivial Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) (window_left#4) with window_left#2 in current definition for 2 blocks
debug: Added window_left#2 to Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5) in block@5
debug: Added window_left#3 to Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) (window_left#3) with window_left#2
debug: Deleting Phi assignment: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9)
debug: Replaced trivial Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) (window_left#3) with window_left#2 in current definition for 3 blocks
debug: Added window_left#2 to Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) (window_left#2) with window_left#0
debug: Deleting Phi assignment: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14)
debug: Replaced trivial Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) (window_left#2) with window_left#0 in current definition for 12 blocks
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1) in block@1
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12) in block@12
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15) in block@15
debug: Created Phi assignment: let window_left#5: uint64 = undefined while trying to resolve 'window_left' in block@19
debug: Added window_left#0 to Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17) in block@17
debug: Added window_left#0 to Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) (window_left#5) with window_left#0
debug: Deleting Phi assignment: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18)
debug: Replaced trivial Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) (window_left#5) with window_left#0 in current definition for 1 blocks
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19) in block@19
debug: Looking for 'window_left' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let window_left#6: uint64 = undefined while trying to resolve 'window_left' in block@21
debug: Added window_left#6 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#6 <- block@21) in block@21
debug: Created Phi assignment: let right#7: uint64 = undefined while trying to resolve 'right' in block@22
debug: Added right#4 to Phi node: let right#7: uint64 = φ(right#4 <- block@1) in block@1
debug: Added right#1 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12) in block@12
debug: Added right#5 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15) in block@15
debug: Created Phi assignment: let right#8: uint64 = undefined while trying to resolve 'right' in block@19
debug: Added right#1 to Phi node: let right#8: uint64 = φ(right#1 <- block@17) in block@17
debug: Added right#6 to Phi node: let right#8: uint64 = φ(right#1 <- block@17, right#6 <- block@18) in block@18
debug: Added right#8 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15, right#8 <- block@19) in block@19
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let right#9: uint64 = undefined while trying to resolve 'right' in block@21
debug: Added right#9 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15, right#8 <- block@19, right#9 <- block@21) in block@21
debug: Terminated block@22
debug: Sealing block@23
debug: Created Phi assignment: let arr#4: uint64[]* = undefined while trying to resolve 'arr' in block@22
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1) in block@1
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12) in block@12
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15) in block@15
debug: Created Phi assignment: let arr#5: uint64[]* = undefined while trying to resolve 'arr' in block@19
debug: Added arr#0 to Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17) in block@17
debug: Added arr#0 to Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) (arr#5) with arr#0
debug: Deleting Phi assignment: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18)
debug: Replaced trivial Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) (arr#5) with arr#0 in current definition for 1 blocks
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19) in block@19
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let arr#6: uint64[]* = undefined while trying to resolve 'arr' in block@21
debug: Added arr#6 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#6 <- block@21) in block@21
debug: Terminated block@23
debug: Sealing block@24
debug: Created Phi assignment: let left#7: uint64 = undefined while trying to resolve 'left' in block@24
debug: Created Phi assignment: let left#8: uint64 = undefined while trying to resolve 'left' in block@22
debug: Added left#3 to Phi node: let left#8: uint64 = φ(left#3 <- block@1) in block@1
debug: Added left#5 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12) in block@12
debug: Added left#5 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15) in block@15
debug: Created Phi assignment: let left#9: uint64 = undefined while trying to resolve 'left' in block@19
debug: Added left#6 to Phi node: let left#9: uint64 = φ(left#6 <- block@17) in block@17
debug: Added left#6 to Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) in block@18
debug: Replacing trivial Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) (left#9) with left#6
debug: Deleting Phi assignment: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18)
debug: Replaced trivial Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) (left#9) with left#6 in current definition for 1 blocks
debug: Added left#6 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15, left#6 <- block@19) in block@19
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let left#10: uint64 = undefined while trying to resolve 'left' in block@21
debug: Added left#10 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15, left#6 <- block@19, left#10 <- block@21) in block@21
debug: Added left#8 to Phi node: let left#7: uint64 = φ(left#8 <- block@22) in block@22
debug: Added left#8 to Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) in block@23
debug: Replacing trivial Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) (left#7) with left#8
debug: Deleting Phi assignment: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23)
debug: Replaced trivial Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) (left#7) with left#8 in current definition for 1 blocks
debug: Created Phi assignment: let window_right#1: uint64 = undefined while trying to resolve 'window_right' in block@24
debug: Created Phi assignment: let window_right#2: uint64 = undefined while trying to resolve 'window_right' in block@22
debug: Created Phi assignment: let window_right#3: uint64 = undefined while trying to resolve 'window_right' in block@1
debug: Added window_right#0 to Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0) in block@0
debug: Created Phi assignment: let window_right#4: uint64 = undefined while trying to resolve 'window_right' in block@6
debug: Created Phi assignment: let window_right#5: uint64 = undefined while trying to resolve 'window_right' in block@3
debug: Added window_right#3 to Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2) in block@2
debug: Added window_right#5 to Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) in block@4
debug: Replacing trivial Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) (window_right#5) with window_right#3
debug: Deleting Phi assignment: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4)
debug: Replaced trivial Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) (window_right#5) with window_right#3 in current definition for 2 blocks
debug: Added window_right#3 to Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5) in block@5
debug: Added window_right#4 to Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) in block@9
debug: Replacing trivial Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) (window_right#4) with window_right#3
debug: Deleting Phi assignment: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9)
debug: Replaced trivial Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) (window_right#4) with window_right#3 in current definition for 3 blocks
debug: Added window_right#3 to Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) in block@14
debug: Replacing trivial Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) (window_right#3) with window_right#0
debug: Deleting Phi assignment: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14)
debug: Replaced trivial Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) (window_right#3) with window_right#0 in current definition for 12 blocks
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1) in block@1
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12) in block@12
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15) in block@15
debug: Created Phi assignment: let window_right#6: uint64 = undefined while trying to resolve 'window_right' in block@19
debug: Added window_right#0 to Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17) in block@17
debug: Added window_right#0 to Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) (window_right#6) with window_right#0
debug: Deleting Phi assignment: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18)
debug: Replaced trivial Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) (window_right#6) with window_right#0 in current definition for 1 blocks
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19) in block@19
debug: Looking for 'window_right' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let window_right#7: uint64 = undefined while trying to resolve 'window_right' in block@21
debug: Added window_right#7 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#7 <- block@21) in block@21
debug: Added window_right#2 to Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22) in block@22
debug: Added window_right#2 to Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) in block@23
debug: Replacing trivial Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) (window_right#1) with window_right#2
debug: Deleting Phi assignment: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23)
debug: Replaced trivial Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) (window_right#1) with window_right#2 in current definition for 1 blocks
debug: Terminated block@24
debug: Sealing block@25
debug: Created Phi assignment: let arr#7: uint64[]* = undefined while trying to resolve 'arr' in block@24
debug: Added arr#4 to Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22) in block@22
debug: Added arr#4 to Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) in block@23
debug: Replacing trivial Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) (arr#7) with arr#4
debug: Deleting Phi assignment: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23)
debug: Replaced trivial Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) (arr#7) with arr#4 in current definition for 1 blocks
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@21
debug: Added window_left#0 to Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8) in block@8
debug: Added window_left#0 to Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) (window_left#6) with window_left#0
debug: Deleting Phi assignment: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20)
debug: Replacing trivial Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21) (window_left#1) with window_left#0
debug: Deleting Phi assignment: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21)
debug: Replaced trivial Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) (window_left#6) with window_left#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21) (window_left#1) with window_left#0 in current definition for 2 blocks
debug: Added right#1 to Phi node: let right#9: uint64 = φ(right#1 <- block@8) in block@8
debug: Added right#1 to Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) in block@20
debug: Replacing trivial Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) (right#9) with right#1
debug: Deleting Phi assignment: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20)
debug: Replaced trivial Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) (right#9) with right#1 in current definition for 1 blocks
debug: Added arr#0 to Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8) in block@8
debug: Added arr#0 to Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) (arr#6) with arr#0
debug: Deleting Phi assignment: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20)
debug: Replacing trivial Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21) (arr#4) with arr#0
debug: Deleting Phi assignment: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21)
debug: Replaced trivial Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) (arr#6) with arr#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21) (arr#4) with arr#0 in current definition for 4 blocks
debug: Added left#1 to Phi node: let left#10: uint64 = φ(left#1 <- block@8) in block@8
debug: Added left#1 to Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) in block@20
debug: Replacing trivial Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) (left#10) with left#1
debug: Deleting Phi assignment: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20)
debug: Replaced trivial Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) (left#10) with left#1 in current definition for 1 blocks
debug: Added window_right#0 to Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8) in block@8
debug: Added window_right#0 to Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) (window_right#7) with window_right#0
debug: Deleting Phi assignment: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20)
debug: Replacing trivial Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21) (window_right#2) with window_right#0
debug: Deleting Phi assignment: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21)
debug: Replaced trivial Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) (window_right#7) with window_right#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21) (window_right#2) with window_right#0 in current definition for 4 blocks
debug: Building IR for function test_cases.array.uint64.return_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.add_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.pop_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.append_length_and_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.do_something_with_array
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.path_length
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'point_idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let point_idx#1: uint64 = undefined while trying to resolve 'point_idx' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'path' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@1
debug: Looking for 'last_point.x' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.x#1: bytes[8] = undefined while trying to resolve 'last_point.x' in block@1
debug: Looking for 'last_point.y' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.y#1: uint64 = undefined while trying to resolve 'last_point.y' in block@1
debug: Looking for 'last_point.other.a' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.a#1: uint64 = undefined while trying to resolve 'last_point.other.a' in block@1
debug: Looking for 'last_point.other.b' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.b#1: uint64 = undefined while trying to resolve 'last_point.other.b' in block@1
debug: Looking for 'last_point.other.c' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.c#1: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@1
debug: Looking for 'last_point.other.d' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.d#1: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let point.x#1: bytes[8] = undefined while trying to resolve 'point.x' in block@5
debug: Added point.x#0 to Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3) in block@3
debug: Added point.x#0 to Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) (point.x#1) with point.x#0
debug: Deleting Phi assignment: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4)
debug: Replaced trivial Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) (point.x#1) with point.x#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.y#1: uint64 = undefined while trying to resolve 'point.y' in block@5
debug: Added point.y#0 to Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3) in block@3
debug: Added point.y#0 to Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) (point.y#1) with point.y#0
debug: Deleting Phi assignment: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4)
debug: Replaced trivial Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) (point.y#1) with point.y#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.a#1: uint64 = undefined while trying to resolve 'point.other.a' in block@5
debug: Added point.other.a#0 to Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3) in block@3
debug: Added point.other.a#0 to Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) (point.other.a#1) with point.other.a#0
debug: Deleting Phi assignment: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) (point.other.a#1) with point.other.a#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.b#1: uint64 = undefined while trying to resolve 'point.other.b' in block@5
debug: Added point.other.b#0 to Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3) in block@3
debug: Added point.other.b#0 to Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) (point.other.b#1) with point.other.b#0
debug: Deleting Phi assignment: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) (point.other.b#1) with point.other.b#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.c#1: bytes[32] = undefined while trying to resolve 'point.other.c' in block@5
debug: Added point.other.c#0 to Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3) in block@3
debug: Added point.other.c#0 to Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) (point.other.c#1) with point.other.c#0
debug: Deleting Phi assignment: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) (point.other.c#1) with point.other.c#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.d#1: bytes[16] = undefined while trying to resolve 'point.other.d' in block@5
debug: Added point.other.d#0 to Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3) in block@3
debug: Added point.other.d#0 to Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) (point.other.d#1) with point.other.d#0
debug: Deleting Phi assignment: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) (point.other.d#1) with point.other.d#0 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.x#2: bytes[8] = undefined while trying to resolve 'last_point.x' in block@5
debug: Added last_point.x#1 to Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3) in block@3
debug: Added last_point.x#1 to Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) (last_point.x#2) with last_point.x#1
debug: Deleting Phi assignment: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) (last_point.x#2) with last_point.x#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.y#2: uint64 = undefined while trying to resolve 'last_point.y' in block@5
debug: Added last_point.y#1 to Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3) in block@3
debug: Added last_point.y#1 to Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) (last_point.y#2) with last_point.y#1
debug: Deleting Phi assignment: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) (last_point.y#2) with last_point.y#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.a#2: uint64 = undefined while trying to resolve 'last_point.other.a' in block@5
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3) in block@3
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) (last_point.other.a#2) with last_point.other.a#1
debug: Deleting Phi assignment: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) (last_point.other.a#2) with last_point.other.a#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.b#2: uint64 = undefined while trying to resolve 'last_point.other.b' in block@5
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3) in block@3
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) (last_point.other.b#2) with last_point.other.b#1
debug: Deleting Phi assignment: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) (last_point.other.b#2) with last_point.other.b#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.c#2: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@5
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3) in block@3
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) (last_point.other.c#2) with last_point.other.c#1
debug: Deleting Phi assignment: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) (last_point.other.c#2) with last_point.other.c#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.d#2: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@5
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3) in block@3
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) (last_point.other.d#2) with last_point.other.d#1
debug: Deleting Phi assignment: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) (last_point.other.d#2) with last_point.other.d#1 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@8
debug: Created Phi assignment: let length#2: uint64 = undefined while trying to resolve 'length' in block@5
debug: Looking for 'length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let length#3: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#3 to Phi node: let length#2: uint64 = φ(length#3 <- block@3) in block@3
debug: Added length#3 to Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) in block@4
debug: Replacing trivial Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) (length#2) with length#3
debug: Deleting Phi assignment: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4)
debug: Replaced trivial Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) (length#2) with length#3 in current definition for 1 blocks
debug: Added length#3 to Phi node: let length#1: uint64 = φ(length#3 <- block@6) in block@6
debug: Added length#3 to Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) (length#1) with length#3
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) (length#1) with length#3 in current definition for 1 blocks
debug: Created Phi assignment: let dx#2: uint64 = undefined while trying to resolve 'dx' in block@8
debug: Created Phi assignment: let dx#3: uint64 = undefined while trying to resolve 'dx' in block@5
debug: Added dx#0 to Phi node: let dx#3: uint64 = φ(dx#0 <- block@3) in block@3
debug: Added dx#1 to Phi node: let dx#3: uint64 = φ(dx#0 <- block@3, dx#1 <- block@4) in block@4
debug: Added dx#3 to Phi node: let dx#2: uint64 = φ(dx#3 <- block@6) in block@6
debug: Added dx#3 to Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) (dx#2) with dx#3
debug: Deleting Phi assignment: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7)
debug: Replaced trivial Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) (dx#2) with dx#3 in current definition for 1 blocks
debug: Created Phi assignment: let dy#2: uint64 = undefined while trying to resolve 'dy' in block@8
debug: Added dy#0 to Phi node: let dy#2: uint64 = φ(dy#0 <- block@6) in block@6
debug: Added dy#1 to Phi node: let dy#2: uint64 = φ(dy#0 <- block@6, dy#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@1
debug: Added point_idx#0 to Phi node: let point_idx#1: uint64 = φ(point_idx#0 <- block@0) in block@0
debug: Added point_idx#2 to Phi node: let point_idx#1: uint64 = φ(point_idx#0 <- block@0, point_idx#2 <- block@9) in block@9
debug: Added path#0 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0) in block@0
debug: Created Phi assignment: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@8
debug: Created Phi assignment: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@5
debug: Added path#1 to Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3) in block@3
debug: Added path#1 to Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) (path#3) with path#1
debug: Deleting Phi assignment: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4)
debug: Replaced trivial Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) (path#3) with path#1 in current definition for 1 blocks
debug: Added path#1 to Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6) in block@6
debug: Added path#1 to Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) (path#2) with path#1
debug: Deleting Phi assignment: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7)
debug: Replaced trivial Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) (path#2) with path#1 in current definition for 1 blocks
debug: Added path#1 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) (path#1) with path#0
debug: Deleting Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9)
debug: Replaced trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) (path#1) with path#0 in current definition for 9 blocks
debug: Added last_point.x#0 to Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.x#3: bytes[8] = undefined while trying to resolve 'last_point.x' in block@8
debug: Added last_point.x#1 to Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6) in block@6
debug: Added last_point.x#1 to Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) (last_point.x#3) with last_point.x#1
debug: Deleting Phi assignment: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) (last_point.x#3) with last_point.x#1 in current definition for 1 blocks
debug: Added last_point.x#1 to Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) (last_point.x#1) with last_point.x#0
debug: Deleting Phi assignment: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) (last_point.x#1) with last_point.x#0 in current definition for 9 blocks
debug: Added last_point.y#0 to Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.y#3: uint64 = undefined while trying to resolve 'last_point.y' in block@8
debug: Added last_point.y#1 to Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6) in block@6
debug: Added last_point.y#1 to Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) (last_point.y#3) with last_point.y#1
debug: Deleting Phi assignment: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) (last_point.y#3) with last_point.y#1 in current definition for 1 blocks
debug: Added last_point.y#1 to Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) (last_point.y#1) with last_point.y#0
debug: Deleting Phi assignment: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) (last_point.y#1) with last_point.y#0 in current definition for 9 blocks
debug: Added last_point.other.a#0 to Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.a#3: uint64 = undefined while trying to resolve 'last_point.other.a' in block@8
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6) in block@6
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) (last_point.other.a#3) with last_point.other.a#1
debug: Deleting Phi assignment: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) (last_point.other.a#3) with last_point.other.a#1 in current definition for 1 blocks
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) (last_point.other.a#1) with last_point.other.a#0
debug: Deleting Phi assignment: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) (last_point.other.a#1) with last_point.other.a#0 in current definition for 9 blocks
debug: Added last_point.other.b#0 to Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.b#3: uint64 = undefined while trying to resolve 'last_point.other.b' in block@8
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6) in block@6
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) (last_point.other.b#3) with last_point.other.b#1
debug: Deleting Phi assignment: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) (last_point.other.b#3) with last_point.other.b#1 in current definition for 1 blocks
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) (last_point.other.b#1) with last_point.other.b#0
debug: Deleting Phi assignment: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) (last_point.other.b#1) with last_point.other.b#0 in current definition for 9 blocks
debug: Added last_point.other.c#0 to Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.c#3: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@8
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6) in block@6
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) (last_point.other.c#3) with last_point.other.c#1
debug: Deleting Phi assignment: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) (last_point.other.c#3) with last_point.other.c#1 in current definition for 1 blocks
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) (last_point.other.c#1) with last_point.other.c#0
debug: Deleting Phi assignment: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) (last_point.other.c#1) with last_point.other.c#0 in current definition for 9 blocks
debug: Added last_point.other.d#0 to Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.d#3: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@8
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6) in block@6
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) (last_point.other.d#3) with last_point.other.d#1
debug: Deleting Phi assignment: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) (last_point.other.d#3) with last_point.other.d#1 in current definition for 1 blocks
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) (last_point.other.d#1) with last_point.other.d#0
debug: Deleting Phi assignment: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) (last_point.other.d#1) with last_point.other.d#0 in current definition for 9 blocks
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#4 to Phi node: let length#3: uint64 = φ(length#0 <- block@0, length#4 <- block@9) in block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.array.immutable.times
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let result#1: bytes = undefined while trying to resolve 'result' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added result#0 to Phi node: let result#1: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#2 to Phi node: let result#1: bytes = φ(result#0 <- block@0, result#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.add_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.pop_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.sum_arr
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Building IR for function test_cases.array.uint64.Contract.test_array
debug: Sealing block@0
array/uint64.py:12:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:16:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:20:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:25:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:29:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:33:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:35:9 debug: encountered already materialized expression (test_cases.array.uint64.return_ref(arr, arr)), reusing result: tmp%40#0
array/uint64.py:35:30 debug: encountered already materialized expression (0u), reusing result: 0u
array/uint64.py:38:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:39:16 debug: encountered already materialized expression (arr), reusing result: arr#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_extend
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_multiple_append
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.overhead
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_too_long
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array#1: uint64[]* = undefined while trying to resolve 'array' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added array#0 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0
debug: Deleting Phi assignment: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array#1: uint64[]* = undefined while trying to resolve 'array' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added array#0 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0
debug: Deleting Phi assignment: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0 in current definition for 3 blocks
debug: Sealing block@4
array/uint64.py:84:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:87:16 debug: encountered already materialized expression (array2), reusing result: array2#0
array/uint64.py:92:16 debug: encountered already materialized expression (array), reusing result: array#0
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Sealing block@0
array/uint64.py:110:49 debug: encountered already materialized expression (test_cases.array.uint64.append_length_and_return(arr)), reusing result: tmp%16#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_allocations
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_iteration
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'val' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let val#1: uint64 = undefined while trying to resolve 'val' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added val#0 to Phi node: let val#1: uint64 = φ(val#0 <- block@0) in block@0
debug: Added val#2 to Phi node: let val#1: uint64 = φ(val#0 <- block@0, val#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let last#1: uint64 = undefined while trying to resolve 'last' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@7) in block@7
debug: Added last#0 to Phi node: let last#1: uint64 = φ(last#0 <- block@4) in block@4
debug: Added last#2 to Phi node: let last#1: uint64 = φ(last#0 <- block@4, last#2 <- block@7) in block@7
debug: Sealing block@8
debug: Created Phi assignment: let arr#2: uint64[]* = undefined while trying to resolve 'arr' in block@5
debug: Added arr#0 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4) in block@4
debug: Added arr#2 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7)
debug: Replaced trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) (arr#2) with arr#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@8) in block@8
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@8, item_index_internal%1#2 <- block@11) in block@11
debug: Sealing block@12
debug: Created Phi assignment: let arr#3: uint64[]* = undefined while trying to resolve 'arr' in block@9
debug: Added arr#0 to Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8) in block@8
debug: Added arr#3 to Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) in block@11
debug: Replacing trivial Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) (arr#3) with arr#0
debug: Deleting Phi assignment: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11)
debug: Replaced trivial Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) (arr#3) with arr#0 in current definition for 3 blocks
debug: Terminated block@12
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@13
debug: Looking for 'reverse_index_internal%2' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let reverse_index_internal%2#1: uint64 = undefined while trying to resolve 'reverse_index_internal%2' in block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let last#3: uint64 = undefined while trying to resolve 'last' in block@13
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@13
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12) in block@12
debug: Added item_index_internal%2#1 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) in block@15
debug: Replacing trivial Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) (item_index_internal%2#1) with item_index_internal%2#0
debug: Deleting Phi assignment: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15)
debug: Replaced trivial Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) (item_index_internal%2#1) with item_index_internal%2#0 in current definition for 3 blocks
debug: Added reverse_index_internal%2#0 to Phi node: let reverse_index_internal%2#1: uint64 = φ(reverse_index_internal%2#0 <- block@12) in block@12
debug: Added reverse_index_internal%2#2 to Phi node: let reverse_index_internal%2#1: uint64 = φ(reverse_index_internal%2#0 <- block@12, reverse_index_internal%2#2 <- block@15) in block@15
debug: Created Phi assignment: let last#5: uint64 = undefined while trying to resolve 'last' in block@9
debug: Added last#1 to Phi node: let last#5: uint64 = φ(last#1 <- block@8) in block@8
debug: Added last#5 to Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) in block@11
debug: Replacing trivial Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) (last#5) with last#1
debug: Deleting Phi assignment: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11)
debug: Replaced trivial Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) (last#5) with last#1 in current definition for 3 blocks
debug: Added last#1 to Phi node: let last#3: uint64 = φ(last#1 <- block@12) in block@12
debug: Added last#4 to Phi node: let last#3: uint64 = φ(last#1 <- block@12, last#4 <- block@15) in block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Looking for 'arc4_arr' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let arc4_arr#1: bytes = undefined while trying to resolve 'arc4_arr' in block@17
debug: Looking for 'native_arr' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let native_arr#1: bytes[8][]* = undefined while trying to resolve 'native_arr' in block@17
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@17
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@16) in block@16
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@16, i#2 <- block@19) in block@19
debug: Added arc4_arr#0 to Phi node: let arc4_arr#1: bytes = φ(arc4_arr#0 <- block@16) in block@16
debug: Added arc4_arr#2 to Phi node: let arc4_arr#1: bytes = φ(arc4_arr#0 <- block@16, arc4_arr#2 <- block@19) in block@19
debug: Added native_arr#0 to Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16) in block@16
debug: Added native_arr#1 to Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) in block@19
debug: Replacing trivial Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) (native_arr#1) with native_arr#0
debug: Deleting Phi assignment: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19)
debug: Replaced trivial Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) (native_arr#1) with native_arr#0 in current definition for 3 blocks
debug: Sealing block@20
debug: Terminated block@20
debug: Building IR for function test_cases.array.uint64.Contract.test_quicksort
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'rnd' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let rnd#1: uint64[]* = undefined while trying to resolve 'rnd' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added rnd#0 to Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0) in block@0
debug: Added rnd#1 to Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) (rnd#1) with rnd#0
debug: Deleting Phi assignment: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3)
debug: Replaced trivial Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) (rnd#1) with rnd#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let last#1: uint64 = undefined while trying to resolve 'last' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added last#0 to Phi node: let last#1: uint64 = φ(last#0 <- block@4) in block@4
debug: Added last#2 to Phi node: let last#1: uint64 = φ(last#0 <- block@4, last#2 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function test_cases.array.uint64.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: removing unused subroutine test_cases.array.uint64.Contract.overhead
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: removing unused subroutine test_cases.array.uint64.Contract.test_allocations
debug: removing unused subroutine test_cases.array.uint64.Contract.test_iteration
debug: removing unused subroutine test_cases.array.uint64.Contract.test_quicksort
debug: removing unused subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'path' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added path#0 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0) in block@0
debug: Added path#1 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) (path#1) with path#0
debug: Deleting Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3)
debug: Replaced trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) (path#1) with path#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bool[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'count' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let count#1: uint64 = undefined while trying to resolve 'count' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@9) in block@9
debug: Added count#0 to Phi node: let count#1: uint64 = φ(count#0 <- block@4) in block@4
debug: Created Phi assignment: let count#3: uint64 = undefined while trying to resolve 'count' in block@8
debug: Added count#1 to Phi node: let count#3: uint64 = φ(count#1 <- block@6) in block@6
debug: Added count#2 to Phi node: let count#3: uint64 = φ(count#1 <- block@6, count#2 <- block@7) in block@7
debug: Added count#3 to Phi node: let count#1: uint64 = φ(count#0 <- block@4, count#3 <- block@9) in block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bytes[8][]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'count' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let count#1: uint64 = undefined while trying to resolve 'count' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@9) in block@9
debug: Added count#0 to Phi node: let count#1: uint64 = φ(count#0 <- block@4) in block@4
debug: Created Phi assignment: let count#3: uint64 = undefined while trying to resolve 'count' in block@8
debug: Added count#1 to Phi node: let count#3: uint64 = φ(count#1 <- block@6) in block@6
debug: Added count#2 to Phi node: let count#3: uint64 = φ(count#1 <- block@6, count#2 <- block@7) in block@7
debug: Added count#3 to Phi node: let count#1: uint64 = φ(count#0 <- block@4, count#3 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let arr#2: bytes[8][]* = undefined while trying to resolve 'arr' in block@5
debug: Added arr#0 to Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4) in block@4
debug: Created Phi assignment: let arr#3: bytes[8][]* = undefined while trying to resolve 'arr' in block@8
debug: Added arr#2 to Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6) in block@6
debug: Added arr#2 to Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) (arr#3) with arr#2
debug: Deleting Phi assignment: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7)
debug: Replaced trivial Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) (arr#3) with arr#2 in current definition for 1 blocks
debug: Added arr#2 to Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9)
debug: Replaced trivial Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) (arr#2) with arr#0 in current definition for 5 blocks
debug: Terminated block@10
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.sum_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.xtra
debug: Sealing block@0
array/static_size.py:104:9 debug: encountered already materialized expression ('count'), reusing result: "count"
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.more
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.more
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Sealing block@0
array/immutable.py:81:16 debug: encountered already materialized expression (arr), reusing result: arr#1
array/immutable.py:85:16 debug: encountered already materialized expression (arr), reusing result: arr#2
array/immutable.py:89:16 debug: encountered already materialized expression (arr), reusing result: arr#3
array/immutable.py:94:16 debug: encountered already materialized expression (arr), reusing result: arr#4
array/immutable.py:98:16 debug: encountered already materialized expression (arr), reusing result: arr#5
array/immutable.py:102:16 debug: encountered already materialized expression (arr), reusing result: arr#6
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bool[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bool[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: bool[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let length#2: uint64 = undefined while trying to resolve 'length' in block@6
debug: Added length#0 to Phi node: let length#2: uint64 = φ(length#0 <- block@4) in block@4
debug: Added length#0 to Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) (length#2) with length#0
debug: Deleting Phi assignment: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5)
debug: Replaced trivial Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) (length#2) with length#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Created Phi assignment: let arr#3: bool[] = undefined while trying to resolve 'arr' in block@6
debug: Added arr#1 to Phi node: let arr#3: bool[] = φ(arr#1 <- block@4) in block@4
debug: Added arr#1 to Phi node: let arr#3: bool[] = φ(arr#1 <- block@4, arr#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let arr#3: bool[] = φ(arr#1 <- block@4, arr#1 <- block@5) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: bool[] = φ(arr#1 <- block@4, arr#1 <- block@5)
debug: Replaced trivial Phi node: let arr#3: bool[] = φ(arr#1 <- block@4, arr#1 <- block@5) (arr#3) with arr#1 in current definition for 1 blocks
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let length#3: uint64 = undefined while trying to resolve 'length' in block@8
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@6) in block@6
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) (length#3) with length#0
debug: Deleting Phi assignment: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7)
debug: Replaced trivial Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) (length#3) with length#0 in current definition for 1 blocks
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let arr#4: bool[] = undefined while trying to resolve 'arr' in block@8
debug: Added arr#1 to Phi node: let arr#4: bool[] = φ(arr#1 <- block@6) in block@6
debug: Added arr#1 to Phi node: let arr#4: bool[] = φ(arr#1 <- block@6, arr#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#4: bool[] = φ(arr#1 <- block@6, arr#1 <- block@7) (arr#4) with arr#1
debug: Deleting Phi assignment: let arr#4: bool[] = φ(arr#1 <- block@6, arr#1 <- block@7)
debug: Replaced trivial Phi node: let arr#4: bool[] = φ(arr#1 <- block@6, arr#1 <- block@7) (arr#4) with arr#1 in current definition for 1 blocks
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let length#4: uint64 = undefined while trying to resolve 'length' in block@10
debug: Added length#0 to Phi node: let length#4: uint64 = φ(length#0 <- block@8) in block@8
debug: Added length#0 to Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) (length#4) with length#0
debug: Deleting Phi assignment: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9)
debug: Replaced trivial Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) (length#4) with length#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Created Phi assignment: let arr#5: bool[] = undefined while trying to resolve 'arr' in block@10
debug: Added arr#1 to Phi node: let arr#5: bool[] = φ(arr#1 <- block@8) in block@8
debug: Added arr#1 to Phi node: let arr#5: bool[] = φ(arr#1 <- block@8, arr#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#5: bool[] = φ(arr#1 <- block@8, arr#1 <- block@9) (arr#5) with arr#1
debug: Deleting Phi assignment: let arr#5: bool[] = φ(arr#1 <- block@8, arr#1 <- block@9)
debug: Replaced trivial Phi node: let arr#5: bool[] = φ(arr#1 <- block@8, arr#1 <- block@9) (arr#5) with arr#1 in current definition for 1 blocks
debug: Terminated block@11
debug: Sealing block@12
debug: Created Phi assignment: let arr#6: bool[] = undefined while trying to resolve 'arr' in block@12
debug: Added arr#1 to Phi node: let arr#6: bool[] = φ(arr#1 <- block@10) in block@10
debug: Added arr#1 to Phi node: let arr#6: bool[] = φ(arr#1 <- block@10, arr#1 <- block@11) in block@11
debug: Replacing trivial Phi node: let arr#6: bool[] = φ(arr#1 <- block@10, arr#1 <- block@11) (arr#6) with arr#1
debug: Deleting Phi assignment: let arr#6: bool[] = φ(arr#1 <- block@10, arr#1 <- block@11)
debug: Replaced trivial Phi node: let arr#6: bool[] = φ(arr#1 <- block@10, arr#1 <- block@11) (arr#6) with arr#1 in current definition for 1 blocks
debug: Created Phi assignment: let length#5: uint64 = undefined while trying to resolve 'length' in block@12
debug: Added length#0 to Phi node: let length#5: uint64 = φ(length#0 <- block@10) in block@10
debug: Added length#0 to Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) (length#5) with length#0
debug: Deleting Phi assignment: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11)
debug: Replaced trivial Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) (length#5) with length#0 in current definition for 1 blocks
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,uint64)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,uint64)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,uint64)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
array/immutable.py:144:16 debug: encountered already materialized expression (arr), reusing result: arr#1
array/immutable.py:149:16 debug: encountered already materialized expression (arr), reusing result: arr#3
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bool,bool)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bool,bool)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bool,bool)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let arr#3: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added i#3 to Phi node: let i#4: uint64 = φ(i#3 <- block@4) in block@4
debug: Added i#5 to Phi node: let i#4: uint64 = φ(i#3 <- block@4, i#5 <- block@7) in block@7
debug: Added arr#1 to Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4) in block@4
debug: Added arr#3 to Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7)
debug: Replaced trivial Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1 in current definition for 3 blocks
debug: Sealing block@8
array/immutable.py:183:16 debug: encountered already materialized expression (arr), reusing result: arr#4
debug: Terminated block@8
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let arr#3: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added i#3 to Phi node: let i#4: uint64 = φ(i#3 <- block@4) in block@4
debug: Added i#5 to Phi node: let i#4: uint64 = φ(i#3 <- block@4, i#5 <- block@7) in block@7
debug: Added arr#1 to Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4) in block@4
debug: Added arr#3 to Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7)
debug: Replaced trivial Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1 in current definition for 3 blocks
debug: Sealing block@8
array/immutable.py:202:16 debug: encountered already materialized expression (arr), reusing result: arr#4
debug: Terminated block@8
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Looking for 'j' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let j#1: uint64 = undefined while trying to resolve 'j' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'extra_arr' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let extra_arr#1: uint64[] = undefined while trying to resolve 'extra_arr' in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@3
debug: Added j#0 to Phi node: let j#1: uint64 = φ(j#0 <- block@2) in block@2
debug: Added j#2 to Phi node: let j#1: uint64 = φ(j#0 <- block@2, j#2 <- block@5) in block@5
debug: Added extra_arr#0 to Phi node: let extra_arr#1: uint64[] = φ(extra_arr#0 <- block@2) in block@2
debug: Added extra_arr#2 to Phi node: let extra_arr#1: uint64[] = φ(extra_arr#0 <- block@2, extra_arr#2 <- block@5) in block@5
debug: Sealing block@6
debug: Created Phi assignment: let arr#1: uint64[][] = undefined while trying to resolve 'arr' in block@3
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#2: uint64[][] = undefined while trying to resolve 'arr' in block@1
debug: Added arr#2 to Phi node: let arr#1: uint64[][] = φ(arr#2 <- block@2) in block@2
debug: Added arr#1 to Phi node: let arr#1: uint64[][] = φ(arr#2 <- block@2, arr#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let arr#1: uint64[][] = φ(arr#2 <- block@2, arr#1 <- block@5) (arr#1) with arr#2
debug: Deleting Phi assignment: let arr#1: uint64[][] = φ(arr#2 <- block@2, arr#1 <- block@5)
debug: Replaced trivial Phi node: let arr#1: uint64[][] = φ(arr#2 <- block@2, arr#1 <- block@5) (arr#1) with arr#2 in current definition for 3 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@7) in block@7
debug: Added arr#0 to Phi node: let arr#2: uint64[][] = φ(arr#0 <- block@0) in block@0
debug: Added arr#3 to Phi node: let arr#2: uint64[][] = φ(arr#0 <- block@0, arr#3 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Looking for 'totals' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let totals#1: uint64[] = undefined while trying to resolve 'totals' in block@9
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@8) in block@8
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@8, item_index_internal%0#2 <- block@11) in block@11
debug: Added totals#0 to Phi node: let totals#1: uint64[] = φ(totals#0 <- block@8) in block@8
debug: Added totals#2 to Phi node: let totals#1: uint64[] = φ(totals#0 <- block@8, totals#2 <- block@11) in block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr2' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr2#1: (bool,bool)[] = undefined while trying to resolve 'arr2' in block@1
debug: Looking for 'arr7' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr7#1: (uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[] = undefined while trying to resolve 'arr7' in block@1
debug: Looking for 'arr8' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr8#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = undefined while trying to resolve 'arr8' in block@1
debug: Looking for 'arr9' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr9#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = undefined while trying to resolve 'arr9' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr2#0 to Phi node: let arr2#1: (bool,bool)[] = φ(arr2#0 <- block@0) in block@0
debug: Added arr2#2 to Phi node: let arr2#1: (bool,bool)[] = φ(arr2#0 <- block@0, arr2#2 <- block@3) in block@3
debug: Added arr7#0 to Phi node: let arr7#1: (uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr7#0 <- block@0) in block@0
debug: Added arr7#2 to Phi node: let arr7#1: (uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr7#0 <- block@0, arr7#2 <- block@3) in block@3
debug: Added arr8#0 to Phi node: let arr8#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr8#0 <- block@0) in block@0
debug: Added arr8#2 to Phi node: let arr8#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr8#0 <- block@0, arr8#2 <- block@3) in block@3
debug: Added arr9#0 to Phi node: let arr9#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr9#0 <- block@0) in block@0
debug: Added arr9#2 to Phi node: let arr9#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr9#0 <- block@0, arr9#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Sealing block@0
array/immutable.py:296:37 debug: encountered already materialized expression (0u), reusing result: 0u
array/immutable.py:296:37 debug: encountered already materialized expression (0u), reusing result: 0u
array/immutable.py:296:37 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'sum1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sum1#1: uint64 = undefined while trying to resolve 'sum1' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added sum1#0 to Phi node: let sum1#1: uint64 = φ(sum1#0 <- block@0) in block@0
debug: Added sum1#2 to Phi node: let sum1#1: uint64 = φ(sum1#0 <- block@0, sum1#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let arr2#1: bool[] = undefined while trying to resolve 'arr2' in block@1
debug: Added arr2#0 to Phi node: let arr2#1: bool[] = φ(arr2#0 <- block@0) in block@0
debug: Added arr2#1 to Phi node: let arr2#1: bool[] = φ(arr2#0 <- block@0, arr2#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr2#1: bool[] = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0
debug: Deleting Phi assignment: let arr2#1: bool[] = φ(arr2#0 <- block@0, arr2#1 <- block@3)
debug: Replaced trivial Phi node: let arr2#1: bool[] = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'sum2' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let sum2#1: uint64 = undefined while trying to resolve 'sum2' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@9) in block@9
debug: Created Phi assignment: let sum2#3: uint64 = undefined while trying to resolve 'sum2' in block@1
debug: Added sum2#0 to Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0) in block@0
debug: Added sum2#3 to Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) (sum2#3) with sum2#0
debug: Deleting Phi assignment: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3)
debug: Replaced trivial Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) (sum2#3) with sum2#0 in current definition for 3 blocks
debug: Added sum2#0 to Phi node: let sum2#1: uint64 = φ(sum2#0 <- block@4) in block@4
debug: Created Phi assignment: let sum2#4: uint64 = undefined while trying to resolve 'sum2' in block@8
debug: Added sum2#1 to Phi node: let sum2#4: uint64 = φ(sum2#1 <- block@6) in block@6
debug: Added sum2#2 to Phi node: let sum2#4: uint64 = φ(sum2#1 <- block@6, sum2#2 <- block@7) in block@7
debug: Added sum2#4 to Phi node: let sum2#1: uint64 = φ(sum2#0 <- block@4, sum2#4 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let arr3#1: (uint64,bool,bool)[] = undefined while trying to resolve 'arr3' in block@5
debug: Created Phi assignment: let arr3#2: (uint64,bool,bool)[] = undefined while trying to resolve 'arr3' in block@1
debug: Added arr3#0 to Phi node: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0) in block@0
debug: Added arr3#2 to Phi node: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0, arr3#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0, arr3#2 <- block@3) (arr3#2) with arr3#0
debug: Deleting Phi assignment: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0, arr3#2 <- block@3)
debug: Replaced trivial Phi node: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0, arr3#2 <- block@3) (arr3#2) with arr3#0 in current definition for 3 blocks
debug: Added arr3#0 to Phi node: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4) in block@4
debug: Created Phi assignment: let arr3#3: (uint64,bool,bool)[] = undefined while trying to resolve 'arr3' in block@8
debug: Added arr3#1 to Phi node: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6) in block@6
debug: Added arr3#1 to Phi node: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6, arr3#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6, arr3#1 <- block@7) (arr3#3) with arr3#1
debug: Deleting Phi assignment: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6, arr3#1 <- block@7)
debug: Replaced trivial Phi node: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6, arr3#1 <- block@7) (arr3#3) with arr3#1 in current definition for 1 blocks
debug: Added arr3#1 to Phi node: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4, arr3#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4, arr3#1 <- block@9) (arr3#1) with arr3#0
debug: Deleting Phi assignment: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4, arr3#1 <- block@9)
debug: Replaced trivial Phi node: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4, arr3#1 <- block@9) (arr3#1) with arr3#0 in current definition for 5 blocks
debug: Terminated block@10
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@11
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Looking for 'sum3' in an unsealed block creating an incomplete Phi: block@11
debug: Created Phi assignment: let sum3#1: uint64 = undefined while trying to resolve 'sum3' in block@11
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Created Phi assignment: let tup.foo#1: uint64 = undefined while trying to resolve 'tup.foo' in block@14
debug: Added tup.foo#0 to Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12) in block@12
debug: Added tup.foo#0 to Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) (tup.foo#1) with tup.foo#0
debug: Deleting Phi assignment: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13)
debug: Replaced trivial Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) (tup.foo#1) with tup.foo#0 in current definition for 1 blocks
debug: Created Phi assignment: let tup.bar#1: bool = undefined while trying to resolve 'tup.bar' in block@14
debug: Added tup.bar#0 to Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12) in block@12
debug: Added tup.bar#0 to Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) (tup.bar#1) with tup.bar#0
debug: Deleting Phi assignment: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13)
debug: Replaced trivial Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) (tup.bar#1) with tup.bar#0 in current definition for 1 blocks
debug: Created Phi assignment: let tup.baz#1: bool = undefined while trying to resolve 'tup.baz' in block@14
debug: Added tup.baz#0 to Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12) in block@12
debug: Added tup.baz#0 to Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) (tup.baz#1) with tup.baz#0
debug: Deleting Phi assignment: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13)
debug: Replaced trivial Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) (tup.baz#1) with tup.baz#0 in current definition for 1 blocks
debug: Terminated block@14
debug: Sealing block@15
debug: Created Phi assignment: let sum3#4: uint64 = undefined while trying to resolve 'sum3' in block@14
debug: Added sum3#2 to Phi node: let sum3#4: uint64 = φ(sum3#2 <- block@12) in block@12
debug: Added sum3#3 to Phi node: let sum3#4: uint64 = φ(sum3#2 <- block@12, sum3#3 <- block@13) in block@13
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@11
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@10) in block@10
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@10, item_index_internal%2#2 <- block@17) in block@17
debug: Created Phi assignment: let sum3#6: uint64 = undefined while trying to resolve 'sum3' in block@5
debug: Created Phi assignment: let sum3#7: uint64 = undefined while trying to resolve 'sum3' in block@1
debug: Added sum3#0 to Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0) in block@0
debug: Added sum3#7 to Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) (sum3#7) with sum3#0
debug: Deleting Phi assignment: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3)
debug: Replaced trivial Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) (sum3#7) with sum3#0 in current definition for 3 blocks
debug: Added sum3#0 to Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4) in block@4
debug: Created Phi assignment: let sum3#8: uint64 = undefined while trying to resolve 'sum3' in block@8
debug: Added sum3#6 to Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6) in block@6
debug: Added sum3#6 to Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) (sum3#8) with sum3#6
debug: Deleting Phi assignment: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7)
debug: Replaced trivial Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) (sum3#8) with sum3#6 in current definition for 1 blocks
debug: Added sum3#6 to Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) (sum3#6) with sum3#0
debug: Deleting Phi assignment: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9)
debug: Replaced trivial Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) (sum3#6) with sum3#0 in current definition for 5 blocks
debug: Added sum3#0 to Phi node: let sum3#1: uint64 = φ(sum3#0 <- block@10) in block@10
debug: Created Phi assignment: let sum3#9: uint64 = undefined while trying to resolve 'sum3' in block@16
debug: Added sum3#4 to Phi node: let sum3#9: uint64 = φ(sum3#4 <- block@14) in block@14
debug: Added sum3#5 to Phi node: let sum3#9: uint64 = φ(sum3#4 <- block@14, sum3#5 <- block@15) in block@15
debug: Added sum3#9 to Phi node: let sum3#1: uint64 = φ(sum3#0 <- block@10, sum3#9 <- block@17) in block@17
debug: Sealing block@18
debug: Created Phi assignment: let arr4#1: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@11
debug: Created Phi assignment: let arr4#2: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@5
debug: Created Phi assignment: let arr4#3: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@1
debug: Added arr4#0 to Phi node: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0) in block@0
debug: Added arr4#3 to Phi node: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0, arr4#3 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0, arr4#3 <- block@3) (arr4#3) with arr4#0
debug: Deleting Phi assignment: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0, arr4#3 <- block@3)
debug: Replaced trivial Phi node: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0, arr4#3 <- block@3) (arr4#3) with arr4#0 in current definition for 3 blocks
debug: Added arr4#0 to Phi node: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4) in block@4
debug: Created Phi assignment: let arr4#4: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@8
debug: Added arr4#2 to Phi node: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6) in block@6
debug: Added arr4#2 to Phi node: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6, arr4#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6, arr4#2 <- block@7) (arr4#4) with arr4#2
debug: Deleting Phi assignment: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6, arr4#2 <- block@7)
debug: Replaced trivial Phi node: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6, arr4#2 <- block@7) (arr4#4) with arr4#2 in current definition for 1 blocks
debug: Added arr4#2 to Phi node: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4, arr4#2 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4, arr4#2 <- block@9) (arr4#2) with arr4#0
debug: Deleting Phi assignment: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4, arr4#2 <- block@9)
debug: Replaced trivial Phi node: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4, arr4#2 <- block@9) (arr4#2) with arr4#0 in current definition for 5 blocks
debug: Added arr4#0 to Phi node: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10) in block@10
debug: Created Phi assignment: let arr4#5: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@16
debug: Created Phi assignment: let arr4#6: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@14
debug: Added arr4#1 to Phi node: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12) in block@12
debug: Added arr4#1 to Phi node: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12, arr4#1 <- block@13) in block@13
debug: Replacing trivial Phi node: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12, arr4#1 <- block@13) (arr4#6) with arr4#1
debug: Deleting Phi assignment: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12, arr4#1 <- block@13)
debug: Replaced trivial Phi node: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12, arr4#1 <- block@13) (arr4#6) with arr4#1 in current definition for 1 blocks
debug: Added arr4#1 to Phi node: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14) in block@14
debug: Added arr4#1 to Phi node: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14, arr4#1 <- block@15) in block@15
debug: Replacing trivial Phi node: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14, arr4#1 <- block@15) (arr4#5) with arr4#1
debug: Deleting Phi assignment: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14, arr4#1 <- block@15)
debug: Replaced trivial Phi node: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14, arr4#1 <- block@15) (arr4#5) with arr4#1 in current definition for 1 blocks
debug: Added arr4#1 to Phi node: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10, arr4#1 <- block@17) in block@17
debug: Replacing trivial Phi node: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10, arr4#1 <- block@17) (arr4#1) with arr4#0
debug: Deleting Phi assignment: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10, arr4#1 <- block@17)
debug: Replaced trivial Phi node: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10, arr4#1 <- block@17) (arr4#1) with arr4#0 in current definition for 7 blocks
debug: Terminated block@18
debug: Looking for 'item_index_internal%3' in an unsealed block creating an incomplete Phi: block@19
debug: Created Phi assignment: let item_index_internal%3#1: uint64 = undefined while trying to resolve 'item_index_internal%3' in block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Looking for 'sum4' in an unsealed block creating an incomplete Phi: block@19
debug: Created Phi assignment: let sum4#1: uint64 = undefined while trying to resolve 'sum4' in block@19
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@19
debug: Added item_index_internal%3#0 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@18) in block@18
debug: Added item_index_internal%3#2 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@18, item_index_internal%3#2 <- block@21) in block@21
debug: Created Phi assignment: let sum4#4: uint64 = undefined while trying to resolve 'sum4' in block@11
debug: Created Phi assignment: let sum4#5: uint64 = undefined while trying to resolve 'sum4' in block@5
debug: Created Phi assignment: let sum4#6: uint64 = undefined while trying to resolve 'sum4' in block@1
debug: Added sum4#0 to Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0) in block@0
debug: Added sum4#6 to Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) (sum4#6) with sum4#0
debug: Deleting Phi assignment: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3)
debug: Replaced trivial Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) (sum4#6) with sum4#0 in current definition for 3 blocks
debug: Added sum4#0 to Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4) in block@4
debug: Created Phi assignment: let sum4#7: uint64 = undefined while trying to resolve 'sum4' in block@8
debug: Added sum4#5 to Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6) in block@6
debug: Added sum4#5 to Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) (sum4#7) with sum4#5
debug: Deleting Phi assignment: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7)
debug: Replaced trivial Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) (sum4#7) with sum4#5 in current definition for 1 blocks
debug: Added sum4#5 to Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) (sum4#5) with sum4#0
debug: Deleting Phi assignment: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9)
debug: Replaced trivial Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) (sum4#5) with sum4#0 in current definition for 5 blocks
debug: Added sum4#0 to Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10) in block@10
debug: Created Phi assignment: let sum4#8: uint64 = undefined while trying to resolve 'sum4' in block@16
debug: Created Phi assignment: let sum4#9: uint64 = undefined while trying to resolve 'sum4' in block@14
debug: Added sum4#4 to Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12) in block@12
debug: Added sum4#4 to Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) (sum4#9) with sum4#4
debug: Deleting Phi assignment: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13)
debug: Replaced trivial Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) (sum4#9) with sum4#4 in current definition for 1 blocks
debug: Added sum4#4 to Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14) in block@14
debug: Added sum4#4 to Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) (sum4#8) with sum4#4
debug: Deleting Phi assignment: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15)
debug: Replaced trivial Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) (sum4#8) with sum4#4 in current definition for 1 blocks
debug: Added sum4#4 to Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) (sum4#4) with sum4#0
debug: Deleting Phi assignment: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17)
debug: Replaced trivial Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) (sum4#4) with sum4#0 in current definition for 7 blocks
debug: Added sum4#0 to Phi node: let sum4#1: uint64 = φ(sum4#0 <- block@18) in block@18
debug: Added sum4#3 to Phi node: let sum4#1: uint64 = φ(sum4#0 <- block@18, sum4#3 <- block@21) in block@21
debug: Sealing block@22
debug: Created Phi assignment: let sum1#3: uint64 = undefined while trying to resolve 'sum1' in block@19
debug: Created Phi assignment: let sum1#4: uint64 = undefined while trying to resolve 'sum1' in block@11
debug: Created Phi assignment: let sum1#5: uint64 = undefined while trying to resolve 'sum1' in block@5
debug: Added sum1#1 to Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4) in block@4
debug: Created Phi assignment: let sum1#6: uint64 = undefined while trying to resolve 'sum1' in block@8
debug: Added sum1#5 to Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6) in block@6
debug: Added sum1#5 to Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) (sum1#6) with sum1#5
debug: Deleting Phi assignment: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7)
debug: Replaced trivial Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) (sum1#6) with sum1#5 in current definition for 1 blocks
debug: Added sum1#5 to Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) (sum1#5) with sum1#1
debug: Deleting Phi assignment: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9)
debug: Replaced trivial Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) (sum1#5) with sum1#1 in current definition for 5 blocks
debug: Added sum1#1 to Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10) in block@10
debug: Created Phi assignment: let sum1#7: uint64 = undefined while trying to resolve 'sum1' in block@16
debug: Created Phi assignment: let sum1#8: uint64 = undefined while trying to resolve 'sum1' in block@14
debug: Added sum1#4 to Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12) in block@12
debug: Added sum1#4 to Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) (sum1#8) with sum1#4
debug: Deleting Phi assignment: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13)
debug: Replaced trivial Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) (sum1#8) with sum1#4 in current definition for 1 blocks
debug: Added sum1#4 to Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14) in block@14
debug: Added sum1#4 to Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) (sum1#7) with sum1#4
debug: Deleting Phi assignment: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15)
debug: Replaced trivial Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) (sum1#7) with sum1#4 in current definition for 1 blocks
debug: Added sum1#4 to Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) (sum1#4) with sum1#1
debug: Deleting Phi assignment: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17)
debug: Replaced trivial Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) (sum1#4) with sum1#1 in current definition for 7 blocks
debug: Added sum1#1 to Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18) in block@18
debug: Added sum1#3 to Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) (sum1#3) with sum1#1
debug: Deleting Phi assignment: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21)
debug: Replaced trivial Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) (sum1#3) with sum1#1 in current definition for 3 blocks
debug: Created Phi assignment: let sum2#5: uint64 = undefined while trying to resolve 'sum2' in block@19
debug: Created Phi assignment: let sum2#6: uint64 = undefined while trying to resolve 'sum2' in block@11
debug: Added sum2#1 to Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10) in block@10
debug: Created Phi assignment: let sum2#7: uint64 = undefined while trying to resolve 'sum2' in block@16
debug: Created Phi assignment: let sum2#8: uint64 = undefined while trying to resolve 'sum2' in block@14
debug: Added sum2#6 to Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12) in block@12
debug: Added sum2#6 to Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) (sum2#8) with sum2#6
debug: Deleting Phi assignment: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13)
debug: Replaced trivial Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) (sum2#8) with sum2#6 in current definition for 1 blocks
debug: Added sum2#6 to Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14) in block@14
debug: Added sum2#6 to Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) (sum2#7) with sum2#6
debug: Deleting Phi assignment: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15)
debug: Replaced trivial Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) (sum2#7) with sum2#6 in current definition for 1 blocks
debug: Added sum2#6 to Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) (sum2#6) with sum2#1
debug: Deleting Phi assignment: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17)
debug: Replaced trivial Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) (sum2#6) with sum2#1 in current definition for 7 blocks
debug: Added sum2#1 to Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18) in block@18
debug: Added sum2#5 to Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) (sum2#5) with sum2#1
debug: Deleting Phi assignment: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21)
debug: Replaced trivial Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) (sum2#5) with sum2#1 in current definition for 3 blocks
debug: Created Phi assignment: let sum3#10: uint64 = undefined while trying to resolve 'sum3' in block@19
debug: Added sum3#1 to Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18) in block@18
debug: Added sum3#10 to Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) (sum3#10) with sum3#1
debug: Deleting Phi assignment: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21)
debug: Replaced trivial Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) (sum3#10) with sum3#1 in current definition for 3 blocks
debug: Terminated block@22
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bool[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bool[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: bool[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bool,bool)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bool,bool)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bool,bool)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'mutable' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let mutable#1: (uint64,bool,bool)[]* = undefined while trying to resolve 'mutable' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added mutable#0 to Phi node: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0) in block@0
debug: Added mutable#1 to Phi node: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0, mutable#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0, mutable#1 <- block@3) (mutable#1) with mutable#0
debug: Deleting Phi assignment: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0, mutable#1 <- block@3)
debug: Replaced trivial Phi node: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0, mutable#1 <- block@3) (mutable#1) with mutable#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: optimizing approval program of test_cases.array.uint64.Contract at level 0
debug: Begin optimization pass 1/100
array/uint64.py:174 debug: function is auto-recursive: test_cases.array.uint64.quicksort_window
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__algopy_default_create in test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Removing unused variable reverse_index_internal%1#0
debug: Removing unused variable item_index_internal%2#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Removing unused variable reverse_index_internal%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.uint64.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.uint64.Contract
debug: lowering array IR nodes in clear program of test_cases.array.uint64.Contract
debug: optimizing approval program of test_cases.array.uint64.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable popped_item.0%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Removing unused variable encoded%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Removing unused variable encoded%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%1#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%value%0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 5/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%bytes_index%0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 6/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 6, ending loop
debug: optimizing clear program of test_cases.array.uint64.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.uint64.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
array/uint64.py:174 debug: auto reserving slots in test_cases.array.uint64.quicksort_window, []
array/uint64.py:226 debug: auto reserving slots in test_cases.array.uint64.return_ref, []
array/uint64.py:233 debug: auto reserving slots in test_cases.array.uint64.add_x, []
array/uint64.py:239 debug: auto reserving slots in test_cases.array.uint64.pop_x, []
array/uint64.py:245 debug: auto reserving slots in test_cases.array.uint64.append_length_and_return, []
array/uint64.py:5 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array, []
array/uint64.py:41 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_extend, []
array/uint64.py:53 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_multiple_append, []
array/uint64.py:62 debug: auto reserving slots in test_cases.array.uint64.Contract.overhead, []
array/uint64.py:66 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_too_long, []
array/uint64.py:75 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_copy_and_extend, []
array/uint64.py:97 debug: auto reserving slots in test_cases.array.uint64.Contract.test_array_evaluation_order, []
array/uint64.py:116 debug: auto reserving slots in test_cases.array.uint64.Contract.test_allocations, []
array/uint64.py:122 debug: auto reserving slots in test_cases.array.uint64.Contract.test_iteration, []
array/uint64.py:156 debug: auto reserving slots in test_cases.array.uint64.Contract.test_quicksort, []
debug: Using dynamic slot allocation strategy
debug: removing local static slots in clear program of test_cases.array.uint64.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 with [test_cases.array.uint64.Contract.__puya_arc4_router__%0#1, test_cases.array.uint64.Contract.__puya_arc4_router__%0#2, test_cases.array.uint64.Contract.__puya_arc4_router__%0#3, test_cases.array.uint64.Contract.__puya_arc4_router__%0#4, test_cases.array.uint64.Contract.__puya_arc4_router__%0#5, test_cases.array.uint64.Contract.__puya_arc4_router__%0#6, test_cases.array.uint64.Contract.__puya_arc4_router__%0#7, test_cases.array.uint64.Contract.__puya_arc4_router__%0#8, test_cases.array.uint64.Contract.__puya_arc4_router__%0#9, test_cases.array.uint64.Contract.__puya_arc4_router__%0#10, test_cases.array.uint64.Contract.__puya_arc4_router__%0#11]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 35 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.quicksort_window
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.quicksort_window using strategy RootOperandGrouping
debug: Coalescing left#0 with [left#11, left#3, left#14, left#1, left#2, left#5, left#6, left#8]
debug: Coalescing right#0 with [right#11, right#4, right#14, right#1, right#2, right#5, right#6, right#8, right#7]
debug: Coalescing right#17 with [right#23]
debug: Coalescing resulted in 74 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.quicksort_window
debug: loc: {left#0=left#0, right#0=right#0}
debug: pred: {left#0=left#0, right#0=right#0}
debug: ready: 
debug: to_do: left#0, right#0
debug: * to_do right#0
debug: * to_do left#0
debug: loc: {left#0=left#0, right#0=right#0}
debug: pred: {left#0=left#0, right#0=right#0}
debug: ready: 
debug: to_do: left#0, right#0
debug: * to_do right#0
debug: * to_do left#0
debug: loc: {right#17=None, left#20=None, right#0=right#0, left#0=left#0}
debug: pred: {right#17=right#0, left#20=left#0}
debug: ready: right#17, left#20
debug: to_do: right#17, left#20
debug: * avail left#20
debug: * avail left#0
debug: * avail right#17
debug: * avail right#0
debug: * to_do left#20
debug: * to_do right#17
debug: loc: {right#17=None, left#20=None, right#0=right#0, left#0=left#0}
debug: pred: {right#17=right#0, left#20=left#0}
debug: ready: right#17, left#20
debug: to_do: right#17, left#20
debug: * avail left#20
debug: * avail left#0
debug: * avail right#17
debug: * avail right#0
debug: * to_do left#20
debug: * to_do right#17
debug: loc: {left#0=left#0, right#0=right#0}
debug: pred: {left#0=left#0, right#0=right#0}
debug: ready: 
debug: to_do: left#0, right#0
debug: * to_do right#0
debug: * to_do left#0
debug: loc: {right#17=None, left#20=None, right#0=right#0, left#0=left#0}
debug: pred: {right#17=right#0, left#20=left#0}
debug: ready: right#17, left#20
debug: to_do: right#17, left#20
debug: * avail left#20
debug: * avail left#0
debug: * avail right#17
debug: * avail right#0
debug: * to_do left#20
debug: * to_do right#17
debug: loc: {right#17=None, left#20=None, right#0=right#0, left#0=left#0}
debug: pred: {right#17=right#0, left#20=left#0}
debug: ready: right#17, left#20
debug: to_do: right#17, left#20
debug: * avail left#20
debug: * avail left#0
debug: * avail right#17
debug: * avail right#0
debug: * to_do left#20
debug: * to_do right#17
debug: loc: {right#17=None, left#20=None, right#0=right#0, left#0=left#0}
debug: pred: {right#17=right#0, left#20=left#0}
debug: ready: right#17, left#20
debug: to_do: right#17, left#20
debug: * avail left#20
debug: * avail left#0
debug: * avail right#17
debug: * avail right#0
debug: * to_do left#20
debug: * to_do right#17
debug: loc: {right#0=None, left#0=None, right#17=right#17, left#20=left#20}
debug: pred: {right#0=right#17, left#0=left#20}
debug: ready: right#0, left#0
debug: to_do: right#0, left#0
debug: * avail left#0
debug: * avail left#20
debug: * avail right#0
debug: * avail right#17
debug: * to_do left#0
debug: * to_do right#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.return_ref
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.return_ref using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.return_ref
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.add_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.add_x using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.add_x
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.pop_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.pop_x using strategy RootOperandGrouping
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 8 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.pop_x
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.append_length_and_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.append_length_and_return using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.append_length_and_return
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_extend
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_extend using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_extend
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_multiple_append
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_multiple_append using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_multiple_append
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.overhead
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.overhead using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.overhead
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_too_long
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_too_long using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_too_long
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_copy_and_extend using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_array_evaluation_order using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_allocations
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_allocations using strategy RootOperandGrouping
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 8 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_allocations
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_iteration
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_iteration using strategy RootOperandGrouping
debug: Coalescing val#0 with [val#5, val#1, val#2]
debug: Coalescing last#0 with [last#7, last#1, last#2, last#10, last#3, last#4]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing value#0 with [value#1, value#2]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing reverse_index_internal%2#0 with [reverse_index_internal%2#5, reverse_index_internal%2#1, reverse_index_internal%2#2]
debug: Coalescing arc4_arr#0 with [arc4_arr#5, arc4_arr#1, arc4_arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 75 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_iteration
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {reverse_index_internal%2#0=reverse_index_internal%2#0, last#0=last#0}
debug: pred: {reverse_index_internal%2#0=reverse_index_internal%2#0, last#0=last#0}
debug: ready: 
debug: to_do: reverse_index_internal%2#0, last#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#0
debug: loc: {reverse_index_internal%2#0=reverse_index_internal%2#0, last#0=last#0}
debug: pred: {reverse_index_internal%2#0=reverse_index_internal%2#0, last#0=last#0}
debug: ready: 
debug: to_do: reverse_index_internal%2#0, last#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#0
debug: loc: {reverse_index_internal%2#0=reverse_index_internal%2#0, last#0=last#0}
debug: pred: {reverse_index_internal%2#0=reverse_index_internal%2#0, last#0=last#0}
debug: ready: 
debug: to_do: reverse_index_internal%2#0, last#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.uint64.Contract.test_quicksort
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.Contract.test_quicksort using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing last#0 with [last#5, last#1, last#2]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing resulted in 25 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.Contract.test_quicksort
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: Performing post-SSA optimizations at level 0
debug: Output IR to array/out_unoptimized/Contract.ir/Contract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to array/out_unoptimized/Contract.ir/Contract.clear.0.destructured.ir
debug: Inserted main_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_array_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_array_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_array_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_route@3.ops[11]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_array_route@3.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@3.ops[16]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_test_array_route@3.ops[18]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_test_array_route@3.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_route@3.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_extend_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_array_extend_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_array_extend_route@4.ops[6]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_array_extend_route@4.ops[8]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_array_extend_route@4.ops[11]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_array_extend_route@4.ops[13]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_array_extend_route@4.ops[16]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_test_array_extend_route@4.ops[18]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_test_array_extend_route@4.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_extend_route@4.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[6]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[8]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[11]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[13]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[16]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[18]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_overhead_route@6.ops[1]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_overhead_route@6.ops[3]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_overhead_route@6.ops[6]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_overhead_route@6.ops[8]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_overhead_route@6.ops[11]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_overhead_route@6.ops[13]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_overhead_route@6.ops[16]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_overhead_route@6.ops[18]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_overhead_route@6.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_overhead_route@6.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_too_long_route@7.ops[1]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[3]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_test_array_too_long_route@7.ops[6]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[8]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_array_too_long_route@7.ops[11]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[13]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_test_array_too_long_route@7.ops[16]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[18]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_test_array_too_long_route@7.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[1]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[3]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[6]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[8]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[11]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[13]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[16]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[18]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[1]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[3]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[6]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[8]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[11]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[13]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[16]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[18]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_allocations_route@10.ops[1]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_test_allocations_route@10.ops[3]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_test_allocations_route@10.ops[6]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_test_allocations_route@10.ops[8]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_test_allocations_route@10.ops[11]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_test_allocations_route@10.ops[13]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_test_allocations_route@10.ops[16]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_test_allocations_route@10.ops[18]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_test_allocations_route@10.ops[21]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced main_test_allocations_route@10.ops[23]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted main_test_allocations_route@10.ops[25]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_test_allocations_route@10.ops[27]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_test_allocations_route@10.ops[30]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_allocations_route@10.ops[32]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_iteration_route@11.ops[1]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_iteration_route@11.ops[3]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_iteration_route@11.ops[6]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_test_iteration_route@11.ops[8]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_test_iteration_route@11.ops[11]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_test_iteration_route@11.ops[13]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_test_iteration_route@11.ops[16]: 'l-store-copy tmp%39#0 0'
debug: Replaced main_test_iteration_route@11.ops[18]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted main_test_iteration_route@11.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_iteration_route@11.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_quicksort_route@12.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_test_quicksort_route@12.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_test_quicksort_route@12.ops[6]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_test_quicksort_route@12.ops[8]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_test_quicksort_route@12.ops[11]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_test_quicksort_route@12.ops[13]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_test_quicksort_route@12.ops[16]: 'l-store-copy tmp%43#0 0'
debug: Replaced main_test_quicksort_route@12.ops[18]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted main_test_quicksort_route@12.ops[22]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_quicksort_route@12.ops[24]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_bare_routing@15.ops[1]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_bare_routing@15.ops[4]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main___algopy_default_create@16.ops[1]: 'l-store-copy tmp%45#0 0'
debug: Replaced main___algopy_default_create@16.ops[3]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main___algopy_default_create@16.ops[6]: 'l-store-copy tmp%46#0 0'
debug: Replaced main___algopy_default_create@16.ops[8]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_after_inlined_test_cases.array.uint64.Contract.__algopy_default_create@22.ops[1]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_inlined_test_cases.array.uint64.Contract.__algopy_default_create@22.ops[3]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@19.ops[1]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@19.ops[3]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted quicksort_window.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced quicksort_window.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted quicksort_window.ops[24]: 'l-store-copy array%value%0#1 0'
debug: Replaced quicksort_window.ops[26]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted quicksort_window.ops[30]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced quicksort_window.ops[32]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted quicksort_window.ops[34]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced quicksort_window.ops[36]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted quicksort_window.ops[19]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced quicksort_window.ops[22]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted quicksort_window.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced quicksort_window.ops[17]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted quicksort_window.ops[16]: 'l-store-copy slot_contents%0#0 1'
debug: Replaced quicksort_window.ops[23]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted quicksort_window_while_top@3.ops[11]: 'l-store-copy array%value%1#1 0'
debug: Replaced quicksort_window_while_top@3.ops[13]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted quicksort_window_while_top@3.ops[17]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced quicksort_window_while_top@3.ops[19]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted quicksort_window_while_top@3.ops[21]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced quicksort_window_while_top@3.ops[23]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted quicksort_window_while_top@3.ops[24]: 'l-store-copy tmp%2#0 0'
debug: Replaced quicksort_window_while_top@3.ops[26]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted quicksort_window_while_top@3.ops[29]: 'l-store-copy tmp%3#0 0'
debug: Replaced quicksort_window_while_top@3.ops[31]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted quicksort_window_while_top@3.ops[6]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced quicksort_window_while_top@3.ops[9]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted quicksort_window_while_top@3.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced quicksort_window_while_top@3.ops[9]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted quicksort_window_while_top@6.ops[11]: 'l-store-copy array%value%2#1 0'
debug: Replaced quicksort_window_while_top@6.ops[13]: 'v-load array%value%2#1' with 'l-load array%value%2#1'
debug: Inserted quicksort_window_while_top@6.ops[17]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced quicksort_window_while_top@6.ops[19]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted quicksort_window_while_top@6.ops[21]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced quicksort_window_while_top@6.ops[23]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted quicksort_window_while_top@6.ops[28]: 'l-store-copy tmp%5#0 0'
debug: Replaced quicksort_window_while_top@6.ops[30]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted quicksort_window_while_top@6.ops[6]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced quicksort_window_while_top@6.ops[9]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted quicksort_window_while_top@6.ops[25]: 'l-store-copy tmp%4#0 0'
debug: Replaced quicksort_window_while_top@6.ops[28]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted quicksort_window_while_top@6.ops[2]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced quicksort_window_while_top@6.ops[9]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted quicksort_window_while_body@7.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced quicksort_window_while_body@7.ops[5]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted quicksort_window_after_while@10.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced quicksort_window_after_while@10.ops[5]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted quicksort_window_if_body@11.ops[11]: 'l-store-copy array%value%3#1 0'
debug: Replaced quicksort_window_if_body@11.ops[13]: 'v-load array%value%3#1' with 'l-load array%value%3#1'
debug: Inserted quicksort_window_if_body@11.ops[17]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced quicksort_window_if_body@11.ops[19]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted quicksort_window_if_body@11.ops[21]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced quicksort_window_if_body@11.ops[23]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted quicksort_window_if_body@11.ops[36]: 'l-store-copy array%value%4#1 0'
debug: Replaced quicksort_window_if_body@11.ops[38]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted quicksort_window_if_body@11.ops[42]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced quicksort_window_if_body@11.ops[44]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted quicksort_window_if_body@11.ops[46]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced quicksort_window_if_body@11.ops[48]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted quicksort_window_if_body@11.ops[68]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced quicksort_window_if_body@11.ops[70]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted quicksort_window_if_body@11.ops[93]: 'l-store-copy array%updated_array%1#1 0'
debug: Replaced quicksort_window_if_body@11.ops[95]: 'v-load array%updated_array%1#1' with 'l-load array%updated_array%1#1'
debug: Inserted quicksort_window_if_body@11.ops[107]: 'l-store-copy tmp%10#0 0'
debug: Replaced quicksort_window_if_body@11.ops[109]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted quicksort_window_if_body@11.ops[6]: 'l-store-copy array%bytes_index%3#1 0'
debug: Replaced quicksort_window_if_body@11.ops[9]: 'v-load array%bytes_index%3#1' with 'l-load array%bytes_index%3#1'
debug: Inserted quicksort_window_if_body@11.ops[32]: 'l-store-copy array%bytes_index%4#1 0'
debug: Replaced quicksort_window_if_body@11.ops[35]: 'v-load array%bytes_index%4#1' with 'l-load array%bytes_index%4#1'
debug: Inserted quicksort_window_if_body@11.ops[61]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced quicksort_window_if_body@11.ops[64]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted quicksort_window_if_body@11.ops[74]: 'l-store-copy updated_array%0#0 0'
debug: Replaced quicksort_window_if_body@11.ops[77]: 'v-load updated_array%0#0' with 'l-load updated_array%0#0'
debug: Inserted quicksort_window_if_body@11.ops[88]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced quicksort_window_if_body@11.ops[91]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted quicksort_window_if_body@11.ops[101]: 'l-store-copy updated_array%1#0 0'
debug: Replaced quicksort_window_if_body@11.ops[104]: 'v-load updated_array%1#0' with 'l-load updated_array%1#0'
debug: Inserted quicksort_window_if_body@11.ops[66]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced quicksort_window_if_body@11.ops[70]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted quicksort_window_if_body@11.ops[94]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced quicksort_window_if_body@11.ops[98]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted quicksort_window_if_body@11.ops[2]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced quicksort_window_if_body@11.ops[9]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[29]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced quicksort_window_if_body@11.ops[36]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted quicksort_window_if_body@11.ops[60]: 'l-store-copy array%bytes_index%5#1 0'
debug: Replaced quicksort_window_if_body@11.ops[72]: 'v-load array%bytes_index%5#1' with 'l-load array%bytes_index%5#1'
debug: Inserted quicksort_window_if_body@11.ops[89]: 'l-store-copy array%bytes_index%6#1 0'
debug: Replaced quicksort_window_if_body@11.ops[101]: 'v-load array%bytes_index%6#1' with 'l-load array%bytes_index%6#1'
debug: Inserted quicksort_window_if_body@11.ops[56]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced quicksort_window_if_body@11.ops[72]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted quicksort_window_if_body@11.ops[86]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced quicksort_window_if_body@11.ops[102]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted quicksort_window_if_body@11.ops[32]: 'l-store-copy left#0 1'
debug: Replaced quicksort_window_if_body@11.ops[59]: 'v-load left#0' with 'l-load left#0'
debug: Inserted quicksort_window_if_body@11.ops[90]: 'l-store-copy right#0 1'
debug: Replaced quicksort_window_if_body@11.ops[120]: 'v-load right#0' with 'l-load right#0'
debug: Inserted quicksort_window_if_body@11.ops[26]: 'l-store-copy tmp%8#0 0'
debug: Replaced quicksort_window_if_body@11.ops[65]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted quicksort_window_if_body@11.ops[55]: 'l-store-copy tmp%9#0 2'
debug: Replaced quicksort_window_if_body@11.ops[97]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted quicksort_window_if_body@11.ops[62]: 'l-store-copy left#0 3'
debug: Replaced quicksort_window_if_body@11.ops[119]: 'v-load left#0' with 'l-load left#0'
debug: Inserted quicksort_window_if_body@11.ops[5]: 'l-store-copy right#0 1'
debug: Replaced quicksort_window_if_body@11.ops[93]: 'v-load right#0' with 'l-load right#0'
debug: Inserted quicksort_window_after_if_else@13.ops[7]: 'l-store-copy tmp%11#0 0'
debug: Replaced quicksort_window_after_if_else@13.ops[9]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted quicksort_window_after_if_else@13.ops[3]: 'l-store-copy right#0 0'
debug: Replaced quicksort_window_after_if_else@13.ops[6]: 'v-load right#0' with 'l-load right#0'
debug: Inserted quicksort_window_after_if_else@16.ops[3]: 'l-store-copy tmp%12#0 0'
debug: Replaced quicksort_window_after_if_else@16.ops[5]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted quicksort_window_if_body@17.ops[7]: 'l-store-copy tmp%13#0 0'
debug: Replaced quicksort_window_if_body@17.ops[11]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted quicksort_window_if_body@17.ops[5]: 'l-store-copy right#0 0'
debug: Replaced quicksort_window_if_body@17.ops[10]: 'v-load right#0' with 'l-load right#0'
debug: Inserted quicksort_window_if_body@18.ops[3]: 'l-store-copy right#0 0'
debug: Replaced quicksort_window_if_body@18.ops[5]: 'v-load right#0' with 'l-load right#0'
debug: Inserted quicksort_window_after_if_else@19.ops[1]: 'l-store-copy right#0 0'
debug: Replaced quicksort_window_after_if_else@19.ops[5]: 'v-load right#0' with 'l-load right#0'
debug: Inserted quicksort_window_after_while@22.ops[7]: 'l-store-copy tmp%14#0 0'
debug: Replaced quicksort_window_after_while@22.ops[9]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted quicksort_window_after_while@22.ops[3]: 'l-store-copy right#0 0'
debug: Replaced quicksort_window_after_while@22.ops[6]: 'v-load right#0' with 'l-load right#0'
debug: Inserted quicksort_window_after_if_else@24.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced quicksort_window_after_if_else@24.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted return_ref.ops[10]: 'l-store-copy array%data%0#1 0'
debug: Replaced return_ref.ops[12]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted return_ref.ops[16]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced return_ref.ops[18]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted return_ref.ops[21]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced return_ref.ops[23]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted return_ref.ops[38]: 'l-store-copy array%data%1#1 0'
debug: Replaced return_ref.ops[40]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted return_ref.ops[44]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced return_ref.ops[46]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted return_ref.ops[49]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced return_ref.ops[51]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted return_ref.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced return_ref.ops[5]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted return_ref.ops[7]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced return_ref.ops[10]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted return_ref.ops[26]: 'l-store-copy extended%0#0 0'
debug: Replaced return_ref.ops[29]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted return_ref.ops[33]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced return_ref.ops[36]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted return_ref.ops[38]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced return_ref.ops[41]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted return_ref.ops[57]: 'l-store-copy extended%1#0 0'
debug: Replaced return_ref.ops[60]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted return_ref.ops[15]: 'l-store-copy encoded%0#0 0'
debug: Replaced return_ref.ops[22]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted return_ref.ops[47]: 'l-store-copy encoded%1#0 0'
debug: Replaced return_ref.ops[54]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted add_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced add_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_body@2.ops[10]: 'l-store-copy array%data%0#1 0'
debug: Replaced add_x_for_body@2.ops[12]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted add_x_for_body@2.ops[16]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced add_x_for_body@2.ops[18]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted add_x_for_body@2.ops[21]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced add_x_for_body@2.ops[23]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted add_x_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced add_x_for_body@2.ops[5]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted add_x_for_body@2.ops[7]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced add_x_for_body@2.ops[10]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted add_x_for_body@2.ops[26]: 'l-store-copy extended%0#0 0'
debug: Replaced add_x_for_body@2.ops[29]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted add_x_for_body@2.ops[15]: 'l-store-copy encoded%0#0 0'
debug: Replaced add_x_for_body@2.ops[22]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted pop_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced pop_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted pop_x_for_body@2.ops[2]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced pop_x_for_body@2.ops[4]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted pop_x_for_body@2.ops[6]: 'l-store-copy array%array_length%0#1 0'
debug: Replaced pop_x_for_body@2.ops[8]: 'v-load array%array_length%0#1' with 'l-load array%array_length%0#1'
debug: Inserted pop_x_for_body@2.ops[16]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced pop_x_for_body@2.ops[18]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted pop_x_for_body@2.ops[19]: 'l-store-copy new_contents%0#0 0'
debug: Replaced pop_x_for_body@2.ops[22]: 'v-load new_contents%0#0' with 'l-load new_contents%0#0'
debug: Inserted pop_x_for_body@2.ops[11]: 'l-store-copy array%new_length%0#1 0'
debug: Replaced pop_x_for_body@2.ops[15]: 'v-load array%new_length%0#1' with 'l-load array%new_length%0#1'
debug: Inserted pop_x_for_body@2.ops[5]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced pop_x_for_body@2.ops[14]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted append_length_and_return.ops[2]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced append_length_and_return.ops[4]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted append_length_and_return.ops[6]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced append_length_and_return.ops[8]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted append_length_and_return.ops[11]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced append_length_and_return.ops[13]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted append_length_and_return.ops[14]: 'l-store-copy tmp%0#0 0'
debug: Replaced append_length_and_return.ops[16]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted append_length_and_return.ops[26]: 'l-store-copy array%data%0#1 0'
debug: Replaced append_length_and_return.ops[28]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted append_length_and_return.ops[32]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced append_length_and_return.ops[34]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted append_length_and_return.ops[37]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced append_length_and_return.ops[39]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted append_length_and_return.ops[18]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced append_length_and_return.ops[21]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted append_length_and_return.ops[23]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced append_length_and_return.ops[26]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted append_length_and_return.ops[42]: 'l-store-copy extended%0#0 0'
debug: Replaced append_length_and_return.ops[45]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted append_length_and_return.ops[31]: 'l-store-copy encoded%0#0 0'
debug: Replaced append_length_and_return.ops[38]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_array.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array.ops[7]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[9]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[11]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array.ops[13]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array.ops[15]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array.ops[17]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array.ops[20]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array.ops[22]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array.ops[23]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_array.ops[25]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array.ops[30]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array.ops[42]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_array.ops[44]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_array.ops[48]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array.ops[50]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array.ops[53]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array.ops[55]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array.ops[62]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array.ops[64]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array.ops[66]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_array.ops[68]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_array.ops[71]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_array.ops[73]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_array.ops[74]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_array.ops[76]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_array.ops[79]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_array.ops[81]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_array.ops[85]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array.ops[87]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array.ops[89]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_array.ops[91]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_array.ops[94]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_array.ops[96]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_array.ops[97]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_array.ops[99]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_array.ops[114]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_array.ops[116]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_array.ops[120]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array.ops[122]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array.ops[124]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array.ops[126]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array.ops[127]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_array.ops[129]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_array.ops[132]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_array.ops[134]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_array.ops[141]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_array.ops[143]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_array.ops[145]: 'l-store-copy array%bytes_len%3#1 0'
debug: Replaced test_array.ops[147]: 'v-load array%bytes_len%3#1' with 'l-load array%bytes_len%3#1'
debug: Inserted test_array.ops[150]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced test_array.ops[152]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted test_array.ops[153]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_array.ops[155]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_array.ops[158]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_array.ops[160]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array.ops[164]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced test_array.ops[166]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted test_array.ops[168]: 'l-store-copy array%bytes_len%4#1 0'
debug: Replaced test_array.ops[170]: 'v-load array%bytes_len%4#1' with 'l-load array%bytes_len%4#1'
debug: Inserted test_array.ops[173]: 'l-store-copy array%array_len%4#1 0'
debug: Replaced test_array.ops[175]: 'v-load array%array_len%4#1' with 'l-load array%array_len%4#1'
debug: Inserted test_array.ops[176]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_array.ops[178]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_array.ops[193]: 'l-store-copy array%value%1#1 0'
debug: Replaced test_array.ops[195]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted test_array.ops[199]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_array.ops[201]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_array.ops[203]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_array.ops[205]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_array.ops[206]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_array.ops[208]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_array.ops[211]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_array.ops[213]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_array.ops[225]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_array.ops[227]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_array.ops[231]: 'l-store-copy slot_contents%8#0 0'
debug: Replaced test_array.ops[233]: 'v-load slot_contents%8#0' with 'l-load slot_contents%8#0'
debug: Inserted test_array.ops[236]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array.ops[238]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array.ops[245]: 'l-store-copy slot_contents%9#0 0'
debug: Replaced test_array.ops[247]: 'v-load slot_contents%9#0' with 'l-load slot_contents%9#0'
debug: Inserted test_array.ops[249]: 'l-store-copy array%bytes_len%5#1 0'
debug: Replaced test_array.ops[251]: 'v-load array%bytes_len%5#1' with 'l-load array%bytes_len%5#1'
debug: Inserted test_array.ops[254]: 'l-store-copy array%array_len%5#1 0'
debug: Replaced test_array.ops[256]: 'v-load array%array_len%5#1' with 'l-load array%array_len%5#1'
debug: Inserted test_array.ops[257]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_array.ops[259]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_array.ops[262]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_array.ops[264]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_array.ops[268]: 'l-store-copy slot_contents%10#0 0'
debug: Replaced test_array.ops[270]: 'v-load slot_contents%10#0' with 'l-load slot_contents%10#0'
debug: Inserted test_array.ops[272]: 'l-store-copy array%bytes_len%6#1 0'
debug: Replaced test_array.ops[274]: 'v-load array%bytes_len%6#1' with 'l-load array%bytes_len%6#1'
debug: Inserted test_array.ops[277]: 'l-store-copy array%array_len%6#1 0'
debug: Replaced test_array.ops[279]: 'v-load array%array_len%6#1' with 'l-load array%array_len%6#1'
debug: Inserted test_array.ops[280]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_array.ops[282]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_array.ops[297]: 'l-store-copy array%value%2#1 0'
debug: Replaced test_array.ops[299]: 'v-load array%value%2#1' with 'l-load array%value%2#1'
debug: Inserted test_array.ops[303]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced test_array.ops[305]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted test_array.ops[307]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced test_array.ops[309]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted test_array.ops[310]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_array.ops[312]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_array.ops[315]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_array.ops[317]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_array.ops[330]: 'l-store-copy array%value%3#1 0'
debug: Replaced test_array.ops[332]: 'v-load array%value%3#1' with 'l-load array%value%3#1'
debug: Inserted test_array.ops[336]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced test_array.ops[338]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted test_array.ops[340]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced test_array.ops[342]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted test_array.ops[343]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_array.ops[345]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_array.ops[348]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_array.ops[350]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_array.ops[357]: 'l-store-copy slot_contents%13#0 0'
debug: Replaced test_array.ops[359]: 'v-load slot_contents%13#0' with 'l-load slot_contents%13#0'
debug: Inserted test_array.ops[361]: 'l-store-copy array%bytes_len%7#1 0'
debug: Replaced test_array.ops[363]: 'v-load array%bytes_len%7#1' with 'l-load array%bytes_len%7#1'
debug: Inserted test_array.ops[366]: 'l-store-copy array%array_len%7#1 0'
debug: Replaced test_array.ops[368]: 'v-load array%array_len%7#1' with 'l-load array%array_len%7#1'
debug: Inserted test_array.ops[369]: 'l-store-copy tmp%22#0 0'
debug: Replaced test_array.ops[371]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted test_array.ops[374]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_array.ops[376]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_array.ops[380]: 'l-store-copy slot_contents%14#0 0'
debug: Replaced test_array.ops[382]: 'v-load slot_contents%14#0' with 'l-load slot_contents%14#0'
debug: Inserted test_array.ops[384]: 'l-store-copy array%bytes_len%8#1 0'
debug: Replaced test_array.ops[386]: 'v-load array%bytes_len%8#1' with 'l-load array%bytes_len%8#1'
debug: Inserted test_array.ops[389]: 'l-store-copy array%array_len%8#1 0'
debug: Replaced test_array.ops[391]: 'v-load array%array_len%8#1' with 'l-load array%array_len%8#1'
debug: Inserted test_array.ops[392]: 'l-store-copy tmp%24#0 0'
debug: Replaced test_array.ops[394]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted test_array.ops[409]: 'l-store-copy array%value%4#1 0'
debug: Replaced test_array.ops[411]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted test_array.ops[415]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced test_array.ops[417]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted test_array.ops[419]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced test_array.ops[421]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted test_array.ops[422]: 'l-store-copy tmp%26#0 0'
debug: Replaced test_array.ops[424]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted test_array.ops[427]: 'l-store-copy tmp%27#0 0'
debug: Replaced test_array.ops[429]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_array.ops[436]: 'l-store-copy slot_contents%16#0 0'
debug: Replaced test_array.ops[438]: 'v-load slot_contents%16#0' with 'l-load slot_contents%16#0'
debug: Inserted test_array.ops[440]: 'l-store-copy array%bytes_len%9#1 0'
debug: Replaced test_array.ops[442]: 'v-load array%bytes_len%9#1' with 'l-load array%bytes_len%9#1'
debug: Inserted test_array.ops[445]: 'l-store-copy array%array_len%9#1 0'
debug: Replaced test_array.ops[447]: 'v-load array%array_len%9#1' with 'l-load array%array_len%9#1'
debug: Inserted test_array.ops[448]: 'l-store-copy tmp%28#0 0'
debug: Replaced test_array.ops[450]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted test_array.ops[453]: 'l-store-copy tmp%29#0 0'
debug: Replaced test_array.ops[455]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted test_array.ops[459]: 'l-store-copy slot_contents%17#0 0'
debug: Replaced test_array.ops[461]: 'v-load slot_contents%17#0' with 'l-load slot_contents%17#0'
debug: Inserted test_array.ops[463]: 'l-store-copy array%bytes_len%10#1 0'
debug: Replaced test_array.ops[465]: 'v-load array%bytes_len%10#1' with 'l-load array%bytes_len%10#1'
debug: Inserted test_array.ops[468]: 'l-store-copy array%array_len%10#1 0'
debug: Replaced test_array.ops[470]: 'v-load array%array_len%10#1' with 'l-load array%array_len%10#1'
debug: Inserted test_array.ops[471]: 'l-store-copy tmp%30#0 0'
debug: Replaced test_array.ops[473]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted test_array.ops[488]: 'l-store-copy array%value%5#1 0'
debug: Replaced test_array.ops[490]: 'v-load array%value%5#1' with 'l-load array%value%5#1'
debug: Inserted test_array.ops[494]: 'l-store-copy array%sub_item%12#1 0'
debug: Replaced test_array.ops[496]: 'v-load array%sub_item%12#1' with 'l-load array%sub_item%12#1'
debug: Inserted test_array.ops[498]: 'l-store-copy array%sub_item%13#1 0'
debug: Replaced test_array.ops[500]: 'v-load array%sub_item%13#1' with 'l-load array%sub_item%13#1'
debug: Inserted test_array.ops[501]: 'l-store-copy tmp%32#0 0'
debug: Replaced test_array.ops[503]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted test_array.ops[506]: 'l-store-copy tmp%33#0 0'
debug: Replaced test_array.ops[508]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted test_array.ops[520]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_array.ops[522]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_array.ops[526]: 'l-store-copy slot_contents%19#0 0'
debug: Replaced test_array.ops[528]: 'v-load slot_contents%19#0' with 'l-load slot_contents%19#0'
debug: Inserted test_array.ops[531]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array.ops[533]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array.ops[540]: 'l-store-copy slot_contents%20#0 0'
debug: Replaced test_array.ops[542]: 'v-load slot_contents%20#0' with 'l-load slot_contents%20#0'
debug: Inserted test_array.ops[544]: 'l-store-copy array%bytes_len%11#1 0'
debug: Replaced test_array.ops[546]: 'v-load array%bytes_len%11#1' with 'l-load array%bytes_len%11#1'
debug: Inserted test_array.ops[549]: 'l-store-copy array%array_len%11#1 0'
debug: Replaced test_array.ops[551]: 'v-load array%array_len%11#1' with 'l-load array%array_len%11#1'
debug: Inserted test_array.ops[552]: 'l-store-copy tmp%34#0 0'
debug: Replaced test_array.ops[554]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted test_array.ops[557]: 'l-store-copy tmp%35#0 0'
debug: Replaced test_array.ops[559]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted test_array.ops[563]: 'l-store-copy slot_contents%21#0 0'
debug: Replaced test_array.ops[565]: 'v-load slot_contents%21#0' with 'l-load slot_contents%21#0'
debug: Inserted test_array.ops[567]: 'l-store-copy array%bytes_len%12#1 0'
debug: Replaced test_array.ops[569]: 'v-load array%bytes_len%12#1' with 'l-load array%bytes_len%12#1'
debug: Inserted test_array.ops[572]: 'l-store-copy array%array_len%12#1 0'
debug: Replaced test_array.ops[574]: 'v-load array%array_len%12#1' with 'l-load array%array_len%12#1'
debug: Inserted test_array.ops[575]: 'l-store-copy tmp%36#0 0'
debug: Replaced test_array.ops[577]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted test_array.ops[592]: 'l-store-copy array%value%6#1 0'
debug: Replaced test_array.ops[594]: 'v-load array%value%6#1' with 'l-load array%value%6#1'
debug: Inserted test_array.ops[598]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced test_array.ops[600]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted test_array.ops[602]: 'l-store-copy array%sub_item%16#1 0'
debug: Replaced test_array.ops[604]: 'v-load array%sub_item%16#1' with 'l-load array%sub_item%16#1'
debug: Inserted test_array.ops[605]: 'l-store-copy tmp%38#0 0'
debug: Replaced test_array.ops[607]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted test_array.ops[610]: 'l-store-copy tmp%39#0 0'
debug: Replaced test_array.ops[612]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted test_array.ops[615]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[616]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[618]: 'l-store-copy tmp%40#0 0'
debug: Replaced test_array.ops[620]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted test_array.ops[631]: 'l-store-copy array%value%7#1 0'
debug: Replaced test_array.ops[633]: 'v-load array%value%7#1' with 'l-load array%value%7#1'
debug: Inserted test_array.ops[637]: 'l-store-copy array%sub_item%17#1 0'
debug: Replaced test_array.ops[639]: 'v-load array%sub_item%17#1' with 'l-load array%sub_item%17#1'
debug: Inserted test_array.ops[641]: 'l-store-copy array%sub_item%18#1 0'
debug: Replaced test_array.ops[643]: 'v-load array%sub_item%18#1' with 'l-load array%sub_item%18#1'
debug: Inserted test_array.ops[667]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced test_array.ops[669]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted test_array.ops[676]: 'l-store-copy slot_contents%25#0 0'
debug: Replaced test_array.ops[678]: 'v-load slot_contents%25#0' with 'l-load slot_contents%25#0'
debug: Inserted test_array.ops[680]: 'l-store-copy array%bytes_len%13#1 0'
debug: Replaced test_array.ops[682]: 'v-load array%bytes_len%13#1' with 'l-load array%bytes_len%13#1'
debug: Inserted test_array.ops[685]: 'l-store-copy array%array_len%13#1 0'
debug: Replaced test_array.ops[687]: 'v-load array%array_len%13#1' with 'l-load array%array_len%13#1'
debug: Inserted test_array.ops[688]: 'l-store-copy tmp%42#0 0'
debug: Replaced test_array.ops[690]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted test_array.ops[693]: 'l-store-copy tmp%43#0 0'
debug: Replaced test_array.ops[695]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted test_array.ops[708]: 'l-store-copy array%value%8#1 0'
debug: Replaced test_array.ops[710]: 'v-load array%value%8#1' with 'l-load array%value%8#1'
debug: Inserted test_array.ops[714]: 'l-store-copy array%sub_item%20#1 0'
debug: Replaced test_array.ops[716]: 'v-load array%sub_item%20#1' with 'l-load array%sub_item%20#1'
debug: Inserted test_array.ops[718]: 'l-store-copy array%sub_item%21#1 0'
debug: Replaced test_array.ops[720]: 'v-load array%sub_item%21#1' with 'l-load array%sub_item%21#1'
debug: Inserted test_array.ops[721]: 'l-store-copy tmp%44#0 0'
debug: Replaced test_array.ops[723]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted test_array.ops[726]: 'l-store-copy tmp%45#0 0'
debug: Replaced test_array.ops[728]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted test_array.ops[732]: 'l-store-copy slot_contents%27#0 0'
debug: Replaced test_array.ops[734]: 'v-load slot_contents%27#0' with 'l-load slot_contents%27#0'
debug: Inserted test_array.ops[736]: 'l-store-copy array%bytes_len%14#1 0'
debug: Replaced test_array.ops[738]: 'v-load array%bytes_len%14#1' with 'l-load array%bytes_len%14#1'
debug: Inserted test_array.ops[741]: 'l-store-copy array%array_len%14#1 0'
debug: Replaced test_array.ops[743]: 'v-load array%array_len%14#1' with 'l-load array%array_len%14#1'
debug: Inserted test_array.ops[744]: 'l-store-copy tmp%46#0 0'
debug: Replaced test_array.ops[746]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted test_array.ops[761]: 'l-store-copy array%value%9#1 0'
debug: Replaced test_array.ops[763]: 'v-load array%value%9#1' with 'l-load array%value%9#1'
debug: Inserted test_array.ops[767]: 'l-store-copy array%sub_item%22#1 0'
debug: Replaced test_array.ops[769]: 'v-load array%sub_item%22#1' with 'l-load array%sub_item%22#1'
debug: Inserted test_array.ops[771]: 'l-store-copy array%sub_item%23#1 0'
debug: Replaced test_array.ops[773]: 'v-load array%sub_item%23#1' with 'l-load array%sub_item%23#1'
debug: Inserted test_array.ops[774]: 'l-store-copy tmp%48#0 0'
debug: Replaced test_array.ops[776]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted test_array.ops[779]: 'l-store-copy tmp%49#0 0'
debug: Replaced test_array.ops[781]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted test_array.ops[785]: 'l-store-copy slot_contents%29#0 0'
debug: Replaced test_array.ops[787]: 'v-load slot_contents%29#0' with 'l-load slot_contents%29#0'
debug: Inserted test_array.ops[789]: 'l-store-copy array%bytes_len%15#1 0'
debug: Replaced test_array.ops[791]: 'v-load array%bytes_len%15#1' with 'l-load array%bytes_len%15#1'
debug: Inserted test_array.ops[794]: 'l-store-copy array%array_len%15#1 0'
debug: Replaced test_array.ops[796]: 'v-load array%array_len%15#1' with 'l-load array%array_len%15#1'
debug: Inserted test_array.ops[797]: 'l-store-copy tmp%50#0 0'
debug: Replaced test_array.ops[799]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted test_array.ops[814]: 'l-store-copy array%value%10#1 0'
debug: Replaced test_array.ops[816]: 'v-load array%value%10#1' with 'l-load array%value%10#1'
debug: Inserted test_array.ops[820]: 'l-store-copy array%sub_item%24#1 0'
debug: Replaced test_array.ops[822]: 'v-load array%sub_item%24#1' with 'l-load array%sub_item%24#1'
debug: Inserted test_array.ops[824]: 'l-store-copy array%sub_item%25#1 0'
debug: Replaced test_array.ops[826]: 'v-load array%sub_item%25#1' with 'l-load array%sub_item%25#1'
debug: Inserted test_array.ops[827]: 'l-store-copy tmp%52#0 0'
debug: Replaced test_array.ops[829]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted test_array.ops[832]: 'l-store-copy tmp%53#0 0'
debug: Replaced test_array.ops[834]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted test_array.ops[34]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array.ops[37]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array.ops[39]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_array.ops[42]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_array.ops[58]: 'l-store-copy extended%0#0 0'
debug: Replaced test_array.ops[61]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_array.ops[112]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_array.ops[115]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_array.ops[192]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced test_array.ops[195]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted test_array.ops[222]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_array.ops[225]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_array.ops[227]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_array.ops[230]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_array.ops[246]: 'l-store-copy extended%1#0 0'
debug: Replaced test_array.ops[249]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted test_array.ops[300]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced test_array.ops[303]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted test_array.ops[334]: 'l-store-copy array%bytes_index%3#1 0'
debug: Replaced test_array.ops[337]: 'v-load array%bytes_index%3#1' with 'l-load array%bytes_index%3#1'
debug: Inserted test_array.ops[414]: 'l-store-copy array%bytes_index%4#1 0'
debug: Replaced test_array.ops[417]: 'v-load array%bytes_index%4#1' with 'l-load array%bytes_index%4#1'
debug: Inserted test_array.ops[494]: 'l-store-copy array%bytes_index%5#1 0'
debug: Replaced test_array.ops[497]: 'v-load array%bytes_index%5#1' with 'l-load array%bytes_index%5#1'
debug: Inserted test_array.ops[524]: 'l-store-copy array%sub_item%14#1 0'
debug: Replaced test_array.ops[527]: 'v-load array%sub_item%14#1' with 'l-load array%sub_item%14#1'
debug: Inserted test_array.ops[529]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_array.ops[532]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_array.ops[548]: 'l-store-copy extended%2#0 0'
debug: Replaced test_array.ops[551]: 'v-load extended%2#0' with 'l-load extended%2#0'
debug: Inserted test_array.ops[602]: 'l-store-copy array%bytes_index%6#1 0'
debug: Replaced test_array.ops[605]: 'v-load array%bytes_index%6#1' with 'l-load array%bytes_index%6#1'
debug: Inserted test_array.ops[642]: 'l-store-copy array%bytes_index%7#1 0'
debug: Replaced test_array.ops[645]: 'v-load array%bytes_index%7#1' with 'l-load array%bytes_index%7#1'
debug: Inserted test_array.ops[675]: 'l-store-copy array%sub_item%19#1 0'
debug: Replaced test_array.ops[678]: 'v-load array%sub_item%19#1' with 'l-load array%sub_item%19#1'
debug: Inserted test_array.ops[688]: 'l-store-copy updated_array%0#0 0'
debug: Replaced test_array.ops[691]: 'v-load updated_array%0#0' with 'l-load updated_array%0#0'
debug: Inserted test_array.ops[722]: 'l-store-copy array%bytes_index%9#1 0'
debug: Replaced test_array.ops[725]: 'v-load array%bytes_index%9#1' with 'l-load array%bytes_index%9#1'
debug: Inserted test_array.ops[776]: 'l-store-copy array%bytes_index%10#1 0'
debug: Replaced test_array.ops[779]: 'v-load array%bytes_index%10#1' with 'l-load array%bytes_index%10#1'
debug: Inserted test_array.ops[830]: 'l-store-copy array%bytes_index%11#1 0'
debug: Replaced test_array.ops[833]: 'v-load array%bytes_index%11#1' with 'l-load array%bytes_index%11#1'
debug: Inserted test_array.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array.ops[62]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[65]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[143]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[146]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[252]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[255]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[367]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[370]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[448]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[451]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[557]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[560]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[687]: 'l-store-copy array%encoded%3#1 0'
debug: Replaced test_array.ops[691]: 'v-load array%encoded%3#1' with 'l-load array%encoded%3#1'
debug: Inserted test_array.ops[107]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_array.ops[112]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_array.ops[189]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_array.ops[194]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_array.ops[299]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_array.ops[304]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_array.ops[415]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_array.ops[420]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_array.ops[497]: 'l-store-copy tmp%31#0 0'
debug: Replaced test_array.ops[502]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted test_array.ops[607]: 'l-store-copy tmp%37#0 0'
debug: Replaced test_array.ops[612]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted test_array.ops[674]: 'l-store-copy tmp%41#0 0'
debug: Replaced test_array.ops[679]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted test_array.ops[784]: 'l-store-copy tmp%47#0 0'
debug: Replaced test_array.ops[789]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted test_array.ops[839]: 'l-store-copy tmp%51#0 0'
debug: Replaced test_array.ops[844]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted test_array.ops[48]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_array.ops[55]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_array.ops[112]: 'l-store-copy slot_contents%4#0 1'
debug: Replaced test_array.ops[119]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_array.ops[195]: 'l-store-copy slot_contents%7#0 1'
debug: Replaced test_array.ops[202]: 'v-load slot_contents%7#0' with 'l-load slot_contents%7#0'
debug: Inserted test_array.ops[243]: 'l-store-copy encoded%2#0 0'
debug: Replaced test_array.ops[250]: 'v-load encoded%2#0' with 'l-load encoded%2#0'
debug: Inserted test_array.ops[307]: 'l-store-copy slot_contents%11#0 1'
debug: Replaced test_array.ops[314]: 'v-load slot_contents%11#0' with 'l-load slot_contents%11#0'
debug: Inserted test_array.ops[342]: 'l-store-copy slot_contents%12#0 0'
debug: Replaced test_array.ops[349]: 'v-load slot_contents%12#0' with 'l-load slot_contents%12#0'
debug: Inserted test_array.ops[425]: 'l-store-copy slot_contents%15#0 1'
debug: Replaced test_array.ops[432]: 'v-load slot_contents%15#0' with 'l-load slot_contents%15#0'
debug: Inserted test_array.ops[508]: 'l-store-copy slot_contents%18#0 1'
debug: Replaced test_array.ops[515]: 'v-load slot_contents%18#0' with 'l-load slot_contents%18#0'
debug: Inserted test_array.ops[556]: 'l-store-copy encoded%3#0 0'
debug: Replaced test_array.ops[563]: 'v-load encoded%3#0' with 'l-load encoded%3#0'
debug: Inserted test_array.ops[620]: 'l-store-copy slot_contents%22#0 1'
debug: Replaced test_array.ops[627]: 'v-load slot_contents%22#0' with 'l-load slot_contents%22#0'
debug: Inserted test_array.ops[661]: 'l-store-copy slot_contents%23#0 0'
debug: Replaced test_array.ops[668]: 'v-load slot_contents%23#0' with 'l-load slot_contents%23#0'
debug: Inserted test_array.ops[693]: 'l-store-copy new_box_value%0#0 0'
debug: Replaced test_array.ops[699]: 'v-load new_box_value%0#0' with 'l-load new_box_value%0#0'
debug: Inserted test_array.ops[745]: 'l-store-copy slot_contents%26#0 0'
debug: Replaced test_array.ops[752]: 'v-load slot_contents%26#0' with 'l-load slot_contents%26#0'
debug: Inserted test_array.ops[801]: 'l-store-copy slot_contents%28#0 1'
debug: Replaced test_array.ops[808]: 'v-load slot_contents%28#0' with 'l-load slot_contents%28#0'
debug: Inserted test_array.ops[857]: 'l-store-copy slot_contents%30#0 1'
debug: Replaced test_array.ops[864]: 'v-load slot_contents%30#0' with 'l-load slot_contents%30#0'
debug: Inserted test_array.ops[51]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[63]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[247]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[259]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[561]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[573]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[701]: 'l-store-copy array%bytes_index%8#1 1'
debug: Replaced test_array.ops[713]: 'v-load array%bytes_index%8#1' with 'l-load array%bytes_index%8#1'
debug: Inserted test_array.ops[91]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[112]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[175]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[196]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[289]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[310]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[408]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[429]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[492]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[513]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[606]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[627]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[698]: 'l-store-copy slot_contents%24#0 1'
debug: Replaced test_array.ops[719]: 'v-load slot_contents%24#0' with 'l-load slot_contents%24#0'
debug: Inserted test_array.ops[790]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[811]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[847]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[868]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[68]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[91]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[153]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[176]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[268]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[291]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[388]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[411]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[473]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[496]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[588]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[611]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[738]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[761]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[675]: 'l-store-copy tmp%40#0 0'
debug: Replaced test_array.ops[703]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted test_array.ops[704]: 'l-store-copy tmp%40#0 1'
debug: Replaced test_array.ops[736]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted test_array.ops[114]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[149]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[315]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[350]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[351]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[386]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[437]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[472]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[638]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[673]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[769]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[804]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[827]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[862]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[11]: 'l-store-copy arr#0 0'
debug: Replaced test_array.ops[51]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[201]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[253]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[525]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[577]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array.ops[679]: 'l-store-copy arr#0 1'
debug: Replaced test_array.ops[748]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_extend.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_extend.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_extend.ops[7]: 'l-store-copy arr#0 0'
debug: Replaced test_array_extend.ops[9]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_extend.ops[13]: 'l-store-copy slot%1#0 0'
debug: Replaced test_array_extend.ops[15]: 'v-load slot%1#0' with 'l-load slot%1#0'
debug: Inserted test_array_extend.ops[30]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_array_extend.ops[32]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_array_extend.ops[36]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_extend.ops[38]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_extend.ops[41]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array_extend.ops[43]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array_extend.ops[58]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_array_extend.ops[60]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_array_extend.ops[64]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_extend.ops[66]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_extend.ops[69]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_extend.ops[71]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_extend.ops[86]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_array_extend.ops[88]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_array_extend.ops[92]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array_extend.ops[94]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array_extend.ops[97]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_extend.ops[99]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_extend.ops[109]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_array_extend.ops[111]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_array_extend.ops[114]: 'l-store-copy array%array_contents%3#1 0'
debug: Replaced test_array_extend.ops[116]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted test_array_extend.ops[123]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_array_extend.ops[125]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_array_extend.ops[127]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_extend.ops[129]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_extend.ops[132]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_extend.ops[134]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_extend.ops[135]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_array_extend.ops[137]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array_extend.ops[140]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_extend.ops[142]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_extend.ops[22]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_extend.ops[25]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_extend.ops[27]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_array_extend.ops[30]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_array_extend.ops[46]: 'l-store-copy extended%0#0 0'
debug: Replaced test_array_extend.ops[49]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_array_extend.ops[53]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array_extend.ops[56]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array_extend.ops[58]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_array_extend.ops[61]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_array_extend.ops[77]: 'l-store-copy extended%1#0 0'
debug: Replaced test_array_extend.ops[80]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted test_array_extend.ops[84]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array_extend.ops[87]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array_extend.ops[89]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_array_extend.ops[92]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_array_extend.ops[108]: 'l-store-copy extended%2#0 0'
debug: Replaced test_array_extend.ops[111]: 'v-load extended%2#0' with 'l-load extended%2#0'
debug: Inserted test_array_extend.ops[126]: 'l-store-copy extended%3#0 0'
debug: Replaced test_array_extend.ops[129]: 'v-load extended%3#0' with 'l-load extended%3#0'
debug: Inserted test_array_extend.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_extend.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_extend.ops[17]: 'l-store-copy slot%1#0 0'
debug: Replaced test_array_extend.ops[20]: 'v-load slot%1#0' with 'l-load slot%1#0'
debug: Inserted test_array_extend.ops[113]: 'l-store-copy arr2#0 1'
debug: Replaced test_array_extend.ops[116]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted test_array_extend.ops[132]: 'l-store-copy arr#0 1'
debug: Replaced test_array_extend.ops[135]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_extend.ops[37]: 'l-store-copy encoded%2#0 0'
debug: Replaced test_array_extend.ops[44]: 'v-load encoded%2#0' with 'l-load encoded%2#0'
debug: Inserted test_array_extend.ops[69]: 'l-store-copy encoded%3#0 0'
debug: Replaced test_array_extend.ops[76]: 'v-load encoded%3#0' with 'l-load encoded%3#0'
debug: Inserted test_array_extend.ops[101]: 'l-store-copy encoded%4#0 0'
debug: Replaced test_array_extend.ops[108]: 'v-load encoded%4#0' with 'l-load encoded%4#0'
debug: Inserted test_array_extend.ops[121]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_extend.ops[128]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_extend.ops[40]: 'l-store-copy arr2#0 1'
debug: Replaced test_array_extend.ops[52]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted test_array_extend.ops[73]: 'l-store-copy arr2#0 1'
debug: Replaced test_array_extend.ops[85]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted test_array_extend.ops[106]: 'l-store-copy arr2#0 1'
debug: Replaced test_array_extend.ops[118]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted test_array_extend.ops[127]: 'l-store-copy arr#0 1'
debug: Replaced test_array_extend.ops[139]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_extend.ops[21]: 'l-store-copy arr2#0 0'
debug: Replaced test_array_extend.ops[40]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted test_array_extend.ops[54]: 'l-store-copy arr2#0 1'
debug: Replaced test_array_extend.ops[74]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted test_array_extend.ops[88]: 'l-store-copy arr2#0 1'
debug: Replaced test_array_extend.ops[108]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted test_array_extend.ops[11]: 'l-store-copy arr#0 0'
debug: Replaced test_array_extend.ops[130]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_multiple_append.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_multiple_append.ops[7]: 'l-store-copy arr#0 0'
debug: Replaced test_array_multiple_append.ops[9]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[22]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_array_multiple_append.ops[24]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_array_multiple_append.ops[28]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_multiple_append.ops[30]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_multiple_append.ops[33]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array_multiple_append.ops[35]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array_multiple_append.ops[50]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_array_multiple_append.ops[52]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_array_multiple_append.ops[56]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_multiple_append.ops[58]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_multiple_append.ops[61]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_multiple_append.ops[63]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_multiple_append.ops[78]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_array_multiple_append.ops[80]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_array_multiple_append.ops[84]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array_multiple_append.ops[86]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array_multiple_append.ops[89]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_multiple_append.ops[91]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_multiple_append.ops[98]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_multiple_append.ops[100]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_multiple_append.ops[102]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_multiple_append.ops[104]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_multiple_append.ops[107]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_multiple_append.ops[109]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_multiple_append.ops[110]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_array_multiple_append.ops[112]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array_multiple_append.ops[115]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_multiple_append.ops[117]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_multiple_append.ops[14]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_multiple_append.ops[17]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_multiple_append.ops[19]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_array_multiple_append.ops[22]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_array_multiple_append.ops[38]: 'l-store-copy extended%0#0 0'
debug: Replaced test_array_multiple_append.ops[41]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_array_multiple_append.ops[45]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array_multiple_append.ops[48]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array_multiple_append.ops[50]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_array_multiple_append.ops[53]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_array_multiple_append.ops[69]: 'l-store-copy extended%1#0 0'
debug: Replaced test_array_multiple_append.ops[72]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted test_array_multiple_append.ops[76]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array_multiple_append.ops[79]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array_multiple_append.ops[81]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_array_multiple_append.ops[84]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_array_multiple_append.ops[100]: 'l-store-copy extended%2#0 0'
debug: Replaced test_array_multiple_append.ops[103]: 'v-load extended%2#0' with 'l-load extended%2#0'
debug: Inserted test_array_multiple_append.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_multiple_append.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_multiple_append.ops[104]: 'l-store-copy arr#0 1'
debug: Replaced test_array_multiple_append.ops[107]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[28]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_array_multiple_append.ops[35]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_array_multiple_append.ops[60]: 'l-store-copy encoded%2#0 0'
debug: Replaced test_array_multiple_append.ops[67]: 'v-load encoded%2#0' with 'l-load encoded%2#0'
debug: Inserted test_array_multiple_append.ops[92]: 'l-store-copy encoded%3#0 0'
debug: Replaced test_array_multiple_append.ops[99]: 'v-load encoded%3#0' with 'l-load encoded%3#0'
debug: Inserted test_array_multiple_append.ops[31]: 'l-store-copy arr#0 1'
debug: Replaced test_array_multiple_append.ops[43]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[64]: 'l-store-copy arr#0 1'
debug: Replaced test_array_multiple_append.ops[76]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[97]: 'l-store-copy arr#0 1'
debug: Replaced test_array_multiple_append.ops[109]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[11]: 'l-store-copy arr#0 0'
debug: Replaced test_array_multiple_append.ops[31]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[45]: 'l-store-copy arr#0 1'
debug: Replaced test_array_multiple_append.ops[65]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_multiple_append.ops[79]: 'l-store-copy arr#0 1'
debug: Replaced test_array_multiple_append.ops[99]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_too_long.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_too_long.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_too_long.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_too_long.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_too_long_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_array_too_long_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_array_too_long_for_body@2.ops[10]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_array_too_long_for_body@2.ops[12]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_array_too_long_for_body@2.ops[16]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_too_long_for_body@2.ops[18]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_too_long_for_body@2.ops[21]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array_too_long_for_body@2.ops[23]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array_too_long_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_too_long_for_body@2.ops[5]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_too_long_for_body@2.ops[7]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_array_too_long_for_body@2.ops[10]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_array_too_long_for_body@2.ops[26]: 'l-store-copy extended%0#0 0'
debug: Replaced test_array_too_long_for_body@2.ops[29]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_array_too_long_for_body@2.ops[15]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_array_too_long_for_body@2.ops[22]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_array_too_long_for_body@2.ops[18]: 'l-store-copy array#0 1'
debug: Replaced test_array_too_long_for_body@2.ops[30]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_too_long_after_for@4.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[4]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_too_long_after_for@4.ops[6]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[8]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_too_long_after_for@4.ops[11]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[13]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_too_long_after_for@4.ops[14]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[16]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array_too_long_after_for@4.ops[19]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[21]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_too_long_after_for@4.ops[33]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[35]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_array_too_long_after_for@4.ops[39]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[41]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array_too_long_after_for@4.ops[44]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[46]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_too_long_after_for@4.ops[25]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[28]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array_too_long_after_for@4.ops[30]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_array_too_long_after_for@4.ops[33]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_array_too_long_after_for@4.ops[49]: 'l-store-copy extended%1#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[52]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted test_array_too_long_after_for@4.ops[38]: 'l-store-copy encoded%2#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[45]: 'v-load encoded%2#0' with 'l-load encoded%2#0'
debug: Inserted test_array_too_long_after_for@4.ops[41]: 'l-store-copy array#0 1'
debug: Replaced test_array_too_long_after_for@4.ops[53]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_too_long_after_for@4.ops[1]: 'l-store-copy array#0 0'
debug: Replaced test_array_too_long_after_for@4.ops[41]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_copy_and_extend.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_copy_and_extend.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_copy_and_extend.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_copy_and_extend_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_array_copy_and_extend_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[10]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[12]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[16]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[18]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[21]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[23]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[5]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[7]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[10]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[26]: 'l-store-copy extended%0#0 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[29]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[15]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[22]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_array_copy_and_extend_for_body@2.ops[18]: 'l-store-copy array#0 1'
debug: Replaced test_array_copy_and_extend_for_body@2.ops[30]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[20]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[22]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[26]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[28]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[31]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[33]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[40]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[42]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[44]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[46]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[49]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[51]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[52]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[54]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[57]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[59]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[63]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[65]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[67]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[69]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[72]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[74]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[75]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[77]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[92]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[94]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[98]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[100]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[102]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[104]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[105]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[107]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[110]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[112]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[116]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[118]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[120]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[122]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[125]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[127]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[128]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[130]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[133]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[135]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[139]: 'l-store-copy slot_contents%7#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[141]: 'v-load slot_contents%7#0' with 'l-load slot_contents%7#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[143]: 'l-store-copy array%bytes_len%3#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[145]: 'v-load array%bytes_len%3#1' with 'l-load array%bytes_len%3#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[148]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[150]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[151]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[153]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[168]: 'l-store-copy array%value%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[170]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[174]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[176]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[178]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[180]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[181]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[183]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[186]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[188]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[195]: 'l-store-copy slot_contents%10#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[197]: 'v-load slot_contents%10#0' with 'l-load slot_contents%10#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[200]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[202]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[209]: 'l-store-copy slot_contents%11#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[211]: 'v-load slot_contents%11#0' with 'l-load slot_contents%11#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[213]: 'l-store-copy array%bytes_len%4#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[215]: 'v-load array%bytes_len%4#1' with 'l-load array%bytes_len%4#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[218]: 'l-store-copy array%array_len%4#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[220]: 'v-load array%array_len%4#1' with 'l-load array%array_len%4#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[221]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[223]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[226]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[228]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[232]: 'l-store-copy slot_contents%12#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[234]: 'v-load slot_contents%12#0' with 'l-load slot_contents%12#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[236]: 'l-store-copy array%bytes_len%5#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[238]: 'v-load array%bytes_len%5#1' with 'l-load array%bytes_len%5#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[241]: 'l-store-copy array%array_len%5#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[243]: 'v-load array%array_len%5#1' with 'l-load array%array_len%5#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[244]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[246]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[249]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[251]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[255]: 'l-store-copy slot_contents%13#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[257]: 'v-load slot_contents%13#0' with 'l-load slot_contents%13#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[259]: 'l-store-copy array%bytes_len%6#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[261]: 'v-load array%bytes_len%6#1' with 'l-load array%bytes_len%6#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[264]: 'l-store-copy array%array_len%6#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[266]: 'v-load array%array_len%6#1' with 'l-load array%array_len%6#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[267]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[269]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[284]: 'l-store-copy array%value%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[286]: 'v-load array%value%2#1' with 'l-load array%value%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[290]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[292]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[294]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[296]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[297]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[299]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[302]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[304]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[317]: 'l-store-copy array%value%3#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[319]: 'v-load array%value%3#1' with 'l-load array%value%3#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[323]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[325]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[327]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[329]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[330]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[332]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[335]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[337]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[350]: 'l-store-copy array%value%4#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[352]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[356]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[358]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[360]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[362]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[363]: 'l-store-copy tmp%22#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[365]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[368]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[370]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[383]: 'l-store-copy array%value%5#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[385]: 'v-load array%value%5#1' with 'l-load array%value%5#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[389]: 'l-store-copy array%sub_item%12#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[391]: 'v-load array%sub_item%12#1' with 'l-load array%sub_item%12#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[393]: 'l-store-copy array%sub_item%13#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[395]: 'v-load array%sub_item%13#1' with 'l-load array%sub_item%13#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[396]: 'l-store-copy tmp%24#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[398]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[401]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[403]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[4]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[7]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[13]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[16]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[18]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[21]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[37]: 'l-store-copy extended%1#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[40]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[91]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[94]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[168]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[171]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[209]: 'l-store-copy extended%2#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[212]: 'v-load extended%2#0' with 'l-load extended%2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[286]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[289]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[320]: 'l-store-copy array%bytes_index%3#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[323]: 'v-load array%bytes_index%3#1' with 'l-load array%bytes_index%3#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[354]: 'l-store-copy array%bytes_index%4#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[357]: 'v-load array%bytes_index%4#1' with 'l-load array%bytes_index%4#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[388]: 'l-store-copy array%bytes_index%5#1 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[391]: 'v-load array%bytes_index%5#1' with 'l-load array%bytes_index%5#1'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[7]: 'l-store-copy slot%1#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[10]: 'v-load slot%1#0' with 'l-load slot%1#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[41]: 'l-store-copy array#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[44]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[214]: 'l-store-copy array#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[217]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[1]: 'l-store-copy slot%1#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[7]: 'v-load slot%1#0' with 'l-load slot%1#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[87]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[92]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[165]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[170]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[285]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[290]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[28]: 'l-store-copy encoded%2#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[35]: 'v-load encoded%2#0' with 'l-load encoded%2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[92]: 'l-store-copy slot_contents%5#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[99]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[171]: 'l-store-copy slot_contents%8#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[178]: 'v-load slot_contents%8#0' with 'l-load slot_contents%8#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[206]: 'l-store-copy slot_contents%9#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[213]: 'v-load slot_contents%9#0' with 'l-load slot_contents%9#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[293]: 'l-store-copy slot_contents%14#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[300]: 'v-load slot_contents%14#0' with 'l-load slot_contents%14#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[328]: 'l-store-copy slot_contents%15#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[335]: 'v-load slot_contents%15#0' with 'l-load slot_contents%15#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[363]: 'l-store-copy slot_contents%16#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[370]: 'v-load slot_contents%16#0' with 'l-load slot_contents%16#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[398]: 'l-store-copy slot_contents%17#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[405]: 'v-load slot_contents%17#0' with 'l-load slot_contents%17#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[31]: 'l-store-copy array#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[43]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[210]: 'l-store-copy array#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[222]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[71]: 'l-store-copy array#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[92]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[151]: 'l-store-copy array2#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[172]: 'v-load array2#0' with 'l-load array2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[275]: 'l-store-copy array#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[296]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[48]: 'l-store-copy array#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[71]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[129]: 'l-store-copy array2#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[152]: 'v-load array2#0' with 'l-load array2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[4]: 'l-store-copy array#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[31]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[176]: 'l-store-copy array2#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[211]: 'v-load array2#0' with 'l-load array2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[301]: 'l-store-copy array#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[336]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[337]: 'l-store-copy array#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[372]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[373]: 'l-store-copy array#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[408]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[212]: 'l-store-copy array2#0 0'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[256]: 'v-load array2#0' with 'l-load array2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[234]: 'l-store-copy array#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[280]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[13]: 'l-store-copy array2#0 1'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[130]: 'v-load array2#0' with 'l-load array2#0'
debug: Inserted test_array_copy_and_extend_after_for@4.ops[96]: 'l-store-copy array#0 2'
debug: Replaced test_array_copy_and_extend_after_for@4.ops[218]: 'v-load array#0' with 'l-load array#0'
debug: Inserted test_array_evaluation_order.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_evaluation_order.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_evaluation_order.ops[18]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_array_evaluation_order.ops[20]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_array_evaluation_order.ops[24]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_evaluation_order.ops[26]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_evaluation_order.ops[29]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_array_evaluation_order.ops[31]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_array_evaluation_order.ops[41]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_array_evaluation_order.ops[43]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array_evaluation_order.ops[48]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array_evaluation_order.ops[50]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array_evaluation_order.ops[53]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_array_evaluation_order.ops[55]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_array_evaluation_order.ops[62]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_evaluation_order.ops[64]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_evaluation_order.ops[66]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_array_evaluation_order.ops[68]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_array_evaluation_order.ops[71]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_array_evaluation_order.ops[73]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_array_evaluation_order.ops[74]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_array_evaluation_order.ops[76]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_array_evaluation_order.ops[79]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_array_evaluation_order.ops[81]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_array_evaluation_order.ops[94]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_array_evaluation_order.ops[96]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_array_evaluation_order.ops[100]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array_evaluation_order.ops[102]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array_evaluation_order.ops[104]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array_evaluation_order.ops[106]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array_evaluation_order.ops[107]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_array_evaluation_order.ops[109]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_array_evaluation_order.ops[112]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_array_evaluation_order.ops[114]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_array_evaluation_order.ops[127]: 'l-store-copy array%value%1#1 0'
debug: Replaced test_array_evaluation_order.ops[129]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted test_array_evaluation_order.ops[133]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_array_evaluation_order.ops[135]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_array_evaluation_order.ops[137]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_array_evaluation_order.ops[139]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_array_evaluation_order.ops[140]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_array_evaluation_order.ops[142]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_array_evaluation_order.ops[145]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_array_evaluation_order.ops[147]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_array_evaluation_order.ops[160]: 'l-store-copy array%value%2#1 0'
debug: Replaced test_array_evaluation_order.ops[162]: 'v-load array%value%2#1' with 'l-load array%value%2#1'
debug: Inserted test_array_evaluation_order.ops[166]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_array_evaluation_order.ops[168]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_array_evaluation_order.ops[170]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced test_array_evaluation_order.ops[172]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted test_array_evaluation_order.ops[173]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_array_evaluation_order.ops[175]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_array_evaluation_order.ops[178]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_array_evaluation_order.ops[180]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array_evaluation_order.ops[193]: 'l-store-copy array%value%3#1 0'
debug: Replaced test_array_evaluation_order.ops[195]: 'v-load array%value%3#1' with 'l-load array%value%3#1'
debug: Inserted test_array_evaluation_order.ops[199]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced test_array_evaluation_order.ops[201]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted test_array_evaluation_order.ops[203]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced test_array_evaluation_order.ops[205]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted test_array_evaluation_order.ops[206]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_array_evaluation_order.ops[208]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_array_evaluation_order.ops[211]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_array_evaluation_order.ops[213]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_array_evaluation_order.ops[226]: 'l-store-copy array%value%4#1 0'
debug: Replaced test_array_evaluation_order.ops[228]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted test_array_evaluation_order.ops[232]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced test_array_evaluation_order.ops[234]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted test_array_evaluation_order.ops[236]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced test_array_evaluation_order.ops[238]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted test_array_evaluation_order.ops[239]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_array_evaluation_order.ops[241]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_array_evaluation_order.ops[244]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_array_evaluation_order.ops[246]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_array_evaluation_order.ops[259]: 'l-store-copy array%value%5#1 0'
debug: Replaced test_array_evaluation_order.ops[261]: 'v-load array%value%5#1' with 'l-load array%value%5#1'
debug: Inserted test_array_evaluation_order.ops[265]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced test_array_evaluation_order.ops[267]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted test_array_evaluation_order.ops[269]: 'l-store-copy array%sub_item%12#1 0'
debug: Replaced test_array_evaluation_order.ops[271]: 'v-load array%sub_item%12#1' with 'l-load array%sub_item%12#1'
debug: Inserted test_array_evaluation_order.ops[272]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_array_evaluation_order.ops[274]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_array_evaluation_order.ops[277]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_array_evaluation_order.ops[279]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_array_evaluation_order.ops[283]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_array_evaluation_order.ops[285]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_array_evaluation_order.ops[287]: 'l-store-copy slot_contents%10#0 0'
debug: Replaced test_array_evaluation_order.ops[289]: 'v-load slot_contents%10#0' with 'l-load slot_contents%10#0'
debug: Inserted test_array_evaluation_order.ops[291]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_array_evaluation_order.ops[293]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_array_evaluation_order.ops[296]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_array_evaluation_order.ops[298]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_array_evaluation_order.ops[299]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_array_evaluation_order.ops[301]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_array_evaluation_order.ops[310]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_array_evaluation_order.ops[312]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_array_evaluation_order.ops[323]: 'l-store-copy array%value%6#1 0'
debug: Replaced test_array_evaluation_order.ops[325]: 'v-load array%value%6#1' with 'l-load array%value%6#1'
debug: Inserted test_array_evaluation_order.ops[329]: 'l-store-copy array%sub_item%13#1 0'
debug: Replaced test_array_evaluation_order.ops[331]: 'v-load array%sub_item%13#1' with 'l-load array%sub_item%13#1'
debug: Inserted test_array_evaluation_order.ops[333]: 'l-store-copy array%sub_item%14#1 0'
debug: Replaced test_array_evaluation_order.ops[335]: 'v-load array%sub_item%14#1' with 'l-load array%sub_item%14#1'
debug: Inserted test_array_evaluation_order.ops[348]: 'l-store-copy array%value%7#1 0'
debug: Replaced test_array_evaluation_order.ops[350]: 'v-load array%value%7#1' with 'l-load array%value%7#1'
debug: Inserted test_array_evaluation_order.ops[354]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced test_array_evaluation_order.ops[356]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted test_array_evaluation_order.ops[358]: 'l-store-copy array%sub_item%16#1 0'
debug: Replaced test_array_evaluation_order.ops[360]: 'v-load array%sub_item%16#1' with 'l-load array%sub_item%16#1'
debug: Inserted test_array_evaluation_order.ops[377]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced test_array_evaluation_order.ops[379]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted test_array_evaluation_order.ops[386]: 'l-store-copy slot_contents%14#0 0'
debug: Replaced test_array_evaluation_order.ops[388]: 'v-load slot_contents%14#0' with 'l-load slot_contents%14#0'
debug: Inserted test_array_evaluation_order.ops[390]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_array_evaluation_order.ops[392]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_array_evaluation_order.ops[395]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_array_evaluation_order.ops[397]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_array_evaluation_order.ops[398]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_array_evaluation_order.ops[400]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_array_evaluation_order.ops[403]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_array_evaluation_order.ops[405]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_array_evaluation_order.ops[418]: 'l-store-copy array%value%8#1 0'
debug: Replaced test_array_evaluation_order.ops[420]: 'v-load array%value%8#1' with 'l-load array%value%8#1'
debug: Inserted test_array_evaluation_order.ops[424]: 'l-store-copy array%sub_item%18#1 0'
debug: Replaced test_array_evaluation_order.ops[426]: 'v-load array%sub_item%18#1' with 'l-load array%sub_item%18#1'
debug: Inserted test_array_evaluation_order.ops[428]: 'l-store-copy array%sub_item%19#1 0'
debug: Replaced test_array_evaluation_order.ops[430]: 'v-load array%sub_item%19#1' with 'l-load array%sub_item%19#1'
debug: Inserted test_array_evaluation_order.ops[431]: 'l-store-copy tmp%22#0 0'
debug: Replaced test_array_evaluation_order.ops[433]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted test_array_evaluation_order.ops[436]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_array_evaluation_order.ops[438]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_array_evaluation_order.ops[451]: 'l-store-copy array%value%9#1 0'
debug: Replaced test_array_evaluation_order.ops[453]: 'v-load array%value%9#1' with 'l-load array%value%9#1'
debug: Inserted test_array_evaluation_order.ops[457]: 'l-store-copy array%sub_item%20#1 0'
debug: Replaced test_array_evaluation_order.ops[459]: 'v-load array%sub_item%20#1' with 'l-load array%sub_item%20#1'
debug: Inserted test_array_evaluation_order.ops[461]: 'l-store-copy array%sub_item%21#1 0'
debug: Replaced test_array_evaluation_order.ops[463]: 'v-load array%sub_item%21#1' with 'l-load array%sub_item%21#1'
debug: Inserted test_array_evaluation_order.ops[464]: 'l-store-copy tmp%24#0 0'
debug: Replaced test_array_evaluation_order.ops[466]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted test_array_evaluation_order.ops[469]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_array_evaluation_order.ops[471]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_array_evaluation_order.ops[484]: 'l-store-copy array%value%10#1 0'
debug: Replaced test_array_evaluation_order.ops[486]: 'v-load array%value%10#1' with 'l-load array%value%10#1'
debug: Inserted test_array_evaluation_order.ops[490]: 'l-store-copy array%sub_item%22#1 0'
debug: Replaced test_array_evaluation_order.ops[492]: 'v-load array%sub_item%22#1' with 'l-load array%sub_item%22#1'
debug: Inserted test_array_evaluation_order.ops[494]: 'l-store-copy array%sub_item%23#1 0'
debug: Replaced test_array_evaluation_order.ops[496]: 'v-load array%sub_item%23#1' with 'l-load array%sub_item%23#1'
debug: Inserted test_array_evaluation_order.ops[497]: 'l-store-copy tmp%26#0 0'
debug: Replaced test_array_evaluation_order.ops[499]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted test_array_evaluation_order.ops[502]: 'l-store-copy tmp%27#0 0'
debug: Replaced test_array_evaluation_order.ops[504]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_array_evaluation_order.ops[10]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array_evaluation_order.ops[13]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array_evaluation_order.ops[15]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_array_evaluation_order.ops[18]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_array_evaluation_order.ops[34]: 'l-store-copy extended%0#0 0'
debug: Replaced test_array_evaluation_order.ops[37]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_array_evaluation_order.ops[59]: 'l-store-copy extended%1#0 0'
debug: Replaced test_array_evaluation_order.ops[62]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted test_array_evaluation_order.ops[93]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_array_evaluation_order.ops[96]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_array_evaluation_order.ops[127]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced test_array_evaluation_order.ops[130]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted test_array_evaluation_order.ops[161]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced test_array_evaluation_order.ops[164]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted test_array_evaluation_order.ops[195]: 'l-store-copy array%bytes_index%3#1 0'
debug: Replaced test_array_evaluation_order.ops[198]: 'v-load array%bytes_index%3#1' with 'l-load array%bytes_index%3#1'
debug: Inserted test_array_evaluation_order.ops[229]: 'l-store-copy array%bytes_index%4#1 0'
debug: Replaced test_array_evaluation_order.ops[232]: 'v-load array%bytes_index%4#1' with 'l-load array%bytes_index%4#1'
debug: Inserted test_array_evaluation_order.ops[263]: 'l-store-copy array%bytes_index%5#1 0'
debug: Replaced test_array_evaluation_order.ops[266]: 'v-load array%bytes_index%5#1' with 'l-load array%bytes_index%5#1'
debug: Inserted test_array_evaluation_order.ops[328]: 'l-store-copy array%bytes_index%6#1 0'
debug: Replaced test_array_evaluation_order.ops[331]: 'v-load array%bytes_index%6#1' with 'l-load array%bytes_index%6#1'
debug: Inserted test_array_evaluation_order.ops[354]: 'l-store-copy array%bytes_index%7#1 0'
debug: Replaced test_array_evaluation_order.ops[357]: 'v-load array%bytes_index%7#1' with 'l-load array%bytes_index%7#1'
debug: Inserted test_array_evaluation_order.ops[380]: 'l-store-copy array%sub_item%17#1 0'
debug: Replaced test_array_evaluation_order.ops[383]: 'v-load array%sub_item%17#1' with 'l-load array%sub_item%17#1'
debug: Inserted test_array_evaluation_order.ops[393]: 'l-store-copy updated_array%0#0 0'
debug: Replaced test_array_evaluation_order.ops[396]: 'v-load updated_array%0#0' with 'l-load updated_array%0#0'
debug: Inserted test_array_evaluation_order.ops[427]: 'l-store-copy array%bytes_index%9#1 0'
debug: Replaced test_array_evaluation_order.ops[430]: 'v-load array%bytes_index%9#1' with 'l-load array%bytes_index%9#1'
debug: Inserted test_array_evaluation_order.ops[461]: 'l-store-copy array%bytes_index%10#1 0'
debug: Replaced test_array_evaluation_order.ops[464]: 'v-load array%bytes_index%10#1' with 'l-load array%bytes_index%10#1'
debug: Inserted test_array_evaluation_order.ops[495]: 'l-store-copy array%bytes_index%11#1 0'
debug: Replaced test_array_evaluation_order.ops[498]: 'v-load array%bytes_index%11#1' with 'l-load array%bytes_index%11#1'
debug: Inserted test_array_evaluation_order.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array_evaluation_order.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array_evaluation_order.ops[38]: 'l-store-copy arr#0 1'
debug: Replaced test_array_evaluation_order.ops[41]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[42]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[45]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[388]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_array_evaluation_order.ops[392]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_array_evaluation_order.ops[400]: 'l-store-copy arr#0 1'
debug: Replaced test_array_evaluation_order.ops[403]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[24]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_array_evaluation_order.ops[31]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_array_evaluation_order.ops[52]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_evaluation_order.ops[59]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_evaluation_order.ops[94]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_array_evaluation_order.ops[101]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_array_evaluation_order.ops[129]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_array_evaluation_order.ops[136]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_array_evaluation_order.ops[164]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced test_array_evaluation_order.ops[171]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted test_array_evaluation_order.ops[199]: 'l-store-copy slot_contents%7#0 0'
debug: Replaced test_array_evaluation_order.ops[206]: 'v-load slot_contents%7#0' with 'l-load slot_contents%7#0'
debug: Inserted test_array_evaluation_order.ops[234]: 'l-store-copy slot_contents%8#0 0'
debug: Replaced test_array_evaluation_order.ops[241]: 'v-load slot_contents%8#0' with 'l-load slot_contents%8#0'
debug: Inserted test_array_evaluation_order.ops[269]: 'l-store-copy slot_contents%9#0 0'
debug: Replaced test_array_evaluation_order.ops[276]: 'v-load slot_contents%9#0' with 'l-load slot_contents%9#0'
debug: Inserted test_array_evaluation_order.ops[335]: 'l-store-copy slot_contents%12#0 0'
debug: Replaced test_array_evaluation_order.ops[342]: 'v-load slot_contents%12#0' with 'l-load slot_contents%12#0'
debug: Inserted test_array_evaluation_order.ops[385]: 'l-store-copy new_box_value%0#0 0'
debug: Replaced test_array_evaluation_order.ops[391]: 'v-load new_box_value%0#0' with 'l-load new_box_value%0#0'
debug: Inserted test_array_evaluation_order.ops[438]: 'l-store-copy slot_contents%15#0 0'
debug: Replaced test_array_evaluation_order.ops[445]: 'v-load slot_contents%15#0' with 'l-load slot_contents%15#0'
debug: Inserted test_array_evaluation_order.ops[473]: 'l-store-copy slot_contents%16#0 0'
debug: Replaced test_array_evaluation_order.ops[480]: 'v-load slot_contents%16#0' with 'l-load slot_contents%16#0'
debug: Inserted test_array_evaluation_order.ops[508]: 'l-store-copy slot_contents%17#0 0'
debug: Replaced test_array_evaluation_order.ops[515]: 'v-load slot_contents%17#0' with 'l-load slot_contents%17#0'
debug: Inserted test_array_evaluation_order.ops[45]: 'l-store-copy tmp%0#0 1'
debug: Replaced test_array_evaluation_order.ops[55]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array_evaluation_order.ops[27]: 'l-store-copy arr#0 1'
debug: Replaced test_array_evaluation_order.ops[39]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[57]: 'l-store-copy tmp%0#0 1'
debug: Replaced test_array_evaluation_order.ops[69]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array_evaluation_order.ops[393]: 'l-store-copy array%bytes_index%8#1 1'
debug: Replaced test_array_evaluation_order.ops[405]: 'v-load array%bytes_index%8#1' with 'l-load array%bytes_index%8#1'
debug: Inserted test_array_evaluation_order.ops[8]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[27]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[311]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_array_evaluation_order.ops[331]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_array_evaluation_order.ops[50]: 'l-store-copy arr#0 1'
debug: Replaced test_array_evaluation_order.ops[74]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[75]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[98]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[422]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[445]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[309]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[337]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[367]: 'l-store-copy index%0#0 0'
debug: Replaced test_array_evaluation_order.ops[396]: 'v-load index%0#0' with 'l-load index%0#0'
debug: Inserted test_array_evaluation_order.ops[338]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[370]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[99]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[134]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[135]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[170]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[171]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[206]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[207]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[242]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[243]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[278]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[279]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[314]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[455]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[490]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[491]: 'l-store-copy arr#0 0'
debug: Replaced test_array_evaluation_order.ops[526]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_array_evaluation_order.ops[378]: 'l-store-copy slot_contents%13#0 1'
debug: Replaced test_array_evaluation_order.ops[418]: 'v-load slot_contents%13#0' with 'l-load slot_contents%13#0'
debug: Inserted test_array_evaluation_order.ops[339]: 'l-store-copy tmp%18#0 2'
debug: Replaced test_array_evaluation_order.ops[381]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_array_evaluation_order.ops[343]: 'l-store-copy slot_contents%11#0 2'
debug: Replaced test_array_evaluation_order.ops[387]: 'v-load slot_contents%11#0' with 'l-load slot_contents%11#0'
debug: Inserted test_array_evaluation_order.ops[379]: 'l-store-copy arr#0 3'
debug: Replaced test_array_evaluation_order.ops[430]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_allocations_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_allocations_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_allocations_for_body@2.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_allocations_for_body@2.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_allocations_for_body@2.ops[7]: 'l-store-copy alloc_test#0 0'
debug: Replaced test_allocations_for_body@2.ops[9]: 'v-load alloc_test#0' with 'l-load alloc_test#0'
debug: Inserted test_allocations_for_body@2.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_allocations_for_body@2.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_iteration.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_iteration.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_iteration.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_iteration.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_iteration_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_iteration_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_iteration_for_body@2.ops[10]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_iteration_for_body@2.ops[12]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_iteration_for_body@2.ops[16]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_iteration_for_body@2.ops[18]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_iteration_for_body@2.ops[21]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_iteration_for_body@2.ops[23]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_iteration_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_iteration_for_body@2.ops[5]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_iteration_for_body@2.ops[7]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_iteration_for_body@2.ops[10]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_iteration_for_body@2.ops[26]: 'l-store-copy extended%0#0 0'
debug: Replaced test_iteration_for_body@2.ops[29]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_iteration_for_body@2.ops[15]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_iteration_for_body@2.ops[22]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_iteration_for_body@2.ops[18]: 'l-store-copy arr#0 1'
debug: Replaced test_iteration_for_body@2.ops[30]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_iteration_after_for@4.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_iteration_after_for@4.ops[4]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_iteration_after_for@4.ops[6]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_iteration_after_for@4.ops[8]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_iteration_after_for@4.ops[11]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_iteration_after_for@4.ops[13]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_iteration_after_for@4.ops[14]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_iteration_after_for@4.ops[16]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_iteration_after_for@4.ops[19]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_iteration_after_for@4.ops[21]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_iteration_after_for@4.ops[27]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_iteration_after_for@4.ops[29]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_iteration_after_for@4.ops[31]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_iteration_after_for@4.ops[33]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_iteration_after_for@4.ops[36]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_iteration_after_for@4.ops[38]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_iteration_after_for@4.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_iteration_after_for@4.ops[26]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_iteration_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_iteration_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_iteration_for_body@6.ops[11]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_iteration_for_body@6.ops[13]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_iteration_for_body@6.ops[17]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_iteration_for_body@6.ops[19]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_iteration_for_body@6.ops[21]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_iteration_for_body@6.ops[23]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_iteration_for_body@6.ops[24]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@6.ops[26]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_for_body@6.ops[29]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_iteration_for_body@6.ops[31]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_iteration_for_body@6.ops[6]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_iteration_for_body@6.ops[9]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_iteration_for_body@6.ops[2]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_iteration_for_body@6.ops[9]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_iteration_for_body@6.ops[29]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@6.ops[36]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_after_for@8.ops[2]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_iteration_after_for@8.ops[4]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_iteration_after_for@8.ops[6]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_iteration_after_for@8.ops[8]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_iteration_after_for@8.ops[11]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_iteration_after_for@8.ops[13]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_iteration_for_header@9.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced test_iteration_for_header@9.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted test_iteration_for_body@10.ops[11]: 'l-store-copy array%value%1#1 0'
debug: Replaced test_iteration_for_body@10.ops[13]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted test_iteration_for_body@10.ops[17]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_iteration_for_body@10.ops[19]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_iteration_for_body@10.ops[21]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_iteration_for_body@10.ops[23]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_iteration_for_body@10.ops[30]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_iteration_for_body@10.ops[32]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_iteration_for_body@10.ops[6]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced test_iteration_for_body@10.ops[9]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted test_iteration_for_body@10.ops[27]: 'l-store-copy idx#0 0'
debug: Replaced test_iteration_for_body@10.ops[30]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_iteration_for_body@10.ops[25]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@10.ops[30]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_for_body@10.ops[2]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_iteration_for_body@10.ops[9]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_iteration_for_body@10.ops[5]: 'l-store-copy item_index_internal%1#0 1'
debug: Replaced test_iteration_for_body@10.ops[29]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted test_iteration_after_for@12.ops[2]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced test_iteration_after_for@12.ops[4]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted test_iteration_after_for@12.ops[6]: 'l-store-copy array%bytes_len%3#1 0'
debug: Replaced test_iteration_after_for@12.ops[8]: 'v-load array%bytes_len%3#1' with 'l-load array%bytes_len%3#1'
debug: Inserted test_iteration_after_for@12.ops[11]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced test_iteration_after_for@12.ops[13]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted test_iteration_after_for@12.ops[14]: 'l-store-copy array_length%2#0 0'
debug: Replaced test_iteration_after_for@12.ops[16]: 'v-load array_length%2#0' with 'l-load array_length%2#0'
debug: Inserted test_iteration_for_header@13.ops[3]: 'l-store-copy continue_looping%3#0 0'
debug: Replaced test_iteration_for_header@13.ops[5]: 'v-load continue_looping%3#0' with 'l-load continue_looping%3#0'
debug: Inserted test_iteration_for_body@14.ops[15]: 'l-store-copy array%value%2#1 0'
debug: Replaced test_iteration_for_body@14.ops[17]: 'v-load array%value%2#1' with 'l-load array%value%2#1'
debug: Inserted test_iteration_for_body@14.ops[21]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_iteration_for_body@14.ops[23]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_iteration_for_body@14.ops[25]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced test_iteration_for_body@14.ops[27]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted test_iteration_for_body@14.ops[28]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@14.ops[30]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_for_body@14.ops[33]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_iteration_for_body@14.ops[35]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_iteration_for_body@14.ops[10]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced test_iteration_for_body@14.ops[13]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted test_iteration_for_body@14.ops[3]: 'l-store-copy reverse_index_internal%2#0 0'
debug: Replaced test_iteration_for_body@14.ops[8]: 'v-load reverse_index_internal%2#0' with 'l-load reverse_index_internal%2#0'
debug: Inserted test_iteration_for_body@14.ops[7]: 'l-store-copy slot_contents%7#0 1'
debug: Replaced test_iteration_for_body@14.ops[14]: 'v-load slot_contents%7#0' with 'l-load slot_contents%7#0'
debug: Inserted test_iteration_for_body@14.ops[34]: 'l-store-copy value#0 0'
debug: Replaced test_iteration_for_body@14.ops[41]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_iteration_after_for@16.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_iteration_after_for@16.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_iteration_after_for@16.ops[8]: 'l-store-copy slot%1#0 0'
debug: Replaced test_iteration_after_for@16.ops[10]: 'v-load slot%1#0' with 'l-load slot%1#0'
debug: Inserted test_iteration_after_for@16.ops[11]: 'l-store-copy slot%1#0 0'
debug: Replaced test_iteration_after_for@16.ops[14]: 'v-load slot%1#0' with 'l-load slot%1#0'
debug: Inserted test_iteration_for_header@17.ops[3]: 'l-store-copy continue_looping%4#0 0'
debug: Replaced test_iteration_for_header@17.ops[5]: 'v-load continue_looping%4#0' with 'l-load continue_looping%4#0'
debug: Inserted test_iteration_for_body@18.ops[13]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_iteration_for_body@18.ops[15]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_iteration_for_body@18.ops[20]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[22]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_iteration_for_body@18.ops[24]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[26]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_iteration_for_body@18.ops[29]: 'l-store-copy len_%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[31]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_iteration_for_body@18.ops[33]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[35]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_iteration_for_body@18.ops[37]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[39]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_iteration_for_body@18.ops[42]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[44]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_iteration_for_body@18.ops[56]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_iteration_for_body@18.ops[58]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_iteration_for_body@18.ops[62]: 'l-store-copy slot_contents%8#0 0'
debug: Replaced test_iteration_for_body@18.ops[64]: 'v-load slot_contents%8#0' with 'l-load slot_contents%8#0'
debug: Inserted test_iteration_for_body@18.ops[67]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_iteration_for_body@18.ops[69]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_iteration_for_body@18.ops[5]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[8]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_iteration_for_body@18.ops[10]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_iteration_for_body@18.ops[13]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_iteration_for_body@18.ops[18]: 'l-store-copy encoded%3#0 0'
debug: Replaced test_iteration_for_body@18.ops[21]: 'v-load encoded%3#0' with 'l-load encoded%3#0'
debug: Inserted test_iteration_for_body@18.ops[51]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced test_iteration_for_body@18.ops[54]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted test_iteration_for_body@18.ops[56]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_iteration_for_body@18.ops[59]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_iteration_for_body@18.ops[75]: 'l-store-copy extended%1#0 0'
debug: Replaced test_iteration_for_body@18.ops[78]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted test_iteration_for_body@18.ops[64]: 'l-store-copy encoded%4#0 0'
debug: Replaced test_iteration_for_body@18.ops[71]: 'v-load encoded%4#0' with 'l-load encoded%4#0'
debug: Inserted test_iteration_for_body@18.ops[67]: 'l-store-copy native_arr#0 1'
debug: Replaced test_iteration_for_body@18.ops[79]: 'v-load native_arr#0' with 'l-load native_arr#0'
debug: Inserted test_iteration_for_body@18.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[21]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_iteration_for_body@18.ops[27]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_iteration_for_body@18.ops[45]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_iteration_for_body@18.ops[5]: 'l-store-copy i#0 1'
debug: Replaced test_iteration_for_body@18.ops[52]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_iteration_after_for@20.ops[9]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[11]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_iteration_after_for@20.ops[13]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[15]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_iteration_after_for@20.ops[18]: 'l-store-copy len_%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[20]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_iteration_after_for@20.ops[22]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[24]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_iteration_after_for@20.ops[26]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[28]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_iteration_after_for@20.ops[31]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[33]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_iteration_after_for@20.ops[34]: 'l-store-copy combined_arr#0 0'
debug: Replaced test_iteration_after_for@20.ops[36]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted test_iteration_after_for@20.ops[39]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_iteration_after_for@20.ops[41]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_iteration_after_for@20.ops[44]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_iteration_after_for@20.ops[46]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_iteration_after_for@20.ops[59]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced test_iteration_after_for@20.ops[61]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted test_iteration_after_for@20.ops[64]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_iteration_after_for@20.ops[66]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_iteration_after_for@20.ops[79]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced test_iteration_after_for@20.ops[81]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted test_iteration_after_for@20.ops[84]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_iteration_after_for@20.ops[86]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_iteration_after_for@20.ops[99]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced test_iteration_after_for@20.ops[101]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted test_iteration_after_for@20.ops[104]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_iteration_after_for@20.ops[106]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_iteration_after_for@20.ops[119]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced test_iteration_after_for@20.ops[121]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted test_iteration_after_for@20.ops[124]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_iteration_after_for@20.ops[126]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_iteration_after_for@20.ops[5]: 'l-store-copy slot_contents%9#0 0'
debug: Replaced test_iteration_after_for@20.ops[8]: 'v-load slot_contents%9#0' with 'l-load slot_contents%9#0'
debug: Inserted test_iteration_after_for@20.ops[55]: 'l-store-copy item_offset%0#0 0'
debug: Replaced test_iteration_after_for@20.ops[58]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted test_iteration_after_for@20.ops[76]: 'l-store-copy item_offset%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[79]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted test_iteration_after_for@20.ops[97]: 'l-store-copy item_offset%2#0 0'
debug: Replaced test_iteration_after_for@20.ops[100]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted test_iteration_after_for@20.ops[118]: 'l-store-copy item_offset%3#0 0'
debug: Replaced test_iteration_after_for@20.ops[121]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted test_iteration_after_for@20.ops[2]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[8]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_iteration_after_for@20.ops[52]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_iteration_after_for@20.ops[59]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_iteration_after_for@20.ops[74]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[81]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_iteration_after_for@20.ops[96]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced test_iteration_after_for@20.ops[103]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_iteration_after_for@20.ops[118]: 'l-store-copy array_head_and_tail%3#0 0'
debug: Replaced test_iteration_after_for@20.ops[125]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_iteration_after_for@20.ops[39]: 'l-store-copy combined_arr#0 0'
debug: Replaced test_iteration_after_for@20.ops[51]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted test_iteration_after_for@20.ops[14]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_iteration_after_for@20.ops[32]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_iteration_after_for@20.ops[53]: 'l-store-copy combined_arr#0 0'
debug: Replaced test_iteration_after_for@20.ops[75]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted test_iteration_after_for@20.ops[76]: 'l-store-copy combined_arr#0 0'
debug: Replaced test_iteration_after_for@20.ops[98]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted test_iteration_after_for@20.ops[99]: 'l-store-copy combined_arr#0 0'
debug: Replaced test_iteration_after_for@20.ops[121]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted test_quicksort.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_quicksort.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_quicksort.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_quicksort.ops[11]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_quicksort.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_quicksort.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_quicksort_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_quicksort_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_quicksort_for_body@2.ops[4]: 'l-store-copy b#0 0'
debug: Replaced test_quicksort_for_body@2.ops[6]: 'v-load b#0' with 'l-load b#0'
debug: Inserted test_quicksort_for_body@2.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_quicksort_for_body@2.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_quicksort_for_body@2.ops[20]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_quicksort_for_body@2.ops[22]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_quicksort_for_body@2.ops[26]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_quicksort_for_body@2.ops[28]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_quicksort_for_body@2.ops[31]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_quicksort_for_body@2.ops[33]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_quicksort_for_body@2.ops[12]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_quicksort_for_body@2.ops[15]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_quicksort_for_body@2.ops[17]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_quicksort_for_body@2.ops[20]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_quicksort_for_body@2.ops[36]: 'l-store-copy extended%0#0 0'
debug: Replaced test_quicksort_for_body@2.ops[39]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_quicksort_for_body@2.ops[25]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_quicksort_for_body@2.ops[32]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_quicksort_for_body@2.ops[28]: 'l-store-copy rnd#0 1'
debug: Replaced test_quicksort_for_body@2.ops[40]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted test_quicksort_after_for@4.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_quicksort_after_for@4.ops[4]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_quicksort_after_for@4.ops[6]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_quicksort_after_for@4.ops[8]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_quicksort_after_for@4.ops[11]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_quicksort_after_for@4.ops[13]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_quicksort_after_for@4.ops[14]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_quicksort_after_for@4.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_quicksort_after_for@4.ops[19]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_quicksort_after_for@4.ops[21]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_quicksort_after_for@4.ops[25]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_quicksort_after_for@4.ops[27]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_quicksort_after_for@4.ops[29]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_quicksort_after_for@4.ops[31]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_quicksort_after_for@4.ops[34]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_quicksort_after_for@4.ops[36]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_quicksort_after_for@4.ops[37]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_quicksort_after_for@4.ops[39]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_quicksort_after_for@4.ops[51]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_quicksort_after_for@4.ops[53]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_quicksort_after_for@4.ops[55]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_quicksort_after_for@4.ops[57]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_quicksort_after_for@4.ops[60]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_quicksort_after_for@4.ops[62]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_quicksort_after_for@4.ops[42]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_quicksort_after_for@4.ops[46]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_quicksort_after_for@4.ops[45]: 'l-store-copy rnd#0 1'
debug: Replaced test_quicksort_after_for@4.ops[51]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted test_quicksort_after_for@4.ops[24]: 'l-store-copy rnd#0 0'
debug: Replaced test_quicksort_after_for@4.ops[45]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted test_quicksort_after_for@4.ops[1]: 'l-store-copy rnd#0 0'
debug: Replaced test_quicksort_after_for@4.ops[24]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted test_quicksort_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_quicksort_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_quicksort_for_body@6.ops[11]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_quicksort_for_body@6.ops[13]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_quicksort_for_body@6.ops[17]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_quicksort_for_body@6.ops[19]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_quicksort_for_body@6.ops[21]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_quicksort_for_body@6.ops[23]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_quicksort_for_body@6.ops[24]: 'l-store-copy value#0 0'
debug: Replaced test_quicksort_for_body@6.ops[26]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_quicksort_for_body@6.ops[29]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_quicksort_for_body@6.ops[31]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_quicksort_for_body@6.ops[6]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_quicksort_for_body@6.ops[9]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_quicksort_for_body@6.ops[2]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_quicksort_for_body@6.ops[9]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_quicksort_for_body@6.ops[29]: 'l-store-copy value#0 0'
debug: Replaced test_quicksort_for_body@6.ops[36]: 'v-load value#0' with 'l-load value#0'
debug: Inserted _puya_lib.mem.new_slot.ops[2]: 'l-store-copy free_slot#0 0'
debug: Replaced _puya_lib.mem.new_slot.ops[6]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Inserted _puya_lib.mem.new_slot.ops[7]: 'l-store-copy free_slot#0 2'
debug: Replaced _puya_lib.mem.new_slot.ops[12]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Found 10 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_array_route@3 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_extend_route@4 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_multiple_append_route@5 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_overhead_route@6 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_too_long_route@7 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_copy_and_extend_route@8 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_evaluation_order_route@9 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_allocations_route@10 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_iteration_route@11 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_quicksort_route@12 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_if_else@19 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_inlined_test_cases.array.uint64.Contract.__algopy_default_create@22 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: Found 15 edge set/s for test_cases.array.uint64.quicksort_window
debug: Found 3 edge set/s for test_cases.array.uint64.add_x
debug: Found 3 edge set/s for test_cases.array.uint64.pop_x
debug: Found 3 edge set/s for test_cases.array.uint64.Contract.test_array_too_long
debug: Found 3 edge set/s for test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Found 3 edge set/s for test_cases.array.uint64.Contract.test_allocations
debug: Found 15 edge set/s for test_cases.array.uint64.Contract.test_iteration
debug: Found 6 edge set/s for test_cases.array.uint64.Contract.test_quicksort
debug: test_cases.array.uint64.quicksort_window f-stack entry: ['left#20', 'right#17']
debug: test_cases.array.uint64.quicksort_window f-stack on first store: ['left#0', 'right#0', 'pivot#0']
debug: test_cases.array.uint64.add_x f-stack entry: []
debug: test_cases.array.uint64.add_x f-stack on first store: ['i#0']
debug: test_cases.array.uint64.pop_x f-stack entry: []
debug: test_cases.array.uint64.pop_x f-stack on first store: ['_i#0']
debug: test_cases.array.uint64.Contract.test_array_too_long f-stack entry: []
debug: test_cases.array.uint64.Contract.test_array_too_long f-stack on first store: ['array#0', 'i#0']
debug: test_cases.array.uint64.Contract.test_array_copy_and_extend f-stack entry: []
debug: test_cases.array.uint64.Contract.test_array_copy_and_extend f-stack on first store: ['array#0', 'i#0']
debug: test_cases.array.uint64.Contract.test_allocations f-stack entry: []
debug: test_cases.array.uint64.Contract.test_allocations f-stack on first store: ['_i#0']
debug: test_cases.array.uint64.Contract.test_iteration f-stack entry: ['arc4_arr#0', 'array_length%0#0', 'array_length%1#0', 'i#0', 'item_index_internal%0#0', 'item_index_internal%1#0', 'last#0', 'native_arr#0', 'reverse_index_internal%2#0']
debug: test_cases.array.uint64.Contract.test_iteration f-stack on first store: ['arr#0', 'val#0']
debug: test_cases.array.uint64.Contract.test_quicksort f-stack entry: ['array_length%0#0', 'item_index_internal%1#0', 'last#0']
debug: test_cases.array.uint64.Contract.test_quicksort f-stack on first store: ['rnd#0', 'tmp%0#0', 'bytes_length%0#0', 'item_index_internal%0#0']
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@1
debug: removing explicit jump to fall-through block main_abi_routing@2
debug: removing explicit jump to fall-through block main_switch_case_default@13
debug: removing explicit jump to fall-through block main_switch_case_next@14
debug: removing explicit jump to fall-through block main_after_if_else@19
debug: removing explicit jump to fall-through block main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20
debug: removing explicit jump to fall-through block main_switch_case_default@17
debug: removing explicit jump to fall-through block main_switch_case_next@18
debug: removing explicit jump to fall-through block main_block@21
debug: removing explicit jump to fall-through block main_after_inlined_test_cases.array.uint64.Contract.__algopy_default_create@22
array/uint64.py:174 debug: optimizing TEAL subroutine test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
debug: removing explicit jump to fall-through block quicksort_window_while_top@1
debug: removing explicit jump to fall-through block quicksort_window_while_body@2
debug: removing explicit jump to fall-through block quicksort_window_while_top@3
debug: removing explicit jump to fall-through block quicksort_window_while_body@4
debug: removing explicit jump to fall-through block quicksort_window_while_top@6
debug: removing explicit jump to fall-through block quicksort_window_while_body@7
debug: removing explicit jump to fall-through block quicksort_window_if_body@8
debug: removing explicit jump to fall-through block quicksort_window_block@21
debug: removing explicit jump to fall-through block quicksort_window_after_while@22
debug: removing explicit jump to fall-through block quicksort_window_if_body@23
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@24
debug: removing explicit jump to fall-through block quicksort_window_if_body@25
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@26
debug: removing explicit jump to fall-through block quicksort_window_if_body@11
debug: removing explicit jump to fall-through block quicksort_window_if_body@12
debug: removing explicit jump to fall-through block quicksort_window_if_body@14
debug: removing explicit jump to fall-through block quicksort_window_if_body@17
debug: removing explicit jump to fall-through block quicksort_window_if_body@18
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@19
array/uint64.py:226 debug: optimizing TEAL subroutine test_cases.array.uint64.return_ref(arr: uint64, arr2: uint64) -> uint64:
array/uint64.py:233 debug: optimizing TEAL subroutine test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
debug: removing explicit jump to fall-through block add_x_for_header@1
debug: removing explicit jump to fall-through block add_x_for_body@2
debug: removing explicit jump to fall-through block add_x_for_footer@3
array/uint64.py:239 debug: optimizing TEAL subroutine test_cases.array.uint64.pop_x(arr: uint64, x: uint64) -> void:
debug: removing explicit jump to fall-through block pop_x_for_header@1
debug: removing explicit jump to fall-through block pop_x_for_body@2
debug: removing explicit jump to fall-through block pop_x_for_footer@3
array/uint64.py:245 debug: optimizing TEAL subroutine test_cases.array.uint64.append_length_and_return(arr: uint64) -> uint64:
array/uint64.py:5 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array() -> void:
array/uint64.py:41 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_extend() -> void:
array/uint64.py:53 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_multiple_append() -> void:
array/uint64.py:62 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.overhead() -> void:
array/uint64.py:66 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_too_long() -> void:
debug: removing explicit jump to fall-through block test_array_too_long_for_header@1
debug: removing explicit jump to fall-through block test_array_too_long_for_body@2
debug: removing explicit jump to fall-through block test_array_too_long_for_footer@3
array/uint64.py:75 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend() -> void:
debug: removing explicit jump to fall-through block test_array_copy_and_extend_for_header@1
debug: removing explicit jump to fall-through block test_array_copy_and_extend_for_body@2
debug: removing explicit jump to fall-through block test_array_copy_and_extend_for_footer@3
array/uint64.py:97 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_array_evaluation_order() -> void:
array/uint64.py:116 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_allocations(num: uint64) -> void:
debug: removing explicit jump to fall-through block test_allocations_for_header@1
debug: removing explicit jump to fall-through block test_allocations_for_body@2
debug: removing explicit jump to fall-through block test_allocations_for_footer@3
array/uint64.py:122 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_iteration() -> void:
debug: removing explicit jump to fall-through block test_iteration_for_header@1
debug: removing explicit jump to fall-through block test_iteration_for_body@2
debug: removing explicit jump to fall-through block test_iteration_for_footer@3
debug: removing explicit jump to fall-through block test_iteration_for_header@5
debug: removing explicit jump to fall-through block test_iteration_for_body@6
debug: removing explicit jump to fall-through block test_iteration_for_footer@7
debug: removing explicit jump to fall-through block test_iteration_for_header@9
debug: removing explicit jump to fall-through block test_iteration_for_body@10
debug: removing explicit jump to fall-through block test_iteration_for_footer@11
debug: removing explicit jump to fall-through block test_iteration_for_header@13
debug: removing explicit jump to fall-through block test_iteration_for_body@14
debug: removing explicit jump to fall-through block test_iteration_for_footer@15
debug: removing explicit jump to fall-through block test_iteration_for_header@17
debug: removing explicit jump to fall-through block test_iteration_for_body@18
debug: removing explicit jump to fall-through block test_iteration_for_footer@19
array/uint64.py:156 debug: optimizing TEAL subroutine test_cases.array.uint64.Contract.test_quicksort() -> void:
debug: removing explicit jump to fall-through block test_quicksort_for_header@1
debug: removing explicit jump to fall-through block test_quicksort_for_body@2
debug: removing explicit jump to fall-through block test_quicksort_for_footer@3
debug: removing explicit jump to fall-through block test_quicksort_for_header@5
debug: removing explicit jump to fall-through block test_quicksort_for_body@6
debug: removing explicit jump to fall-through block test_quicksort_for_footer@7
debug: optimizing TEAL subroutine _puya_lib.mem.new_slot() -> uint64:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing approval program of test_cases.array.static_size.StaticSizeContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__algopy_default_create in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.array.static_size.StaticSizeContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.static_size.StaticSizeContract
debug: lowering array IR nodes in clear program of test_cases.array.static_size.StaticSizeContract
debug: optimizing approval program of test_cases.array.static_size.StaticSizeContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable last_point.other.a#0
debug: Removing unused variable last_point.other.b#0
debug: Removing unused variable last_point.other.c#0
debug: Removing unused variable last_point.other.d#0
debug: Removing unused variable point.other.a#0
debug: Removing unused variable point.other.b#0
debug: Removing unused variable point.other.c#0
debug: Removing unused variable point.other.d#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%16#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%20#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%24#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%33#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%4#1
debug: Removing unused variable array%sub_item%6#1
debug: Removing unused variable array%sub_item%7#1
debug: Removing unused variable array%sub_item%8#1
debug: Removing unused variable array%sub_item%13#1
debug: Removing unused variable array%sub_item%15#1
debug: Removing unused variable array%sub_item%16#1
debug: Removing unused variable array%sub_item%17#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%9#1
debug: Removing unused variable array%sub_item%11#1
debug: Removing unused variable array%sub_item%13#1
debug: Removing unused variable array%sub_item%16#1
debug: Removing unused variable array%sub_item%17#1
debug: Removing unused variable array%sub_item%18#1
debug: Removing unused variable array%sub_item%20#1
debug: Removing unused variable array%sub_item%22#1
debug: Removing unused variable array%sub_item%24#1
debug: Removing unused variable array%sub_item%25#1
debug: Removing unused variable array%sub_item%27#1
debug: Removing unused variable array%sub_item%29#1
debug: Removing unused variable array%sub_item%31#1
debug: Removing unused variable array%sub_item%33#1
debug: Removing unused variable array%sub_item%34#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%3#1
debug: Removing unused variable array%sub_item%5#1
debug: Removing unused variable array%sub_item%12#1
debug: Removing unused variable array%sub_item%14#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%10#1
debug: Removing unused variable array%sub_item%12#1
debug: Removing unused variable array%sub_item%19#1
debug: Removing unused variable array%sub_item%21#1
debug: Removing unused variable array%sub_item%23#1
debug: Removing unused variable array%sub_item%28#1
debug: Removing unused variable array%sub_item%30#1
debug: Removing unused variable array%sub_item%32#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.array.static_size.StaticSizeContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.static_size.StaticSizeContract
debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init, []
array/static_size.py:117 debug: auto reserving slots in test_cases.array.static_size.path_length, []
array/static_size.py:25 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.__init__, []
array/static_size.py:28 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.test_array, []
array/static_size.py:45 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple, []
array/static_size.py:51 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple, []
array/static_size.py:59 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.test_bool_array, []
array/static_size.py:73 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.test_arc4_conversion, []
array/static_size.py:91 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.sum_array, []
array/static_size.py:102 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.xtra, []
array/static_size.py:112 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.more, []
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Using dynamic slot allocation strategy
debug: removing local static slots in clear program of test_cases.array.static_size.StaticSizeContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.path_length
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.path_length using strategy RootOperandGrouping
debug: Coalescing length#0 with [length#7, length#3, length#4]
debug: Coalescing point_idx#0 with [point_idx#5, point_idx#1, point_idx#2]
debug: Coalescing dx#0 with [dx#6, dx#1, dx#3]
debug: Coalescing dy#0 with [dy#5, dy#1, dy#2]
debug: Coalescing resulted in 33 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.path_length
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.__init__
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.__init__
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.test_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.test_array using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 15 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.test_array
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.test_bool_array using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing count#0 with [count#6, count#1, count#2, count#3]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.test_arc4_conversion using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing count#0 with [count#6, count#1, count#2, count#3]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing arc4_arr#0 with [arc4_arr#1]
debug: Coalescing resulted in 30 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.sum_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.sum_array using strategy RootOperandGrouping
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.sum_array
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.xtra
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.xtra using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.xtra
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.more
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.more using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.more
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 with [test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#1, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#2, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#3, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#4, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#5, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#6, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#7]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 23 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to array/out_unoptimized/StaticSizeContract.ir/StaticSizeContract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to array/out_unoptimized/StaticSizeContract.ir/StaticSizeContract.clear.0.destructured.ir
debug: Inserted main.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced main.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted path_length.ops[11]: 'l-store-copy array%value%0#1 0'
debug: Replaced path_length.ops[13]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted path_length.ops[22]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced path_length.ops[24]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted path_length.ops[35]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced path_length.ops[37]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted path_length.ops[39]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced path_length.ops[41]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted path_length.ops[44]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced path_length.ops[46]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted path_length.ops[6]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced path_length.ops[9]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted path_length.ops[27]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced path_length.ops[31]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted path_length.ops[2]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced path_length.ops[9]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted path_length.ops[16]: 'l-store-copy array%value%0#1 0'
debug: Replaced path_length.ops[21]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted path_length.ops[20]: 'l-store-copy array%sub_item%0#1 1'
debug: Replaced path_length.ops[32]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted path_length_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced path_length_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted path_length_for_body@2.ops[11]: 'l-store-copy array%value%1#1 0'
debug: Replaced path_length_for_body@2.ops[13]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted path_length_for_body@2.ops[22]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced path_length_for_body@2.ops[24]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted path_length_for_body@2.ops[38]: 'l-store-copy tmp%1#0 0'
debug: Replaced path_length_for_body@2.ops[40]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted path_length_for_body@2.ops[6]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced path_length_for_body@2.ops[9]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted path_length_for_body@2.ops[35]: 'l-store-copy reinterpret_biguint%1#0 0'
debug: Replaced path_length_for_body@2.ops[38]: 'v-load reinterpret_biguint%1#0' with 'l-load reinterpret_biguint%1#0'
debug: Inserted path_length_for_body@2.ops[27]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced path_length_for_body@2.ops[31]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted path_length_for_body@2.ops[30]: 'l-store-copy point.x#0 1'
debug: Replaced path_length_for_body@2.ops[34]: 'v-load point.x#0' with 'l-load point.x#0'
debug: Inserted path_length_for_body@2.ops[35]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced path_length_for_body@2.ops[40]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted path_length_for_body@2.ops[2]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced path_length_for_body@2.ops[9]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted path_length_for_body@2.ops[16]: 'l-store-copy array%value%1#1 0'
debug: Replaced path_length_for_body@2.ops[21]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted path_length_for_body@2.ops[20]: 'l-store-copy array%sub_item%9#1 1'
debug: Replaced path_length_for_body@2.ops[32]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted path_length_if_body@3.ops[5]: 'l-store-copy tmp%3#0 0'
debug: Replaced path_length_if_body@3.ops[8]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted path_length_if_body@3.ops[2]: 'l-store-copy tmp%2#0 0'
debug: Replaced path_length_if_body@3.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted path_length_else_body@4.ops[5]: 'l-store-copy tmp%5#0 0'
debug: Replaced path_length_else_body@4.ops[8]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted path_length_else_body@4.ops[2]: 'l-store-copy tmp%4#0 0'
debug: Replaced path_length_else_body@4.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted path_length_after_if_else@5.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced path_length_after_if_else@5.ops[5]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted path_length_after_if_else@8.ops[1]: 'l-store-copy dx#0 0'
debug: Replaced path_length_after_if_else@8.ops[2]: 'v-load dx#0' with 'l-load dx#0'
debug: Inserted path_length_after_if_else@8.ops[6]: 'l-store-copy dy#0 0'
debug: Replaced path_length_after_if_else@8.ops[7]: 'v-load dy#0' with 'l-load dy#0'
debug: Inserted path_length_after_if_else@8.ops[13]: 'l-store-copy tmp%9#0 0'
debug: Replaced path_length_after_if_else@8.ops[15]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted path_length_after_if_else@8.ops[9]: 'l-store-copy tmp%8#0 0'
debug: Replaced path_length_after_if_else@8.ops[12]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted path_length_after_if_else@8.ops[18]: 'l-store-copy tmp%10#0 0'
debug: Replaced path_length_after_if_else@8.ops[21]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted path_length_after_if_else@8.ops[4]: 'l-store-copy tmp%7#0 0'
debug: Replaced path_length_after_if_else@8.ops[12]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_array.ops[42]: 'l-store-copy array%encoded%3#1 0'
debug: Replaced test_array.ops[44]: 'v-load array%encoded%3#1' with 'l-load array%encoded%3#1'
debug: Inserted test_array.ops[47]: 'l-store-copy array%encoded%4#1 0'
debug: Replaced test_array.ops[49]: 'v-load array%encoded%4#1' with 'l-load array%encoded%4#1'
debug: Inserted test_array.ops[81]: 'l-store-copy array%encoded%9#1 0'
debug: Replaced test_array.ops[83]: 'v-load array%encoded%9#1' with 'l-load array%encoded%9#1'
debug: Inserted test_array.ops[86]: 'l-store-copy array%encoded%10#1 0'
debug: Replaced test_array.ops[88]: 'v-load array%encoded%10#1' with 'l-load array%encoded%10#1'
debug: Inserted test_array.ops[120]: 'l-store-copy array%encoded%15#1 0'
debug: Replaced test_array.ops[122]: 'v-load array%encoded%15#1' with 'l-load array%encoded%15#1'
debug: Inserted test_array.ops[125]: 'l-store-copy array%encoded%16#1 0'
debug: Replaced test_array.ops[127]: 'v-load array%encoded%16#1' with 'l-load array%encoded%16#1'
debug: Inserted test_array.ops[134]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_array.ops[136]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_array.ops[139]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array.ops[141]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array.ops[24]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_array.ops[27]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_array.ops[32]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_array.ops[35]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_array.ops[40]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_array.ops[43]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_array.ops[55]: 'l-store-copy array%encoded%5#1 0'
debug: Replaced test_array.ops[58]: 'v-load array%encoded%5#1' with 'l-load array%encoded%5#1'
debug: Inserted test_array.ops[67]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_array.ops[70]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_array.ops[75]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_array.ops[78]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_array.ops[83]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_array.ops[86]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_array.ops[98]: 'l-store-copy array%encoded%11#1 0'
debug: Replaced test_array.ops[101]: 'v-load array%encoded%11#1' with 'l-load array%encoded%11#1'
debug: Inserted test_array.ops[110]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced test_array.ops[113]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted test_array.ops[118]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced test_array.ops[121]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted test_array.ops[126]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced test_array.ops[129]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted test_array.ops[141]: 'l-store-copy array%encoded%17#1 0'
debug: Replaced test_array.ops[144]: 'v-load array%encoded%17#1' with 'l-load array%encoded%17#1'
debug: Inserted test_array.ops[154]: 'l-store-copy slot%0#0 0'
debug: Replaced test_array.ops[157]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_array.ops[21]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_array.ops[27]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_array.ops[30]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_array.ops[36]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_array.ops[39]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_array.ops[45]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_array.ops[67]: 'l-store-copy array%encoded%6#1 0'
debug: Replaced test_array.ops[73]: 'v-load array%encoded%6#1' with 'l-load array%encoded%6#1'
debug: Inserted test_array.ops[76]: 'l-store-copy array%encoded%7#1 0'
debug: Replaced test_array.ops[82]: 'v-load array%encoded%7#1' with 'l-load array%encoded%7#1'
debug: Inserted test_array.ops[85]: 'l-store-copy array%encoded%8#1 0'
debug: Replaced test_array.ops[91]: 'v-load array%encoded%8#1' with 'l-load array%encoded%8#1'
debug: Inserted test_array.ops[113]: 'l-store-copy array%encoded%12#1 0'
debug: Replaced test_array.ops[119]: 'v-load array%encoded%12#1' with 'l-load array%encoded%12#1'
debug: Inserted test_array.ops[122]: 'l-store-copy array%encoded%13#1 0'
debug: Replaced test_array.ops[128]: 'v-load array%encoded%13#1' with 'l-load array%encoded%13#1'
debug: Inserted test_array.ops[131]: 'l-store-copy array%encoded%14#1 0'
debug: Replaced test_array.ops[137]: 'v-load array%encoded%14#1' with 'l-load array%encoded%14#1'
debug: Inserted test_array.ops[158]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_array.ops[165]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_array.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_array.ops[33]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_array.ops[6]: 'l-store-copy tmp%1#0 1'
debug: Replaced test_array.ops[43]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_array.ops[65]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_array.ops[109]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_array.ops[112]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_array.ops[156]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_array.ops[5]: 'l-store-copy tmp%2#0 2'
debug: Replaced test_array.ops[54]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_array.ops[4]: 'l-store-copy tmp%3#0 3'
debug: Replaced test_array.ops[60]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_array.ops[16]: 'l-store-copy tmp%4#0 4'
debug: Replaced test_array.ops[84]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_array.ops[15]: 'l-store-copy tmp%5#0 5'
debug: Replaced test_array.ops[94]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_array.ops[14]: 'l-store-copy tmp%6#0 6'
debug: Replaced test_array.ops[105]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_array.ops[13]: 'l-store-copy tmp%7#0 7'
debug: Replaced test_array.ops[111]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_array.ops[25]: 'l-store-copy tmp%8#0 8'
debug: Replaced test_array.ops[135]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_array.ops[24]: 'l-store-copy tmp%9#0 9'
debug: Replaced test_array.ops[145]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_array.ops[23]: 'l-store-copy tmp%10#0 10'
debug: Replaced test_array.ops[156]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_array.ops[22]: 'l-store-copy tmp%11#0 11'
debug: Replaced test_array.ops[162]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_array_for_body@2.ops[11]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_array_for_body@2.ops[13]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_array_for_body@2.ops[17]: 'l-store-copy array%sub_item%14#1 0'
debug: Replaced test_array_for_body@2.ops[19]: 'v-load array%sub_item%14#1' with 'l-load array%sub_item%14#1'
debug: Inserted test_array_for_body@2.ops[21]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced test_array_for_body@2.ops[23]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted test_array_for_body@2.ops[32]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_array_for_body@2.ops[34]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_array_for_body@2.ops[47]: 'l-store-copy array%value%1#1 0'
debug: Replaced test_array_for_body@2.ops[49]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted test_array_for_body@2.ops[53]: 'l-store-copy array%sub_item%26#1 0'
debug: Replaced test_array_for_body@2.ops[55]: 'v-load array%sub_item%26#1' with 'l-load array%sub_item%26#1'
debug: Inserted test_array_for_body@2.ops[56]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_array_for_body@2.ops[58]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_array_for_body@2.ops[66]: 'l-store-copy tmp%26#0 0'
debug: Replaced test_array_for_body@2.ops[68]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted test_array_for_body@2.ops[74]: 'l-store-copy tmp%28#0 0'
debug: Replaced test_array_for_body@2.ops[76]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted test_array_for_body@2.ops[89]: 'l-store-copy array%value%2#1 0'
debug: Replaced test_array_for_body@2.ops[91]: 'v-load array%value%2#1' with 'l-load array%value%2#1'
debug: Inserted test_array_for_body@2.ops[95]: 'l-store-copy array%sub_item%35#1 0'
debug: Replaced test_array_for_body@2.ops[97]: 'v-load array%sub_item%35#1' with 'l-load array%sub_item%35#1'
debug: Inserted test_array_for_body@2.ops[98]: 'l-store-copy tmp%34#0 0'
debug: Replaced test_array_for_body@2.ops[100]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted test_array_for_body@2.ops[116]: 'l-store-copy tmp%37#0 0'
debug: Replaced test_array_for_body@2.ops[118]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted test_array_for_body@2.ops[124]: 'l-store-copy tmp%39#0 0'
debug: Replaced test_array_for_body@2.ops[126]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted test_array_for_body@2.ops[6]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_array_for_body@2.ops[9]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_array_for_body@2.ops[29]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_array_for_body@2.ops[32]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_array_for_body@2.ops[44]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced test_array_for_body@2.ops[47]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted test_array_for_body@2.ops[73]: 'l-store-copy tmp%27#0 0'
debug: Replaced test_array_for_body@2.ops[76]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_array_for_body@2.ops[88]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced test_array_for_body@2.ops[91]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted test_array_for_body@2.ops[117]: 'l-store-copy tmp%36#0 0'
debug: Replaced test_array_for_body@2.ops[120]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted test_array_for_body@2.ops[126]: 'l-store-copy tmp%38#0 0'
debug: Replaced test_array_for_body@2.ops[129]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted test_array_for_body@2.ops[111]: 'l-store-copy i#0 0'
debug: Replaced test_array_for_body@2.ops[115]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_for_body@2.ops[2]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_array_for_body@2.ops[9]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_array_for_body@2.ops[26]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_array_for_body@2.ops[33]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_array_for_body@2.ops[42]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_array_for_body@2.ops[49]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_array_for_body@2.ops[87]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_array_for_body@2.ops[94]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_array_for_body@2.ops[118]: 'l-store-copy tmp%35#0 1'
debug: Replaced test_array_for_body@2.ops[125]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted test_array_for_body@2.ops[68]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced test_array_for_body@2.ops[79]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted test_array_for_body@2.ops[29]: 'l-store-copy i#0 1'
debug: Replaced test_array_for_body@2.ops[45]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_for_body@2.ops[72]: 'l-store-copy i#0 1'
debug: Replaced test_array_for_body@2.ops[92]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_for_body@2.ops[116]: 'l-store-copy reinterpret_biguint%1#0 0'
debug: Replaced test_array_for_body@2.ops[138]: 'v-load reinterpret_biguint%1#0' with 'l-load reinterpret_biguint%1#0'
debug: Inserted test_array_for_body@2.ops[5]: 'l-store-copy i#0 1'
debug: Replaced test_array_for_body@2.ops[29]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_for_body@2.ops[47]: 'l-store-copy i#0 1'
debug: Replaced test_array_for_body@2.ops[73]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_for_body@2.ops[95]: 'l-store-copy i#0 1'
debug: Replaced test_array_for_body@2.ops[121]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_array_for_body@2.ops[1]: 'l-store-copy path#0 0'
debug: Replaced test_array_for_body@2.ops[43]: 'v-load path#0' with 'l-load path#0'
debug: Inserted test_array_for_body@2.ops[44]: 'l-store-copy path#0 1'
debug: Replaced test_array_for_body@2.ops[92]: 'v-load path#0' with 'l-load path#0'
debug: Inserted test_array_after_for@4.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_array_after_for@4.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_array_after_for@4.ops[14]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_array_after_for@4.ops[16]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_array_after_for@4.ops[18]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_array_after_for@4.ops[20]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_array_after_for@4.ops[23]: 'l-store-copy len_%0#0 0'
debug: Replaced test_array_after_for@4.ops[25]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_array_after_for@4.ops[27]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_array_after_for@4.ops[29]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_array_after_for@4.ops[31]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_array_after_for@4.ops[33]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_array_after_for@4.ops[45]: 'l-store-copy tmp%40#0 0'
debug: Replaced test_array_after_for@4.ops[47]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted test_array_after_for@4.ops[10]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_array_after_for@4.ops[13]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_array_after_for@4.ops[7]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_array_after_for@4.ops[13]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_array_after_for@4.ops[38]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_array_after_for@4.ops[44]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_array_after_for@4.ops[19]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_array_after_for@4.ops[37]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_array_after_for@4.ops[10]: 'l-store-copy path#0 1'
debug: Replaced test_array_after_for@4.ops[48]: 'v-load path#0' with 'l-load path#0'
debug: Inserted test_extend_from_tuple.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_extend_from_tuple.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_extend_from_tuple.ops[23]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_extend_from_tuple.ops[25]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_extend_from_tuple.ops[29]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_extend_from_tuple.ops[31]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_extend_from_tuple.ops[34]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_extend_from_tuple.ops[36]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_extend_from_tuple.ops[44]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_extend_from_tuple.ops[46]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_extend_from_tuple.ops[55]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_extend_from_tuple.ops[57]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_extend_from_tuple.ops[59]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_extend_from_tuple.ops[61]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_extend_from_tuple.ops[64]: 'l-store-copy len_%0#0 0'
debug: Replaced test_extend_from_tuple.ops[66]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_extend_from_tuple.ops[68]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_extend_from_tuple.ops[70]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_extend_from_tuple.ops[72]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_extend_from_tuple.ops[74]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_extend_from_tuple.ops[77]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_extend_from_tuple.ops[79]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_extend_from_tuple.ops[11]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_extend_from_tuple.ops[14]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_extend_from_tuple.ops[20]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_extend_from_tuple.ops[23]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_extend_from_tuple.ops[39]: 'l-store-copy extended%0#0 0'
debug: Replaced test_extend_from_tuple.ops[42]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_extend_from_tuple.ops[54]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_extend_from_tuple.ops[57]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_extend_from_tuple.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_extend_from_tuple.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_extend_from_tuple.ops[52]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_extend_from_tuple.ops[58]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_extend_from_tuple.ops[17]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_extend_from_tuple.ops[24]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_extend_from_tuple.ops[30]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_extend_from_tuple.ops[37]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_extend_from_tuple.ops[33]: 'l-store-copy arr#0 1'
debug: Replaced test_extend_from_tuple.ops[45]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_extend_from_tuple.ops[46]: 'l-store-copy arr#0 1'
debug: Replaced test_extend_from_tuple.ops[58]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_extend_from_tuple.ops[68]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_extend_from_tuple.ops[86]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_extend_from_tuple.ops[8]: 'l-store-copy arr#0 0'
debug: Replaced test_extend_from_tuple.ops[33]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_extend_from_arc4_tuple.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[15]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_extend_from_arc4_tuple.ops[17]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_extend_from_arc4_tuple.ops[21]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[23]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[26]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_extend_from_arc4_tuple.ops[28]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_extend_from_arc4_tuple.ops[36]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[38]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[47]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[49]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[51]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[53]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[56]: 'l-store-copy len_%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[58]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[60]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[62]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[64]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[66]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[69]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[71]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[11]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_extend_from_arc4_tuple.ops[14]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_extend_from_arc4_tuple.ops[30]: 'l-store-copy extended%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[33]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[45]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[48]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_extend_from_arc4_tuple.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[43]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[49]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_extend_from_arc4_tuple.ops[20]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[27]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_extend_from_arc4_tuple.ops[23]: 'l-store-copy arr#0 1'
debug: Replaced test_extend_from_arc4_tuple.ops[35]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_extend_from_arc4_tuple.ops[36]: 'l-store-copy arr#0 1'
debug: Replaced test_extend_from_arc4_tuple.ops[48]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_extend_from_arc4_tuple.ops[8]: 'l-store-copy arr#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[23]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_extend_from_arc4_tuple.ops[59]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_extend_from_arc4_tuple.ops[77]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_bool_array.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_bool_array.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_bool_array.ops[7]: 'l-store-copy arr#0 0'
debug: Replaced test_bool_array.ops[9]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array.ops[11]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_bool_array.ops[13]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_bool_array.ops[15]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_bool_array.ops[17]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_bool_array.ops[20]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_bool_array.ops[22]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_bool_array.ops[23]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_bool_array.ops[25]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_bool_array.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_bool_array.ops[30]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_bool_array.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_bool_array.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_bool_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_bool_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_bool_array_for_body@2.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_bool_array_for_body@2.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_bool_array_for_body@2.ops[21]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_bool_array_for_body@2.ops[23]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_bool_array_for_body@2.ops[27]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_bool_array_for_body@2.ops[29]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_bool_array_for_body@2.ops[32]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_bool_array_for_body@2.ops[34]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_bool_array_for_body@2.ops[13]: 'l-store-copy array%encoded_bit%0#1 0'
debug: Replaced test_bool_array_for_body@2.ops[16]: 'v-load array%encoded_bit%0#1' with 'l-load array%encoded_bit%0#1'
debug: Inserted test_bool_array_for_body@2.ops[18]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_bool_array_for_body@2.ops[21]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_bool_array_for_body@2.ops[37]: 'l-store-copy extended%0#0 0'
debug: Replaced test_bool_array_for_body@2.ops[40]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_bool_array_for_body@2.ops[8]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_bool_array_for_body@2.ops[12]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_bool_array_for_body@2.ops[27]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_bool_array_for_body@2.ops[34]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_bool_array_for_body@2.ops[30]: 'l-store-copy arr#0 1'
debug: Replaced test_bool_array_for_body@2.ops[42]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array_after_for@4.ops[2]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_bool_array_after_for@4.ops[4]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_bool_array_after_for@4.ops[6]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_bool_array_after_for@4.ops[8]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_bool_array_after_for@4.ops[11]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_bool_array_after_for@4.ops[13]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_bool_array_after_for@4.ops[14]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_bool_array_after_for@4.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_bool_array_after_for@4.ops[19]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_bool_array_after_for@4.ops[21]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_bool_array_after_for@4.ops[27]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_bool_array_after_for@4.ops[29]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_bool_array_after_for@4.ops[31]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_bool_array_after_for@4.ops[33]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_bool_array_after_for@4.ops[36]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_bool_array_after_for@4.ops[38]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_bool_array_after_for@4.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_bool_array_after_for@4.ops[26]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_bool_array_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_bool_array_for_body@6.ops[11]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_bool_array_for_body@6.ops[13]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_bool_array_for_body@6.ops[17]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_bool_array_for_body@6.ops[19]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_bool_array_for_body@6.ops[21]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_bool_array_for_body@6.ops[23]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_bool_array_for_body@6.ops[6]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_bool_array_for_body@6.ops[9]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_bool_array_for_body@6.ops[25]: 'l-store-copy val#0 0'
debug: Replaced test_bool_array_for_body@6.ops[29]: 'v-load val#0' with 'l-load val#0'
debug: Inserted test_bool_array_for_body@6.ops[2]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_bool_array_for_body@6.ops[9]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_bool_array_if_body@7.ops[3]: 'l-store-copy count#0 0'
debug: Replaced test_bool_array_if_body@7.ops[5]: 'v-load count#0' with 'l-load count#0'
debug: Inserted test_arc4_conversion.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_arc4_conversion.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_arc4_conversion.ops[7]: 'l-store-copy arr#0 0'
debug: Replaced test_arc4_conversion.ops[9]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_arc4_conversion.ops[11]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_arc4_conversion.ops[13]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_arc4_conversion.ops[15]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced test_arc4_conversion.ops[17]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted test_arc4_conversion.ops[20]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced test_arc4_conversion.ops[22]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted test_arc4_conversion.ops[23]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_arc4_conversion.ops[25]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_arc4_conversion.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_arc4_conversion.ops[30]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_arc4_conversion.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_arc4_conversion.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_arc4_conversion_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_arc4_conversion_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_arc4_conversion_for_body@2.ops[10]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[12]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_arc4_conversion_for_body@2.ops[16]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[18]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_arc4_conversion_for_body@2.ops[21]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[23]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_arc4_conversion_for_body@2.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[5]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_arc4_conversion_for_body@2.ops[7]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[10]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_arc4_conversion_for_body@2.ops[26]: 'l-store-copy extended%0#0 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[29]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_arc4_conversion_for_body@2.ops[15]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_arc4_conversion_for_body@2.ops[22]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_arc4_conversion_for_body@2.ops[18]: 'l-store-copy arr#0 1'
debug: Replaced test_arc4_conversion_for_body@2.ops[30]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_arc4_conversion_after_for@4.ops[2]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[4]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_arc4_conversion_after_for@4.ops[6]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[8]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted test_arc4_conversion_after_for@4.ops[11]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[13]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted test_arc4_conversion_after_for@4.ops[14]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[16]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_arc4_conversion_after_for@4.ops[19]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[21]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_arc4_conversion_after_for@4.ops[27]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[29]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted test_arc4_conversion_after_for@4.ops[31]: 'l-store-copy array%bytes_len%2#1 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[33]: 'v-load array%bytes_len%2#1' with 'l-load array%bytes_len%2#1'
debug: Inserted test_arc4_conversion_after_for@4.ops[36]: 'l-store-copy array%array_len%2#1 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[38]: 'v-load array%array_len%2#1' with 'l-load array%array_len%2#1'
debug: Inserted test_arc4_conversion_after_for@4.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_arc4_conversion_after_for@4.ops[26]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_arc4_conversion_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_arc4_conversion_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_arc4_conversion_for_body@6.ops[11]: 'l-store-copy array%value%0#1 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[13]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted test_arc4_conversion_for_body@6.ops[17]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[19]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_arc4_conversion_for_body@6.ops[20]: 'l-store-copy val#0 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[22]: 'v-load val#0' with 'l-load val#0'
debug: Inserted test_arc4_conversion_for_body@6.ops[6]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[9]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted test_arc4_conversion_for_body@6.ops[26]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[30]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_arc4_conversion_for_body@6.ops[2]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced test_arc4_conversion_for_body@6.ops[9]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted test_arc4_conversion_if_body@7.ops[3]: 'l-store-copy count#0 0'
debug: Replaced test_arc4_conversion_if_body@7.ops[5]: 'v-load count#0' with 'l-load count#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[6]: 'l-store-copy arc4_arr#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[8]: 'v-load arc4_arr#0' with 'l-load arc4_arr#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[17]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[19]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[21]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[23]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[26]: 'l-store-copy len_%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[28]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[30]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[32]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[34]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[36]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[39]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[41]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[42]: 'l-store-copy arc4_arr#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[44]: 'v-load arc4_arr#0' with 'l-load arc4_arr#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[13]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[16]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[10]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[16]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_arc4_conversion_after_for@10.ops[22]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_arc4_conversion_after_for@10.ops[40]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted sum_array.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced sum_array.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted sum_array.ops[13]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced sum_array.ops[15]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted sum_array.ops[18]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced sum_array.ops[20]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted sum_array.ops[29]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced sum_array.ops[31]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted sum_array.ops[33]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced sum_array.ops[35]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted sum_array.ops[38]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced sum_array.ops[40]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted sum_array.ops[21]: 'l-store-copy extended%0#0 0'
debug: Replaced sum_array.ops[24]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted sum_array.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced sum_array.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted sum_array.ops[8]: 'l-store-copy arr#0 0'
debug: Replaced sum_array.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted sum_array.ops[12]: 'l-store-copy expr_value_trimmed%0#0 1'
debug: Replaced sum_array.ops[19]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted sum_array.ops[27]: 'l-store-copy arr#0 1'
debug: Replaced sum_array.ops[32]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted sum_array.ops[15]: 'l-store-copy arr#0 1'
debug: Replaced sum_array.ops[27]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted sum_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_array_for_body@2.ops[11]: 'l-store-copy array%value%0#1 0'
debug: Replaced sum_array_for_body@2.ops[13]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted sum_array_for_body@2.ops[17]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced sum_array_for_body@2.ops[19]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted sum_array_for_body@2.ops[20]: 'l-store-copy item#0 0'
debug: Replaced sum_array_for_body@2.ops[22]: 'v-load item#0' with 'l-load item#0'
debug: Inserted sum_array_for_body@2.ops[6]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced sum_array_for_body@2.ops[9]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted sum_array_for_body@2.ops[25]: 'l-store-copy tmp%0#0 0'
debug: Replaced sum_array_for_body@2.ops[28]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_array_for_body@2.ops[2]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced sum_array_for_body@2.ops[9]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted xtra.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced xtra.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted xtra.ops[11]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced xtra.ops[14]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted xtra.ops[21]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced xtra.ops[24]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted xtra.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced xtra.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted xtra.ops[30]: 'l-store-copy tmp%2#0 0'
debug: Replaced xtra.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted xtra.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced xtra.ops[35]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted xtra.ops[24]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced xtra.ops[35]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted xtra.ops[18]: 'l-store-copy tmp%0#0 0'
debug: Replaced xtra.ops[35]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted more.ops[10]: 'l-store-copy to_encode%0#0 0'
debug: Replaced more.ops[12]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted more.ops[32]: 'l-store-copy to_encode%1#0 0'
debug: Replaced more.ops[34]: 'v-load to_encode%1#0' with 'l-load to_encode%1#0'
debug: Inserted more.ops[40]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced more.ops[42]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted more.ops[45]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced more.ops[47]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted more.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced more.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted more.ops[19]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced more.ops[22]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted more.ops[27]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced more.ops[30]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted more.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced more.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted more.ops[30]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced more.ops[35]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted more.ops[41]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced more.ops[49]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted more.ops[22]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced more.ops[35]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted more.ops[16]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced more.ops[46]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted approval_program_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced approval_program_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted approval_program_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced approval_program_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted approval_program_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced approval_program_abi_routing@2.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted approval_program_test_array_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced approval_program_test_array_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted approval_program_test_array_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced approval_program_test_array_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted approval_program_test_array_route@3.ops[11]: 'l-store-copy tmp%5#0 0'
debug: Replaced approval_program_test_array_route@3.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted approval_program_test_array_route@3.ops[16]: 'l-store-copy tmp%6#0 0'
debug: Replaced approval_program_test_array_route@3.ops[18]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted approval_program_test_array_route@3.ops[23]: 'l-store-copy reinterpret_bytes[8]%1#0 0'
debug: Replaced approval_program_test_array_route@3.ops[25]: 'v-load reinterpret_bytes[8]%1#0' with 'l-load reinterpret_bytes[8]%1#0'
debug: Inserted approval_program_test_array_route@3.ops[31]: 'l-store-copy reinterpret_bytes[8]%3#0 0'
debug: Replaced approval_program_test_array_route@3.ops[33]: 'v-load reinterpret_bytes[8]%3#0' with 'l-load reinterpret_bytes[8]%3#0'
debug: Inserted approval_program_test_array_route@3.ops[41]: 'l-store-copy to_encode%0#0 0'
debug: Replaced approval_program_test_array_route@3.ops[43]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted approval_program_test_array_route@3.ops[49]: 'l-store-copy tmp%9#0 0'
debug: Replaced approval_program_test_array_route@3.ops[51]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted approval_program_test_array_route@3.ops[54]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_test_array_route@3.ops[56]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_test_array_route@3.ops[45]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced approval_program_test_array_route@3.ops[48]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted approval_program_test_array_route@3.ops[35]: 'l-store-copy tmp%8#0 0'
debug: Replaced approval_program_test_array_route@3.ops[40]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted approval_program_test_array_route@3.ops[29]: 'l-store-copy reinterpret_bytes[8]%2#0 0'
debug: Replaced approval_program_test_array_route@3.ops[40]: 'v-load reinterpret_bytes[8]%2#0' with 'l-load reinterpret_bytes[8]%2#0'
debug: Inserted approval_program_test_array_route@3.ops[27]: 'l-store-copy tmp%7#0 0'
debug: Replaced approval_program_test_array_route@3.ops[40]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted approval_program_test_array_route@3.ops[21]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced approval_program_test_array_route@3.ops[40]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[1]: 'l-store-copy tmp%10#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[3]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[6]: 'l-store-copy tmp%11#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[8]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[11]: 'l-store-copy tmp%12#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[13]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[16]: 'l-store-copy tmp%13#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[18]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[21]: 'l-store-copy reinterpret_bytes[32]%0#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[23]: 'v-load reinterpret_bytes[32]%0#0' with 'l-load reinterpret_bytes[32]%0#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[40]: 'l-store-copy tmp%15#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[42]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[45]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[47]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[32]: 'l-store-copy item1%0#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[35]: 'v-load item1%0#0' with 'l-load item1%0#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[37]: 'l-store-copy tmp%14#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[40]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[24]: 'l-store-copy reinterpret_bytes[32]%0#0 0'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[29]: 'v-load reinterpret_bytes[32]%0#0' with 'l-load reinterpret_bytes[32]%0#0'
debug: Inserted approval_program_test_extend_from_tuple_route@4.ops[28]: 'l-store-copy item0%0#0 1'
debug: Replaced approval_program_test_extend_from_tuple_route@4.ops[36]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted approval_program_test_extend_from_arc4_tuple_route@5.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced approval_program_test_extend_from_arc4_tuple_route@5.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted approval_program_test_extend_from_arc4_tuple_route@5.ops[6]: 'l-store-copy tmp%17#0 0'
debug: Replaced approval_program_test_extend_from_arc4_tuple_route@5.ops[8]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted approval_program_test_extend_from_arc4_tuple_route@5.ops[11]: 'l-store-copy tmp%18#0 0'
debug: Replaced approval_program_test_extend_from_arc4_tuple_route@5.ops[13]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted approval_program_test_extend_from_arc4_tuple_route@5.ops[16]: 'l-store-copy tmp%19#0 0'
debug: Replaced approval_program_test_extend_from_arc4_tuple_route@5.ops[18]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted approval_program_test_extend_from_arc4_tuple_route@5.ops[21]: 'l-store-copy reinterpret_bytes[32]%1#0 0'
debug: Replaced approval_program_test_extend_from_arc4_tuple_route@5.ops[23]: 'v-load reinterpret_bytes[32]%1#0' with 'l-load reinterpret_bytes[32]%1#0'
debug: Inserted approval_program_test_extend_from_arc4_tuple_route@5.ops[29]: 'l-store-copy tmp%21#0 0'
debug: Replaced approval_program_test_extend_from_arc4_tuple_route@5.ops[31]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted approval_program_test_extend_from_arc4_tuple_route@5.ops[34]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_test_extend_from_arc4_tuple_route@5.ops[36]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_test_extend_from_arc4_tuple_route@5.ops[25]: 'l-store-copy tmp%20#0 0'
debug: Replaced approval_program_test_extend_from_arc4_tuple_route@5.ops[28]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[1]: 'l-store-copy tmp%22#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[3]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[6]: 'l-store-copy tmp%23#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[8]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[11]: 'l-store-copy tmp%24#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[13]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[16]: 'l-store-copy tmp%25#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[18]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[21]: 'l-store-copy reinterpret_bytes[8]%4#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[23]: 'v-load reinterpret_bytes[8]%4#0' with 'l-load reinterpret_bytes[8]%4#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[25]: 'l-store-copy tmp%26#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[27]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[29]: 'l-store-copy to_encode%1#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[31]: 'v-load to_encode%1#0' with 'l-load to_encode%1#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[37]: 'l-store-copy tmp%27#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[39]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[42]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[44]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_test_bool_array_route@6.ops[33]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced approval_program_test_bool_array_route@6.ops[36]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[1]: 'l-store-copy tmp%28#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[3]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[6]: 'l-store-copy tmp%29#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[8]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[11]: 'l-store-copy tmp%30#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[13]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[16]: 'l-store-copy tmp%31#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[18]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[21]: 'l-store-copy reinterpret_bytes[8]%5#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[23]: 'v-load reinterpret_bytes[8]%5#0' with 'l-load reinterpret_bytes[8]%5#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[25]: 'l-store-copy tmp%32#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[27]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[33]: 'l-store-copy tmp%34#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[35]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[38]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[40]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_test_arc4_conversion_route@7.ops[29]: 'l-store-copy tmp%33#0 0'
debug: Replaced approval_program_test_arc4_conversion_route@7.ops[32]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted approval_program_sum_array_route@8.ops[1]: 'l-store-copy tmp%35#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[3]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted approval_program_sum_array_route@8.ops[6]: 'l-store-copy tmp%36#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[8]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted approval_program_sum_array_route@8.ops[11]: 'l-store-copy tmp%37#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[13]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted approval_program_sum_array_route@8.ops[16]: 'l-store-copy tmp%38#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[18]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted approval_program_sum_array_route@8.ops[21]: 'l-store-copy tmp%39#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[23]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted approval_program_sum_array_route@8.ops[25]: 'l-store-copy to_encode%2#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[27]: 'v-load to_encode%2#0' with 'l-load to_encode%2#0'
debug: Inserted approval_program_sum_array_route@8.ops[33]: 'l-store-copy tmp%40#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[35]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted approval_program_sum_array_route@8.ops[38]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[40]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_sum_array_route@8.ops[29]: 'l-store-copy val_as_bytes%2#0 0'
debug: Replaced approval_program_sum_array_route@8.ops[32]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted approval_program_bare_routing@11.ops[1]: 'l-store-copy tmp%41#0 0'
debug: Replaced approval_program_bare_routing@11.ops[4]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted approval_program___algopy_default_create@12.ops[1]: 'l-store-copy tmp%42#0 0'
debug: Replaced approval_program___algopy_default_create@12.ops[3]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted approval_program___algopy_default_create@12.ops[6]: 'l-store-copy tmp%43#0 0'
debug: Replaced approval_program___algopy_default_create@12.ops[8]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__algopy_default_create@14.ops[1]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__algopy_default_create@14.ops[3]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_after_if_else@17.ops[1]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_if_else@17.ops[3]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted _puya_lib.mem.new_slot.ops[2]: 'l-store-copy free_slot#0 0'
debug: Replaced _puya_lib.mem.new_slot.ops[6]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Inserted _puya_lib.mem.new_slot.ops[7]: 'l-store-copy free_slot#0 2'
debug: Replaced _puya_lib.mem.new_slot.ops[12]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Found 1 edge set/s for test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Found 7 edge set/s for test_cases.array.static_size.path_length
debug: Allocated 2 variable/s to x-stack: dy#0, point.x#0
debug: shared x-stack for path_length_for_body@2 -> path_length_if_body@3: point.x#0
debug: shared x-stack for path_length_for_body@2 -> path_length_else_body@4: point.x#0
debug: shared x-stack for path_length_if_body@6 -> path_length_after_if_else@8: dy#0
debug: shared x-stack for path_length_else_body@7 -> path_length_after_if_else@8: dy#0
debug: Found 3 edge set/s for test_cases.array.static_size.StaticSizeContract.test_array
debug: Found 7 edge set/s for test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Found 7 edge set/s for test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Found 3 edge set/s for test_cases.array.static_size.StaticSizeContract.sum_array
debug: Found 10 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for approval_program_test_array_route@3 -> approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18: tmp%0#0
debug: shared x-stack for approval_program_test_extend_from_tuple_route@4 -> approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18: tmp%0#0
debug: shared x-stack for approval_program_test_extend_from_arc4_tuple_route@5 -> approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18: tmp%0#0
debug: shared x-stack for approval_program_test_bool_array_route@6 -> approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18: tmp%0#0
debug: shared x-stack for approval_program_test_arc4_conversion_route@7 -> approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18: tmp%0#0
debug: shared x-stack for approval_program_sum_array_route@8 -> approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18: tmp%0#0
debug: shared x-stack for approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__algopy_default_create@14 -> approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18: tmp%0#0
debug: shared x-stack for approval_program_after_if_else@17 -> approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18: tmp%0#0
debug: test_cases.array.static_size.path_length f-stack entry: ['dx#0', 'point.y#0']
debug: test_cases.array.static_size.path_length f-stack on first store: ['last_point.x#0', 'last_point.y#0', 'length#0', 'tmp%0#0', 'point_idx#0']
debug: test_cases.array.static_size.StaticSizeContract.test_array f-stack entry: []
debug: test_cases.array.static_size.StaticSizeContract.test_array f-stack on first store: ['path#0', 'i#0']
debug: test_cases.array.static_size.StaticSizeContract.test_bool_array f-stack entry: ['array_length%0#0', 'count#0', 'count#9', 'item_index_internal%0#0']
debug: test_cases.array.static_size.StaticSizeContract.test_bool_array f-stack on first store: ['arr#0', 'tmp%2#0', 'i#0']
debug: test_cases.array.static_size.StaticSizeContract.test_arc4_conversion f-stack entry: ['array_length%0#0', 'count#0', 'count#9', 'item_index_internal%0#0']
debug: test_cases.array.static_size.StaticSizeContract.test_arc4_conversion f-stack on first store: ['arr#0', 'tmp%2#0', 'i#0']
debug: test_cases.array.static_size.StaticSizeContract.sum_array f-stack entry: []
debug: test_cases.array.static_size.StaticSizeContract.sum_array f-stack on first store: ['arr#0', 'total#0', 'array_length%0#0', 'item_index_internal%0#0']
debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init() -> uint64:
debug: removing explicit jump to fall-through block main_call___init__@1
debug: removing explicit jump to fall-through block main_after_if_else@2
array/static_size.py:117 debug: optimizing TEAL subroutine test_cases.array.static_size.path_length(path: uint64) -> uint64:
debug: removing explicit jump to fall-through block path_length_for_header@1
debug: removing explicit jump to fall-through block path_length_for_body@2
debug: removing explicit jump to fall-through block path_length_if_body@3
debug: removing explicit jump to fall-through block path_length_after_if_else@5
debug: removing explicit jump to fall-through block path_length_if_body@6
debug: removing explicit jump to fall-through block path_length_after_if_else@8
debug: removing explicit jump to fall-through block path_length_for_footer@9
array/static_size.py:25 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.__init__() -> void:
array/static_size.py:28 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.test_array(x1: bytes, y1: uint64, x2: bytes, y2: uint64) -> uint64:
debug: removing explicit jump to fall-through block test_array_for_header@1
debug: removing explicit jump to fall-through block test_array_for_body@2
debug: removing explicit jump to fall-through block test_array_for_footer@3
array/static_size.py:45 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple(some_more.0: bytes, some_more.1: bytes) -> bytes:
array/static_size.py:51 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple(some_more: bytes) -> bytes:
array/static_size.py:59 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array(length: uint64) -> uint64:
debug: removing explicit jump to fall-through block test_bool_array_for_header@1
debug: removing explicit jump to fall-through block test_bool_array_for_body@2
debug: removing explicit jump to fall-through block test_bool_array_for_footer@3
debug: removing explicit jump to fall-through block test_bool_array_for_header@5
debug: removing explicit jump to fall-through block test_bool_array_for_body@6
debug: removing explicit jump to fall-through block test_bool_array_if_body@7
debug: removing explicit jump to fall-through block test_bool_array_after_if_else@8
debug: removing explicit jump to fall-through block test_bool_array_for_footer@9
array/static_size.py:73 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion(length: uint64) -> bytes:
debug: removing explicit jump to fall-through block test_arc4_conversion_for_header@1
debug: removing explicit jump to fall-through block test_arc4_conversion_for_body@2
debug: removing explicit jump to fall-through block test_arc4_conversion_for_footer@3
debug: removing explicit jump to fall-through block test_arc4_conversion_for_header@5
debug: removing explicit jump to fall-through block test_arc4_conversion_for_body@6
debug: removing explicit jump to fall-through block test_arc4_conversion_if_body@7
debug: removing explicit jump to fall-through block test_arc4_conversion_after_if_else@8
debug: removing explicit jump to fall-through block test_arc4_conversion_for_footer@9
array/static_size.py:91 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.sum_array(arc4_arr: bytes) -> uint64:
debug: removing explicit jump to fall-through block sum_array_for_header@1
debug: removing explicit jump to fall-through block sum_array_for_body@2
debug: removing explicit jump to fall-through block sum_array_for_footer@3
array/static_size.py:102 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.xtra() -> uint64, uint64, bytes, bytes:
array/static_size.py:112 debug: optimizing TEAL subroutine test_cases.array.static_size.StaticSizeContract.more() -> bytes:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: removing explicit jump to fall-through block approval_program_block@1
debug: removing explicit jump to fall-through block approval_program_abi_routing@2
debug: removing explicit jump to fall-through block approval_program_switch_case_default@9
debug: removing explicit jump to fall-through block approval_program_switch_case_next@10
debug: removing explicit jump to fall-through block approval_program_after_if_else@17
debug: removing explicit jump to fall-through block approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18
debug: removing explicit jump to fall-through block approval_program_switch_case_default@15
debug: removing explicit jump to fall-through block approval_program_switch_case_next@16
debug: removing explicit jump to fall-through block approval_program_block@13
debug: removing explicit jump to fall-through block approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__algopy_default_create@14
debug: optimizing TEAL subroutine _puya_lib.mem.new_slot() -> uint64:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing approval program of test_cases.array.immutable.ImmutableArrayContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.sum_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable item1%0%0#0
debug: Removing unused variable item0%1%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable item1%0%0#0
debug: Removing unused variable item0%1%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Removing unused variable reverse_index_internal%1#0
debug: Removing unused variable reverse_index_internal%2#0
debug: Removing unused variable reverse_index_internal%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable encoded_tuple_buffer%4#0
debug: Removing unused variable current_tail_offset%3#0
debug: Removing unused variable tail_offset%1#0
debug: Removing unused variable r_count%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.sum_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable data_length%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable item1%0#0
debug: Removing unused variable item0%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable data_length%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable item1%0#0
debug: Removing unused variable item0%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable next_item_len%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable data_length%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable data_length%1#0
debug: Removing unused variable next_item_len%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.sum_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_start_offset%0#0
debug: Removing unused variable item_end_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_start_offset%0#0
debug: Removing unused variable item_end_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.sum_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.array.immutable.ImmutableArrayContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.immutable.ImmutableArrayContract
debug: lowering array IR nodes in clear program of test_cases.array.immutable.ImmutableArrayContract
debug: optimizing approval program of test_cases.array.immutable.ImmutableArrayContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.sum_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.sum_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.array.immutable.ImmutableArrayContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.immutable.ImmutableArrayContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_bit, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_fixed_size, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_dynamic_element, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_bits, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_dynamic_element, []
array/immutable.py:370 debug: auto reserving slots in test_cases.array.immutable.times, []
array/immutable.py:378 debug: auto reserving slots in test_cases.array.immutable.add_x, []
array/immutable.py:385 debug: auto reserving slots in test_cases.array.immutable.pop_x, []
array/immutable.py:392 debug: auto reserving slots in test_cases.array.immutable.sum_arr, []
array/immutable.py:74 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_uint64_array, []
array/immutable.py:110 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_bool_array, []
array/immutable.py:134 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array, []
array/immutable.py:152 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array, []
array/immutable.py:167 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array, []
array/immutable.py:186 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array, []
array/immutable.py:205 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_nested_array, []
array/immutable.py:223 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples, []
array/immutable.py:288 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues, []
array/immutable.py:315 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_uint64_return, []
array/immutable.py:322 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_bool_return, []
array/immutable.py:329 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_tuple_return, []
array/immutable.py:336 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return, []
array/immutable.py:343 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back, []
array/immutable.py:353 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple, []
array/immutable.py:361 debug: auto reserving slots in test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple, []
debug: Using dynamic slot allocation strategy
debug: removing local static slots in clear program of test_cases.array.immutable.ImmutableArrayContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 with [test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#1, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#2, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#3, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#4, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#5, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#6, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#7, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#8, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#9, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#10, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#11, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#12, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#13, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#14, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#15, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#16, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#17]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 53 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_bit
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_bit using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#1, result#2]
debug: Coalescing resulted in 4 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_bit
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_fixed_size using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_dynamic_element using strategy RootOperandGrouping
debug: Coalescing new_head#0 with [new_head#5, new_head#1, new_head#2]
debug: Coalescing head_offset#0 with [head_offset#5, head_offset#1, head_offset#2]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 19 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_bits
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_bits using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#1, result#4, result#10, result#2, result#3]
debug: Coalescing read_offset#0 with [read_offset#5, read_offset#1, read_offset#2]
debug: Coalescing write_offset#0 with [write_offset#5, write_offset#1, write_offset#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_bits
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_dynamic_element using strategy RootOperandGrouping
debug: Coalescing new_head#0 with [new_head#7, new_head#1, new_head#2, new_head#10, new_head#3, new_head#4]
debug: Coalescing item_offset_adjustment#0 with [item_offset_adjustment#2]
debug: Coalescing head_offset#0 with [head_offset#8, head_offset#1, head_offset#2, head_offset#3, head_offset#11, head_offset#4, head_offset#5]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 40 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.times
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.times using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#5, result#1, result#2]
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 16 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.times
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.add_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.add_x using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.add_x
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.pop_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.pop_x using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 16 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.pop_x
debug: loc: {_i#0=_i#0, arr#0=arr#0}
debug: pred: {_i#0=_i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: _i#0, arr#0
debug: * to_do arr#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, arr#0=arr#0}
debug: pred: {_i#0=_i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: _i#0, arr#0
debug: * to_do arr#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, arr#0=arr#0}
debug: pred: {_i#0=_i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: _i#0, arr#0
debug: * to_do arr#0
debug: * to_do _i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.sum_arr
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.sum_arr using strategy RootOperandGrouping
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.sum_arr
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_uint64_array using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#1, arr#2, arr#3, arr#4, arr#5, arr#6, arr#7]
debug: Coalescing resulted in 36 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_bool_array using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#10, arr#1, arr#2, arr#7]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#6, arr#1, arr#2, arr#3]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 28 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 21 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#7, arr#1, arr#2, arr#4]
debug: Coalescing i#0 with [i#8, i#1, i#2, i#3, i#11, i#4, i#5]
debug: Coalescing resulted in 48 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#7, arr#1, arr#2, arr#4]
debug: Coalescing i#0 with [i#8, i#1, i#2, i#3, i#11, i#4, i#5]
debug: Coalescing resulted in 48 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_nested_array using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#6, arr#2, arr#3]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing extra_arr#0 with [extra_arr#5, extra_arr#1, extra_arr#2]
debug: Coalescing j#0 with [j#5, j#1, j#2]
debug: Coalescing totals#0 with [totals#5, totals#1, totals#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 53 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples using strategy RootOperandGrouping
debug: Coalescing arr2#0 with [arr2#5, arr2#1, arr2#2]
debug: Coalescing arr7#0 with [arr7#5, arr7#1, arr7#2]
debug: Coalescing arr8#0 with [arr8#5, arr8#1, arr8#2]
debug: Coalescing arr9#0 with [arr9#5, arr9#1, arr9#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 76 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: loc: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: pred: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: 
debug: to_do: i#0, arr2#0, arr7#0, arr8#0, arr9#0
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: pred: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: 
debug: to_do: i#0, arr2#0, arr7#0, arr8#0, arr9#0
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: pred: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: 
debug: to_do: i#0, arr2#0, arr7#0, arr8#0, arr9#0
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues using strategy RootOperandGrouping
debug: Coalescing sum4#0 with [sum4#6, sum4#1, sum4#2, sum4#3]
debug: Coalescing sum3#0 with [sum3#12, sum3#1, sum3#2, sum3#3, sum3#4, sum3#5, sum3#9]
debug: Coalescing sum3#15 with [sum3#18]
debug: Coalescing sum2#0 with [sum2#7, sum2#1, sum2#2, sum2#4]
debug: Coalescing sum1#0 with [sum1#5, sum1#1, sum1#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#5, item_index_internal%2#1, item_index_internal%2#2]
debug: Coalescing item_index_internal%3#0 with [item_index_internal%3#5, item_index_internal%3#1, item_index_internal%3#2]
debug: Coalescing resulted in 88 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, sum4#0=sum4#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, sum4#0=sum4#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, sum4#0
debug: * to_do sum4#0
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, sum4#0=sum4#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, sum4#0=sum4#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, sum4#0
debug: * to_do sum4#0
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, sum4#0=sum4#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, sum4#0=sum4#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, sum4#0
debug: * to_do sum4#0
debug: * to_do item_index_internal%3#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_uint64_return using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_bool_return using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_tuple_return using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 19 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 19 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 11 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Performing post-SSA optimizations at level 0
debug: Output IR to array/out_unoptimized/ImmutableArrayContract.ir/ImmutableArrayContract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to array/out_unoptimized/ImmutableArrayContract.ir/ImmutableArrayContract.clear.0.destructured.ir
debug: Inserted main_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[19]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_uint64_array_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_uint64_array_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_uint64_array_route@3.ops[11]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_uint64_array_route@3.ops[16]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[18]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_test_uint64_array_route@3.ops[22]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[24]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_bool_array_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_bool_array_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_bool_array_route@4.ops[6]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_bool_array_route@4.ops[8]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_bool_array_route@4.ops[11]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_bool_array_route@4.ops[13]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_bool_array_route@4.ops[16]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_test_bool_array_route@4.ops[18]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_test_bool_array_route@4.ops[21]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced main_test_bool_array_route@4.ops[23]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted main_test_bool_array_route@4.ops[25]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_bool_array_route@4.ops[27]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_bool_array_route@4.ops[30]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_bool_array_route@4.ops[32]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_fixed_size_tuple_array_route@5.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@5.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_fixed_size_tuple_array_route@5.ops[6]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@5.ops[8]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_fixed_size_tuple_array_route@5.ops[11]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@5.ops[13]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_test_fixed_size_tuple_array_route@5.ops[16]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@5.ops[18]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_test_fixed_size_tuple_array_route@5.ops[22]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@5.ops[24]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@6.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@6.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@6.ops[6]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@6.ops[8]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@6.ops[11]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@6.ops[13]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@6.ops[16]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@6.ops[18]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@6.ops[22]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@6.ops[24]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@7.ops[1]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@7.ops[3]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@7.ops[6]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@7.ops[8]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@7.ops[11]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@7.ops[13]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@7.ops[16]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@7.ops[18]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@7.ops[22]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@7.ops[24]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@8.ops[1]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@8.ops[3]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@8.ops[6]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@8.ops[8]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@8.ops[11]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@8.ops[13]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@8.ops[16]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@8.ops[18]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@8.ops[22]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@8.ops[24]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_nested_array_route@9.ops[1]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_nested_array_route@9.ops[3]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_nested_array_route@9.ops[6]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_test_nested_array_route@9.ops[8]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_test_nested_array_route@9.ops[11]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_test_nested_array_route@9.ops[13]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_test_nested_array_route@9.ops[16]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_test_nested_array_route@9.ops[18]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_test_nested_array_route@9.ops[21]: 'l-store-copy reinterpret_bytes[8]%1#0 0'
debug: Replaced main_test_nested_array_route@9.ops[23]: 'v-load reinterpret_bytes[8]%1#0' with 'l-load reinterpret_bytes[8]%1#0'
debug: Inserted main_test_nested_array_route@9.ops[35]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_test_nested_array_route@9.ops[37]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_test_nested_array_route@9.ops[40]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_nested_array_route@9.ops[42]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_nested_array_route@9.ops[27]: 'l-store-copy reinterpret_uint64[][]%0#0 0'
debug: Replaced main_test_nested_array_route@9.ops[30]: 'v-load reinterpret_uint64[][]%0#0' with 'l-load reinterpret_uint64[][]%0#0'
debug: Inserted main_test_nested_array_route@9.ops[32]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_test_nested_array_route@9.ops[35]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_test_nested_array_route@9.ops[25]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_test_nested_array_route@9.ops[30]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_test_bit_packed_tuples_route@10.ops[1]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_test_bit_packed_tuples_route@10.ops[3]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_test_bit_packed_tuples_route@10.ops[6]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_bit_packed_tuples_route@10.ops[8]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_bit_packed_tuples_route@10.ops[11]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_test_bit_packed_tuples_route@10.ops[13]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_test_bit_packed_tuples_route@10.ops[16]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_test_bit_packed_tuples_route@10.ops[18]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_test_bit_packed_tuples_route@10.ops[22]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_bit_packed_tuples_route@10.ops[24]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[1]: 'l-store-copy tmp%39#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[3]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[6]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[8]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[11]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[13]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[16]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[18]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[36]: 'l-store-copy elements_to_encode%0#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[38]: 'v-load elements_to_encode%0#0' with 'l-load elements_to_encode%0#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[53]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[55]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[58]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[60]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[63]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[65]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[72]: 'l-store-copy tmp%43#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[74]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[77]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[79]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[68]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[71]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[27]: 'l-store-copy reinterpret_(uint64,bytes)[]%0#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[32]: 'v-load reinterpret_(uint64,bytes)[]%0#0' with 'l-load reinterpret_(uint64,bytes)[]%0#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[25]: 'l-store-copy reinterpret_(uint64,bool,bool)[]%0#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[32]: 'v-load reinterpret_(uint64,bool,bool)[]%0#0' with 'l-load reinterpret_(uint64,bool,bool)[]%0#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[37]: 'l-store-copy elements_to_encode%1#0 1'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[44]: 'v-load elements_to_encode%1#0' with 'l-load elements_to_encode%1#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[23]: 'l-store-copy reinterpret_bool[]%0#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[32]: 'v-load reinterpret_bool[]%0#0' with 'l-load reinterpret_bool[]%0#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[21]: 'l-store-copy reinterpret_uint64[]%0#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[32]: 'v-load reinterpret_uint64[]%0#0' with 'l-load reinterpret_uint64[]%0#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[38]: 'l-store-copy elements_to_encode%2#0 2'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[50]: 'v-load elements_to_encode%2#0' with 'l-load elements_to_encode%2#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[46]: 'l-store-copy val_as_bytes%0#0 2'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[58]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[50]: 'l-store-copy val_as_bytes%1#0 2'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[64]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[37]: 'l-store-copy elements_to_encode%3#0 3'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[56]: 'v-load elements_to_encode%3#0' with 'l-load elements_to_encode%3#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[55]: 'l-store-copy val_as_bytes%2#0 3'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[71]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@11.ops[59]: 'l-store-copy val_as_bytes%3#0 3'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@11.ops[77]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted main_test_uint64_return_route@12.ops[1]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[3]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_test_uint64_return_route@12.ops[6]: 'l-store-copy tmp%45#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[8]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main_test_uint64_return_route@12.ops[11]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[13]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_test_uint64_return_route@12.ops[16]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[18]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main_test_uint64_return_route@12.ops[21]: 'l-store-copy reinterpret_bytes[8]%2#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[23]: 'v-load reinterpret_bytes[8]%2#0' with 'l-load reinterpret_bytes[8]%2#0'
debug: Inserted main_test_uint64_return_route@12.ops[25]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[27]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_test_uint64_return_route@12.ops[33]: 'l-store-copy tmp%50#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[35]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted main_test_uint64_return_route@12.ops[38]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[40]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_uint64_return_route@12.ops[29]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_test_uint64_return_route@12.ops[32]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_test_bool_return_route@13.ops[1]: 'l-store-copy tmp%51#0 0'
debug: Replaced main_test_bool_return_route@13.ops[3]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted main_test_bool_return_route@13.ops[6]: 'l-store-copy tmp%52#0 0'
debug: Replaced main_test_bool_return_route@13.ops[8]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted main_test_bool_return_route@13.ops[11]: 'l-store-copy tmp%53#0 0'
debug: Replaced main_test_bool_return_route@13.ops[13]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_test_bool_return_route@13.ops[16]: 'l-store-copy tmp%54#0 0'
debug: Replaced main_test_bool_return_route@13.ops[18]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted main_test_bool_return_route@13.ops[21]: 'l-store-copy reinterpret_bytes[8]%3#0 0'
debug: Replaced main_test_bool_return_route@13.ops[23]: 'v-load reinterpret_bytes[8]%3#0' with 'l-load reinterpret_bytes[8]%3#0'
debug: Inserted main_test_bool_return_route@13.ops[25]: 'l-store-copy tmp%55#0 0'
debug: Replaced main_test_bool_return_route@13.ops[27]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted main_test_bool_return_route@13.ops[33]: 'l-store-copy tmp%57#0 0'
debug: Replaced main_test_bool_return_route@13.ops[35]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted main_test_bool_return_route@13.ops[38]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_bool_return_route@13.ops[40]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_bool_return_route@13.ops[29]: 'l-store-copy tmp%56#0 0'
debug: Replaced main_test_bool_return_route@13.ops[32]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted main_test_tuple_return_route@14.ops[1]: 'l-store-copy tmp%58#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[3]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted main_test_tuple_return_route@14.ops[6]: 'l-store-copy tmp%59#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[8]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted main_test_tuple_return_route@14.ops[11]: 'l-store-copy tmp%60#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[13]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted main_test_tuple_return_route@14.ops[16]: 'l-store-copy tmp%61#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[18]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted main_test_tuple_return_route@14.ops[21]: 'l-store-copy reinterpret_bytes[8]%4#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[23]: 'v-load reinterpret_bytes[8]%4#0' with 'l-load reinterpret_bytes[8]%4#0'
debug: Inserted main_test_tuple_return_route@14.ops[25]: 'l-store-copy tmp%62#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[27]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted main_test_tuple_return_route@14.ops[33]: 'l-store-copy tmp%64#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[35]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted main_test_tuple_return_route@14.ops[38]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[40]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_tuple_return_route@14.ops[29]: 'l-store-copy tmp%63#0 0'
debug: Replaced main_test_tuple_return_route@14.ops[32]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[1]: 'l-store-copy tmp%65#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[3]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[6]: 'l-store-copy tmp%66#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[8]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[11]: 'l-store-copy tmp%67#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[13]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[16]: 'l-store-copy tmp%68#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[18]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[21]: 'l-store-copy reinterpret_bytes[8]%5#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[23]: 'v-load reinterpret_bytes[8]%5#0' with 'l-load reinterpret_bytes[8]%5#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[25]: 'l-store-copy tmp%69#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[27]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[33]: 'l-store-copy tmp%71#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[35]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[38]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[40]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_tuple_return_route@15.ops[29]: 'l-store-copy tmp%70#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@15.ops[32]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[1]: 'l-store-copy tmp%72#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[3]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[6]: 'l-store-copy tmp%73#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[8]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[11]: 'l-store-copy tmp%74#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[13]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[16]: 'l-store-copy tmp%75#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[18]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[23]: 'l-store-copy reinterpret_bytes[8]%6#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[25]: 'v-load reinterpret_bytes[8]%6#0' with 'l-load reinterpret_bytes[8]%6#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[35]: 'l-store-copy tmp%78#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[37]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[40]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[42]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[27]: 'l-store-copy tmp%76#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[30]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[32]: 'l-store-copy tmp%77#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[35]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted main_test_convert_to_array_and_back_route@16.ops[21]: 'l-store-copy reinterpret_(uint64,bool,bool)[]%1#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@16.ops[30]: 'v-load reinterpret_(uint64,bool,bool)[]%1#0' with 'l-load reinterpret_(uint64,bool,bool)[]%1#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@17.ops[1]: 'l-store-copy tmp%79#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@17.ops[3]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@17.ops[6]: 'l-store-copy tmp%80#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@17.ops[8]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@17.ops[11]: 'l-store-copy tmp%81#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@17.ops[13]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@17.ops[16]: 'l-store-copy tmp%82#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@17.ops[18]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@17.ops[21]: 'l-store-copy reinterpret_bytes[16]%0#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@17.ops[23]: 'v-load reinterpret_bytes[16]%0#0' with 'l-load reinterpret_bytes[16]%0#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@17.ops[29]: 'l-store-copy tmp%84#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@17.ops[31]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@17.ops[34]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@17.ops[36]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@17.ops[25]: 'l-store-copy tmp%83#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@17.ops[28]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[1]: 'l-store-copy tmp%85#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[3]: 'v-load tmp%85#0' with 'l-load tmp%85#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[6]: 'l-store-copy tmp%86#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[8]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[11]: 'l-store-copy tmp%87#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[13]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[16]: 'l-store-copy tmp%88#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[18]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[21]: 'l-store-copy reinterpret_bytes[16]%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[23]: 'v-load reinterpret_bytes[16]%1#0' with 'l-load reinterpret_bytes[16]%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[40]: 'l-store-copy tmp%90#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[42]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[45]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[47]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[32]: 'l-store-copy item1%0#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[35]: 'v-load item1%0#0' with 'l-load item1%0#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[37]: 'l-store-copy tmp%89#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[40]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[24]: 'l-store-copy reinterpret_bytes[16]%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[29]: 'v-load reinterpret_bytes[16]%1#0' with 'l-load reinterpret_bytes[16]%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@18.ops[28]: 'l-store-copy item0%0#0 1'
debug: Replaced main_test_concat_with_native_tuple_route@18.ops[36]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted main_bare_routing@21.ops[1]: 'l-store-copy tmp%91#0 0'
debug: Replaced main_bare_routing@21.ops[4]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
debug: Inserted main___algopy_default_create@22.ops[1]: 'l-store-copy tmp%92#0 0'
debug: Replaced main___algopy_default_create@22.ops[3]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted main___algopy_default_create@22.ops[6]: 'l-store-copy tmp%93#0 0'
debug: Replaced main___algopy_default_create@22.ops[8]: 'v-load tmp%93#0' with 'l-load tmp%93#0'
debug: Inserted main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@28.ops[1]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@28.ops[3]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@25.ops[1]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@25.ops[3]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted dynamic_array_pop_bit.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_bit.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_bit.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_bit.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_bit.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_pop_bit.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_pop_bit.ops[42]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_pop_bit.ops[44]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_pop_bit.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_pop_bit.ops[19]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_pop_bit.ops[25]: 'l-store-copy popped_location#0 0'
debug: Replaced dynamic_array_pop_bit.ops[28]: 'v-load popped_location#0' with 'l-load popped_location#0'
debug: Inserted dynamic_array_pop_bit.ops[49]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_pop_bit.ops[52]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_pop_bit.ops[59]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_bit.ops[62]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_bit.ops[30]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_pop_bit.ops[34]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_pop_bit.ops[55]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_pop_bit.ops[59]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_pop_bit.ops[21]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_bit.ops[28]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_bit.ops[29]: 'l-store-copy result#0 1'
debug: Replaced dynamic_array_pop_bit.ops[39]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_bit.ops[31]: 'l-store-copy popped_location#0 2'
debug: Replaced dynamic_array_pop_bit.ops[41]: 'v-load popped_location#0' with 'l-load popped_location#0'
debug: Inserted dynamic_array_pop_bit.ops[11]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_bit.ops[24]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_bit.ops[45]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_bit.ops[62]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_bit.ops[25]: 'l-store-copy length_minus_1#0 1'
debug: Replaced dynamic_array_pop_bit.ops[48]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_bit.ops[41]: 'l-store-copy popped#0 3'
debug: Replaced dynamic_array_pop_bit.ops[70]: 'v-load popped#0' with 'l-load popped#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[20]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[22]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[24]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[26]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[19]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[30]: 'l-store-copy item_location#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[33]: 'v-load item_location#0' with 'l-load item_location#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[41]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[44]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[33]: 'l-store-copy result#0 1'
debug: Replaced dynamic_array_pop_fixed_size.ops[38]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[35]: 'l-store-copy item_location#0 2'
debug: Replaced dynamic_array_pop_fixed_size.ops[41]: 'v-load item_location#0' with 'l-load item_location#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[38]: 'l-store-copy popped#0 2'
debug: Replaced dynamic_array_pop_fixed_size.ops[46]: 'v-load popped#0' with 'l-load popped#0'
debug: Inserted dynamic_array_pop_fixed_size.ops[24]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size.ops[33]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_dynamic_element.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_dynamic_element.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[16]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element.ops[18]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[23]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element.ops[26]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[25]: 'l-store-copy tmp%0#0 1'
debug: Replaced dynamic_array_pop_dynamic_element.ops[29]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[19]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element.ops[23]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[13]: 'l-store-copy popped_header_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element.ops[21]: 'v-load popped_header_offset#0' with 'l-load popped_header_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[23]: 'l-store-copy popped_offset#0 1'
debug: Replaced dynamic_array_pop_dynamic_element.ops[31]: 'v-load popped_offset#0' with 'l-load popped_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element.ops[11]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_dynamic_element.ops[38]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[5]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[8]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[10]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[2]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[4]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[6]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[8]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[15]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[18]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[21]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[24]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[26]: 'l-store-copy updated#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[29]: 'v-load updated#0' with 'l-load updated#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[11]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[24]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_bits.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits.ops[8]: 'l-store-copy new_array_length#0 0'
debug: Replaced dynamic_array_concat_bits.ops[10]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_concat_bits.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_concat_bits.ops[24]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_bits.ops[26]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_bits.ops[33]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_bits.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_bits.ops[16]: 'l-store-copy new_array_length_b#0 0'
debug: Replaced dynamic_array_concat_bits.ops[19]: 'v-load new_array_length_b#0' with 'l-load new_array_length_b#0'
debug: Inserted dynamic_array_concat_bits.ops[39]: 'l-store-copy required_bytes#0 0'
debug: Replaced dynamic_array_concat_bits.ops[42]: 'v-load required_bytes#0' with 'l-load required_bytes#0'
debug: Inserted dynamic_array_concat_bits.ops[44]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_bits.ops[48]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_bits.ops[30]: 'l-store-copy current_bytes#0 0'
debug: Replaced dynamic_array_concat_bits.ops[42]: 'v-load current_bytes#0' with 'l-load current_bytes#0'
debug: Inserted dynamic_array_concat_bits.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits.ops[23]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits.ops[12]: 'l-store-copy new_array_length#0 1'
debug: Replaced dynamic_array_concat_bits.ops[34]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits.ops[23]: 'l-store-copy result#0 2'
debug: Replaced dynamic_array_concat_bits.ops[50]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[11]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[13]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_bits_after_if_else@2.ops[7]: 'l-store-copy write_offset#0 0'
debug: Replaced dynamic_array_concat_bits_after_if_else@2.ops[9]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_top@3.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_bits_while_top@3.ops[5]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[7]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[7]: 'l-store-copy write_offset#0 2'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[11]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[2]: 'l-store-copy read_offset#0 1'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[16]: 'v-load read_offset#0' with 'l-load read_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[11]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[9]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[11]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[13]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[16]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[19]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[3]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[5]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[13]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[48]: 'l-store-copy tmp%19#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[50]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[28]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[31]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[45]: 'l-store-copy tmp%18#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[48]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[23]: 'l-store-copy tmp%13#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[41]: 'l-store-copy tmp%17#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[45]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[20]: 'l-store-copy tmp%12#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'l-store-copy tmp%16#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[46]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[16]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[33]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[36]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[53]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted times_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced times_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced add_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_body@2.ops[13]: 'l-store-copy array%data%0#1 0'
debug: Replaced add_x_for_body@2.ops[15]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted add_x_for_body@2.ops[20]: 'l-store-copy concatenated%0#0 0'
debug: Replaced add_x_for_body@2.ops[22]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted add_x_for_body@2.ops[24]: 'l-store-copy byte_len%0#0 0'
debug: Replaced add_x_for_body@2.ops[26]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted add_x_for_body@2.ops[29]: 'l-store-copy len_%0#0 0'
debug: Replaced add_x_for_body@2.ops[31]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted add_x_for_body@2.ops[33]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced add_x_for_body@2.ops[35]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted add_x_for_body@2.ops[37]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced add_x_for_body@2.ops[39]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted add_x_for_body@2.ops[42]: 'l-store-copy concat_result%0#0 0'
debug: Replaced add_x_for_body@2.ops[44]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted add_x_for_body@2.ops[5]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced add_x_for_body@2.ops[8]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted add_x_for_body@2.ops[10]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced add_x_for_body@2.ops[13]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted add_x_for_body@2.ops[18]: 'l-store-copy encoded%0#0 0'
debug: Replaced add_x_for_body@2.ops[21]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted add_x_for_body@2.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced add_x_for_body@2.ops[21]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted add_x_for_body@2.ops[27]: 'l-store-copy concatenated%0#0 0'
debug: Replaced add_x_for_body@2.ops[45]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted pop_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced pop_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted pop_x_for_body@2.ops[3]: 'l-store-copy data%0#0 1'
debug: Replaced pop_x_for_body@2.ops[6]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted sum_arr_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_arr_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_arr_for_body@2.ops[11]: 'l-store-copy value_at_index%0#0 0'
debug: Replaced sum_arr_for_body@2.ops[13]: 'v-load value_at_index%0#0' with 'l-load value_at_index%0#0'
debug: Inserted sum_arr_for_body@2.ops[6]: 'l-store-copy item_offset%0#0 0'
debug: Replaced sum_arr_for_body@2.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted sum_arr_for_body@2.ops[16]: 'l-store-copy i#0 0'
debug: Replaced sum_arr_for_body@2.ops[19]: 'v-load i#0' with 'l-load i#0'
debug: Inserted sum_arr_for_body@2.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced sum_arr_for_body@2.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_uint64_array.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_uint64_array.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_uint64_array.ops[6]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[8]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_uint64_array.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_uint64_array.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_uint64_array.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_uint64_array.ops[33]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_uint64_array.ops[35]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_uint64_array.ops[40]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_uint64_array.ops[42]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_uint64_array.ops[44]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_uint64_array.ops[46]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_uint64_array.ops[49]: 'l-store-copy len_%0#0 0'
debug: Replaced test_uint64_array.ops[51]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_uint64_array.ops[53]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_uint64_array.ops[55]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_uint64_array.ops[57]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_uint64_array.ops[59]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_uint64_array.ops[62]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_uint64_array.ops[64]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_uint64_array.ops[65]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[67]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[70]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_uint64_array.ops[72]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_uint64_array.ops[75]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_uint64_array.ops[77]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_uint64_array.ops[82]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_uint64_array.ops[84]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_uint64_array.ops[99]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_uint64_array.ops[101]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_uint64_array.ops[103]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_uint64_array.ops[105]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_uint64_array.ops[108]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_uint64_array.ops[110]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_uint64_array.ops[115]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[117]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[120]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_uint64_array.ops[122]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_uint64_array.ops[125]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_uint64_array.ops[127]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_uint64_array.ops[132]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_uint64_array.ops[134]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_uint64_array.ops[149]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_uint64_array.ops[151]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_uint64_array.ops[153]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_uint64_array.ops[155]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_uint64_array.ops[158]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_uint64_array.ops[160]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_uint64_array.ops[175]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_uint64_array.ops[177]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_uint64_array.ops[182]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_uint64_array.ops[184]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_uint64_array.ops[186]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_uint64_array.ops[188]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_uint64_array.ops[191]: 'l-store-copy len_%1#0 0'
debug: Replaced test_uint64_array.ops[193]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_uint64_array.ops[195]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_uint64_array.ops[197]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_uint64_array.ops[199]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_uint64_array.ops[201]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_uint64_array.ops[204]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_uint64_array.ops[206]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_uint64_array.ops[207]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[209]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[212]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_uint64_array.ops[214]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_uint64_array.ops[217]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_uint64_array.ops[219]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_uint64_array.ops[224]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_uint64_array.ops[226]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_uint64_array.ops[241]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_uint64_array.ops[243]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_uint64_array.ops[245]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_uint64_array.ops[247]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_uint64_array.ops[250]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_uint64_array.ops[252]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_uint64_array.ops[265]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_uint64_array.ops[267]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_uint64_array.ops[269]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_uint64_array.ops[271]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_uint64_array.ops[274]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_uint64_array.ops[276]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_uint64_array.ops[281]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[283]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[286]: 'l-store-copy tmp%22#0 0'
debug: Replaced test_uint64_array.ops[288]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted test_uint64_array.ops[291]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_uint64_array.ops[293]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_uint64_array.ops[298]: 'l-store-copy tmp%24#0 0'
debug: Replaced test_uint64_array.ops[300]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted test_uint64_array.ops[315]: 'l-store-copy arc4_item%4#0 0'
debug: Replaced test_uint64_array.ops[317]: 'v-load arc4_item%4#0' with 'l-load arc4_item%4#0'
debug: Inserted test_uint64_array.ops[319]: 'l-store-copy tmp%26#0 0'
debug: Replaced test_uint64_array.ops[321]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted test_uint64_array.ops[324]: 'l-store-copy tmp%27#0 0'
debug: Replaced test_uint64_array.ops[326]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_uint64_array.ops[331]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[333]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[336]: 'l-store-copy tmp%28#0 0'
debug: Replaced test_uint64_array.ops[338]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted test_uint64_array.ops[341]: 'l-store-copy tmp%29#0 0'
debug: Replaced test_uint64_array.ops[343]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted test_uint64_array.ops[348]: 'l-store-copy tmp%30#0 0'
debug: Replaced test_uint64_array.ops[350]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted test_uint64_array.ops[365]: 'l-store-copy arc4_item%5#0 0'
debug: Replaced test_uint64_array.ops[367]: 'v-load arc4_item%5#0' with 'l-load arc4_item%5#0'
debug: Inserted test_uint64_array.ops[369]: 'l-store-copy tmp%32#0 0'
debug: Replaced test_uint64_array.ops[371]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted test_uint64_array.ops[374]: 'l-store-copy tmp%33#0 0'
debug: Replaced test_uint64_array.ops[376]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted test_uint64_array.ops[391]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_uint64_array.ops[393]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_uint64_array.ops[398]: 'l-store-copy concatenated%2#0 0'
debug: Replaced test_uint64_array.ops[400]: 'v-load concatenated%2#0' with 'l-load concatenated%2#0'
debug: Inserted test_uint64_array.ops[402]: 'l-store-copy byte_len%2#0 0'
debug: Replaced test_uint64_array.ops[404]: 'v-load byte_len%2#0' with 'l-load byte_len%2#0'
debug: Inserted test_uint64_array.ops[407]: 'l-store-copy len_%2#0 0'
debug: Replaced test_uint64_array.ops[409]: 'v-load len_%2#0' with 'l-load len_%2#0'
debug: Inserted test_uint64_array.ops[411]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced test_uint64_array.ops[413]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted test_uint64_array.ops[415]: 'l-store-copy len_16_bit%2#0 0'
debug: Replaced test_uint64_array.ops[417]: 'v-load len_16_bit%2#0' with 'l-load len_16_bit%2#0'
debug: Inserted test_uint64_array.ops[420]: 'l-store-copy concat_result%2#0 0'
debug: Replaced test_uint64_array.ops[422]: 'v-load concat_result%2#0' with 'l-load concat_result%2#0'
debug: Inserted test_uint64_array.ops[423]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[425]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[428]: 'l-store-copy tmp%34#0 0'
debug: Replaced test_uint64_array.ops[430]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted test_uint64_array.ops[433]: 'l-store-copy tmp%35#0 0'
debug: Replaced test_uint64_array.ops[435]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted test_uint64_array.ops[440]: 'l-store-copy tmp%36#0 0'
debug: Replaced test_uint64_array.ops[442]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted test_uint64_array.ops[457]: 'l-store-copy arc4_item%6#0 0'
debug: Replaced test_uint64_array.ops[459]: 'v-load arc4_item%6#0' with 'l-load arc4_item%6#0'
debug: Inserted test_uint64_array.ops[461]: 'l-store-copy tmp%38#0 0'
debug: Replaced test_uint64_array.ops[463]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted test_uint64_array.ops[466]: 'l-store-copy tmp%39#0 0'
debug: Replaced test_uint64_array.ops[468]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted test_uint64_array.ops[472]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced test_uint64_array.ops[474]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_uint64_array.ops[483]: 'l-store-copy index_is_in_bounds%0#0 0'
debug: Replaced test_uint64_array.ops[485]: 'v-load index_is_in_bounds%0#0' with 'l-load index_is_in_bounds%0#0'
debug: Inserted test_uint64_array.ops[491]: 'l-store-copy updated_target%0#0 0'
debug: Replaced test_uint64_array.ops[493]: 'v-load updated_target%0#0' with 'l-load updated_target%0#0'
debug: Inserted test_uint64_array.ops[494]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[496]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[499]: 'l-store-copy tmp%40#0 0'
debug: Replaced test_uint64_array.ops[501]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted test_uint64_array.ops[504]: 'l-store-copy tmp%41#0 0'
debug: Replaced test_uint64_array.ops[506]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted test_uint64_array.ops[519]: 'l-store-copy arc4_item%7#0 0'
debug: Replaced test_uint64_array.ops[521]: 'v-load arc4_item%7#0' with 'l-load arc4_item%7#0'
debug: Inserted test_uint64_array.ops[523]: 'l-store-copy tmp%42#0 0'
debug: Replaced test_uint64_array.ops[525]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted test_uint64_array.ops[528]: 'l-store-copy tmp%43#0 0'
debug: Replaced test_uint64_array.ops[530]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted test_uint64_array.ops[25]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_uint64_array.ops[28]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_uint64_array.ops[30]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_uint64_array.ops[33]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_uint64_array.ops[38]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_uint64_array.ops[41]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_uint64_array.ops[97]: 'l-store-copy item_offset%0#0 0'
debug: Replaced test_uint64_array.ops[100]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted test_uint64_array.ops[148]: 'l-store-copy item_offset%1#0 0'
debug: Replaced test_uint64_array.ops[151]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted test_uint64_array.ops[172]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_uint64_array.ops[175]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_uint64_array.ops[177]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_uint64_array.ops[180]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_uint64_array.ops[185]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_uint64_array.ops[188]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_uint64_array.ops[244]: 'l-store-copy item_offset%2#0 0'
debug: Replaced test_uint64_array.ops[247]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted test_uint64_array.ops[269]: 'l-store-copy item_offset%3#0 0'
debug: Replaced test_uint64_array.ops[272]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted test_uint64_array.ops[320]: 'l-store-copy item_offset%4#0 0'
debug: Replaced test_uint64_array.ops[323]: 'v-load item_offset%4#0' with 'l-load item_offset%4#0'
debug: Inserted test_uint64_array.ops[371]: 'l-store-copy item_offset%5#0 0'
debug: Replaced test_uint64_array.ops[374]: 'v-load item_offset%5#0' with 'l-load item_offset%5#0'
debug: Inserted test_uint64_array.ops[395]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_uint64_array.ops[398]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_uint64_array.ops[400]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_uint64_array.ops[403]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_uint64_array.ops[408]: 'l-store-copy encoded%2#0 0'
debug: Replaced test_uint64_array.ops[411]: 'v-load encoded%2#0' with 'l-load encoded%2#0'
debug: Inserted test_uint64_array.ops[467]: 'l-store-copy item_offset%6#0 0'
debug: Replaced test_uint64_array.ops[470]: 'v-load item_offset%6#0' with 'l-load item_offset%6#0'
debug: Inserted test_uint64_array.ops[495]: 'l-store-copy array_length%0#0 0'
debug: Replaced test_uint64_array.ops[498]: 'v-load array_length%0#0' with 'l-load array_length%0#0'
debug: Inserted test_uint64_array.ops[531]: 'l-store-copy item_offset%7#0 0'
debug: Replaced test_uint64_array.ops[534]: 'v-load item_offset%7#0' with 'l-load item_offset%7#0'
debug: Inserted test_uint64_array.ops[90]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_uint64_array.ops[95]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_uint64_array.ops[142]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_uint64_array.ops[147]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_uint64_array.ops[239]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_uint64_array.ops[244]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_uint64_array.ops[316]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_uint64_array.ops[321]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_uint64_array.ops[368]: 'l-store-copy tmp%31#0 0'
debug: Replaced test_uint64_array.ops[373]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted test_uint64_array.ops[465]: 'l-store-copy tmp%37#0 0'
debug: Replaced test_uint64_array.ops[470]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted test_uint64_array.ops[94]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced test_uint64_array.ops[101]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_uint64_array.ops[147]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced test_uint64_array.ops[154]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_uint64_array.ops[245]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced test_uint64_array.ops[252]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_uint64_array.ops[271]: 'l-store-copy array_head_and_tail%3#0 0'
debug: Replaced test_uint64_array.ops[278]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_uint64_array.ops[324]: 'l-store-copy array_head_and_tail%4#0 1'
debug: Replaced test_uint64_array.ops[331]: 'v-load array_head_and_tail%4#0' with 'l-load array_head_and_tail%4#0'
debug: Inserted test_uint64_array.ops[377]: 'l-store-copy array_head_and_tail%5#0 1'
debug: Replaced test_uint64_array.ops[384]: 'v-load array_head_and_tail%5#0' with 'l-load array_head_and_tail%5#0'
debug: Inserted test_uint64_array.ops[475]: 'l-store-copy array_head_and_tail%6#0 1'
debug: Replaced test_uint64_array.ops[482]: 'v-load array_head_and_tail%6#0' with 'l-load array_head_and_tail%6#0'
debug: Inserted test_uint64_array.ops[540]: 'l-store-copy array_head_and_tail%7#0 0'
debug: Replaced test_uint64_array.ops[547]: 'v-load array_head_and_tail%7#0' with 'l-load array_head_and_tail%7#0'
debug: Inserted test_uint64_array.ops[83]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[93]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[137]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[147]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[236]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[246]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[316]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[326]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[370]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[380]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[469]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[479]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[9]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[72]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[84]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[127]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[139]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[227]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[239]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[308]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[320]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[363]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[375]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[463]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[475]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[519]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[531]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[541]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[553]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[517]: 'l-store-copy assigned_value%0#0 0'
debug: Replaced test_uint64_array.ops[534]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
debug: Inserted test_uint64_array.ops[23]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_uint64_array.ops[42]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_uint64_array.ops[48]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_uint64_array.ops[66]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_uint64_array.ops[180]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced test_uint64_array.ops[199]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_uint64_array.ops[205]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_uint64_array.ops[223]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_uint64_array.ops[418]: 'l-store-copy expr_value_trimmed%2#0 0'
debug: Replaced test_uint64_array.ops[437]: 'v-load expr_value_trimmed%2#0' with 'l-load expr_value_trimmed%2#0'
debug: Inserted test_uint64_array.ops[443]: 'l-store-copy concatenated%2#0 0'
debug: Replaced test_uint64_array.ops[461]: 'v-load concatenated%2#0' with 'l-load concatenated%2#0'
debug: Inserted test_uint64_array.ops[98]: 'l-store-copy arr#0 1'
debug: Replaced test_uint64_array.ops[124]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[154]: 'l-store-copy arr#0 1'
debug: Replaced test_uint64_array.ops[180]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[257]: 'l-store-copy arr#0 1'
debug: Replaced test_uint64_array.ops[283]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[284]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[310]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[340]: 'l-store-copy arr#0 1'
debug: Replaced test_uint64_array.ops[366]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[396]: 'l-store-copy arr#0 1'
debug: Replaced test_uint64_array.ops[422]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[567]: 'l-store-copy arr#0 0'
debug: Replaced test_uint64_array.ops[594]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_uint64_array.ops[499]: 'l-store-copy arr#0 1'
debug: Replaced test_uint64_array.ops[532]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_bool_array.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_bool_array.ops[6]: 'l-store-copy arr#0 0'
debug: Replaced test_bool_array.ops[8]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_bool_array.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_bool_array.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_bool_array.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_bool_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_bool_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_bool_array_for_body@2.ops[10]: 'l-store-copy encoded_bool%0#0 0'
debug: Replaced test_bool_array_for_body@2.ops[12]: 'v-load encoded_bool%0#0' with 'l-load encoded_bool%0#0'
debug: Inserted test_bool_array_for_body@2.ops[23]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_bool_array_for_body@2.ops[25]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_bool_array_for_body@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_bool_array_for_body@2.ops[4]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_bool_array_for_body@2.ops[14]: 'l-store-copy encoded_item%0#0 0'
debug: Replaced test_bool_array_for_body@2.ops[17]: 'v-load encoded_item%0#0' with 'l-load encoded_item%0#0'
debug: Inserted test_bool_array_for_body@2.ops[19]: 'l-store-copy data%0#0 0'
debug: Replaced test_bool_array_for_body@2.ops[22]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted test_bool_array_for_body@2.ops[6]: 'l-store-copy to_encode%0#0 0'
debug: Replaced test_bool_array_for_body@2.ops[10]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted test_bool_array_after_for@4.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_bool_array_after_for@4.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_bool_array_after_for@4.ops[8]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_bool_array_after_for@4.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_bool_array_after_for@4.ops[15]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_bool_array_after_for@4.ops[17]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_bool_array_if_body@5.ops[10]: 'l-store-copy index_is_in_bounds%0#0 0'
debug: Replaced test_bool_array_if_body@5.ops[12]: 'v-load index_is_in_bounds%0#0' with 'l-load index_is_in_bounds%0#0'
debug: Inserted test_bool_array_if_body@5.ops[22]: 'l-store-copy encoded_bool%1#0 0'
debug: Replaced test_bool_array_if_body@5.ops[24]: 'v-load encoded_bool%1#0' with 'l-load encoded_bool%1#0'
debug: Inserted test_bool_array_if_body@5.ops[25]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_bool_array_if_body@5.ops[27]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_bool_array_if_body@5.ops[30]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_bool_array_if_body@5.ops[32]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_bool_array_if_body@5.ops[34]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_bool_array_if_body@5.ops[36]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_bool_array_if_body@5.ops[6]: 'l-store-copy array_length%0#0 0'
debug: Replaced test_bool_array_if_body@5.ops[9]: 'v-load array_length%0#0' with 'l-load array_length%0#0'
debug: Inserted test_bool_array_if_body@5.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_bool_array_if_body@5.ops[4]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array_if_body@5.ops[19]: 'l-store-copy is_true%0#0 0'
debug: Replaced test_bool_array_if_body@5.ops[23]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted test_bool_array_if_body@5.ops[3]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced test_bool_array_if_body@5.ops[17]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_bool_array_after_if_else@6.ops[3]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_bool_array_after_if_else@6.ops[5]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_bool_array_if_body@7.ops[10]: 'l-store-copy index_is_in_bounds%1#0 0'
debug: Replaced test_bool_array_if_body@7.ops[12]: 'v-load index_is_in_bounds%1#0' with 'l-load index_is_in_bounds%1#0'
debug: Inserted test_bool_array_if_body@7.ops[22]: 'l-store-copy encoded_bool%2#0 0'
debug: Replaced test_bool_array_if_body@7.ops[24]: 'v-load encoded_bool%2#0' with 'l-load encoded_bool%2#0'
debug: Inserted test_bool_array_if_body@7.ops[25]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_bool_array_if_body@7.ops[27]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_bool_array_if_body@7.ops[30]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_bool_array_if_body@7.ops[32]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_bool_array_if_body@7.ops[34]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_bool_array_if_body@7.ops[36]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_bool_array_if_body@7.ops[6]: 'l-store-copy array_length%1#0 0'
debug: Replaced test_bool_array_if_body@7.ops[9]: 'v-load array_length%1#0' with 'l-load array_length%1#0'
debug: Inserted test_bool_array_if_body@7.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_bool_array_if_body@7.ops[4]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array_if_body@7.ops[19]: 'l-store-copy is_true%1#0 0'
debug: Replaced test_bool_array_if_body@7.ops[23]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted test_bool_array_if_body@7.ops[3]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced test_bool_array_if_body@7.ops[17]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_bool_array_after_if_else@8.ops[3]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_bool_array_after_if_else@8.ops[5]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_bool_array_if_body@9.ops[10]: 'l-store-copy index_is_in_bounds%2#0 0'
debug: Replaced test_bool_array_if_body@9.ops[12]: 'v-load index_is_in_bounds%2#0' with 'l-load index_is_in_bounds%2#0'
debug: Inserted test_bool_array_if_body@9.ops[22]: 'l-store-copy encoded_bool%3#0 0'
debug: Replaced test_bool_array_if_body@9.ops[24]: 'v-load encoded_bool%3#0' with 'l-load encoded_bool%3#0'
debug: Inserted test_bool_array_if_body@9.ops[25]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_bool_array_if_body@9.ops[27]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_bool_array_if_body@9.ops[30]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_bool_array_if_body@9.ops[32]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_bool_array_if_body@9.ops[6]: 'l-store-copy array_length%2#0 0'
debug: Replaced test_bool_array_if_body@9.ops[9]: 'v-load array_length%2#0' with 'l-load array_length%2#0'
debug: Inserted test_bool_array_if_body@9.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_bool_array_if_body@9.ops[4]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array_if_body@9.ops[19]: 'l-store-copy is_true%2#0 0'
debug: Replaced test_bool_array_if_body@9.ops[23]: 'v-load is_true%2#0' with 'l-load is_true%2#0'
debug: Inserted test_bool_array_if_body@9.ops[3]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced test_bool_array_if_body@9.ops[17]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_bool_array_after_if_else@10.ops[3]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_bool_array_after_if_else@10.ops[5]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_bool_array_if_body@11.ops[14]: 'l-store-copy index_is_in_bounds%3#0 0'
debug: Replaced test_bool_array_if_body@11.ops[16]: 'v-load index_is_in_bounds%3#0' with 'l-load index_is_in_bounds%3#0'
debug: Inserted test_bool_array_if_body@11.ops[26]: 'l-store-copy encoded_bool%4#0 0'
debug: Replaced test_bool_array_if_body@11.ops[28]: 'v-load encoded_bool%4#0' with 'l-load encoded_bool%4#0'
debug: Inserted test_bool_array_if_body@11.ops[29]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_bool_array_if_body@11.ops[31]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_bool_array_if_body@11.ops[34]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_bool_array_if_body@11.ops[36]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_bool_array_if_body@11.ops[38]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_bool_array_if_body@11.ops[40]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_bool_array_if_body@11.ops[10]: 'l-store-copy array_length%3#0 0'
debug: Replaced test_bool_array_if_body@11.ops[13]: 'v-load array_length%3#0' with 'l-load array_length%3#0'
debug: Inserted test_bool_array_if_body@11.ops[5]: 'l-store-copy arr#0 0'
debug: Replaced test_bool_array_if_body@11.ops[8]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array_if_body@11.ops[23]: 'l-store-copy is_true%3#0 0'
debug: Replaced test_bool_array_if_body@11.ops[27]: 'v-load is_true%3#0' with 'l-load is_true%3#0'
debug: Inserted test_bool_array_if_body@11.ops[14]: 'l-store-copy tmp%14#0 1'
debug: Replaced test_bool_array_if_body@11.ops[22]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_bool_array_if_body@11.ops[3]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_bool_array_if_body@11.ops[14]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_bool_array_if_body@11.ops[8]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced test_bool_array_if_body@11.ops[23]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_bool_array_after_if_else@12.ops[6]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_bool_array_after_if_else@12.ops[8]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_bool_array_if_body@13.ops[5]: 'l-store-copy arr#0 0'
debug: Replaced test_bool_array_if_body@13.ops[7]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_bool_array_if_body@13.ops[18]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_bool_array_if_body@13.ops[20]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_bool_array_if_body@13.ops[2]: 'l-store-copy data%1#0 1'
debug: Replaced test_bool_array_if_body@13.ops[5]: 'v-load data%1#0' with 'l-load data%1#0'
debug: Inserted test_bool_array_if_body@13.ops[15]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_bool_array_if_body@13.ops[18]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_bool_array_if_body@13.ops[11]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_bool_array_if_body@13.ops[18]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_fixed_size_tuple_array.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_fixed_size_tuple_array.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_fixed_size_tuple_array.ops[6]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_tuple_array.ops[8]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_fixed_size_tuple_array.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_fixed_size_tuple_array.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_fixed_size_tuple_array.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_fixed_size_tuple_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[28]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[30]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[35]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[37]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[39]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[41]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[44]: 'l-store-copy len_%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[46]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[48]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[50]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[52]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[54]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[57]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[59]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[13]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[16]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[21]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[24]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[26]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[29]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[34]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[37]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[4]: 'l-store-copy i#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[8]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[19]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[25]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[7]: 'l-store-copy tmp%2#0 1'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[12]: 'l-store-copy tmp%3#0 1'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[46]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[64]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_fixed_size_tuple_array_for_body@2.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_fixed_size_tuple_array_for_body@2.ops[41]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[8]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[23]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[25]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[29]: 'l-store-copy item0%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[31]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[38]: 'l-store-copy item1%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[40]: 'v-load item1%0#0' with 'l-load item1%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[54]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[56]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[61]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[63]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[78]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[80]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[84]: 'l-store-copy item0%1#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[86]: 'v-load item0%1#0' with 'l-load item0%1#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[93]: 'l-store-copy item1%1#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[95]: 'v-load item1%1#0' with 'l-load item1%1#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[109]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[111]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[119]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[121]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[124]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[126]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[129]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[131]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[144]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[146]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[150]: 'l-store-copy item0%2#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[152]: 'v-load item0%2#0' with 'l-load item0%2#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[159]: 'l-store-copy item1%2#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[161]: 'v-load item1%2#0' with 'l-load item1%2#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[175]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[177]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[182]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[184]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[199]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[201]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[205]: 'l-store-copy item0%3#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[207]: 'v-load item0%3#0' with 'l-load item0%3#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[214]: 'l-store-copy item1%3#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[216]: 'v-load item1%3#0' with 'l-load item1%3#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[230]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[232]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[18]: 'l-store-copy item_offset%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[21]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[51]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[54]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[75]: 'l-store-copy item_offset%1#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[78]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[108]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[111]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[120]: 'l-store-copy data%0#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[123]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[144]: 'l-store-copy item_offset%2#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[147]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[177]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[180]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[201]: 'l-store-copy item_offset%3#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[204]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[234]: 'l-store-copy tmp%22#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[237]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[68]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[73]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[195]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[200]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[14]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[21]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[44]: 'l-store-copy item1%0%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[50]: 'v-load item1%0%0#0' with 'l-load item1%0%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[49]: 'l-store-copy tmp%6#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[56]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[75]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[82]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[105]: 'l-store-copy item1%1%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[111]: 'v-load item1%1%0#0' with 'l-load item1%1%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[110]: 'l-store-copy tmp%11#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[117]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[147]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[154]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[177]: 'l-store-copy item1%2%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[183]: 'v-load item1%2%0#0' with 'l-load item1%2%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[182]: 'l-store-copy tmp%16#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[189]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[208]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[215]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[238]: 'l-store-copy item1%3%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[244]: 'v-load item1%3%0#0' with 'l-load item1%3%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[243]: 'l-store-copy tmp%21#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[250]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[28]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[37]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[65]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[75]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[91]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[100]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[164]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[173]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[201]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[211]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[227]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[236]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[36]: 'l-store-copy item0%0%0#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[48]: 'v-load item0%0%0#0' with 'l-load item0%0%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[100]: 'l-store-copy item0%1%0#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[112]: 'v-load item0%1%0#0' with 'l-load item0%1%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[174]: 'l-store-copy item0%2%0#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[186]: 'v-load item0%2%0#0' with 'l-load item0%2%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[238]: 'l-store-copy item0%3%0#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[250]: 'v-load item0%3%0#0' with 'l-load item0%3%0#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[140]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[152]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[14]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[67]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[79]: 'l-store-copy arr#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[132]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[155]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[208]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_tuple_array_after_for@4.ops[220]: 'l-store-copy arr#0 1'
debug: Replaced test_fixed_size_tuple_array_after_for@4.ops[274]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_named_tuple_array.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_fixed_size_named_tuple_array.ops[6]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_named_tuple_array.ops[8]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_named_tuple_array.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_fixed_size_named_tuple_array.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_fixed_size_named_tuple_array.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_fixed_size_named_tuple_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[6]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[15]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[17]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[20]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[22]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[41]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[43]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[51]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[53]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[58]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[60]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[62]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[64]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[67]: 'l-store-copy len_%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[69]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[71]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[73]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[75]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[77]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[80]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[82]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[28]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[31]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[38]: 'l-store-copy array%encoded_bit%0#1 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[41]: 'v-load array%encoded_bit%0#1' with 'l-load array%encoded_bit%0#1'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[49]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[52]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[57]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[60]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[33]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[41]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[4]: 'l-store-copy i#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[13]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[14]: 'l-store-copy i#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[28]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[68]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[86]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[27]: 'l-store-copy tmp%6#0 1'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[51]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[12]: 'l-store-copy tmp%3#0 1'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[41]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_fixed_size_named_tuple_array_for_body@2.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_for_body@2.ops[65]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[5]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[8]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[10]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[23]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[25]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[29]: 'l-store-copy item0%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[31]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[42]: 'l-store-copy encoded_bool%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[44]: 'v-load encoded_bool%0#0' with 'l-load encoded_bool%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[45]: 'l-store-copy item1%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[47]: 'v-load item1%0#0' with 'l-load item1%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[59]: 'l-store-copy encoded_bool%1#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[61]: 'v-load encoded_bool%1#0' with 'l-load encoded_bool%1#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[62]: 'l-store-copy item2%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[64]: 'v-load item2%0#0' with 'l-load item2%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[77]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[79]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[18]: 'l-store-copy item_offset%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[21]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[38]: 'l-store-copy is_true%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[42]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[56]: 'l-store-copy is_true%1#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[60]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[14]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[21]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[71]: 'l-store-copy item2%0%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[77]: 'v-load item2%0%0#0' with 'l-load item2%0%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[74]: 'l-store-copy foo#0 1'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[80]: 'v-load foo#0' with 'l-load foo#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[28]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[37]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[78]: 'l-store-copy bar#0 2'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[89]: 'v-load bar#0' with 'l-load bar#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[81]: 'l-store-copy baz#0 2'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[92]: 'v-load baz#0' with 'l-load baz#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[39]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[57]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[56]: 'l-store-copy item1%0%0#0 1'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[80]: 'v-load item1%0%0#0' with 'l-load item1%0%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[37]: 'l-store-copy item0%0%0#0 1'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[78]: 'v-load item0%0%0#0' with 'l-load item0%0%0#0'
debug: Inserted test_fixed_size_named_tuple_array_after_for@4.ops[14]: 'l-store-copy arr#0 0'
debug: Replaced test_fixed_size_named_tuple_array_after_for@4.ops[100]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_dynamic_sized_tuple_array.ops[6]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_tuple_array.ops[8]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_dynamic_sized_tuple_array.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[12]: 'l-store-copy length%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[14]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[16]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[18]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[20]: 'l-store-copy length_uint16%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[22]: 'v-load length_uint16%0#0' with 'l-load length_uint16%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[32]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[34]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[40]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[42]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[45]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[47]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[51]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[53]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[59]: 'l-store-copy result%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[61]: 'v-load result%0#0' with 'l-load result%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[79]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[81]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[36]: 'l-store-copy offset_as_uint16%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[39]: 'v-load offset_as_uint16%0#0' with 'l-load offset_as_uint16%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[56]: 'l-store-copy next_item_head%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[59]: 'v-load next_item_head%0#0' with 'l-load next_item_head%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[5]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[4]: 'l-store-copy tmp%2#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[8]: 'l-store-copy tmp%3#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[13]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[71]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[75]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[77]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[82]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[80]: 'l-store-copy r_head_and_tail%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[85]: 'v-load r_head_and_tail%0#0' with 'l-load r_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[74]: 'l-store-copy l_count%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[83]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[32]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[42]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[70]: 'l-store-copy result%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[82]: 'v-load result%1#0' with 'l-load result%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[14]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[27]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[54]: 'l-store-copy encoded_tuple%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[70]: 'v-load encoded_tuple%0#0' with 'l-load encoded_tuple%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[12]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[32]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@2.ops[30]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@2.ops[51]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@4.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@4.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@4.ops[8]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@4.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_dynamic_sized_tuple_array_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[43]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[45]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[49]: 'l-store-copy item0%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[51]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[61]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[63]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[108]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[110]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[121]: 'l-store-copy item1%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[123]: 'v-load item1%1#0' with 'l-load item1%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[125]: 'l-store-copy item1%1%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[127]: 'v-load item1%1%0#0' with 'l-load item1%1%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[129]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[131]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[134]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[136]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[6]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[9]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[19]: 'l-store-copy next_index%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[22]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[31]: 'l-store-copy next_item_offset_offset%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[34]: 'v-load next_item_offset_offset%0#0' with 'l-load next_item_offset_offset%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[36]: 'l-store-copy next_item_offset%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[39]: 'v-load next_item_offset%0#0' with 'l-load next_item_offset%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[61]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[64]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[76]: 'l-store-copy item_offset_offset%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[79]: 'v-load item_offset_offset%1#0' with 'l-load item_offset_offset%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[89]: 'l-store-copy next_index%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[92]: 'v-load next_index%1#0' with 'l-load next_index%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[101]: 'l-store-copy next_item_offset_offset%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[104]: 'v-load next_item_offset_offset%1#0' with 'l-load next_item_offset_offset%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[106]: 'l-store-copy next_item_offset%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[109]: 'v-load next_item_offset%1#0' with 'l-load next_item_offset%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[42]: 'l-store-copy end_offset%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[46]: 'v-load end_offset%0#0' with 'l-load end_offset%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[113]: 'l-store-copy end_offset%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[117]: 'v-load end_offset%1#0' with 'l-load end_offset%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[126]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[129]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[128]: 'l-store-copy item_end_offset%1#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[132]: 'v-load item_end_offset%1#0' with 'l-load item_end_offset%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[122]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[126]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[16]: 'l-store-copy array_length%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[23]: 'v-load array_length%0#0' with 'l-load array_length%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[60]: 'l-store-copy item0%0%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[67]: 'v-load item0%0%0#0' with 'l-load item0%0%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[76]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[83]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[90]: 'l-store-copy array_length%1#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[97]: 'v-load array_length%1#0' with 'l-load array_length%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[130]: 'l-store-copy item_start_offset%1#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[138]: 'v-load item_start_offset%1#0' with 'l-load item_start_offset%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[25]: 'l-store-copy next_index%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[31]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[100]: 'l-store-copy next_index%1#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[106]: 'v-load next_index%1#0' with 'l-load next_index%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[29]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[37]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[105]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[113]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[31]: 'l-store-copy end_of_array%0#0 2'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[43]: 'v-load end_of_array%0#0' with 'l-load end_of_array%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[39]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[50]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[109]: 'l-store-copy end_of_array%1#0 2'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[121]: 'v-load end_of_array%1#0' with 'l-load end_of_array%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[117]: 'l-store-copy array_head_and_tail%1#0 2'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[128]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[14]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[80]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[93]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[6]: 'l-store-copy i#0 2'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[20]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[86]: 'l-store-copy i#0 2'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[100]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[69]: 'l-store-copy i#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[86]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[29]: 'l-store-copy has_next%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[49]: 'v-load has_next%0#0' with 'l-load has_next%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[111]: 'l-store-copy has_next%1#0 1'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[131]: 'v-load has_next%1#0' with 'l-load has_next%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[12]: 'l-store-copy array_head_and_tail%0#0 3'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[32]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[95]: 'l-store-copy array_head_and_tail%1#0 3'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[115]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[15]: 'l-store-copy item_offset%0#0 3'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[56]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[99]: 'l-store-copy item_offset%1#0 3'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[140]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[23]: 'l-store-copy i#0 3'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[72]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[108]: 'l-store-copy i#0 3'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[173]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_tuple_array_for_body@6.ops[18]: 'l-store-copy arr#0 3'
debug: Replaced test_dynamic_sized_tuple_array_for_body@6.ops[86]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[5]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[7]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[10]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[12]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[15]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[17]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[62]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[64]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[68]: 'l-store-copy item0%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[70]: 'v-load item0%2#0' with 'l-load item0%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[84]: 'l-store-copy item1%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[86]: 'v-load item1%2#0' with 'l-load item1%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[103]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[105]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[110]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[112]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[159]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[161]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[165]: 'l-store-copy item0%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[167]: 'v-load item0%3#0' with 'l-load item0%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[181]: 'l-store-copy item1%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[183]: 'v-load item1%3#0' with 'l-load item1%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[200]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[202]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[2]: 'l-store-copy data%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[5]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[26]: 'l-store-copy item_offset_offset%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[29]: 'v-load item_offset_offset%2#0' with 'l-load item_offset_offset%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[39]: 'l-store-copy next_index%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[42]: 'v-load next_index%2#0' with 'l-load next_index%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[51]: 'l-store-copy next_item_offset_offset%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[54]: 'v-load next_item_offset_offset%2#0' with 'l-load next_item_offset_offset%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[56]: 'l-store-copy next_item_offset%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[59]: 'v-load next_item_offset%2#0' with 'l-load next_item_offset%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[100]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[103]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[105]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[108]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[129]: 'l-store-copy item_offset_offset%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[132]: 'v-load item_offset_offset%3#0' with 'l-load item_offset_offset%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[142]: 'l-store-copy next_index%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[145]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[154]: 'l-store-copy next_item_offset_offset%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[157]: 'v-load next_item_offset_offset%3#0' with 'l-load next_item_offset_offset%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[159]: 'l-store-copy next_item_offset%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[162]: 'v-load next_item_offset%3#0' with 'l-load next_item_offset%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[203]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[206]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[208]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[211]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[62]: 'l-store-copy end_offset%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[66]: 'v-load end_offset%2#0' with 'l-load end_offset%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[84]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[87]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[86]: 'l-store-copy item_end_offset%2#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[90]: 'v-load item_end_offset%2#0' with 'l-load item_end_offset%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[168]: 'l-store-copy end_offset%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[172]: 'v-load end_offset%3#0' with 'l-load end_offset%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[190]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[193]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[192]: 'l-store-copy item_end_offset%3#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[196]: 'v-load item_end_offset%3#0' with 'l-load item_end_offset%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[80]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[84]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[126]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[131]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[188]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[192]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[22]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[29]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[36]: 'l-store-copy array_length%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[43]: 'v-load array_length%2#0' with 'l-load array_length%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[85]: 'l-store-copy item_start_offset%2#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[93]: 'v-load item_start_offset%2#0' with 'l-load item_start_offset%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[133]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[140]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[147]: 'l-store-copy array_length%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[154]: 'v-load array_length%3#0' with 'l-load array_length%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[196]: 'l-store-copy item_start_offset%3#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[204]: 'v-load item_start_offset%3#0' with 'l-load item_start_offset%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[45]: 'l-store-copy next_index%2#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[51]: 'v-load next_index%2#0' with 'l-load next_index%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[157]: 'l-store-copy next_index%3#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[163]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[49]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[57]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[162]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[170]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[75]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[84]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[103]: 'l-store-copy item1%2%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[113]: 'v-load item1%2%0#0' with 'l-load item1%2%0#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[108]: 'l-store-copy tmp%12#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[119]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[127]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[137]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[192]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[201]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[220]: 'l-store-copy item1%3%0#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[230]: 'v-load item1%3%0#0' with 'l-load item1%3%0#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[225]: 'l-store-copy tmp%18#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[236]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[51]: 'l-store-copy end_of_array%2#0 2'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[63]: 'v-load end_of_array%2#0' with 'l-load end_of_array%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[59]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[70]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[170]: 'l-store-copy end_of_array%3#0 2'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[182]: 'v-load end_of_array%3#0' with 'l-load end_of_array%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[178]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[189]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[9]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[22]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[35]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[142]: 'l-store-copy arr#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[155]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[147]: 'l-store-copy tmp%17#0 2'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[161]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[49]: 'l-store-copy has_next%2#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[69]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[171]: 'l-store-copy has_next%3#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[191]: 'v-load has_next%3#0' with 'l-load has_next%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[32]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[52]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[89]: 'l-store-copy item0%2%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[112]: 'v-load item0%2%0#0' with 'l-load item0%2%0#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[156]: 'l-store-copy array_head_and_tail%3#0 3'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[176]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[213]: 'l-store-copy item0%3%0#0 1'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[236]: 'v-load item0%3%0#0' with 'l-load item0%3%0#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[35]: 'l-store-copy item_offset%2#0 2'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[76]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[160]: 'l-store-copy item_offset%3#0 3'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[201]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[38]: 'l-store-copy arr#0 2'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[135]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_tuple_array_after_for@8.ops[164]: 'l-store-copy arr#0 3'
debug: Replaced test_dynamic_sized_tuple_array_after_for@8.ops[262]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array.ops[6]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array.ops[8]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[12]: 'l-store-copy length%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[14]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[16]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[18]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[20]: 'l-store-copy length_uint16%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[22]: 'v-load length_uint16%0#0' with 'l-load length_uint16%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[32]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[34]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[40]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[42]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[45]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[47]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[51]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[53]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[59]: 'l-store-copy result%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[61]: 'v-load result%0#0' with 'l-load result%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[79]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[81]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[36]: 'l-store-copy offset_as_uint16%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[39]: 'v-load offset_as_uint16%0#0' with 'l-load offset_as_uint16%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[56]: 'l-store-copy next_item_head%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[59]: 'v-load next_item_head%0#0' with 'l-load next_item_head%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[5]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[4]: 'l-store-copy tmp%2#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[8]: 'l-store-copy tmp%3#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[13]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[71]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[75]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[77]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[82]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[80]: 'l-store-copy r_head_and_tail%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[85]: 'v-load r_head_and_tail%0#0' with 'l-load r_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[74]: 'l-store-copy l_count%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[83]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[32]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[42]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[70]: 'l-store-copy result%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[82]: 'v-load result%1#0' with 'l-load result%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[14]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[27]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[54]: 'l-store-copy encoded_tuple%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[70]: 'v-load encoded_tuple%0#0' with 'l-load encoded_tuple%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[12]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[32]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@2.ops[30]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@2.ops[51]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@4.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@4.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@4.ops[8]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@4.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[43]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[45]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[49]: 'l-store-copy item0%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[51]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[61]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[63]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[108]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[110]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[121]: 'l-store-copy item1%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[123]: 'v-load item1%1#0' with 'l-load item1%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[132]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[134]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[6]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[9]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[19]: 'l-store-copy next_index%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[22]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[31]: 'l-store-copy next_item_offset_offset%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[34]: 'v-load next_item_offset_offset%0#0' with 'l-load next_item_offset_offset%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[36]: 'l-store-copy next_item_offset%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[39]: 'v-load next_item_offset%0#0' with 'l-load next_item_offset%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[61]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[64]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[76]: 'l-store-copy item_offset_offset%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[79]: 'v-load item_offset_offset%1#0' with 'l-load item_offset_offset%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[89]: 'l-store-copy next_index%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[92]: 'v-load next_index%1#0' with 'l-load next_index%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[101]: 'l-store-copy next_item_offset_offset%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[104]: 'v-load next_item_offset_offset%1#0' with 'l-load next_item_offset_offset%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[106]: 'l-store-copy next_item_offset%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[109]: 'v-load next_item_offset%1#0' with 'l-load next_item_offset%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[137]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[140]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[42]: 'l-store-copy end_offset%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[46]: 'v-load end_offset%0#0' with 'l-load end_offset%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[113]: 'l-store-copy end_offset%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[117]: 'v-load end_offset%1#0' with 'l-load end_offset%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[126]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[129]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[128]: 'l-store-copy item_end_offset%1#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[132]: 'v-load item_end_offset%1#0' with 'l-load item_end_offset%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[122]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[126]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[139]: 'l-store-copy item1%1%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[145]: 'v-load item1%1%0#0' with 'l-load item1%1%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[16]: 'l-store-copy array_length%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[23]: 'v-load array_length%0#0' with 'l-load array_length%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[60]: 'l-store-copy item0%0%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[67]: 'v-load item0%0%0#0' with 'l-load item0%0%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[76]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[83]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[90]: 'l-store-copy array_length%1#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[97]: 'v-load array_length%1#0' with 'l-load array_length%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[130]: 'l-store-copy item_start_offset%1#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[138]: 'v-load item_start_offset%1#0' with 'l-load item_start_offset%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[25]: 'l-store-copy next_index%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[31]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[100]: 'l-store-copy next_index%1#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[106]: 'v-load next_index%1#0' with 'l-load next_index%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[29]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[37]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[105]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[113]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[31]: 'l-store-copy end_of_array%0#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[43]: 'v-load end_of_array%0#0' with 'l-load end_of_array%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[39]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[50]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[109]: 'l-store-copy end_of_array%1#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[121]: 'v-load end_of_array%1#0' with 'l-load end_of_array%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[117]: 'l-store-copy array_head_and_tail%1#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[128]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[14]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[80]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[93]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[6]: 'l-store-copy i#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[20]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[86]: 'l-store-copy i#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[100]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[69]: 'l-store-copy i#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[86]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[29]: 'l-store-copy has_next%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[49]: 'v-load has_next%0#0' with 'l-load has_next%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[111]: 'l-store-copy has_next%1#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[131]: 'v-load has_next%1#0' with 'l-load has_next%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[12]: 'l-store-copy array_head_and_tail%0#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[32]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[95]: 'l-store-copy array_head_and_tail%1#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[115]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[15]: 'l-store-copy item_offset%0#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[56]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[99]: 'l-store-copy item_offset%1#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[140]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[23]: 'l-store-copy i#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[72]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[108]: 'l-store-copy i#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[168]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_sized_named_tuple_array_for_body@6.ops[18]: 'l-store-copy arr#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_for_body@6.ops[86]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[5]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[7]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[10]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[12]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[15]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[17]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[62]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[64]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[68]: 'l-store-copy item0%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[70]: 'v-load item0%2#0' with 'l-load item0%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[84]: 'l-store-copy item1%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[86]: 'v-load item1%2#0' with 'l-load item1%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[100]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[102]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[107]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[109]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[156]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[158]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[162]: 'l-store-copy item0%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[164]: 'v-load item0%3#0' with 'l-load item0%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[178]: 'l-store-copy item1%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[180]: 'v-load item1%3#0' with 'l-load item1%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[194]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[196]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[2]: 'l-store-copy data%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[5]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[26]: 'l-store-copy item_offset_offset%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[29]: 'v-load item_offset_offset%2#0' with 'l-load item_offset_offset%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[39]: 'l-store-copy next_index%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[42]: 'v-load next_index%2#0' with 'l-load next_index%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[51]: 'l-store-copy next_item_offset_offset%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[54]: 'v-load next_item_offset_offset%2#0' with 'l-load next_item_offset_offset%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[56]: 'l-store-copy next_item_offset%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[59]: 'v-load next_item_offset%2#0' with 'l-load next_item_offset%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[101]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[104]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[125]: 'l-store-copy item_offset_offset%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[128]: 'v-load item_offset_offset%3#0' with 'l-load item_offset_offset%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[138]: 'l-store-copy next_index%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[141]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[150]: 'l-store-copy next_item_offset_offset%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[153]: 'v-load next_item_offset_offset%3#0' with 'l-load next_item_offset_offset%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[155]: 'l-store-copy next_item_offset%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[158]: 'v-load next_item_offset%3#0' with 'l-load next_item_offset%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[200]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[203]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[62]: 'l-store-copy end_offset%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[66]: 'v-load end_offset%2#0' with 'l-load end_offset%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[84]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[87]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[86]: 'l-store-copy item_end_offset%2#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[90]: 'v-load item_end_offset%2#0' with 'l-load item_end_offset%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[164]: 'l-store-copy end_offset%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[168]: 'v-load end_offset%3#0' with 'l-load end_offset%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[186]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[189]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[188]: 'l-store-copy item_end_offset%3#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[192]: 'v-load item_end_offset%3#0' with 'l-load item_end_offset%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[80]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[84]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[122]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[127]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[184]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[188]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[22]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[29]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[36]: 'l-store-copy array_length%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[43]: 'v-load array_length%2#0' with 'l-load array_length%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[85]: 'l-store-copy item_start_offset%2#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[93]: 'v-load item_start_offset%2#0' with 'l-load item_start_offset%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[100]: 'l-store-copy item1%2%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[106]: 'v-load item1%2%0#0' with 'l-load item1%2%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[105]: 'l-store-copy tmp%12#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[112]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[131]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[138]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[145]: 'l-store-copy array_length%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[152]: 'v-load array_length%3#0' with 'l-load array_length%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[194]: 'l-store-copy item_start_offset%3#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[202]: 'v-load item_start_offset%3#0' with 'l-load item_start_offset%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[209]: 'l-store-copy item1%3%0#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[215]: 'v-load item1%3%0#0' with 'l-load item1%3%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[214]: 'l-store-copy tmp%17#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[221]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[45]: 'l-store-copy next_index%2#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[51]: 'v-load next_index%2#0' with 'l-load next_index%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[155]: 'l-store-copy next_index%3#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[161]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[49]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[57]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[160]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[168]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[75]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[84]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[123]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[133]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[188]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[197]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[51]: 'l-store-copy end_of_array%2#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[63]: 'v-load end_of_array%2#0' with 'l-load end_of_array%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[59]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[70]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[166]: 'l-store-copy end_of_array%3#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[178]: 'v-load end_of_array%3#0' with 'l-load end_of_array%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[174]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[185]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[9]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[22]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[35]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[138]: 'l-store-copy arr#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[151]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[143]: 'l-store-copy tmp%16#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[157]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[49]: 'l-store-copy has_next%2#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[69]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[167]: 'l-store-copy has_next%3#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[187]: 'v-load has_next%3#0' with 'l-load has_next%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[32]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[52]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[89]: 'l-store-copy item0%2%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[112]: 'v-load item0%2%0#0' with 'l-load item0%2%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[152]: 'l-store-copy array_head_and_tail%3#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[172]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[209]: 'l-store-copy item0%3%0#0 1'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[232]: 'v-load item0%3%0#0' with 'l-load item0%3%0#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[35]: 'l-store-copy item_offset%2#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[76]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[156]: 'l-store-copy item_offset%3#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[197]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[38]: 'l-store-copy arr#0 2'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[131]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_sized_named_tuple_array_after_for@8.ops[160]: 'l-store-copy arr#0 3'
debug: Replaced test_dynamic_sized_named_tuple_array_after_for@8.ops[254]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_nested_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_nested_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_nested_array_for_body@2.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_nested_array_for_body@2.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_nested_array_for_header@3.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_nested_array_for_header@3.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_nested_array_for_body@4.ops[13]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_nested_array_for_body@4.ops[15]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_nested_array_for_body@4.ops[20]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[22]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_nested_array_for_body@4.ops[24]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[26]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_nested_array_for_body@4.ops[29]: 'l-store-copy len_%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[31]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_nested_array_for_body@4.ops[33]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[35]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_nested_array_for_body@4.ops[37]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[39]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_nested_array_for_body@4.ops[42]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[44]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_nested_array_for_body@4.ops[5]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_nested_array_for_body@4.ops[8]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_nested_array_for_body@4.ops[10]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_nested_array_for_body@4.ops[13]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_nested_array_for_body@4.ops[18]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[21]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_nested_array_for_body@4.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[21]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_nested_array_for_body@4.ops[27]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_nested_array_for_body@4.ops[45]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_nested_array_after_for@6.ops[2]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_nested_array_after_for@6.ops[4]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_nested_array_after_for@6.ops[10]: 'l-store-copy result%0#0 0'
debug: Replaced test_nested_array_after_for@6.ops[12]: 'v-load result%0#0' with 'l-load result%0#0'
debug: Inserted test_nested_array_after_for@6.ops[30]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_nested_array_after_for@6.ops[32]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_nested_array_after_for@6.ops[6]: 'l-store-copy next_item_head%0#0 0'
debug: Replaced test_nested_array_after_for@6.ops[9]: 'v-load next_item_head%0#0' with 'l-load next_item_head%0#0'
debug: Inserted test_nested_array_after_for@6.ops[23]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced test_nested_array_after_for@6.ops[28]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted test_nested_array_after_for@6.ops[26]: 'l-store-copy r_head_and_tail%0#0 1'
debug: Replaced test_nested_array_after_for@6.ops[31]: 'v-load r_head_and_tail%0#0' with 'l-load r_head_and_tail%0#0'
debug: Inserted test_nested_array_after_for@6.ops[20]: 'l-store-copy l_count%0#0 0'
debug: Replaced test_nested_array_after_for@6.ops[29]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted test_nested_array_after_for@6.ops[16]: 'l-store-copy result%1#0 0'
debug: Replaced test_nested_array_after_for@6.ops[27]: 'v-load result%1#0' with 'l-load result%1#0'
debug: Inserted test_nested_array_after_for@8.ops[3]: 'l-store-copy array_data%1#0 0'
debug: Replaced test_nested_array_after_for@8.ops[5]: 'v-load array_data%1#0' with 'l-load array_data%1#0'
debug: Inserted test_nested_array_for_header@9.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced test_nested_array_for_header@9.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted test_nested_array_for_body@10.ops[14]: 'l-store-copy item_length%0#0 0'
debug: Replaced test_nested_array_for_body@10.ops[16]: 'v-load item_length%0#0' with 'l-load item_length%0#0'
debug: Inserted test_nested_array_for_body@10.ops[19]: 'l-store-copy item_length_in_bytes%0#0 0'
debug: Replaced test_nested_array_for_body@10.ops[21]: 'v-load item_length_in_bytes%0#0' with 'l-load item_length_in_bytes%0#0'
debug: Inserted test_nested_array_for_body@10.ops[29]: 'l-store-copy value_at_index%0#0 0'
debug: Replaced test_nested_array_for_body@10.ops[31]: 'v-load value_at_index%0#0' with 'l-load value_at_index%0#0'
debug: Inserted test_nested_array_for_body@10.ops[38]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_nested_array_for_body@10.ops[40]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_nested_array_for_body@10.ops[50]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_nested_array_for_body@10.ops[52]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_nested_array_for_body@10.ops[57]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_nested_array_for_body@10.ops[59]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_nested_array_for_body@10.ops[61]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_nested_array_for_body@10.ops[63]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_nested_array_for_body@10.ops[66]: 'l-store-copy len_%1#0 0'
debug: Replaced test_nested_array_for_body@10.ops[68]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_nested_array_for_body@10.ops[70]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced test_nested_array_for_body@10.ops[72]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted test_nested_array_for_body@10.ops[74]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_nested_array_for_body@10.ops[76]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_nested_array_for_body@10.ops[79]: 'l-store-copy concat_result%2#0 0'
debug: Replaced test_nested_array_for_body@10.ops[81]: 'v-load concat_result%2#0' with 'l-load concat_result%2#0'
debug: Inserted test_nested_array_for_body@10.ops[6]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced test_nested_array_for_body@10.ops[9]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted test_nested_array_for_body@10.ops[11]: 'l-store-copy item_offset%0#0 0'
debug: Replaced test_nested_array_for_body@10.ops[14]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted test_nested_array_for_body@10.ops[44]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_nested_array_for_body@10.ops[47]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_nested_array_for_body@10.ops[49]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_nested_array_for_body@10.ops[52]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_nested_array_for_body@10.ops[57]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_nested_array_for_body@10.ops[60]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_nested_array_for_body@10.ops[26]: 'l-store-copy item_head_tail_length%0#0 0'
debug: Replaced test_nested_array_for_body@10.ops[30]: 'v-load item_head_tail_length%0#0' with 'l-load item_head_tail_length%0#0'
debug: Inserted test_nested_array_for_body@10.ops[9]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced test_nested_array_for_body@10.ops[14]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_nested_array_for_body@10.ops[36]: 'l-store-copy inner_arr#0 0'
debug: Replaced test_nested_array_for_body@10.ops[41]: 'v-load inner_arr#0' with 'l-load inner_arr#0'
debug: Inserted test_nested_array_for_body@10.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced test_nested_array_for_body@10.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_nested_array_for_body@10.ops[16]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced test_nested_array_for_body@10.ops[31]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted test_nested_array_for_body@10.ops[18]: 'l-store-copy item_offset%0#0 2'
debug: Replaced test_nested_array_for_body@10.ops[33]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted test_nested_array_for_body@10.ops[71]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_nested_array_for_body@10.ops[89]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_nested_array_for_body@10.ops[43]: 'l-store-copy expr_value_trimmed%1#0 1'
debug: Replaced test_nested_array_for_body@10.ops[66]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_bit_packed_tuples.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_bit_packed_tuples.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_bit_packed_tuples.ops[10]: 'l-store-copy array_data%1#0 0'
debug: Replaced test_bit_packed_tuples.ops[12]: 'v-load array_data%1#0' with 'l-load array_data%1#0'
debug: Inserted test_bit_packed_tuples.ops[17]: 'l-store-copy array_data%2#0 0'
debug: Replaced test_bit_packed_tuples.ops[19]: 'v-load array_data%2#0' with 'l-load array_data%2#0'
debug: Inserted test_bit_packed_tuples.ops[24]: 'l-store-copy array_data%3#0 0'
debug: Replaced test_bit_packed_tuples.ops[26]: 'v-load array_data%3#0' with 'l-load array_data%3#0'
debug: Inserted test_bit_packed_tuples.ops[31]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_bit_packed_tuples.ops[33]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_bit_packed_tuples.ops[36]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_bit_packed_tuples.ops[38]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_bit_packed_tuples.ops[43]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_bit_packed_tuples.ops[45]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_bit_packed_tuples.ops[48]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_bit_packed_tuples.ops[50]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_bit_packed_tuples.ops[55]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_bit_packed_tuples.ops[57]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_bit_packed_tuples.ops[60]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_bit_packed_tuples.ops[62]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_bit_packed_tuples.ops[67]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_bit_packed_tuples.ops[69]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_bit_packed_tuples.ops[72]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_bit_packed_tuples.ops[74]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_bit_packed_tuples.ops[6]: 'l-store-copy arr2#0 0'
debug: Replaced test_bit_packed_tuples.ops[29]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted test_bit_packed_tuples.ops[14]: 'l-store-copy arr7#0 1'
debug: Replaced test_bit_packed_tuples.ops[42]: 'v-load arr7#0' with 'l-load arr7#0'
debug: Inserted test_bit_packed_tuples.ops[22]: 'l-store-copy arr8#0 2'
debug: Replaced test_bit_packed_tuples.ops[55]: 'v-load arr8#0' with 'l-load arr8#0'
debug: Inserted test_bit_packed_tuples.ops[30]: 'l-store-copy arr9#0 3'
debug: Replaced test_bit_packed_tuples.ops[68]: 'v-load arr9#0' with 'l-load arr9#0'
debug: Inserted test_bit_packed_tuples_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_bit_packed_tuples_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[19]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[21]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[29]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[31]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[36]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[38]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[40]: 'l-store-copy len_%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[42]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[44]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[46]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[48]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[50]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[53]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[55]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[107]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[109]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[113]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[115]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[119]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[121]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[125]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[127]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[131]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[133]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[137]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[139]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[154]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[156]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[161]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[163]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[165]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[167]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[170]: 'l-store-copy len_%1#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[172]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[174]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[176]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[178]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[180]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[183]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[185]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[241]: 'l-store-copy array%encoded%5#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[243]: 'v-load array%encoded%5#1' with 'l-load array%encoded%5#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[247]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[249]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[253]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[255]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[259]: 'l-store-copy array%sub_item%12#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[261]: 'v-load array%sub_item%12#1' with 'l-load array%sub_item%12#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[265]: 'l-store-copy array%sub_item%13#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[267]: 'v-load array%sub_item%13#1' with 'l-load array%sub_item%13#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[271]: 'l-store-copy array%sub_item%14#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[273]: 'v-load array%sub_item%14#1' with 'l-load array%sub_item%14#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[277]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[279]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[294]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[296]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[301]: 'l-store-copy concatenated%2#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[303]: 'v-load concatenated%2#0' with 'l-load concatenated%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[305]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[307]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[310]: 'l-store-copy len_%2#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[312]: 'v-load len_%2#0' with 'l-load len_%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[314]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[316]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[318]: 'l-store-copy len_16_bit%2#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[320]: 'v-load len_16_bit%2#0' with 'l-load len_16_bit%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[323]: 'l-store-copy concat_result%2#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[325]: 'v-load concat_result%2#0' with 'l-load concat_result%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[385]: 'l-store-copy array%encoded%8#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[387]: 'v-load array%encoded%8#1' with 'l-load array%encoded%8#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[391]: 'l-store-copy array%sub_item%19#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[393]: 'v-load array%sub_item%19#1' with 'l-load array%sub_item%19#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[397]: 'l-store-copy array%sub_item%20#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[399]: 'v-load array%sub_item%20#1' with 'l-load array%sub_item%20#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[403]: 'l-store-copy array%sub_item%21#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[405]: 'v-load array%sub_item%21#1' with 'l-load array%sub_item%21#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[409]: 'l-store-copy array%sub_item%22#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[411]: 'v-load array%sub_item%22#1' with 'l-load array%sub_item%22#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[415]: 'l-store-copy array%sub_item%23#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[417]: 'v-load array%sub_item%23#1' with 'l-load array%sub_item%23#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[421]: 'l-store-copy array%sub_item%24#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[423]: 'v-load array%sub_item%24#1' with 'l-load array%sub_item%24#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[447]: 'l-store-copy array%data%3#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[449]: 'v-load array%data%3#1' with 'l-load array%data%3#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[454]: 'l-store-copy concatenated%3#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[456]: 'v-load concatenated%3#0' with 'l-load concatenated%3#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[458]: 'l-store-copy byte_len%2#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[460]: 'v-load byte_len%2#0' with 'l-load byte_len%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[463]: 'l-store-copy len_%3#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[465]: 'v-load len_%3#0' with 'l-load len_%3#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[467]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[469]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[471]: 'l-store-copy len_16_bit%3#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[473]: 'v-load len_16_bit%3#0' with 'l-load len_16_bit%3#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[476]: 'l-store-copy concat_result%3#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[478]: 'v-load concat_result%3#0' with 'l-load concat_result%3#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[15]: 'l-store-copy array%encoded_bit%0#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[18]: 'v-load array%encoded_bit%0#1' with 'l-load array%encoded_bit%0#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[26]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[29]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[34]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[37]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[97]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[100]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[107]: 'l-store-copy array%encoded_bit%1#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[110]: 'v-load array%encoded_bit%1#1' with 'l-load array%encoded_bit%1#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[151]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[154]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[156]: 'l-store-copy array%encoded%3#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[159]: 'v-load array%encoded%3#1' with 'l-load array%encoded%3#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[164]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[167]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[236]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[239]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[246]: 'l-store-copy array%encoded_bit%2#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[249]: 'v-load array%encoded_bit%2#1' with 'l-load array%encoded_bit%2#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[296]: 'l-store-copy array%sub_item%17#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[299]: 'v-load array%sub_item%17#1' with 'l-load array%sub_item%17#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[301]: 'l-store-copy array%encoded%6#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[304]: 'v-load array%encoded%6#1' with 'l-load array%encoded%6#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[309]: 'l-store-copy encoded%2#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[312]: 'v-load encoded%2#0' with 'l-load encoded%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[385]: 'l-store-copy array%sub_item%18#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[388]: 'v-load array%sub_item%18#1' with 'l-load array%sub_item%18#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[395]: 'l-store-copy array%encoded_bit%3#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[398]: 'v-load array%encoded_bit%3#1' with 'l-load array%encoded_bit%3#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[447]: 'l-store-copy array%sub_item%26#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[450]: 'v-load array%sub_item%26#1' with 'l-load array%sub_item%26#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[455]: 'l-store-copy array%sub_item%27#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[458]: 'v-load array%sub_item%27#1' with 'l-load array%sub_item%27#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[460]: 'l-store-copy array%encoded%10#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[463]: 'v-load array%encoded%10#1' with 'l-load array%encoded%10#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[468]: 'l-store-copy encoded%3#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[471]: 'v-load encoded%3#0' with 'l-load encoded%3#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[4]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[8]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[65]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[69]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[70]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[74]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[75]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[79]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[80]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[84]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[85]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[89]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[90]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[94]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[95]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[99]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[100]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[104]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[157]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[163]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[209]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[213]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[214]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[218]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[219]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[223]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[224]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[228]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[229]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[233]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[234]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[238]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[239]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[243]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[244]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[248]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[249]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[253]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[312]: 'l-store-copy array%sub_item%16#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[318]: 'v-load array%sub_item%16#1' with 'l-load array%sub_item%16#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[364]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[368]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[369]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[373]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[374]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[378]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[379]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[383]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[384]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[388]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[389]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[393]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[394]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[398]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[399]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[403]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[404]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[408]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[409]: 'l-store-copy i#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[413]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[482]: 'l-store-copy array%encoded%9#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[488]: 'v-load array%encoded%9#1' with 'l-load array%encoded%9#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[111]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[119]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[261]: 'l-store-copy array%encoded%4#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[269]: 'v-load array%encoded%4#1' with 'l-load array%encoded%4#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[422]: 'l-store-copy array%encoded%7#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[430]: 'v-load array%encoded%7#1' with 'l-load array%encoded%7#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[475]: 'l-store-copy array%sub_item%25#1 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[483]: 'v-load array%sub_item%25#1' with 'l-load array%sub_item%25#1'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[7]: 'l-store-copy tmp%8#0 1'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[15]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[44]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[57]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[12]: 'l-store-copy tmp%9#0 1'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[27]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[186]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[204]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[343]: 'l-store-copy concatenated%2#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[361]: 'v-load concatenated%2#0' with 'l-load concatenated%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[516]: 'l-store-copy concatenated%3#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[534]: 'v-load concatenated%3#0' with 'l-load concatenated%3#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[40]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[72]: 'l-store-copy tmp%10#0 1'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[120]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[219]: 'l-store-copy tmp%18#0 1'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[272]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[78]: 'l-store-copy tmp%11#0 2'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[132]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[84]: 'l-store-copy tmp%12#0 3'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[139]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[90]: 'l-store-copy tmp%13#0 4'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[146]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[11]: 'l-store-copy i#0 2'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[69]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[97]: 'l-store-copy tmp%14#0 5'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[154]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[382]: 'l-store-copy tmp%27#0 1'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[440]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[103]: 'l-store-copy tmp%15#0 6'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[161]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[114]: 'l-store-copy tmp%17#0 7'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[172]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[232]: 'l-store-copy tmp%19#0 2'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[291]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[109]: 'l-store-copy tmp%16#0 7'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[169]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[239]: 'l-store-copy tmp%20#0 3'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[299]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[245]: 'l-store-copy tmp%21#0 4'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[306]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[251]: 'l-store-copy tmp%22#0 5'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[313]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[257]: 'l-store-copy tmp%23#0 6'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[320]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[396]: 'l-store-copy tmp%28#0 2'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[460]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[263]: 'l-store-copy tmp%24#0 7'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[327]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[274]: 'l-store-copy tmp%26#0 8'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[338]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[404]: 'l-store-copy tmp%29#0 3'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[469]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[269]: 'l-store-copy tmp%25#0 8'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[335]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[411]: 'l-store-copy tmp%30#0 4'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[477]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[417]: 'l-store-copy tmp%31#0 5'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[484]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[423]: 'l-store-copy tmp%32#0 6'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[491]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[429]: 'l-store-copy tmp%33#0 7'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[498]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[435]: 'l-store-copy tmp%34#0 8'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[505]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[441]: 'l-store-copy tmp%35#0 9'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[512]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[447]: 'l-store-copy tmp%36#0 10'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[522]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[118]: 'l-store-copy i#0 8'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[224]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[279]: 'l-store-copy i#0 9'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[391]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[68]: 'l-store-copy expr_value_trimmed%1#0 1'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[192]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[224]: 'l-store-copy expr_value_trimmed%2#0 1'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[360]: 'v-load expr_value_trimmed%2#0' with 'l-load expr_value_trimmed%2#0'
debug: Inserted test_bit_packed_tuples_for_body@2.ops[392]: 'l-store-copy expr_value_trimmed%3#0 1'
debug: Replaced test_bit_packed_tuples_for_body@2.ops[544]: 'v-load expr_value_trimmed%3#0' with 'l-load expr_value_trimmed%3#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[3]: 'l-store-copy tmp%37#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[5]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[8]: 'l-store-copy tmp%38#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[10]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[15]: 'l-store-copy tmp%39#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[17]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[20]: 'l-store-copy tmp%40#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[22]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[27]: 'l-store-copy tmp%41#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[29]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[32]: 'l-store-copy tmp%42#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[34]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[39]: 'l-store-copy tmp%43#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[41]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[44]: 'l-store-copy tmp%44#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[46]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[37]: 'l-store-copy arr9#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[59]: 'v-load arr9#0' with 'l-load arr9#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[25]: 'l-store-copy arr8#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[57]: 'v-load arr8#0' with 'l-load arr8#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[13]: 'l-store-copy arr7#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[55]: 'v-load arr7#0' with 'l-load arr7#0'
debug: Inserted test_bit_packed_tuples_after_for@4.ops[1]: 'l-store-copy arr2#0 0'
debug: Replaced test_bit_packed_tuples_after_for@4.ops[53]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@2.ops[11]: 'l-store-copy value_at_index%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@2.ops[13]: 'v-load value_at_index%0#0' with 'l-load value_at_index%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@2.ops[6]: 'l-store-copy item_offset%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@2.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@2.ops[16]: 'l-store-copy i#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@2.ops[19]: 'v-load i#0' with 'l-load i#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@2.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@2.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@6.ops[2]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@6.ops[4]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@6.ops[12]: 'l-store-copy encoded_bool%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@6.ops[14]: 'v-load encoded_bool%0#0' with 'l-load encoded_bool%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@6.ops[15]: 'l-store-copy value_at_index%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@6.ops[17]: 'v-load value_at_index%1#0' with 'l-load value_at_index%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@6.ops[7]: 'l-store-copy is_true%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@6.ops[11]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@6.ops[21]: 'l-store-copy b#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@6.ops[25]: 'v-load b#0' with 'l-load b#0'
debug: Inserted sum_uints_and_lengths_and_trues_if_body@7.ops[3]: 'l-store-copy sum2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_if_body@7.ops[5]: 'v-load sum2#0' with 'l-load sum2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_header@11.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_header@11.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[11]: 'l-store-copy value_at_index%2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[13]: 'v-load value_at_index%2#0' with 'l-load value_at_index%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[17]: 'l-store-copy item0%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[19]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[30]: 'l-store-copy encoded_bool%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[32]: 'v-load encoded_bool%1#0' with 'l-load encoded_bool%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[33]: 'l-store-copy item1%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[35]: 'v-load item1%0#0' with 'l-load item1%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[47]: 'l-store-copy encoded_bool%2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[49]: 'v-load encoded_bool%2#0' with 'l-load encoded_bool%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[50]: 'l-store-copy item2%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[52]: 'v-load item2%0#0' with 'l-load item2%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[65]: 'l-store-copy sum3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[67]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[6]: 'l-store-copy item_offset%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[9]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[26]: 'l-store-copy is_true%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[30]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[44]: 'l-store-copy is_true%2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[48]: 'v-load is_true%2#0' with 'l-load is_true%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[2]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[9]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[59]: 'l-store-copy item2%0%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[65]: 'v-load item2%0%0#0' with 'l-load item2%0%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[62]: 'l-store-copy tup.foo#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[69]: 'v-load tup.foo#0' with 'l-load tup.foo#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[16]: 'l-store-copy value_at_index%2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[25]: 'v-load value_at_index%2#0' with 'l-load value_at_index%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[66]: 'l-store-copy tup.bar#0 2'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[77]: 'v-load tup.bar#0' with 'l-load tup.bar#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[26]: 'l-store-copy value_at_index%2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[44]: 'v-load value_at_index%2#0' with 'l-load value_at_index%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[43]: 'l-store-copy item1%0%0#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[67]: 'v-load item1%0%0#0' with 'l-load item1%0%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@12.ops[24]: 'l-store-copy item0%0%0#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@12.ops[65]: 'v-load item0%0%0#0' with 'l-load item0%0%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_if_body@13.ops[3]: 'l-store-copy sum3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_if_body@13.ops[5]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted sum_uints_and_lengths_and_trues_after_if_else@14.ops[1]: 'l-store-copy sum3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_after_if_else@14.ops[3]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted sum_uints_and_lengths_and_trues_if_body@15.ops[3]: 'l-store-copy sum3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_if_body@15.ops[5]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_header@19.ops[3]: 'l-store-copy continue_looping%3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_header@19.ops[5]: 'v-load continue_looping%3#0' with 'l-load continue_looping%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[43]: 'l-store-copy value_at_index%3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[45]: 'v-load value_at_index%3#0' with 'l-load value_at_index%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[49]: 'l-store-copy item0%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[51]: 'v-load item0%1#0' with 'l-load item0%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[65]: 'l-store-copy item1%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[67]: 'v-load item1%1#0' with 'l-load item1%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[89]: 'l-store-copy tmp%1#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[91]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[94]: 'l-store-copy tmp%2#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[96]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[6]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[9]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[19]: 'l-store-copy next_index%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[22]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[31]: 'l-store-copy next_item_offset_offset%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[34]: 'v-load next_item_offset_offset%0#0' with 'l-load next_item_offset_offset%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[36]: 'l-store-copy next_item_offset%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[39]: 'v-load next_item_offset%0#0' with 'l-load next_item_offset%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[86]: 'l-store-copy tmp%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[89]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[42]: 'l-store-copy end_offset%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[46]: 'v-load end_offset%0#0' with 'l-load end_offset%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[64]: 'l-store-copy value_at_index%3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[67]: 'v-load value_at_index%3#0' with 'l-load value_at_index%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[66]: 'l-store-copy item_end_offset%0#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[70]: 'v-load item_end_offset%0#0' with 'l-load item_end_offset%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[76]: 'l-store-copy item1%1%0#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[80]: 'v-load item1%1%0#0' with 'l-load item1%1%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[60]: 'l-store-copy value_at_index%3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[64]: 'v-load value_at_index%3#0' with 'l-load value_at_index%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[88]: 'l-store-copy sum4#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[94]: 'v-load sum4#0' with 'l-load sum4#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[2]: 'l-store-copy array_head_and_tail%3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[9]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[16]: 'l-store-copy array_length%4#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[23]: 'v-load array_length%4#0' with 'l-load array_length%4#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[65]: 'l-store-copy item_start_offset%0#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[73]: 'v-load item_start_offset%0#0' with 'l-load item_start_offset%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[25]: 'l-store-copy next_index%0#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[31]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[84]: 'l-store-copy dyn_tup.foo#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[91]: 'v-load dyn_tup.foo#0' with 'l-load dyn_tup.foo#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[29]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[37]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[88]: 'l-store-copy dyn_tup.bar#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[97]: 'v-load dyn_tup.bar#0' with 'l-load dyn_tup.bar#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[98]: 'l-store-copy dyn_tup.bar#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[106]: 'v-load dyn_tup.bar#0' with 'l-load dyn_tup.bar#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[55]: 'l-store-copy value_at_index%3#0 0'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[64]: 'v-load value_at_index%3#0' with 'l-load value_at_index%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[31]: 'l-store-copy end_of_array%0#0 2'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[43]: 'v-load end_of_array%0#0' with 'l-load end_of_array%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[39]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[50]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[5]: 'l-store-copy item_index_internal%3#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[19]: 'v-load item_index_internal%3#0' with 'l-load item_index_internal%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[28]: 'l-store-copy has_next%0#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[48]: 'v-load has_next%0#0' with 'l-load has_next%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[11]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[31]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[68]: 'l-store-copy item0%1%0#0 1'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[91]: 'v-load item0%1%0#0' with 'l-load item0%1%0#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[98]: 'l-store-copy idx#0 2'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[119]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[14]: 'l-store-copy item_offset%2#0 2'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[55]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted sum_uints_and_lengths_and_trues_for_body@20.ops[22]: 'l-store-copy item_index_internal%3#0 3'
debug: Replaced sum_uints_and_lengths_and_trues_for_body@20.ops[99]: 'v-load item_index_internal%3#0' with 'l-load item_index_internal%3#0'
debug: Inserted test_uint64_return.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_uint64_return.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_uint64_return.ops[40]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_uint64_return.ops[42]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_uint64_return.ops[47]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_uint64_return.ops[49]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_uint64_return.ops[51]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_uint64_return.ops[53]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_uint64_return.ops[56]: 'l-store-copy len_%0#0 0'
debug: Replaced test_uint64_return.ops[58]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_uint64_return.ops[60]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_uint64_return.ops[62]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_uint64_return.ops[64]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_uint64_return.ops[66]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_uint64_return.ops[69]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_uint64_return.ops[71]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_uint64_return.ops[10]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_uint64_return.ops[13]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_uint64_return.ops[15]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_uint64_return.ops[18]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_uint64_return.ops[23]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_uint64_return.ops[26]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_uint64_return.ops[28]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_uint64_return.ops[31]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_uint64_return.ops[36]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_uint64_return.ops[39]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_uint64_return.ops[41]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_uint64_return.ops[44]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_uint64_return.ops[49]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_uint64_return.ops[52]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_uint64_return.ops[20]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_uint64_return.ops[31]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_uint64_return.ops[34]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_uint64_return.ops[45]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_uint64_return.ops[59]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_uint64_return.ops[77]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_uint64_return.ops[7]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_uint64_return.ops[54]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_uint64_return_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_uint64_return_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_uint64_return_for_body@2.ops[13]: 'l-store-copy array%data%3#1 0'
debug: Replaced test_uint64_return_for_body@2.ops[15]: 'v-load array%data%3#1' with 'l-load array%data%3#1'
debug: Inserted test_uint64_return_for_body@2.ops[20]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[22]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_uint64_return_for_body@2.ops[24]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[26]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_uint64_return_for_body@2.ops[29]: 'l-store-copy len_%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[31]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_uint64_return_for_body@2.ops[33]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[35]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_uint64_return_for_body@2.ops[37]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[39]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_uint64_return_for_body@2.ops[42]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[44]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_uint64_return_for_body@2.ops[5]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_uint64_return_for_body@2.ops[8]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_uint64_return_for_body@2.ops[10]: 'l-store-copy array%encoded%3#1 0'
debug: Replaced test_uint64_return_for_body@2.ops[13]: 'v-load array%encoded%3#1' with 'l-load array%encoded%3#1'
debug: Inserted test_uint64_return_for_body@2.ops[18]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[21]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_uint64_return_for_body@2.ops[2]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[21]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_uint64_return_for_body@2.ops[27]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_uint64_return_for_body@2.ops[45]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_bool_return.ops[8]: 'l-store-copy encoded_bool%0#0 0'
debug: Replaced test_bool_return.ops[10]: 'v-load encoded_bool%0#0' with 'l-load encoded_bool%0#0'
debug: Inserted test_bool_return.ops[16]: 'l-store-copy encoded_bool%1#0 0'
debug: Replaced test_bool_return.ops[18]: 'v-load encoded_bool%1#0' with 'l-load encoded_bool%1#0'
debug: Inserted test_bool_return.ops[24]: 'l-store-copy encoded_bool%2#0 0'
debug: Replaced test_bool_return.ops[26]: 'v-load encoded_bool%2#0' with 'l-load encoded_bool%2#0'
debug: Inserted test_bool_return.ops[32]: 'l-store-copy encoded_bool%3#0 0'
debug: Replaced test_bool_return.ops[34]: 'v-load encoded_bool%3#0' with 'l-load encoded_bool%3#0'
debug: Inserted test_bool_return.ops[40]: 'l-store-copy encoded_bool%4#0 0'
debug: Replaced test_bool_return.ops[42]: 'v-load encoded_bool%4#0' with 'l-load encoded_bool%4#0'
debug: Inserted test_bool_return.ops[47]: 'l-store-copy data%0#0 0'
debug: Replaced test_bool_return.ops[49]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted test_bool_return.ops[52]: 'l-store-copy data%1#0 0'
debug: Replaced test_bool_return.ops[54]: 'v-load data%1#0' with 'l-load data%1#0'
debug: Inserted test_bool_return.ops[57]: 'l-store-copy data%2#0 0'
debug: Replaced test_bool_return.ops[59]: 'v-load data%2#0' with 'l-load data%2#0'
debug: Inserted test_bool_return.ops[62]: 'l-store-copy data%3#0 0'
debug: Replaced test_bool_return.ops[64]: 'v-load data%3#0' with 'l-load data%3#0'
debug: Inserted test_bool_return.ops[73]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_bool_return.ops[75]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_bool_return.ops[67]: 'l-store-copy data%4#0 0'
debug: Replaced test_bool_return.ops[70]: 'v-load data%4#0' with 'l-load data%4#0'
debug: Inserted test_bool_return.ops[43]: 'l-store-copy encoded_item%4#0 0'
debug: Replaced test_bool_return.ops[66]: 'v-load encoded_item%4#0' with 'l-load encoded_item%4#0'
debug: Inserted test_bool_return.ops[35]: 'l-store-copy encoded_item%3#0 0'
debug: Replaced test_bool_return.ops[62]: 'v-load encoded_item%3#0' with 'l-load encoded_item%3#0'
debug: Inserted test_bool_return.ops[27]: 'l-store-copy encoded_item%2#0 0'
debug: Replaced test_bool_return.ops[58]: 'v-load encoded_item%2#0' with 'l-load encoded_item%2#0'
debug: Inserted test_bool_return.ops[19]: 'l-store-copy encoded_item%1#0 0'
debug: Replaced test_bool_return.ops[54]: 'v-load encoded_item%1#0' with 'l-load encoded_item%1#0'
debug: Inserted test_bool_return.ops[11]: 'l-store-copy encoded_item%0#0 0'
debug: Replaced test_bool_return.ops[50]: 'v-load encoded_item%0#0' with 'l-load encoded_item%0#0'
debug: Inserted test_bool_return.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_bool_return.ops[75]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_bool_return_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_bool_return_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_bool_return_for_body@2.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_bool_return_for_body@2.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_bool_return_for_body@2.ops[13]: 'l-store-copy encoded_bool%5#0 0'
debug: Replaced test_bool_return_for_body@2.ops[15]: 'v-load encoded_bool%5#0' with 'l-load encoded_bool%5#0'
debug: Inserted test_bool_return_for_body@2.ops[26]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_bool_return_for_body@2.ops[28]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_bool_return_for_body@2.ops[16]: 'l-store-copy encoded_item%5#0 0'
debug: Replaced test_bool_return_for_body@2.ops[19]: 'v-load encoded_item%5#0' with 'l-load encoded_item%5#0'
debug: Inserted test_bool_return_for_body@2.ops[21]: 'l-store-copy data%5#0 0'
debug: Replaced test_bool_return_for_body@2.ops[24]: 'v-load data%5#0' with 'l-load data%5#0'
debug: Inserted test_bool_return_for_body@2.ops[8]: 'l-store-copy to_encode%0#0 0'
debug: Replaced test_bool_return_for_body@2.ops[12]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted test_tuple_return.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_tuple_return.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_tuple_return.ops[23]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_tuple_return.ops[25]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_tuple_return.ops[33]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_tuple_return.ops[35]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_tuple_return.ops[40]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_tuple_return.ops[42]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_tuple_return.ops[44]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_tuple_return.ops[46]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_tuple_return.ops[49]: 'l-store-copy len_%0#0 0'
debug: Replaced test_tuple_return.ops[51]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_tuple_return.ops[53]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_tuple_return.ops[55]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_tuple_return.ops[57]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_tuple_return.ops[59]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_tuple_return.ops[62]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_tuple_return.ops[64]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_tuple_return.ops[10]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_tuple_return.ops[13]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_tuple_return.ops[20]: 'l-store-copy array%encoded_bit%0#1 0'
debug: Replaced test_tuple_return.ops[23]: 'v-load array%encoded_bit%0#1' with 'l-load array%encoded_bit%0#1'
debug: Inserted test_tuple_return.ops[31]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_tuple_return.ops[34]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_tuple_return.ops[39]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_tuple_return.ops[42]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_tuple_return.ops[15]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_tuple_return.ops[23]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_tuple_return.ops[48]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_tuple_return.ops[66]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_tuple_return.ops[7]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_tuple_return.ops[43]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_tuple_return_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_tuple_return_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_tuple_return_for_body@2.ops[6]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_tuple_return_for_body@2.ops[15]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[17]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_tuple_return_for_body@2.ops[36]: 'l-store-copy array%encoded%3#1 0'
debug: Replaced test_tuple_return_for_body@2.ops[38]: 'v-load array%encoded%3#1' with 'l-load array%encoded%3#1'
debug: Inserted test_tuple_return_for_body@2.ops[46]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_tuple_return_for_body@2.ops[48]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_tuple_return_for_body@2.ops[53]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[55]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[57]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[59]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[62]: 'l-store-copy len_%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[64]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[66]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[68]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[70]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[72]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[75]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[77]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[23]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced test_tuple_return_for_body@2.ops[26]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted test_tuple_return_for_body@2.ops[33]: 'l-store-copy array%encoded_bit%1#1 0'
debug: Replaced test_tuple_return_for_body@2.ops[36]: 'v-load array%encoded_bit%1#1' with 'l-load array%encoded_bit%1#1'
debug: Inserted test_tuple_return_for_body@2.ops[44]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced test_tuple_return_for_body@2.ops[47]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted test_tuple_return_for_body@2.ops[52]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[55]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[28]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_tuple_return_for_body@2.ops[36]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_tuple_return_for_body@2.ops[4]: 'l-store-copy i#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[13]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_tuple_return_for_body@2.ops[14]: 'l-store-copy i#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[23]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_tuple_return_for_body@2.ops[63]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[81]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[12]: 'l-store-copy tmp%1#0 1'
debug: Replaced test_tuple_return_for_body@2.ops[35]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_tuple_return_for_body@2.ops[23]: 'l-store-copy tmp%3#0 2'
debug: Replaced test_tuple_return_for_body@2.ops[47]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_tuple_return_for_body@2.ops[2]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced test_tuple_return_for_body@2.ops[60]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_dynamic_tuple_return.ops[9]: 'l-store-copy length%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[11]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted test_dynamic_tuple_return.ops[13]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[15]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_dynamic_tuple_return.ops[17]: 'l-store-copy length_uint16%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[19]: 'v-load length_uint16%0#0' with 'l-load length_uint16%0#0'
debug: Inserted test_dynamic_tuple_return.ops[29]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_dynamic_tuple_return.ops[31]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_dynamic_tuple_return.ops[37]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced test_dynamic_tuple_return.ops[39]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted test_dynamic_tuple_return.ops[42]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced test_dynamic_tuple_return.ops[44]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted test_dynamic_tuple_return.ops[48]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced test_dynamic_tuple_return.ops[50]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted test_dynamic_tuple_return.ops[56]: 'l-store-copy result%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[58]: 'v-load result%0#0' with 'l-load result%0#0'
debug: Inserted test_dynamic_tuple_return.ops[76]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[78]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_dynamic_tuple_return.ops[33]: 'l-store-copy offset_as_uint16%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[36]: 'v-load offset_as_uint16%0#0' with 'l-load offset_as_uint16%0#0'
debug: Inserted test_dynamic_tuple_return.ops[53]: 'l-store-copy next_item_head%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[56]: 'v-load next_item_head%0#0' with 'l-load next_item_head%0#0'
debug: Inserted test_dynamic_tuple_return.ops[65]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[69]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_dynamic_tuple_return.ops[71]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[76]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted test_dynamic_tuple_return.ops[74]: 'l-store-copy r_head_and_tail%0#0 1'
debug: Replaced test_dynamic_tuple_return.ops[79]: 'v-load r_head_and_tail%0#0' with 'l-load r_head_and_tail%0#0'
debug: Inserted test_dynamic_tuple_return.ops[68]: 'l-store-copy l_count%0#0 1'
debug: Replaced test_dynamic_tuple_return.ops[77]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted test_dynamic_tuple_return.ops[26]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced test_dynamic_tuple_return.ops[36]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted test_dynamic_tuple_return.ops[64]: 'l-store-copy result%1#0 0'
debug: Replaced test_dynamic_tuple_return.ops[76]: 'v-load result%1#0' with 'l-load result%1#0'
debug: Inserted test_dynamic_tuple_return.ops[47]: 'l-store-copy encoded_tuple%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[63]: 'v-load encoded_tuple%0#0' with 'l-load encoded_tuple%0#0'
debug: Inserted test_dynamic_tuple_return.ops[6]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[25]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted test_dynamic_tuple_return.ops[23]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced test_dynamic_tuple_return.ops[44]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted test_dynamic_tuple_return.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_dynamic_tuple_return.ops[70]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_dynamic_tuple_return_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_dynamic_tuple_return_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[8]: 'l-store-copy length%1#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[10]: 'v-load length%1#0' with 'l-load length%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[12]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[14]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[16]: 'l-store-copy length_uint16%1#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[18]: 'v-load length_uint16%1#0' with 'l-load length_uint16%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[28]: 'l-store-copy as_bytes%4#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[30]: 'v-load as_bytes%4#0' with 'l-load as_bytes%4#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[36]: 'l-store-copy encoded_tuple_buffer%6#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[38]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[41]: 'l-store-copy encoded_tuple_buffer%7#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[43]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[47]: 'l-store-copy as_bytes%5#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[49]: 'v-load as_bytes%5#0' with 'l-load as_bytes%5#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[55]: 'l-store-copy result%2#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[57]: 'v-load result%2#0' with 'l-load result%2#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[75]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[77]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[32]: 'l-store-copy offset_as_uint16%1#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[35]: 'v-load offset_as_uint16%1#0' with 'l-load offset_as_uint16%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[52]: 'l-store-copy next_item_head%1#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[55]: 'v-load next_item_head%1#0' with 'l-load next_item_head%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[4]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[3]: 'l-store-copy tmp%0#0 1'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[66]: 'l-store-copy arr#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[70]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[72]: 'l-store-copy l_head_and_tail%1#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[77]: 'v-load l_head_and_tail%1#0' with 'l-load l_head_and_tail%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[75]: 'l-store-copy r_head_and_tail%1#0 1'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[80]: 'v-load r_head_and_tail%1#0' with 'l-load r_head_and_tail%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[69]: 'l-store-copy l_count%1#0 1'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[78]: 'v-load l_count%1#0' with 'l-load l_count%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[27]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[37]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[65]: 'l-store-copy result%3#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[77]: 'v-load result%3#0' with 'l-load result%3#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[22]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[49]: 'l-store-copy encoded_tuple%1#0 0'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[65]: 'v-load encoded_tuple%1#0' with 'l-load encoded_tuple%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[7]: 'l-store-copy val_as_bytes%1#0 1'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[27]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted test_dynamic_tuple_return_for_body@2.ops[25]: 'l-store-copy encoded_value%1#0 1'
debug: Replaced test_dynamic_tuple_return_for_body@2.ops[46]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted test_convert_to_array_and_back.ops[1]: 'l-store-copy slot%0#0 0'
debug: Replaced test_convert_to_array_and_back.ops[3]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_convert_to_array_and_back.ops[13]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced test_convert_to_array_and_back.ops[15]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted test_convert_to_array_and_back.ops[18]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced test_convert_to_array_and_back.ops[20]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted test_convert_to_array_and_back.ops[21]: 'l-store-copy extended%0#0 0'
debug: Replaced test_convert_to_array_and_back.ops[24]: 'v-load extended%0#0' with 'l-load extended%0#0'
debug: Inserted test_convert_to_array_and_back.ops[4]: 'l-store-copy slot%0#0 0'
debug: Replaced test_convert_to_array_and_back.ops[7]: 'v-load slot%0#0' with 'l-load slot%0#0'
debug: Inserted test_convert_to_array_and_back.ops[8]: 'l-store-copy mutable#0 0'
debug: Replaced test_convert_to_array_and_back.ops[13]: 'v-load mutable#0' with 'l-load mutable#0'
debug: Inserted test_convert_to_array_and_back.ops[12]: 'l-store-copy expr_value_trimmed%0#0 1'
debug: Replaced test_convert_to_array_and_back.ops[19]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_convert_to_array_and_back.ops[15]: 'l-store-copy mutable#0 1'
debug: Replaced test_convert_to_array_and_back.ops[27]: 'v-load mutable#0' with 'l-load mutable#0'
debug: Inserted test_convert_to_array_and_back_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_convert_to_array_and_back_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[33]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[35]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[43]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[45]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[49]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[51]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[54]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[56]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[20]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[23]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[30]: 'l-store-copy array%encoded_bit%0#1 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[33]: 'v-load array%encoded_bit%0#1' with 'l-load array%encoded_bit%0#1'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[41]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[44]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[60]: 'l-store-copy extended%1#0 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[63]: 'v-load extended%1#0' with 'l-load extended%1#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[49]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[56]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[25]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[33]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[10]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[11]: 'l-store-copy i#0 0'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[20]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[55]: 'l-store-copy mutable#0 1'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[67]: 'v-load mutable#0' with 'l-load mutable#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[9]: 'l-store-copy tmp%1#0 1'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[32]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_convert_to_array_and_back_for_body@2.ops[20]: 'l-store-copy tmp%3#0 2'
debug: Replaced test_convert_to_array_and_back_for_body@2.ops[44]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[14]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[16]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[18]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[20]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[23]: 'l-store-copy len_%0#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[25]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[27]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[29]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[31]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[33]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[36]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[38]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[10]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[13]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[7]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[13]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_convert_to_array_and_back_after_for@4.ops[19]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_convert_to_array_and_back_after_for@4.ops[37]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[23]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_concat_with_arc4_tuple.ops[25]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_concat_with_arc4_tuple.ops[30]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[32]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[34]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[36]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[39]: 'l-store-copy len_%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[41]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[43]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[45]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[47]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[49]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[52]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[54]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[55]: 'l-store-copy prefix#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[57]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted test_concat_with_arc4_tuple.ops[67]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_concat_with_arc4_tuple.ops[69]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_concat_with_arc4_tuple.ops[74]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[76]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[78]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[80]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[83]: 'l-store-copy len_%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[85]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[87]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[89]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[91]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[93]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[96]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[98]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[99]: 'l-store-copy result#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[101]: 'v-load result#0' with 'l-load result#0'
debug: Inserted test_concat_with_arc4_tuple.ops[11]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_concat_with_arc4_tuple.ops[14]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_concat_with_arc4_tuple.ops[20]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_concat_with_arc4_tuple.ops[23]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_concat_with_arc4_tuple.ops[28]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[31]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[66]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_concat_with_arc4_tuple.ops[69]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_concat_with_arc4_tuple.ops[74]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[77]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[16]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_concat_with_arc4_tuple.ops[23]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_concat_with_arc4_tuple.ops[63]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[78]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[37]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[55]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_concat_with_arc4_tuple.ops[85]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[103]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_concat_with_arc4_tuple.ops[7]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_concat_with_arc4_tuple.ops[32]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_concat_with_native_tuple.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[5]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted test_concat_with_native_tuple.ops[23]: 'l-store-copy array%data%1#1 0'
debug: Replaced test_concat_with_native_tuple.ops[25]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted test_concat_with_native_tuple.ops[30]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[32]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_concat_with_native_tuple.ops[34]: 'l-store-copy byte_len%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[36]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted test_concat_with_native_tuple.ops[39]: 'l-store-copy len_%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[41]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted test_concat_with_native_tuple.ops[43]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[45]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted test_concat_with_native_tuple.ops[47]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[49]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted test_concat_with_native_tuple.ops[52]: 'l-store-copy concat_result%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[54]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted test_concat_with_native_tuple.ops[55]: 'l-store-copy prefix#0 0'
debug: Replaced test_concat_with_native_tuple.ops[57]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted test_concat_with_native_tuple.ops[75]: 'l-store-copy array%data%3#1 0'
debug: Replaced test_concat_with_native_tuple.ops[77]: 'v-load array%data%3#1' with 'l-load array%data%3#1'
debug: Inserted test_concat_with_native_tuple.ops[82]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[84]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_concat_with_native_tuple.ops[86]: 'l-store-copy byte_len%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[88]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted test_concat_with_native_tuple.ops[91]: 'l-store-copy len_%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[93]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted test_concat_with_native_tuple.ops[95]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[97]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted test_concat_with_native_tuple.ops[99]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[101]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted test_concat_with_native_tuple.ops[104]: 'l-store-copy concat_result%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[106]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted test_concat_with_native_tuple.ops[107]: 'l-store-copy result#0 0'
debug: Replaced test_concat_with_native_tuple.ops[109]: 'v-load result#0' with 'l-load result#0'
debug: Inserted test_concat_with_native_tuple.ops[11]: 'l-store-copy array%encoded%0#1 0'
debug: Replaced test_concat_with_native_tuple.ops[14]: 'v-load array%encoded%0#1' with 'l-load array%encoded%0#1'
debug: Inserted test_concat_with_native_tuple.ops[20]: 'l-store-copy array%encoded%1#1 0'
debug: Replaced test_concat_with_native_tuple.ops[23]: 'v-load array%encoded%1#1' with 'l-load array%encoded%1#1'
debug: Inserted test_concat_with_native_tuple.ops[28]: 'l-store-copy encoded%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[31]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted test_concat_with_native_tuple.ops[66]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced test_concat_with_native_tuple.ops[69]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted test_concat_with_native_tuple.ops[75]: 'l-store-copy array%encoded%3#1 0'
debug: Replaced test_concat_with_native_tuple.ops[78]: 'v-load array%encoded%3#1' with 'l-load array%encoded%3#1'
debug: Inserted test_concat_with_native_tuple.ops[83]: 'l-store-copy encoded%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[86]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted test_concat_with_native_tuple.ops[16]: 'l-store-copy array%data%0#1 0'
debug: Replaced test_concat_with_native_tuple.ops[23]: 'v-load array%data%0#1' with 'l-load array%data%0#1'
debug: Inserted test_concat_with_native_tuple.ops[72]: 'l-store-copy array%data%2#1 0'
debug: Replaced test_concat_with_native_tuple.ops[79]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted test_concat_with_native_tuple.ops[37]: 'l-store-copy concatenated%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[55]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted test_concat_with_native_tuple.ops[94]: 'l-store-copy concatenated%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[112]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted test_concat_with_native_tuple.ops[7]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced test_concat_with_native_tuple.ops[32]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted test_concat_with_native_tuple.ops[65]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced test_concat_with_native_tuple.ops[90]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted _puya_lib.mem.new_slot.ops[2]: 'l-store-copy free_slot#0 0'
debug: Replaced _puya_lib.mem.new_slot.ops[6]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Inserted _puya_lib.mem.new_slot.ops[7]: 'l-store-copy free_slot#0 2'
debug: Replaced _puya_lib.mem.new_slot.ops[12]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Found 10 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_uint64_array_route@3 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_bool_array_route@4 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_fixed_size_tuple_array_route@5 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_fixed_size_named_tuple_array_route@6 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_dynamic_sized_tuple_array_route@7 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_dynamic_sized_named_tuple_array_route@8 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_nested_array_route@9 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_bit_packed_tuples_route@10 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_sum_uints_and_lengths_and_trues_route@11 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_uint64_return_route@12 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_bool_return_route@13 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_tuple_return_route@14 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_dynamic_tuple_return_route@15 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_convert_to_array_and_back_route@16 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_concat_with_arc4_tuple_route@17 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_test_concat_with_native_tuple_route@18 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_after_if_else@25 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: shared x-stack for main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@28 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26: tmp%0#0
debug: Found 3 edge set/s for _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Found 3 edge set/s for _puya_lib.arc4.dynamic_array_concat_bits
debug: Found 6 edge set/s for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Found 3 edge set/s for test_cases.array.immutable.times
debug: Found 3 edge set/s for test_cases.array.immutable.add_x
debug: Found 3 edge set/s for test_cases.array.immutable.pop_x
debug: Found 3 edge set/s for test_cases.array.immutable.sum_arr
debug: Found 8 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Found 3 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Found 3 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Found 6 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Found 6 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Found 9 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Found 3 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Found 15 edge set/s for test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Found 3 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Found 3 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Found 3 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Found 3 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Found 3 edge set/s for test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: _puya_lib.arc4.dynamic_array_pop_dynamic_element f-stack entry: []
debug: _puya_lib.arc4.dynamic_array_pop_dynamic_element f-stack on first store: ['length_minus_1#0', 'popped_header_offset#0', 'head_and_tail#0', 'popped_offset#0', 'popped#0', 'new_head#0', 'tmp%1#0', 'head_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack entry: ['read_offset#0', 'write_end#0', 'write_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack on first store: ['array_length#0', 'result#0', 'current_bytes#0', 'required_bytes#0', 'result#7']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack entry: ['tmp%4#0']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack on first store: ['new_head#0', 'item_offset_adjustment#0', 'tmp%0#0', 'head_offset#0']
debug: test_cases.array.immutable.times f-stack entry: []
debug: test_cases.array.immutable.times f-stack on first store: ['result#0', '_i#0']
debug: test_cases.array.immutable.add_x f-stack entry: []
debug: test_cases.array.immutable.add_x f-stack on first store: ['i#0']
debug: test_cases.array.immutable.pop_x f-stack entry: []
debug: test_cases.array.immutable.pop_x f-stack on first store: ['_i#0']
debug: test_cases.array.immutable.sum_arr f-stack entry: []
debug: test_cases.array.immutable.sum_arr f-stack on first store: ['total#0', 'array_length%0#0', 'item_index_internal%0#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_bool_array f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_bool_array f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_nested_array f-stack entry: ['extra_arr#0', 'totals#0', 'array_length%0#0', 'item_index_internal%0#0', 'j#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_nested_array f-stack on first store: ['i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples f-stack on first store: ['arr2#0', 'arr7#0', 'arr8#0', 'arr9#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues f-stack entry: ['array_length%1#0', 'array_length%2#0', 'array_length%3#0', 'item_index_internal%1#0', 'item_index_internal%2#0', 'item_index_internal%3#0', 'sum2#10', 'sum3#15', 'tup.baz#0']
debug: test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues f-stack on first store: ['sum4#0', 'sum3#0', 'sum2#0', 'sum1#0', 'array_length%0#0', 'item_index_internal%0#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_uint64_return f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_uint64_return f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_bool_return f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_bool_return f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_tuple_return f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_tuple_return f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back f-stack entry: []
debug: test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back f-stack on first store: ['mutable#0', 'i#0']
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@1
debug: removing explicit jump to fall-through block main_abi_routing@2
debug: removing explicit jump to fall-through block main_switch_case_default@19
debug: removing explicit jump to fall-through block main_switch_case_next@20
debug: removing explicit jump to fall-through block main_after_if_else@25
debug: removing explicit jump to fall-through block main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@26
debug: removing explicit jump to fall-through block main_switch_case_default@23
debug: removing explicit jump to fall-through block main_switch_case_next@24
debug: removing explicit jump to fall-through block main_block@27
debug: removing explicit jump to fall-through block main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@28
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_pop_bit(array: bytes) -> bytes, bytes:
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size(array: bytes, fixed_byte_size: uint64) -> bytes, bytes:
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element(array: bytes) -> bytes, bytes:
debug: removing explicit jump to fall-through block dynamic_array_pop_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_pop_dynamic_element_for_body@2
debug: removing explicit jump to fall-through block dynamic_array_pop_dynamic_element_for_footer@3
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_if_body@1
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_after_if_else@2
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_while_top@3
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_while_body@4
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_body@2
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_footer@3
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@5
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_body@6
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_footer@7
array/immutable.py:370 debug: optimizing TEAL subroutine test_cases.array.immutable.times(n: uint64) -> bytes:
debug: removing explicit jump to fall-through block times_for_header@1
debug: removing explicit jump to fall-through block times_for_body@2
debug: removing explicit jump to fall-through block times_for_footer@3
array/immutable.py:378 debug: optimizing TEAL subroutine test_cases.array.immutable.add_x(arr: bytes, x: uint64) -> bytes:
debug: removing explicit jump to fall-through block add_x_for_header@1
debug: removing explicit jump to fall-through block add_x_for_body@2
debug: removing explicit jump to fall-through block add_x_for_footer@3
array/immutable.py:385 debug: optimizing TEAL subroutine test_cases.array.immutable.pop_x(arr: bytes, x: uint64) -> bytes:
debug: removing explicit jump to fall-through block pop_x_for_header@1
debug: removing explicit jump to fall-through block pop_x_for_body@2
debug: removing explicit jump to fall-through block pop_x_for_footer@3
array/immutable.py:392 debug: optimizing TEAL subroutine test_cases.array.immutable.sum_arr(arr: bytes) -> uint64:
debug: removing explicit jump to fall-through block sum_arr_for_header@1
debug: removing explicit jump to fall-through block sum_arr_for_body@2
debug: removing explicit jump to fall-through block sum_arr_for_footer@3
array/immutable.py:74 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array() -> void:
array/immutable.py:110 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array(length: uint64) -> void:
debug: removing explicit jump to fall-through block test_bool_array_for_header@1
debug: removing explicit jump to fall-through block test_bool_array_for_body@2
debug: removing explicit jump to fall-through block test_bool_array_for_footer@3
debug: removing explicit jump to fall-through block test_bool_array_if_body@5
debug: removing explicit jump to fall-through block test_bool_array_after_if_else@6
debug: removing explicit jump to fall-through block test_bool_array_if_body@7
debug: removing explicit jump to fall-through block test_bool_array_after_if_else@8
debug: removing explicit jump to fall-through block test_bool_array_if_body@9
debug: removing explicit jump to fall-through block test_bool_array_after_if_else@10
debug: removing explicit jump to fall-through block test_bool_array_if_body@11
debug: removing explicit jump to fall-through block test_bool_array_after_if_else@12
debug: removing explicit jump to fall-through block test_bool_array_if_body@13
debug: removing explicit jump to fall-through block test_bool_array_after_if_else@14
array/immutable.py:134 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array() -> void:
debug: removing explicit jump to fall-through block test_fixed_size_tuple_array_for_header@1
debug: removing explicit jump to fall-through block test_fixed_size_tuple_array_for_body@2
debug: removing explicit jump to fall-through block test_fixed_size_tuple_array_for_footer@3
array/immutable.py:152 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array() -> void:
debug: removing explicit jump to fall-through block test_fixed_size_named_tuple_array_for_header@1
debug: removing explicit jump to fall-through block test_fixed_size_named_tuple_array_for_body@2
debug: removing explicit jump to fall-through block test_fixed_size_named_tuple_array_for_footer@3
array/immutable.py:167 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array() -> void:
debug: removing explicit jump to fall-through block test_dynamic_sized_tuple_array_for_header@1
debug: removing explicit jump to fall-through block test_dynamic_sized_tuple_array_for_body@2
debug: removing explicit jump to fall-through block test_dynamic_sized_tuple_array_for_footer@3
debug: removing explicit jump to fall-through block test_dynamic_sized_tuple_array_for_header@5
debug: removing explicit jump to fall-through block test_dynamic_sized_tuple_array_for_body@6
debug: removing explicit jump to fall-through block test_dynamic_sized_tuple_array_for_footer@7
array/immutable.py:186 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array() -> void:
debug: removing explicit jump to fall-through block test_dynamic_sized_named_tuple_array_for_header@1
debug: removing explicit jump to fall-through block test_dynamic_sized_named_tuple_array_for_body@2
debug: removing explicit jump to fall-through block test_dynamic_sized_named_tuple_array_for_footer@3
debug: removing explicit jump to fall-through block test_dynamic_sized_named_tuple_array_for_header@5
debug: removing explicit jump to fall-through block test_dynamic_sized_named_tuple_array_for_body@6
debug: removing explicit jump to fall-through block test_dynamic_sized_named_tuple_array_for_footer@7
array/immutable.py:205 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array(arr_to_add: uint64, arr: bytes) -> bytes:
debug: removing explicit jump to fall-through block test_nested_array_for_header@1
debug: removing explicit jump to fall-through block test_nested_array_for_body@2
debug: removing explicit jump to fall-through block test_nested_array_for_header@3
debug: removing explicit jump to fall-through block test_nested_array_for_body@4
debug: removing explicit jump to fall-through block test_nested_array_for_footer@5
debug: removing explicit jump to fall-through block test_nested_array_for_footer@7
debug: removing explicit jump to fall-through block test_nested_array_for_header@9
debug: removing explicit jump to fall-through block test_nested_array_for_body@10
debug: removing explicit jump to fall-through block test_nested_array_for_footer@11
array/immutable.py:223 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples() -> void:
debug: removing explicit jump to fall-through block test_bit_packed_tuples_for_header@1
debug: removing explicit jump to fall-through block test_bit_packed_tuples_for_body@2
debug: removing explicit jump to fall-through block test_bit_packed_tuples_for_footer@3
array/immutable.py:288 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues(arr1: bytes, arr2: bytes, arr3: bytes, arr4: bytes) -> uint64, uint64, uint64, uint64:
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_header@1
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_body@2
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_footer@3
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_header@5
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_body@6
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_if_body@7
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_after_if_else@8
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_footer@9
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_header@11
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_body@12
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_if_body@13
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_after_if_else@14
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_if_body@15
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_after_if_else@16
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_footer@17
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_header@19
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_body@20
debug: removing explicit jump to fall-through block sum_uints_and_lengths_and_trues_for_footer@21
array/immutable.py:315 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return(append: uint64) -> bytes:
debug: removing explicit jump to fall-through block test_uint64_return_for_header@1
debug: removing explicit jump to fall-through block test_uint64_return_for_body@2
debug: removing explicit jump to fall-through block test_uint64_return_for_footer@3
array/immutable.py:322 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return(append: uint64) -> bytes:
debug: removing explicit jump to fall-through block test_bool_return_for_header@1
debug: removing explicit jump to fall-through block test_bool_return_for_body@2
debug: removing explicit jump to fall-through block test_bool_return_for_footer@3
array/immutable.py:329 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return(append: uint64) -> bytes:
debug: removing explicit jump to fall-through block test_tuple_return_for_header@1
debug: removing explicit jump to fall-through block test_tuple_return_for_body@2
debug: removing explicit jump to fall-through block test_tuple_return_for_footer@3
array/immutable.py:336 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return(append: uint64) -> bytes:
debug: removing explicit jump to fall-through block test_dynamic_tuple_return_for_header@1
debug: removing explicit jump to fall-through block test_dynamic_tuple_return_for_body@2
debug: removing explicit jump to fall-through block test_dynamic_tuple_return_for_footer@3
array/immutable.py:343 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back(arr: bytes, append: uint64) -> bytes:
debug: removing explicit jump to fall-through block test_convert_to_array_and_back_for_header@1
debug: removing explicit jump to fall-through block test_convert_to_array_and_back_for_body@2
debug: removing explicit jump to fall-through block test_convert_to_array_and_back_for_footer@3
array/immutable.py:353 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple(arg: bytes) -> bytes:
array/immutable.py:361 debug: optimizing TEAL subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple(arg.0: bytes, arg.1: bytes) -> bytes:
debug: optimizing TEAL subroutine _puya_lib.mem.new_slot() -> uint64:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
info: Writing array/out_unoptimized/Contract.approval.teal
info: Writing array/out_unoptimized/Contract.clear.teal
info: Writing array/out_unoptimized/Contract.approval.bin
info: Writing array/out_unoptimized/Contract.clear.bin
info: Writing array/out_unoptimized/Contract.approval.puya.map
info: Writing array/out_unoptimized/Contract.clear.puya.map
info: Writing array/out_unoptimized/StaticSizeContract.approval.teal
info: Writing array/out_unoptimized/StaticSizeContract.clear.teal
info: Writing array/out_unoptimized/StaticSizeContract.approval.bin
info: Writing array/out_unoptimized/StaticSizeContract.clear.bin
info: Writing array/out_unoptimized/StaticSizeContract.approval.puya.map
info: Writing array/out_unoptimized/StaticSizeContract.clear.puya.map
info: Writing array/out_unoptimized/ImmutableArrayContract.approval.teal
info: Writing array/out_unoptimized/ImmutableArrayContract.clear.teal
info: Writing array/out_unoptimized/ImmutableArrayContract.approval.bin
info: Writing array/out_unoptimized/ImmutableArrayContract.clear.bin
info: Writing array/out_unoptimized/ImmutableArrayContract.approval.puya.map
info: Writing array/out_unoptimized/ImmutableArrayContract.clear.puya.map