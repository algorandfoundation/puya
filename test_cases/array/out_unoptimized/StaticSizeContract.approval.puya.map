{
  "version": 3,
  "sources": [
    "../static_size.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;;;;;AAEiB;;AAAA;AAAK;AAAL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACJ;AACkB;;AAAA;AAAA;AAAA;;AAAA;AAAV;AAArB;AAA4B;AAAP;;AAAA;;AAAA;AAArB;;;AACgB;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;;AAAA;;AAAA;;AACa;;AAAV;AAAX;;;AACiB;;AAAA;AAAsB;AAAA;AAAtB;AAAL;;AAGD;;AAAA;;AAAA;AAAX;;;AACiB;;AAAA;;AAAA;AAGS;;AAAA;AAAA;AAAU;AAAA;AAAA;AAAV;AAAR;AAAV;;AAAA;AAAA;;AAVa;;AAAA;AAAA;AAAA;;;;;AASJ;;AAAA;;AAAA;;;;AAJA;AAAiB;;AAAA;AAAjB;AAAL;;;;;AAMR;;AAAA;;AAAA;AA7II;AAAa;AAAb;;AAER;;;AAEQ;AAAa;AAAb;AAE6C;;;AAAA;;AAAA;;AAAA;;AAAA;AACjB;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAHrB;AACK;;;;;;;;;;AADL;AACsB;AADtjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmB;;AAAI;AAAJ;AAAnB;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;;AAAI;;AAAJ;AAAvB;AAAA;AAAP;AACO;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;;AAAI;AAAJ;AAAA;AAAU;;AAAI;AAAJ;AAAX;;AAAA;AAAvB;AAAA;AAAP;AAHK;;AAAA;AAAA;AAAA;;;;;AAKmC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAb;;;AAA/B;;AAA+B;;;AAA/B;AAAA;AACO;;;AAAP;;AAAA;AAER;;;AAEc;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACN;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAP;AACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACK;AAAA;AAAA;AAAP;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACA;AAER;;;AAIc;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACN;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;AAER;;;;;;AAEc;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAN;AACO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEmB;;AAAS;AAAT;AAAV;AAAjB;AAAwB;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAI;;AAAJ;AAAS;AAAT;AAAX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACP;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAe;;AAAS;;AAAT;AAAf;AAAP;AAEQ;AAAR;;AACR;AAAA;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AACA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AACR;;AAAA;;AAAA;AAER;;;;;;AAEc;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAN;AACO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEmB;;AAAS;AAAT;AAAV;AAAjB;AAAwB;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACQ;AAAR;;AACR;AAAA;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACe;AAAA;;;;;AAAf;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AAEG;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACX;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAEA;;AAAA;AAER;;;AAEc;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAN;;AACA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAEQ;AAAR;AACR;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACqB;AAAT;;AAAA;AAAA;;;;;;;;;;;AAEJ;;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;AAAA;AAEM;;AACA;AAAA;AAAA;AAAA;AACA;;AACA;;;AACQ;AAAA;AAAA;AAAA;AAAR;AALN;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAU4B;AAAA;AAAA;AAAA;AAAa;AAAb;AAAZ;AAA6C;AAAA;AAAA;AAAA;AAAa;AAAA;AAAA;AAAA;AAAb;AAAZ;AAA1C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAER;;;AAEc;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAN;AACqB;;AAAc;;AAAd;AAAV;AAAA;AAAA;;AAAA;AAAX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACqB;;AAAc;;AAAd;AAAV;AAAA;AAAA;;AAAA;AAAX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEU;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AACO;AAAA;AAAA;AAAkB;;AAAlB;AAAP;AACO;AAAA;AAAwB;;AAAxB;AAAP;AACO;AAAA;AAAA;AAAQ;AAAR;AAAA;AAAA;AAAA;;;AAAQ;AAAR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAe;;AAAc;;AAAd;AAAf;AAAP;AACO;AAAA;AAAA;AAAQ;AAAR;AAAA;AAAA;AAAA;;;AAAQ;AAAR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAe;;AAAc;;AAAd;AAAf;AAAP;AAEO;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGR;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AACY;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AACG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;AAAA;AAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAA;AAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAA;AAAK;;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAK;;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AAEO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAP;;AAAA;AA7HR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;AAAA;;AAqGK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA1BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA3EL;;;AA2EK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAlBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzDL;;;AAAA;AAyDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAnBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAtCL;;;AAAA;AAsCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA9BL;;;AA8BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAVA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApBL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAhBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAJL;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAIK;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAJL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 16 144 128"
    },
    "11": {
      "op": "bytecblock 0x \"count\" 0x151f7c75 0x00"
    },
    "27": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "61": {
      "op": "store 0"
    },
    "63": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "65": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "68": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.__init__",
      "op": "callsub __init__"
    },
    "71": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "74": {
      "op": "return",
      "stack_out": []
    },
    "75": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "78": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "79": {
      "op": "dupn 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "81": {
      "block": "dynamic_array_concat_bits_block@0",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "83": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "84": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0"
      ]
    },
    "85": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "87": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "89": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "90": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "91": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ]
    },
    "92": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "95": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "97": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "98": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "100": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "101": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "103": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "105": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "106": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "108": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0"
      ]
    },
    "109": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0",
        "8"
      ]
    },
    "110": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "111": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0"
      ]
    },
    "112": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "114": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "115": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "117": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0"
      ]
    },
    "118": {
      "op": "intc_2 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0",
        "8"
      ]
    },
    "119": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "120": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "121": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "123": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%9#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%9#0"
      ]
    },
    "124": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "127": {
      "block": "dynamic_array_concat_bits_if_body@1",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0"
      ]
    },
    "129": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "131": {
      "op": "-",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%10#0"
      ]
    },
    "132": {
      "op": "bzero",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%11#0"
      ]
    },
    "133": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%11#0",
        "result#0"
      ]
    },
    "135": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0",
        "tmp%11#0"
      ]
    },
    "136": {
      "op": "concat",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#7"
      ]
    },
    "137": {
      "op": "frame_bury 7",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "139": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "141": {
      "op": "frame_bury 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "143": {
      "op": "intc_0 // 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "144": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "146": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0"
      ]
    },
    "148": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0",
        "16"
      ]
    },
    "149": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "150": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_offset#0"
      ]
    },
    "151": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "153": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "155": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_end#0"
      ]
    },
    "156": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "158": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "160": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "162": {
      "op": "<",
      "defined_out": [
        "tmp%15#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%15#0"
      ]
    },
    "163": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "166": {
      "block": "dynamic_array_concat_bits_while_body@4",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)"
      ]
    },
    "168": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "170": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "171": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "173": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0"
      ]
    },
    "174": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0"
      ]
    },
    "176": {
      "op": "frame_dig 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "178": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "179": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "181": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%16#0"
      ]
    },
    "183": {
      "op": "setbit",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0"
      ]
    },
    "184": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "186": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "187": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "188": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "190": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "192": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "193": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "195": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "198": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "200": {
      "op": "frame_bury 0"
    },
    "202": {
      "retsub": true,
      "op": "retsub"
    },
    "203": {
      "subroutine": "test_cases.array.static_size.path_length",
      "params": {
        "path#0": "uint64"
      },
      "block": "path_length",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "206": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "dx#0"
      ]
    },
    "207": {
      "op": "dup",
      "stack_out": [
        "dx#0",
        "point.y#0"
      ]
    },
    "208": {
      "block": "path_length_block@0",
      "stack_in": [
        "dx#0",
        "point.y#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "path#0 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "path#0 (copy)"
      ]
    },
    "210": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0"
      ]
    },
    "211": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0",
        "0"
      ]
    },
    "212": {
      "op": "intc 4 // 144",
      "defined_out": [
        "0",
        "144",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0",
        "0",
        "144"
      ]
    },
    "214": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#1"
      ]
    },
    "215": {
      "op": "intc 4 // 144",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#1",
        "144"
      ]
    },
    "217": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array_item%0#0"
      ]
    },
    "218": {
      "op": "dup",
      "defined_out": [
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "219": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0"
      ]
    },
    "220": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "221": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "array_item%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array_item%0#0",
        "aggregate%extract%0#1"
      ]
    },
    "222": {
      "op": "swap",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "aggregate%extract%0#1",
        "array_item%0#0"
      ]
    },
    "223": {
      "op": "intc_2 // 8",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "aggregate%extract%0#1",
        "array_item%0#0",
        "8"
      ]
    },
    "224": {
      "op": "dup",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "aggregate%extract%0#1",
        "array_item%0#0",
        "8",
        "8"
      ]
    },
    "225": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "aggregate%extract%0#1",
        "aggregate%extract%1#1"
      ]
    },
    "226": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0"
      ]
    },
    "227": {
      "op": "intc_0 // 0",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ]
    },
    "228": {
      "op": "frame_dig -1",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "path#0 (copy)"
      ]
    },
    "230": {
      "op": "loads",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%1#0"
      ]
    },
    "231": {
      "op": "len",
      "defined_out": [
        "bytes_len%0#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "bytes_len%0#0"
      ]
    },
    "232": {
      "op": "intc 4 // 144",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "bytes_len%0#0",
        "144"
      ]
    },
    "234": {
      "op": "/",
      "defined_out": [
        "array_len%0#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0"
      ]
    },
    "235": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_len%0#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "1"
      ]
    },
    "236": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0"
      ]
    },
    "237": {
      "op": "intc_1 // 1",
      "defined_out": [
        "array_len%0#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ]
    },
    "238": {
      "block": "path_length_for_header@1",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point_idx#0"
      ]
    },
    "240": {
      "op": "frame_dig 5",
      "defined_out": [
        "array_len%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point_idx#0",
        "array_len%0#0"
      ]
    },
    "242": {
      "op": "<",
      "defined_out": [
        "array_len%0#0",
        "continue_looping%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "continue_looping%0#0"
      ]
    },
    "243": {
      "op": "bz path_length_after_for@10",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ]
    },
    "246": {
      "block": "path_length_for_body@2",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "path#0 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "path#0 (copy)"
      ]
    },
    "248": {
      "op": "loads",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "slot_contents%2#0"
      ]
    },
    "249": {
      "op": "frame_dig 6",
      "defined_out": [
        "point_idx#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "slot_contents%2#0",
        "point_idx#0"
      ]
    },
    "251": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "point_idx#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "slot_contents%2#0",
        "point_idx#0",
        "144"
      ]
    },
    "253": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#1",
        "point_idx#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%1#1"
      ]
    },
    "254": {
      "op": "intc 4 // 144",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%1#1",
        "144"
      ]
    },
    "256": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%1#0",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "array_item%1#0"
      ]
    },
    "257": {
      "op": "dup",
      "defined_out": [
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "258": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "0"
      ]
    },
    "259": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "260": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%8#1",
        "array_item%1#0",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "array_item%1#0",
        "aggregate%extract%8#1"
      ]
    },
    "261": {
      "op": "swap",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "aggregate%extract%8#1",
        "array_item%1#0"
      ]
    },
    "262": {
      "op": "intc_2 // 8",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "aggregate%extract%8#1",
        "array_item%1#0",
        "8"
      ]
    },
    "263": {
      "op": "dup",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "aggregate%extract%8#1",
        "array_item%1#0",
        "8",
        "8"
      ]
    },
    "264": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%8#1",
        "aggregate%extract%9#1",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "aggregate%extract%8#1",
        "aggregate%extract%9#1"
      ]
    },
    "265": {
      "op": "btoi",
      "defined_out": [
        "point_idx#0",
        "values%7#0",
        "values%8#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "values%7#0",
        "values%8#0"
      ]
    },
    "266": {
      "op": "swap",
      "defined_out": [
        "point.x#0",
        "point_idx#0",
        "values%8#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "values%8#0",
        "point.x#0"
      ]
    },
    "267": {
      "op": "dup",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "values%8#0",
        "point.x#0",
        "point.x#0 (copy)"
      ]
    },
    "268": {
      "op": "cover 2",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0",
        "values%8#0",
        "point.x#0"
      ]
    },
    "270": {
      "op": "cover 2",
      "defined_out": [
        "point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0",
        "point.x#0",
        "point.y#0"
      ]
    },
    "272": {
      "op": "frame_bury 1",
      "defined_out": [
        "point.x#0",
        "point.y#0",
        "point_idx#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "274": {
      "op": "frame_dig 2",
      "defined_out": [
        "point.x#0",
        "point.y#0",
        "point_idx#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "276": {
      "op": "b<",
      "defined_out": [
        "point.x#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0",
        "tmp%0#0"
      ]
    },
    "277": {
      "op": "bz path_length_else_body@4",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0"
      ]
    },
    "280": {
      "block": "path_length_if_body@3",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0",
        "last_point.x#0"
      ]
    },
    "282": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0",
        "tmp%1#0"
      ]
    },
    "283": {
      "op": "swap",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%1#0",
        "point.x#0"
      ]
    },
    "284": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "285": {
      "op": "-",
      "defined_out": [
        "dx#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "dx#0"
      ]
    },
    "286": {
      "op": "frame_bury 0",
      "defined_out": [
        "dx#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ]
    },
    "288": {
      "block": "path_length_after_if_else@5",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.y#0"
      ]
    },
    "290": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "292": {
      "op": "<",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%7#0"
      ]
    },
    "293": {
      "op": "bz path_length_else_body@7",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ]
    },
    "296": {
      "block": "path_length_if_body@6",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "last_point.y#0"
      ]
    },
    "298": {
      "op": "frame_dig 1",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "last_point.y#0",
        "point.y#0"
      ]
    },
    "300": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "dy#0"
      ]
    },
    "301": {
      "block": "path_length_after_if_else@8",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "dy#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "dx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "dy#0",
        "dx#0"
      ]
    },
    "303": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dx#0 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "dy#0",
        "dx#0 (copy)",
        "dx#0"
      ]
    },
    "304": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "dy#0",
        "tmp%10#0"
      ]
    },
    "305": {
      "op": "swap",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%10#0",
        "dy#0"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dy#0",
        "dy#0 (copy)",
        "tmp%10#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%10#0",
        "dy#0 (copy)",
        "dy#0"
      ]
    },
    "307": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "308": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%12#0"
      ]
    },
    "309": {
      "op": "sqrt",
      "defined_out": [
        "dx#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%13#0"
      ]
    },
    "310": {
      "op": "frame_dig 4",
      "defined_out": [
        "dx#0",
        "length#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%13#0",
        "length#0"
      ]
    },
    "312": {
      "op": "+",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "length#0"
      ]
    },
    "313": {
      "op": "frame_bury 4",
      "defined_out": [
        "dx#0",
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ]
    },
    "315": {
      "block": "path_length_for_footer@9",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point_idx#0"
      ]
    },
    "317": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point_idx#0",
        "1"
      ]
    },
    "318": {
      "op": "+",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point_idx#0"
      ]
    },
    "319": {
      "op": "frame_bury 6",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ]
    },
    "321": {
      "op": "b path_length_for_header@1"
    },
    "324": {
      "block": "path_length_else_body@7",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.y#0"
      ]
    },
    "326": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "328": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "dy#0"
      ]
    },
    "329": {
      "op": "b path_length_after_if_else@8"
    },
    "332": {
      "block": "path_length_else_body@4",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "point.x#0"
      ],
      "op": "btoi",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%4#0"
      ]
    },
    "333": {
      "op": "frame_dig 2",
      "defined_out": [
        "last_point.x#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%4#0",
        "last_point.x#0"
      ]
    },
    "335": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "336": {
      "op": "-",
      "defined_out": [
        "dx#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "dx#0"
      ]
    },
    "337": {
      "op": "frame_bury 0",
      "defined_out": [
        "dx#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ]
    },
    "339": {
      "op": "b path_length_after_if_else@5"
    },
    "342": {
      "block": "path_length_after_for@10",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array_len%0#0",
        "point_idx#0",
        "length#0"
      ]
    },
    "344": {
      "op": "frame_bury 0"
    },
    "346": {
      "retsub": true,
      "op": "retsub"
    },
    "347": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__init__",
      "params": {},
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "\"count\""
      ]
    },
    "348": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "\"count\"",
        "0"
      ]
    },
    "349": {
      "op": "app_global_put",
      "stack_out": []
    },
    "350": {
      "retsub": true,
      "op": "retsub"
    },
    "351": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_array",
      "params": {
        "x1#0": "bytes",
        "y1#0": "uint64",
        "x2#0": "bytes",
        "y2#0": "uint64"
      },
      "block": "test_array",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "354": {
      "block": "test_array_block@0",
      "stack_in": [],
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "\"count\""
      ]
    },
    "355": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "\"count\"",
        "0"
      ]
    },
    "356": {
      "op": "app_global_put",
      "stack_out": []
    },
    "357": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "360": {
      "op": "cover 4",
      "stack_out": [
        "tmp%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "362": {
      "op": "cover 3",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "364": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "366": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "367": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "370": {
      "op": "cover 9",
      "stack_out": [
        "tmp%9#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "372": {
      "op": "cover 8",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "374": {
      "op": "cover 7",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "376": {
      "op": "cover 6",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "378": {
      "op": "cover 5",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "380": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "383": {
      "op": "cover 14",
      "stack_out": [
        "tmp%14#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "385": {
      "op": "cover 13",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "387": {
      "op": "cover 12",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "389": {
      "op": "cover 11",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "391": {
      "op": "cover 10",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "393": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "394": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x",
        "0x0000000000000000",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "0x0000000000000000"
      ]
    },
    "404": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%encoded%0#1"
      ]
    },
    "405": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%encoded%0#1",
        "0"
      ]
    },
    "406": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%encoded%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%encoded%0#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "407": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%encoded%1#1"
      ]
    },
    "408": {
      "op": "cover 4",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "410": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#1",
        "aggregate%encoded%1#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "411": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%1#1",
        "0x"
      ]
    },
    "412": {
      "op": "swap",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "413": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%encoded%2#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%encoded%2#1"
      ]
    },
    "414": {
      "op": "swap",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%encoded%2#1",
        "tmp%1#0"
      ]
    },
    "415": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#1",
        "aggregate%encoded%1#1",
        "aggregate%encoded%2#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%encoded%2#1",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "416": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#1",
        "aggregate%encoded%1#1",
        "aggregate%encoded%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "aggregate%as_Encoded(uint8[32])%0#1",
        "aggregate%encoded%3#1"
      ]
    },
    "417": {
      "op": "swap",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "aggregate%encoded%3#1",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "418": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%encoded%4#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "tmp%3#0",
        "aggregate%encoded%4#1"
      ]
    },
    "419": {
      "op": "swap",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%4#1",
        "tmp%3#0"
      ]
    },
    "420": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1"
      ]
    },
    "421": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "tmp%4#0 (copy)"
      ]
    },
    "423": {
      "op": "len",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%value_len%0#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%value_len%0#1"
      ]
    },
    "424": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%value_len%0#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%value_len%0#1",
        "64"
      ]
    },
    "426": {
      "op": "<=",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%len_ok%0#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%len_ok%0#1"
      ]
    },
    "427": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1"
      ]
    },
    "428": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "64"
      ]
    },
    "430": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#1",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%bzero%0#1"
      ]
    },
    "431": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%bzero%0#1",
        "tmp%4#0"
      ]
    },
    "433": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%0#1",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%5#1",
        "aggregate%as_Encoded(uint512)%0#1"
      ]
    },
    "434": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%encoded%6#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%6#1"
      ]
    },
    "435": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%6#1",
        "0x"
      ]
    },
    "436": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%encoded%7#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%1#1",
        "aggregate%encoded%7#1"
      ]
    },
    "437": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%8#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%8#1"
      ]
    },
    "438": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%8#1",
        "0x"
      ]
    },
    "439": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%9#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%9#1"
      ]
    },
    "440": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%9#1",
        "0x"
      ]
    },
    "441": {
      "op": "swap",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "0x",
        "aggregate%encoded%9#1"
      ]
    },
    "442": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%10#1"
      ]
    },
    "443": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%10#1",
        "0x"
      ]
    },
    "444": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x",
        "aggregate%encoded%10#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%10#1",
        "0x",
        "x1#0 (copy)"
      ]
    },
    "446": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%11#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%11#1"
      ]
    },
    "447": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%11#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "y1#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%11#1",
        "y1#0 (copy)"
      ]
    },
    "449": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#1",
        "aggregate%encoded%10#1",
        "aggregate%encoded%11#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%11#1",
        "aggregate%as_Encoded(uint64)%3#1"
      ]
    },
    "450": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1"
      ]
    },
    "451": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "tmp%5#0"
      ]
    },
    "453": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#1",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%as_Encoded(uint64)%4#1"
      ]
    },
    "454": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%as_Encoded(uint64)%4#1",
        "0x"
      ]
    },
    "455": {
      "op": "swap",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "0x",
        "aggregate%as_Encoded(uint64)%4#1"
      ]
    },
    "456": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%13#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%13#1"
      ]
    },
    "457": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%13#1",
        "tmp%6#0"
      ]
    },
    "459": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#1",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%13#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%13#1",
        "aggregate%as_Encoded(uint64)%5#1"
      ]
    },
    "460": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%14#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%14#1"
      ]
    },
    "461": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%14#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%14#1",
        "aggregate%as_Encoded(uint8[32])%1#1"
      ]
    },
    "463": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%15#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%15#1"
      ]
    },
    "464": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%15#1",
        "tmp%8#0"
      ]
    },
    "466": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1"
      ]
    },
    "467": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "tmp%9#0 (copy)"
      ]
    },
    "469": {
      "op": "len",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "aggregate%value_len%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "aggregate%value_len%1#1"
      ]
    },
    "470": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "aggregate%value_len%1#1",
        "64"
      ]
    },
    "472": {
      "op": "<=",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "aggregate%len_ok%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "aggregate%len_ok%1#1"
      ]
    },
    "473": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1"
      ]
    },
    "474": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "64"
      ]
    },
    "476": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%1#1",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "aggregate%bzero%1#1"
      ]
    },
    "477": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "aggregate%bzero%1#1",
        "tmp%9#0"
      ]
    },
    "479": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%1#1",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%16#1",
        "aggregate%as_Encoded(uint512)%1#1"
      ]
    },
    "480": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%17#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%17#1"
      ]
    },
    "481": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%17#1",
        "0x"
      ]
    },
    "482": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%18#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%12#1",
        "aggregate%encoded%18#1"
      ]
    },
    "483": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%19#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%19#1"
      ]
    },
    "484": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%19#1",
        "0x"
      ]
    },
    "485": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%10#1",
        "aggregate%encoded%20#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%10#1",
        "aggregate%encoded%20#1"
      ]
    },
    "486": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%21#1"
      ]
    },
    "487": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%21#1",
        "0x"
      ]
    },
    "488": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "aggregate%encoded%21#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "x2#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%21#1",
        "0x",
        "x2#0 (copy)"
      ]
    },
    "490": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%22#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%22#1"
      ]
    },
    "491": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%22#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "y2#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%22#1",
        "y2#0 (copy)"
      ]
    },
    "493": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%6#1",
        "aggregate%encoded%21#1",
        "aggregate%encoded%22#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%22#1",
        "aggregate%as_Encoded(uint64)%6#1"
      ]
    },
    "494": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1"
      ]
    },
    "495": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "tmp%10#0"
      ]
    },
    "497": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%7#1",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%as_Encoded(uint64)%7#1"
      ]
    },
    "498": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%as_Encoded(uint64)%7#1",
        "0x"
      ]
    },
    "499": {
      "op": "swap",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "0x",
        "aggregate%as_Encoded(uint64)%7#1"
      ]
    },
    "500": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%24#1",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%24#1"
      ]
    },
    "501": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%24#1",
        "tmp%11#0"
      ]
    },
    "503": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%8#1",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%24#1",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%24#1",
        "aggregate%as_Encoded(uint64)%8#1"
      ]
    },
    "504": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%25#1",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%25#1"
      ]
    },
    "505": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%2#1",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%25#1",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%25#1",
        "aggregate%as_Encoded(uint8[32])%2#1"
      ]
    },
    "507": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%26#1",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%26#1"
      ]
    },
    "508": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%26#1",
        "tmp%13#0"
      ]
    },
    "510": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1"
      ]
    },
    "511": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "tmp%14#0 (copy)"
      ]
    },
    "513": {
      "op": "len",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "aggregate%value_len%2#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "aggregate%value_len%2#1"
      ]
    },
    "514": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "aggregate%value_len%2#1",
        "64"
      ]
    },
    "516": {
      "op": "<=",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "aggregate%len_ok%2#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "aggregate%len_ok%2#1"
      ]
    },
    "517": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1"
      ]
    },
    "518": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "64"
      ]
    },
    "520": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%2#1",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "aggregate%bzero%2#1"
      ]
    },
    "521": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "aggregate%bzero%2#1",
        "tmp%14#0"
      ]
    },
    "523": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%2#1",
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1"
      ],
      "stack_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%27#1",
        "aggregate%as_Encoded(uint512)%2#1"
      ]
    },
    "524": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%28#1"
      ],
      "stack_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%28#1"
      ]
    },
    "525": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%28#1",
        "0x"
      ]
    },
    "526": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%29#1"
      ],
      "stack_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%23#1",
        "aggregate%encoded%29#1"
      ]
    },
    "527": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%30#1"
      ],
      "stack_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%30#1"
      ]
    },
    "528": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%30#1",
        "0x"
      ]
    },
    "529": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%31#1"
      ],
      "stack_out": [
        "aggregate%encoded%21#1",
        "aggregate%encoded%31#1"
      ]
    },
    "530": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%32#1"
      ],
      "stack_out": [
        "aggregate%encoded%32#1"
      ]
    },
    "531": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%32#1",
        "0x"
      ]
    },
    "532": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "533": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "536": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "537": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "539": {
      "op": "stores",
      "defined_out": [
        "path#0"
      ],
      "stack_out": [
        "path#0"
      ]
    },
    "540": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "1"
      ]
    },
    "541": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "path#0"
      ]
    },
    "542": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0"
      ]
    },
    "543": {
      "block": "test_array_for_header@1",
      "stack_in": [
        "path#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0"
      ]
    },
    "545": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "547": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "548": {
      "op": "bz test_array_after_for@4",
      "stack_out": [
        "path#0",
        "i#0"
      ]
    },
    "551": {
      "block": "test_array_for_body@2",
      "stack_in": [
        "path#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0"
      ]
    },
    "553": {
      "op": "dup",
      "defined_out": [
        "path#0",
        "path#0 (copy)"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "path#0 (copy)"
      ]
    },
    "554": {
      "op": "loads",
      "defined_out": [
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%0#0"
      ]
    },
    "555": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "557": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "558": {
      "op": "cover 2",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)"
      ]
    },
    "560": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "i#0",
        "i#0 (copy)",
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "144"
      ]
    },
    "562": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#1",
        "i#0",
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#1"
      ]
    },
    "563": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#1",
        "144"
      ]
    },
    "565": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array_item%0#0"
      ]
    },
    "566": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "array_item%0#0",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array_item%0#0",
        "16"
      ]
    },
    "567": {
      "op": "intc 5 // 128",
      "defined_out": [
        "128",
        "16",
        "array_item%0#0",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array_item%0#0",
        "16",
        "128"
      ]
    },
    "569": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "aggregate%extract%2#1"
      ]
    },
    "570": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%2#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "aggregate%extract%2#1",
        "8"
      ]
    },
    "571": {
      "op": "dup",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "aggregate%extract%2#1",
        "8",
        "8"
      ]
    },
    "572": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "aggregate%extract%4#1"
      ]
    },
    "573": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "path#0",
        "values%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "values%3#0"
      ]
    },
    "574": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "values%3#0",
        "i#0 (copy)"
      ]
    },
    "576": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "path#0",
        "values%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "values%3#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "577": {
      "op": "+",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%15#0",
        "values%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "values%3#0",
        "tmp%15#0"
      ]
    },
    "578": {
      "op": "==",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%16#0"
      ]
    },
    "579": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0"
      ]
    },
    "580": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "path#0 (copy)"
      ]
    },
    "582": {
      "op": "loads",
      "defined_out": [
        "i#0",
        "path#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "583": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0",
        "i#0 (copy)"
      ]
    },
    "585": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0",
        "i#0 (copy)",
        "144"
      ]
    },
    "587": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#1",
        "i#0",
        "path#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#1"
      ]
    },
    "588": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#1",
        "144"
      ]
    },
    "590": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%1#0",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array_item%1#0"
      ]
    },
    "591": {
      "op": "intc_3 // 16",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array_item%1#0",
        "16"
      ]
    },
    "592": {
      "op": "intc 5 // 128",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array_item%1#0",
        "16",
        "128"
      ]
    },
    "594": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%10#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "aggregate%extract%10#1"
      ]
    },
    "595": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "aggregate%extract%10#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "aggregate%extract%10#1",
        "48"
      ]
    },
    "597": {
      "op": "intc_3 // 16",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "aggregate%extract%10#1",
        "48",
        "16"
      ]
    },
    "598": {
      "op": "extract3",
      "defined_out": [
        "i#0",
        "path#0",
        "values%12#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "values%12#0"
      ]
    },
    "599": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "path#0",
        "values%12#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "values%12#0",
        "0"
      ]
    },
    "600": {
      "op": "intc_2 // 8",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "values%12#0",
        "0",
        "8"
      ]
    },
    "601": {
      "op": "extract3",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "602": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "i#0 (copy)"
      ]
    },
    "604": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)",
        "path#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "606": {
      "op": "+",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0"
      ]
    },
    "607": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%0#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "tmp%18#0"
      ]
    },
    "608": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "609": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0"
      ]
    },
    "610": {
      "op": "swap",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "path#0"
      ]
    },
    "611": {
      "op": "loads",
      "defined_out": [
        "i#0",
        "path#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "612": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0",
        "i#0 (copy)"
      ]
    },
    "614": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0",
        "i#0 (copy)",
        "144"
      ]
    },
    "616": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%2#1",
        "i#0",
        "path#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%2#1"
      ]
    },
    "617": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%2#1",
        "144"
      ]
    },
    "619": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%2#0",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "array_item%2#0"
      ]
    },
    "620": {
      "op": "intc_3 // 16",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "array_item%2#0",
        "16"
      ]
    },
    "621": {
      "op": "intc 5 // 128",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "array_item%2#0",
        "16",
        "128"
      ]
    },
    "623": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%19#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "aggregate%extract%19#1"
      ]
    },
    "624": {
      "op": "pushint 48 // 48",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "aggregate%extract%19#1",
        "48"
      ]
    },
    "626": {
      "op": "intc_3 // 16",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "aggregate%extract%19#1",
        "48",
        "16"
      ]
    },
    "627": {
      "op": "extract3",
      "defined_out": [
        "i#0",
        "path#0",
        "values%19#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "values%19#0"
      ]
    },
    "628": {
      "op": "intc_2 // 8",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "values%19#0",
        "8"
      ]
    },
    "629": {
      "op": "dup",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "values%19#0",
        "8",
        "8"
      ]
    },
    "630": {
      "op": "extract3",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "631": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "i#0 (copy)"
      ]
    },
    "633": {
      "op": "intc_1 // 1",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "634": {
      "op": "+",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "tmp%20#0"
      ]
    },
    "635": {
      "op": "swap",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "tmp%20#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "636": {
      "op": "uncover 2",
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%20#0",
        "reinterpret_biguint%1#0",
        "i#0"
      ]
    },
    "638": {
      "op": "intc_1 // 1",
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%20#0",
        "reinterpret_biguint%1#0",
        "i#0",
        "1"
      ]
    },
    "639": {
      "op": "+",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%20#0",
        "reinterpret_biguint%1#0",
        "tmp%21#0"
      ]
    },
    "640": {
      "op": "uncover 2",
      "stack_out": [
        "path#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "tmp%21#0",
        "tmp%20#0"
      ]
    },
    "642": {
      "op": "*",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "tmp%22#0"
      ]
    },
    "643": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "tmp%23#0"
      ]
    },
    "644": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%24#0"
      ]
    },
    "645": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "i#0"
      ]
    },
    "646": {
      "block": "test_array_for_footer@3",
      "stack_in": [
        "path#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0"
      ]
    },
    "648": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "649": {
      "op": "+",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0"
      ]
    },
    "650": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0"
      ]
    },
    "652": {
      "op": "b test_array_for_header@1"
    },
    "655": {
      "block": "test_array_after_for@4",
      "stack_in": [
        "path#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0"
      ]
    },
    "657": {
      "op": "dup",
      "defined_out": [
        "path#0",
        "path#0 (copy)"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "path#0 (copy)"
      ]
    },
    "658": {
      "op": "loads",
      "defined_out": [
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%3#0"
      ]
    },
    "659": {
      "op": "dup",
      "defined_out": [
        "path#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "660": {
      "op": "len",
      "defined_out": [
        "bytes_len%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%3#0",
        "bytes_len%0#0"
      ]
    },
    "661": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "bytes_len%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%3#0",
        "bytes_len%0#0",
        "144"
      ]
    },
    "663": {
      "op": "/",
      "defined_out": [
        "array_len%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%3#0",
        "array_len%0#0"
      ]
    },
    "664": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%3#0",
        "as_bytes%0#0"
      ]
    },
    "665": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%3#0",
        "as_u16_bytes%0#0"
      ]
    },
    "668": {
      "op": "swap",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "as_u16_bytes%0#0",
        "slot_contents%3#0"
      ]
    },
    "669": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "converted_array%0#0"
      ]
    },
    "670": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "converted_array%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "converted_array%0#0",
        "\"a\""
      ]
    },
    "673": {
      "op": "box_del",
      "defined_out": [
        "converted_array%0#0",
        "path#0",
        "{box_del}"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "converted_array%0#0",
        "{box_del}"
      ]
    },
    "674": {
      "op": "pop",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "converted_array%0#0"
      ]
    },
    "675": {
      "op": "pushbytes \"a\"",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "converted_array%0#0",
        "\"a\""
      ]
    },
    "678": {
      "op": "swap",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "\"a\"",
        "converted_array%0#0"
      ]
    },
    "679": {
      "op": "box_put",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0"
      ]
    },
    "680": {
      "callsub": "test_cases.array.static_size.path_length",
      "op": "callsub path_length",
      "defined_out": [
        "path#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%25#0"
      ]
    },
    "683": {
      "op": "frame_bury 0"
    },
    "685": {
      "retsub": true,
      "op": "retsub"
    },
    "686": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "params": {
        "some_more.0#0": "bytes",
        "some_more.1#0": "bytes"
      },
      "block": "test_extend_from_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "689": {
      "block": "test_extend_from_tuple_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "690": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "691": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "692": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "695": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "696": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "698": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "699": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "700": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "701": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "0x"
      ]
    },
    "702": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arr#0",
        "slot_contents%0#0",
        "some_more.0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "some_more.0#0 (copy)"
      ]
    },
    "704": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "aggregate%encoded%1#1"
      ]
    },
    "705": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%encoded%1#1",
        "arr#0",
        "slot_contents%0#0",
        "some_more.1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "aggregate%encoded%1#1",
        "some_more.1#0 (copy)"
      ]
    },
    "707": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%2#1",
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "aggregate%encoded%2#1"
      ]
    },
    "708": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "aggregate%encoded%2#1",
        "0x"
      ]
    },
    "709": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ]
    },
    "710": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "711": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "713": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "714": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "715": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "716": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0"
      ]
    },
    "717": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%0#0"
      ],
      "stack_out": [
        "arr#0",
        "bytes_len%0#0"
      ]
    },
    "718": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "bytes_len%0#0"
      ],
      "stack_out": [
        "arr#0",
        "bytes_len%0#0",
        "16"
      ]
    },
    "719": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_len%0#0"
      ]
    },
    "720": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_len%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_len%0#0",
        "1"
      ]
    },
    "721": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "722": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%1#0",
        "arr#0 (copy)"
      ]
    },
    "724": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0",
        "slot_contents%2#0"
      ]
    },
    "725": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "tmp%1#0"
      ]
    },
    "726": {
      "op": "intc_3 // 16",
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "tmp%1#0",
        "16"
      ]
    },
    "727": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#1",
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%0#1"
      ]
    },
    "728": {
      "op": "intc_3 // 16",
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%0#1",
        "16"
      ]
    },
    "729": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "last#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0"
      ]
    },
    "730": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "last#0",
        "last#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "last#0 (copy)"
      ]
    },
    "731": {
      "op": "frame_dig -1",
      "stack_out": [
        "arr#0",
        "last#0",
        "last#0 (copy)",
        "some_more.1#0 (copy)"
      ]
    },
    "733": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "last#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "tmp%2#0"
      ]
    },
    "734": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "last#0"
      ]
    },
    "735": {
      "op": "swap",
      "stack_out": [
        "last#0",
        "arr#0"
      ]
    },
    "736": {
      "op": "loads",
      "defined_out": [
        "last#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%3#0"
      ]
    },
    "737": {
      "op": "dup",
      "defined_out": [
        "last#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "738": {
      "op": "len",
      "defined_out": [
        "bytes_len%1#0",
        "last#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%3#0",
        "bytes_len%1#0"
      ]
    },
    "739": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "slot_contents%3#0",
        "bytes_len%1#0",
        "16"
      ]
    },
    "740": {
      "op": "/",
      "defined_out": [
        "array_len%1#0",
        "last#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%3#0",
        "array_len%1#0"
      ]
    },
    "741": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "last#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%3#0",
        "as_bytes%0#0"
      ]
    },
    "742": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "last#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%3#0",
        "as_u16_bytes%0#0"
      ]
    },
    "745": {
      "op": "swap",
      "stack_out": [
        "last#0",
        "as_u16_bytes%0#0",
        "slot_contents%3#0"
      ]
    },
    "746": {
      "op": "concat",
      "defined_out": [
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0"
      ]
    },
    "747": {
      "op": "dup",
      "defined_out": [
        "last#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "748": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "last#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "result#0 (copy)",
        "0"
      ]
    },
    "749": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "array_length%0#0"
      ]
    },
    "750": {
      "op": "intc_1 // 1",
      "stack_out": [
        "last#0",
        "result#0",
        "array_length%0#0",
        "1"
      ]
    },
    "751": {
      "op": "-",
      "defined_out": [
        "last#0",
        "result#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%3#0"
      ]
    },
    "752": {
      "op": "dig 1",
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%3#0",
        "result#0 (copy)"
      ]
    },
    "754": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%0#1",
        "last#0",
        "result#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%3#0",
        "aggregate%array_trimmed%0#1"
      ]
    },
    "757": {
      "op": "swap",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#1",
        "tmp%3#0"
      ]
    },
    "758": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#1",
        "tmp%3#0",
        "16"
      ]
    },
    "759": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#1",
        "aggregate%bytes_offset%1#1",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#1",
        "aggregate%bytes_offset%1#1"
      ]
    },
    "760": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#1",
        "aggregate%bytes_offset%1#1",
        "16"
      ]
    },
    "761": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%1#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "array_item%1#0"
      ]
    },
    "762": {
      "op": "uncover 2",
      "stack_out": [
        "result#0",
        "array_item%1#0",
        "last#0"
      ]
    },
    "764": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%4#0"
      ]
    },
    "765": {
      "op": "assert",
      "stack_out": [
        "result#0"
      ]
    },
    "766": {
      "retsub": true,
      "op": "retsub"
    },
    "767": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "params": {
        "some_more#0": "bytes"
      },
      "block": "test_extend_from_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "770": {
      "block": "test_extend_from_arc4_tuple_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "771": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "772": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "773": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "776": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "777": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "779": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "780": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "781": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "782": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "some_more#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "some_more#0 (copy)"
      ]
    },
    "784": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "785": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "787": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "788": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "789": {
      "op": "loads",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0"
      ]
    },
    "790": {
      "op": "dup",
      "defined_out": [
        "slot_contents%1#0",
        "slot_contents%1#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "slot_contents%1#0 (copy)"
      ]
    },
    "791": {
      "op": "len",
      "defined_out": [
        "bytes_len%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "bytes_len%0#0"
      ]
    },
    "792": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "bytes_len%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "bytes_len%0#0",
        "16"
      ]
    },
    "793": {
      "op": "/",
      "defined_out": [
        "array_len%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "array_len%0#0"
      ]
    },
    "794": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "as_bytes%0#0"
      ]
    },
    "795": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "798": {
      "op": "swap",
      "stack_out": [
        "as_u16_bytes%0#0",
        "slot_contents%1#0"
      ]
    },
    "799": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0"
      ],
      "stack_out": [
        "converted_array%0#0"
      ]
    },
    "800": {
      "retsub": true,
      "op": "retsub"
    },
    "801": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "804": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_len%4#0"
      ]
    },
    "805": {
      "op": "dupn 3",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ]
    },
    "807": {
      "block": "test_bool_array_block@0",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "0x"
      ]
    },
    "808": {
      "op": "dup",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "0x",
        "0x"
      ]
    },
    "809": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "encoded_array%0#0"
      ]
    },
    "810": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "813": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "814": {
      "op": "uncover 2",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "816": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "817": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "arr#0"
      ]
    },
    "818": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "819": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "bytes_len%0#0"
      ]
    },
    "820": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "bytes_len%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "bytes_len%0#0",
        "1"
      ]
    },
    "821": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "array_len%0#0"
      ]
    },
    "822": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "array_len%0#0",
        "0"
      ]
    },
    "823": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "824": {
      "op": "assert",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "825": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)"
      ]
    },
    "827": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "828": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "829": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "1"
      ]
    },
    "830": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "831": {
      "op": "intc_1 // 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "832": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0"
      ]
    },
    "834": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "836": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "837": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "840": {
      "block": "test_bool_array_for_body@2",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0"
      ]
    },
    "842": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "844": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "845": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "846": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "847": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0",
        "arr#0"
      ]
    },
    "849": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "850": {
      "op": "cover 2",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "tmp%3#0",
        "arr#0 (copy)"
      ]
    },
    "852": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "tmp%3#0",
        "slot_contents%1#0"
      ]
    },
    "853": {
      "op": "swap",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ]
    },
    "854": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "855": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "856": {
      "op": "uncover 2",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "858": {
      "op": "setbit",
      "defined_out": [
        "aggregate%as_Encoded(bool8)%0#1",
        "arr#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "aggregate%as_Encoded(bool8)%0#1"
      ]
    },
    "859": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(bool8)%0#1",
        "arr#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "aggregate%as_Encoded(bool8)%0#1",
        "0x"
      ]
    },
    "860": {
      "op": "swap",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "0x",
        "aggregate%as_Encoded(bool8)%0#1"
      ]
    },
    "861": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "arr#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "aggregate%encoded%1#1"
      ]
    },
    "862": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "aggregate%encoded%1#1",
        "0x"
      ]
    },
    "863": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%4#0"
      ]
    },
    "864": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "865": {
      "op": "stores",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "866": {
      "block": "test_bool_array_for_footer@3",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0"
      ]
    },
    "868": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "869": {
      "op": "+",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0"
      ]
    },
    "870": {
      "op": "frame_bury 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "872": {
      "op": "b test_bool_array_for_header@1"
    },
    "875": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "877": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "878": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%2#0"
      ]
    },
    "879": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "bytes_len%1#0"
      ]
    },
    "880": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "bytes_len%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "bytes_len%1#0",
        "1"
      ]
    },
    "881": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "array_len%1#0"
      ]
    },
    "882": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "array_len%1#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "array_len%1#0",
        "length#0 (copy)"
      ]
    },
    "884": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "885": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "886": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0",
        "slot%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot%1#0"
      ]
    },
    "889": {
      "op": "dig 1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot%1#0",
        "arr#0 (copy)"
      ]
    },
    "891": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot%1#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot%1#0",
        "slot_contents%3#0"
      ]
    },
    "892": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot%1#0",
        "slot_contents%3#0",
        "slot%1#0 (copy)"
      ]
    },
    "894": {
      "op": "swap",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%3#0"
      ]
    },
    "895": {
      "op": "stores",
      "defined_out": [
        "arr#0",
        "arr2#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr2#0"
      ]
    },
    "896": {
      "op": "dig 1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr2#0",
        "arr#0 (copy)"
      ]
    },
    "898": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr2#0",
        "slot_contents%4#0"
      ]
    },
    "899": {
      "op": "swap",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%4#0",
        "arr2#0"
      ]
    },
    "900": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%4#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "901": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%4#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%4#0",
        "arr2#0",
        "slot_contents%5#0"
      ]
    },
    "902": {
      "op": "uncover 2",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr2#0",
        "slot_contents%5#0",
        "slot_contents%4#0"
      ]
    },
    "904": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr2#0",
        "concat%1#0"
      ]
    },
    "905": {
      "op": "dig 1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr2#0",
        "concat%1#0",
        "arr2#0 (copy)"
      ]
    },
    "907": {
      "op": "swap",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)",
        "concat%1#0"
      ]
    },
    "908": {
      "op": "stores",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr2#0"
      ]
    },
    "909": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%6#0"
      ]
    },
    "910": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "bytes_len%3#0"
      ]
    },
    "911": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "bytes_len%3#0",
        "1"
      ]
    },
    "912": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%3#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "array_len%3#0"
      ]
    },
    "913": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "array_len%3#0",
        "length#0 (copy)"
      ]
    },
    "915": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_len%3#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "array_len%3#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "917": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_len%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "array_len%3#0",
        "tmp%6#0"
      ]
    },
    "918": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "919": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "920": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "count#0"
      ]
    },
    "921": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "923": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "count#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%7#0"
      ]
    },
    "924": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%4#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "bytes_len%4#0"
      ]
    },
    "925": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "bytes_len%4#0",
        "1"
      ]
    },
    "926": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%4#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "array_len%4#0"
      ]
    },
    "927": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "array_len%4#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "929": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "array_len%4#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "930": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr#0",
        "array_len%4#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "932": {
      "block": "test_bool_array_for_header@5",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "934": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_len%4#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0",
        "array_len%4#0"
      ]
    },
    "936": {
      "op": "<",
      "defined_out": [
        "array_len%4#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "937": {
      "op": "bz test_bool_array_after_for@10",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "940": {
      "block": "test_bool_array_for_body@6",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "942": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%8#0"
      ]
    },
    "943": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%8#0",
        "item_index_internal%0#0"
      ]
    },
    "945": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%8#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "946": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#1",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%0#1"
      ]
    },
    "947": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%0#1",
        "1"
      ]
    },
    "948": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "array_item%0#0"
      ]
    },
    "949": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_item%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "array_item%0#0",
        "0"
      ]
    },
    "950": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "val#0"
      ]
    },
    "951": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "count#9",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "val#0",
        "count#9"
      ]
    },
    "953": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "count#9",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "val#0"
      ]
    },
    "955": {
      "op": "bz test_bool_array_after_if_else@8",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "958": {
      "block": "test_bool_array_if_body@7",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#0"
      ]
    },
    "960": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#0",
        "1"
      ]
    },
    "961": {
      "op": "+",
      "defined_out": [
        "count#0",
        "count#9"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#9"
      ]
    },
    "962": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0",
        "count#9"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "964": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#0"
      ]
    },
    "966": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "968": {
      "block": "test_bool_array_for_footer@9",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "970": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "971": {
      "op": "+",
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "972": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "974": {
      "op": "b test_bool_array_for_header@5"
    },
    "977": {
      "block": "test_bool_array_after_for@10",
      "stack_in": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_len%4#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#0"
      ]
    },
    "979": {
      "op": "frame_bury 0"
    },
    "981": {
      "retsub": true,
      "op": "retsub"
    },
    "982": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_arc4_conversion",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "985": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_len%2#0"
      ]
    },
    "986": {
      "op": "dupn 3",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ]
    },
    "988": {
      "block": "test_arc4_conversion_block@0",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "0x"
      ]
    },
    "989": {
      "op": "dup",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "0x",
        "0x"
      ]
    },
    "990": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "encoded_array%0#0"
      ]
    },
    "991": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "994": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "995": {
      "op": "uncover 2",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "997": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "998": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "arr#0"
      ]
    },
    "999": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "1000": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "bytes_len%0#0"
      ]
    },
    "1001": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "bytes_len%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "bytes_len%0#0",
        "8"
      ]
    },
    "1002": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "array_len%0#0"
      ]
    },
    "1003": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "array_len%0#0",
        "0"
      ]
    },
    "1004": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1005": {
      "op": "assert",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "1006": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)"
      ]
    },
    "1008": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "1009": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1010": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "1"
      ]
    },
    "1011": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1012": {
      "op": "intc_1 // 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1013": {
      "block": "test_arc4_conversion_for_header@1",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0"
      ]
    },
    "1015": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1017": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1018": {
      "op": "bz test_arc4_conversion_after_for@4",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1021": {
      "block": "test_arc4_conversion_for_body@2",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0"
      ]
    },
    "1023": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1024": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "1026": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "1027": {
      "op": "cover 2",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "tmp%2#0",
        "arr#0 (copy)"
      ]
    },
    "1029": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "tmp%2#0",
        "slot_contents%1#0"
      ]
    },
    "1030": {
      "op": "swap",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%2#0"
      ]
    },
    "1031": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%2#0",
        "0x"
      ]
    },
    "1032": {
      "op": "swap",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "0x",
        "tmp%2#0"
      ]
    },
    "1033": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "arr#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "aggregate%encoded%1#1"
      ]
    },
    "1034": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "aggregate%encoded%1#1",
        "0x"
      ]
    },
    "1035": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ]
    },
    "1036": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1037": {
      "op": "stores",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1038": {
      "block": "test_arc4_conversion_for_footer@3",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0"
      ]
    },
    "1040": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1041": {
      "op": "+",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "i#0"
      ]
    },
    "1042": {
      "op": "frame_bury 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1044": {
      "op": "b test_arc4_conversion_for_header@1"
    },
    "1047": {
      "block": "test_arc4_conversion_after_for@4",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "1049": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1050": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "slot_contents%2#0"
      ]
    },
    "1051": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "bytes_len%1#0"
      ]
    },
    "1052": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "bytes_len%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "bytes_len%1#0",
        "8"
      ]
    },
    "1053": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "array_len%1#0"
      ]
    },
    "1054": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "array_len%1#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "array_len%1#0",
        "length#0 (copy)"
      ]
    },
    "1056": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "tmp%4#0"
      ]
    },
    "1057": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "1058": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0",
        "count#0"
      ]
    },
    "1059": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "1061": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "count#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "1062": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%2#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "bytes_len%2#0"
      ]
    },
    "1063": {
      "op": "intc_2 // 8",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "bytes_len%2#0",
        "8"
      ]
    },
    "1064": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%2#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "array_len%2#0"
      ]
    },
    "1065": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "array_len%2#0",
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1067": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "array_len%2#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "1068": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr#0",
        "array_len%2#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1070": {
      "block": "test_arc4_conversion_for_header@5",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "1072": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_len%2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0",
        "array_len%2#0"
      ]
    },
    "1074": {
      "op": "<",
      "defined_out": [
        "array_len%2#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "1075": {
      "op": "bz test_arc4_conversion_after_for@10",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1078": {
      "block": "test_arc4_conversion_for_body@6",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "1080": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%4#0"
      ]
    },
    "1081": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0"
      ]
    },
    "1083": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1084": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#1",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%4#0",
        "aggregate%bytes_offset%0#1"
      ]
    },
    "1085": {
      "op": "intc_2 // 8",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "slot_contents%4#0",
        "aggregate%bytes_offset%0#1",
        "8"
      ]
    },
    "1086": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1087": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "item_index_internal%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "0x"
      ]
    },
    "1088": {
      "op": "b!=",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1089": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "count#9",
        "item_index_internal%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%5#0",
        "count#9"
      ]
    },
    "1091": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "count#9",
        "item_index_internal%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1093": {
      "op": "bz test_arc4_conversion_after_if_else@8",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1096": {
      "block": "test_arc4_conversion_if_body@7",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#0"
      ]
    },
    "1098": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#0",
        "1"
      ]
    },
    "1099": {
      "op": "+",
      "defined_out": [
        "count#0",
        "count#9"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#9"
      ]
    },
    "1100": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0",
        "count#9"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1102": {
      "block": "test_arc4_conversion_after_if_else@8",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "count#0"
      ]
    },
    "1104": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1106": {
      "block": "test_arc4_conversion_for_footer@9",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "1108": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1109": {
      "op": "+",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "1110": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1112": {
      "op": "b test_arc4_conversion_for_header@5"
    },
    "1115": {
      "block": "test_arc4_conversion_after_for@10",
      "stack_in": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "0"
      ]
    },
    "1116": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "aggregate%as_bytes%0#1"
      ]
    },
    "1117": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#1"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "aggregate%len_u16%0#1"
      ]
    },
    "1120": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%len_u16%0#1"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "aggregate%len_u16%0#1",
        "0x"
      ]
    },
    "1121": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%3#1"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "aggregate%encoded%3#1"
      ]
    },
    "1122": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "aggregate%encoded%3#1",
        "0x"
      ]
    },
    "1123": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arc4_arr#0"
      ]
    },
    "1124": {
      "op": "frame_dig 4",
      "defined_out": [
        "arc4_arr#0",
        "arr#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arc4_arr#0",
        "arr#0"
      ]
    },
    "1126": {
      "op": "loads",
      "defined_out": [
        "arc4_arr#0",
        "arr#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arc4_arr#0",
        "slot_contents%5#0"
      ]
    },
    "1127": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0"
      ]
    },
    "1128": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "1129": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0",
        "extract_to_end%0#0"
      ]
    },
    "1132": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "len%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0",
        "len%0#0"
      ]
    },
    "1133": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "concat%1#0",
        "len%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0",
        "len%0#0",
        "8"
      ]
    },
    "1134": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0",
        "div_floor%0#0"
      ]
    },
    "1135": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0",
        "as_bytes%0#0"
      ]
    },
    "1136": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1139": {
      "op": "swap",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%1#0"
      ]
    },
    "1140": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%1#0",
        "0"
      ]
    },
    "1141": {
      "op": "uncover 2",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "1143": {
      "op": "replace3",
      "stack_out": [
        "array_len%2#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0",
        "i#0",
        "arc4_arr#0"
      ]
    },
    "1144": {
      "op": "frame_bury 0"
    },
    "1146": {
      "retsub": true,
      "op": "retsub"
    },
    "1147": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "params": {
        "arc4_arr#0": "bytes"
      },
      "block": "sum_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1150": {
      "block": "sum_array_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "1151": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "1152": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "1153": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "1156": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1157": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "1159": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1160": {
      "op": "dupn 2",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1162": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "1163": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc4_arr#0 (copy)",
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "arc4_arr#0 (copy)"
      ]
    },
    "1165": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "extract_to_end%0#0"
      ]
    },
    "1168": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1169": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1171": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "1172": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1173": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "total#0"
      ]
    },
    "1174": {
      "op": "swap",
      "defined_out": [
        "arr#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "arr#0"
      ]
    },
    "1175": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "slot_contents%1#0"
      ]
    },
    "1176": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "bytes_len%0#0"
      ]
    },
    "1177": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "bytes_len%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "bytes_len%0#0",
        "8"
      ]
    },
    "1178": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0"
      ]
    },
    "1179": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1180": {
      "block": "sum_array_for_header@1",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1182": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_len%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_len%0#0"
      ]
    },
    "1184": {
      "op": "<",
      "defined_out": [
        "array_len%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1185": {
      "op": "bz sum_array_after_for@4",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1188": {
      "block": "sum_array_for_body@2",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "1190": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0"
      ]
    },
    "1191": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0",
        "item_index_internal%0#0"
      ]
    },
    "1193": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1194": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#1",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%0#1"
      ]
    },
    "1195": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%0#1",
        "8"
      ]
    },
    "1196": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "1197": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1198": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ]
    },
    "1200": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1201": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1203": {
      "block": "sum_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1205": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1206": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1207": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1209": {
      "op": "b sum_array_for_header@1"
    },
    "1212": {
      "block": "sum_array_after_for@4",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1214": {
      "op": "frame_bury 0"
    },
    "1216": {
      "retsub": true,
      "op": "retsub"
    },
    "1217": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.xtra",
      "params": {},
      "block": "xtra_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1218": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "1219": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1220": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1221": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1222": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1223": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "\"count\""
      ]
    },
    "1224": {
      "op": "swap",
      "stack_out": [
        "\"count\"",
        "tmp%0#0"
      ]
    },
    "1225": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1226": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1228": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "1229": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%1#0",
        "0",
        "\"count\""
      ]
    },
    "1230": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1231": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1232": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ]
    },
    "1234": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.more",
      "op": "callsub more",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1237": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1238": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0",
        "\"count\""
      ]
    },
    "1239": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1240": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0"
      ]
    },
    "1241": {
      "op": "itob",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1242": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0"
      ]
    },
    "1244": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1246": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ]
    },
    "1248": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%4#0",
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1250": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1252": {
      "retsub": true,
      "op": "retsub"
    },
    "1253": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.more",
      "params": {},
      "block": "more_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1254": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "1255": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1256": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1257": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1258": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1259": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1260": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "1261": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%1#0",
        "0",
        "\"count\""
      ]
    },
    "1262": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1263": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1264": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1265": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "0",
        "\"count\""
      ]
    },
    "1266": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1267": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "1268": {
      "op": "*",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1269": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1270": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "0x"
      ]
    },
    "1271": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "0x",
        "tmp%1#0"
      ]
    },
    "1273": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%encoded%0#1"
      ]
    },
    "1274": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded%0#1",
        "tmp%3#0"
      ]
    },
    "1275": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1"
      ]
    },
    "1276": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%1#1",
        "0x"
      ]
    },
    "1277": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1278": {
      "retsub": true,
      "op": "retsub"
    },
    "1279": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool",
      "params": {},
      "block": "test_arc4_bool",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1282": {
      "block": "test_arc4_bool_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "1283": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "1284": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "1285": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "1288": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1289": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "1291": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1292": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1293": {
      "op": "txn Sender",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1295": {
      "op": "txn Receiver",
      "defined_out": [
        "arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1297": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "1298": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%2#0",
        "0x00"
      ]
    },
    "1299": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "1300": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "1302": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%3#0"
      ]
    },
    "1303": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%3#0",
        "arr#0 (copy)"
      ]
    },
    "1305": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%3#0",
        "slot_contents%0#0"
      ]
    },
    "1306": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0"
      ]
    },
    "1307": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0",
        "0x"
      ]
    },
    "1308": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "tmp%3#0"
      ]
    },
    "1309": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "aggregate%encoded%1#1"
      ]
    },
    "1310": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "aggregate%encoded%1#1",
        "0x"
      ]
    },
    "1311": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0"
      ]
    },
    "1312": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1313": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1315": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "1316": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1317": {
      "op": "txn Sender",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "1319": {
      "op": "txn Receiver",
      "defined_out": [
        "arr#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1321": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "1322": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%7#0",
        "0x00"
      ]
    },
    "1323": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%7#0",
        "0x00",
        "0"
      ]
    },
    "1324": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0x00",
        "0",
        "tmp%7#0"
      ]
    },
    "1326": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "1327": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%8#0",
        "arr#0 (copy)"
      ]
    },
    "1329": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%8#0",
        "slot_contents%1#0"
      ]
    },
    "1330": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%8#0"
      ]
    },
    "1331": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%8#0",
        "0x"
      ]
    },
    "1332": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "0x",
        "tmp%8#0"
      ]
    },
    "1333": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%3#1",
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "aggregate%encoded%3#1"
      ]
    },
    "1334": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "aggregate%encoded%3#1",
        "0x"
      ]
    },
    "1335": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%9#0"
      ]
    },
    "1336": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%1#0"
      ]
    },
    "1337": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%1#0",
        "arr#0 (copy)"
      ]
    },
    "1339": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "concat%1#0"
      ]
    },
    "1340": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1341": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "1342": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "aggregate%as_bytes%0#1"
      ]
    },
    "1343": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "aggregate%len_u16%0#1"
      ]
    },
    "1346": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr#0",
        "aggregate%len_u16%0#1",
        "0x"
      ]
    },
    "1347": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%5#1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "aggregate%encoded%5#1"
      ]
    },
    "1348": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr#0",
        "aggregate%encoded%5#1",
        "0x"
      ]
    },
    "1349": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1350": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "arr#0 (copy)"
      ]
    },
    "1352": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ]
    },
    "1353": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ]
    },
    "1354": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "bytes_len%0#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "bytes_len%0#0"
      ]
    },
    "1355": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "bytes_len%0#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "bytes_len%0#0",
        "1"
      ]
    },
    "1356": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_len%0#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "array_len%0#0"
      ]
    },
    "1357": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%2#0",
        "array_len%0#0",
        "dyn_arr#0"
      ]
    },
    "1359": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "array_len%0#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ]
    },
    "1361": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "array_len%0#0"
      ]
    },
    "1363": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array_len%0#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "array_len%0#0",
        "8"
      ]
    },
    "1364": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1367": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0"
      ]
    },
    "1368": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1370": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1371": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)",
        "0"
      ]
    },
    "1372": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_length%0#0"
      ]
    },
    "1373": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_length%0#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_length%0#0",
        "2"
      ]
    },
    "1375": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%10#0"
      ]
    },
    "1376": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1377": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1378": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%11#0"
      ]
    },
    "1379": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "dyn_arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%11#0",
        "3"
      ]
    },
    "1381": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%12#0"
      ]
    },
    "1382": {
      "error": "expected 3 bytes",
      "op": "assert // expected 3 bytes",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1383": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1384": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)",
        "0"
      ]
    },
    "1385": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#1",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_length%0#1"
      ]
    },
    "1386": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_length%0#1",
        "0"
      ]
    },
    "1387": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%0#1",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%lt%0#1"
      ]
    },
    "1388": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1389": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1390": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%0#1",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_trimmed%0#1"
      ]
    },
    "1393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_trimmed%0#1",
        "0"
      ]
    },
    "1394": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%0#0"
      ]
    },
    "1395": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%0#0",
        "0x00"
      ]
    },
    "1396": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%0#0",
        "0x00",
        "0"
      ]
    },
    "1397": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "0x00",
        "0",
        "array_item%0#0"
      ]
    },
    "1399": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "values%0#0"
      ]
    },
    "1400": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "values%0#0",
        "0"
      ]
    },
    "1401": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0"
      ]
    },
    "1402": {
      "op": "txn Sender",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1404": {
      "op": "txn Receiver",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "1406": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0",
        "tmp%16#0"
      ]
    },
    "1407": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%17#0"
      ]
    },
    "1408": {
      "error": "expected correct value at 0",
      "op": "assert // expected correct value at 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1409": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1410": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)",
        "0"
      ]
    },
    "1411": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#1",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_length%1#1"
      ]
    },
    "1412": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_length%1#1",
        "1"
      ]
    },
    "1413": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%1#1",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%lt%1#1"
      ]
    },
    "1414": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1415": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1416": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%1#1",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_trimmed%1#1"
      ]
    },
    "1419": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_trimmed%1#1",
        "1"
      ]
    },
    "1420": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%1#0"
      ]
    },
    "1421": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%1#0",
        "0x00"
      ]
    },
    "1422": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%1#0",
        "0x00",
        "0"
      ]
    },
    "1423": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "0x00",
        "0",
        "array_item%1#0"
      ]
    },
    "1425": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "values%1#0"
      ]
    },
    "1426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "values%1#0",
        "0"
      ]
    },
    "1427": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%18#0"
      ]
    },
    "1428": {
      "op": "txn Sender",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1430": {
      "op": "txn Receiver",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1432": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%18#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%18#0",
        "tmp%21#0"
      ]
    },
    "1433": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%22#0"
      ]
    },
    "1434": {
      "error": "expected correct value at 1",
      "op": "assert // expected correct value at 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1435": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot%1#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot%1#0"
      ]
    },
    "1438": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "arr#0"
      ]
    },
    "1440": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot_contents%3#0"
      ]
    },
    "1441": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot_contents%3#0",
        "slot%1#0 (copy)"
      ]
    },
    "1443": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%3#0"
      ]
    },
    "1444": {
      "op": "stores",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "arr2#0"
      ]
    },
    "1445": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "dyn_arr#0"
      ]
    },
    "1446": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "dyn_arr#0",
        "0"
      ]
    },
    "1447": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "array_length%1#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0"
      ]
    },
    "1448": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "array_length%1#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1449": {
      "block": "test_arc4_bool_for_header@1",
      "stack_in": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1451": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%1#0"
      ]
    },
    "1453": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1454": {
      "op": "bz test_arc4_bool_after_for@4",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1457": {
      "block": "test_arc4_bool_for_body@2",
      "stack_in": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "dyn_arr#0"
      ]
    },
    "1459": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%2#1",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%2#1"
      ]
    },
    "1462": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%array_trimmed%2#1",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%2#1",
        "item_index_internal%0#0"
      ]
    },
    "1464": {
      "op": "getbit",
      "defined_out": [
        "array_item%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_item%2#0"
      ]
    },
    "1465": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "array_item%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "0x00"
      ]
    },
    "1466": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "array_item%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "0x00",
        "0"
      ]
    },
    "1467": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "0x00",
        "0",
        "array_item%2#0"
      ]
    },
    "1469": {
      "op": "setbit",
      "defined_out": [
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "1470": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "b#0",
        "arr2#0"
      ]
    },
    "1472": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)",
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "b#0",
        "arr2#0 (copy)",
        "arr2#0 (copy)"
      ]
    },
    "1473": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "b#0",
        "arr2#0 (copy)"
      ]
    },
    "1475": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "b#0",
        "slot_contents%4#0"
      ]
    },
    "1476": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "b#0"
      ]
    },
    "1477": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr2#0",
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "b#0",
        "0x"
      ]
    },
    "1478": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "0x",
        "b#0"
      ]
    },
    "1479": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%7#1",
        "arr2#0",
        "dyn_arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "aggregate%encoded%7#1"
      ]
    },
    "1480": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "aggregate%encoded%7#1",
        "0x"
      ]
    },
    "1481": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "dyn_arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "tmp%23#0"
      ]
    },
    "1482": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "concat%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "concat%2#0"
      ]
    },
    "1483": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1484": {
      "block": "test_arc4_bool_for_footer@3",
      "stack_in": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1486": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1487": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1488": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1490": {
      "op": "b test_arc4_bool_for_header@1"
    },
    "1493": {
      "block": "test_arc4_bool_after_for@4",
      "stack_in": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1495": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1496": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%5#0"
      ]
    },
    "1497": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "bytes_len%1#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "bytes_len%1#0"
      ]
    },
    "1498": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#0",
        "bytes_len%1#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "bytes_len%1#0",
        "1"
      ]
    },
    "1499": {
      "op": "/",
      "defined_out": [
        "arr2#0",
        "array_len%1#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_len%1#0"
      ]
    },
    "1500": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr2#0",
        "array_len%1#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_len%1#0",
        "4"
      ]
    },
    "1502": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%24#0"
      ]
    },
    "1503": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1504": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1505": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0"
      ]
    },
    "1506": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0",
        "0"
      ]
    },
    "1507": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0",
        "0",
        "1"
      ]
    },
    "1508": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#1",
        "arr2#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0",
        "aggregate%bytes_offset%0#1"
      ]
    },
    "1509": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0",
        "aggregate%bytes_offset%0#1",
        "1"
      ]
    },
    "1510": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr2#0",
        "array_item%3#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%3#0"
      ]
    },
    "1511": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%3#0",
        "0"
      ]
    },
    "1512": {
      "op": "getbit",
      "defined_out": [
        "arr2#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%25#0"
      ]
    },
    "1513": {
      "op": "txn Sender",
      "defined_out": [
        "arr2#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "1515": {
      "op": "txn Receiver",
      "defined_out": [
        "arr2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "1517": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%25#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%25#0",
        "tmp%28#0"
      ]
    },
    "1518": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%29#0"
      ]
    },
    "1519": {
      "error": "expected correct value at 0",
      "op": "assert // expected correct value at 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1520": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1521": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0"
      ]
    },
    "1522": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0",
        "1"
      ]
    },
    "1523": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0",
        "1",
        "1"
      ]
    },
    "1524": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#1",
        "arr2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0",
        "aggregate%bytes_offset%1#1"
      ]
    },
    "1525": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0",
        "aggregate%bytes_offset%1#1",
        "1"
      ]
    },
    "1526": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr2#0",
        "array_item%4#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%4#0"
      ]
    },
    "1527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%4#0",
        "0"
      ]
    },
    "1528": {
      "op": "getbit",
      "defined_out": [
        "arr2#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%30#0"
      ]
    },
    "1529": {
      "op": "txn Sender",
      "defined_out": [
        "arr2#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "1531": {
      "op": "txn Receiver",
      "defined_out": [
        "arr2#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "1533": {
      "op": "!=",
      "defined_out": [
        "arr2#0",
        "tmp%30#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%30#0",
        "tmp%33#0"
      ]
    },
    "1534": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%34#0"
      ]
    },
    "1535": {
      "error": "expected correct value at 1",
      "op": "assert // expected correct value at 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1536": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1537": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%8#0"
      ]
    },
    "1538": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr2#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%8#0",
        "2"
      ]
    },
    "1540": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%8#0",
        "2",
        "1"
      ]
    },
    "1541": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%2#1",
        "arr2#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%2#1"
      ]
    },
    "1542": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%2#1",
        "1"
      ]
    },
    "1543": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr2#0",
        "array_item%5#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%5#0"
      ]
    },
    "1544": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%5#0",
        "0"
      ]
    },
    "1545": {
      "op": "getbit",
      "defined_out": [
        "arr2#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%35#0"
      ]
    },
    "1546": {
      "op": "txn Sender",
      "defined_out": [
        "arr2#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%35#0",
        "tmp%36#0"
      ]
    },
    "1548": {
      "op": "txn Receiver",
      "defined_out": [
        "arr2#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "1550": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%35#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%35#0",
        "tmp%38#0"
      ]
    },
    "1551": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%39#0"
      ]
    },
    "1552": {
      "error": "expected correct value at 2",
      "op": "assert // expected correct value at 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1553": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%9#0"
      ]
    },
    "1554": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "3"
      ]
    },
    "1556": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "3",
        "1"
      ]
    },
    "1557": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%3#1",
        "arr2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "aggregate%bytes_offset%3#1"
      ]
    },
    "1558": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "aggregate%bytes_offset%3#1",
        "1"
      ]
    },
    "1559": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr2#0",
        "array_item%6#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_item%6#0"
      ]
    },
    "1560": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_item%6#0",
        "0"
      ]
    },
    "1561": {
      "op": "getbit",
      "defined_out": [
        "arr2#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%40#0"
      ]
    },
    "1562": {
      "op": "txn Sender",
      "defined_out": [
        "arr2#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "1564": {
      "op": "txn Receiver",
      "defined_out": [
        "arr2#0",
        "tmp%40#0",
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%40#0",
        "tmp%41#0",
        "tmp%42#0"
      ]
    },
    "1566": {
      "op": "!=",
      "defined_out": [
        "arr2#0",
        "tmp%40#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%40#0",
        "tmp%43#0"
      ]
    },
    "1567": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%44#0"
      ]
    },
    "1568": {
      "error": "expected correct value at 3",
      "op": "assert // expected correct value at 3",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1569": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "1571": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%10#0"
      ]
    },
    "1572": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%10#0",
        "slot_contents%10#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%10#0",
        "slot_contents%10#0 (copy)"
      ]
    },
    "1573": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "bytes_len%2#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%10#0",
        "bytes_len%2#0"
      ]
    },
    "1574": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%10#0",
        "bytes_len%2#0",
        "1"
      ]
    },
    "1575": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "array_len%2#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%10#0",
        "array_len%2#0"
      ]
    },
    "1576": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "0x0000",
        "arr#0",
        "arr2#0",
        "array_len%2#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "slot_contents%10#0",
        "array_len%2#0",
        "0x0000"
      ]
    },
    "1580": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_len%2#0",
        "0x0000",
        "slot_contents%10#0"
      ]
    },
    "1582": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "0x0000",
        "slot_contents%10#0",
        "array_len%2#0"
      ]
    },
    "1584": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0x0000",
        "8",
        "arr#0",
        "arr2#0",
        "array_len%2#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "0x0000",
        "slot_contents%10#0",
        "array_len%2#0",
        "8"
      ]
    },
    "1585": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "bit_packed_source%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "bit_packed_source%0#0"
      ]
    },
    "1588": {
      "op": "frame_bury 0"
    },
    "1590": {
      "retsub": true,
      "op": "retsub"
    },
    "1591": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1593": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "1594": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1595": {
      "op": "bz approval_program_bare_routing@12",
      "stack_out": []
    },
    "1598": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1601": {
      "op": "pushbytes 0x28d7c1b8 // method \"test_array(uint64,uint64,uint64,uint64)uint64\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)"
      ]
    },
    "1607": {
      "op": "pushbytes 0xfa9cb973 // method \"test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])"
      ]
    },
    "1613": {
      "op": "pushbytes 0x6039a240 // method \"test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])"
      ]
    },
    "1619": {
      "op": "pushbytes 0xf8fd68a7 // method \"test_bool_array(uint64)uint64\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)"
      ]
    },
    "1625": {
      "op": "pushbytes 0x1f028db1 // method \"test_arc4_conversion(uint64)uint64[]\"",
      "defined_out": [
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])"
      ]
    },
    "1631": {
      "op": "pushbytes 0x096b3a59 // method \"sum_array(uint64[])uint64\"",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)"
      ]
    },
    "1637": {
      "op": "pushbytes 0x8d6e3a25 // method \"test_arc4_bool()bool[]\"",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])"
      ]
    },
    "1643": {
      "op": "uncover 7",
      "stack_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "tmp%2#0"
      ]
    },
    "1645": {
      "op": "match approval_program_test_array_route@3 approval_program_test_extend_from_tuple_route@4 approval_program_test_extend_from_arc4_tuple_route@5 approval_program_test_bool_array_route@6 approval_program_test_arc4_conversion_route@7 approval_program_sum_array_route@8 approval_program_test_arc4_bool_route@9",
      "stack_out": []
    },
    "1661": {
      "block": "approval_program_after_if_else@18",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1662": {
      "block": "approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19",
      "stack_in": [
        "tmp%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "1663": {
      "block": "approval_program_test_arc4_bool_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "1665": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "NoOp"
      ]
    },
    "1666": {
      "op": "==",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "1667": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1668": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "1670": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "0"
      ]
    },
    "1671": {
      "op": "!=",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1672": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1673": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool",
      "op": "callsub test_arc4_bool",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1676": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "0x151f7c75"
      ]
    },
    "1677": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%52#0"
      ]
    },
    "1678": {
      "op": "concat",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1679": {
      "op": "log",
      "stack_out": []
    },
    "1680": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1681": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19"
    },
    "1684": {
      "block": "approval_program_sum_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1686": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "NoOp"
      ]
    },
    "1687": {
      "op": "==",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "1688": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1689": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1691": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0",
        "0"
      ]
    },
    "1692": {
      "op": "!=",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "1693": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1694": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1697": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "op": "callsub sum_array",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "1700": {
      "op": "itob",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "1701": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "0x151f7c75"
      ]
    },
    "1702": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%46#0"
      ]
    },
    "1703": {
      "op": "concat",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "1704": {
      "op": "log",
      "stack_out": []
    },
    "1705": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1706": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19"
    },
    "1709": {
      "block": "approval_program_test_arc4_conversion_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1711": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "NoOp"
      ]
    },
    "1712": {
      "op": "==",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1713": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1714": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1716": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "0"
      ]
    },
    "1717": {
      "op": "!=",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1718": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1719": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "1722": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1723": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "op": "callsub test_arc4_conversion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1726": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "0x151f7c75"
      ]
    },
    "1727": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%39#0"
      ]
    },
    "1728": {
      "op": "concat",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "1729": {
      "op": "log",
      "stack_out": []
    },
    "1730": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1731": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19"
    },
    "1734": {
      "block": "approval_program_test_bool_array_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1736": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "NoOp"
      ]
    },
    "1737": {
      "op": "==",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1738": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1739": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1741": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "0"
      ]
    },
    "1742": {
      "op": "!=",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1743": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1744": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "1747": {
      "op": "btoi",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1748": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "op": "callsub test_bool_array",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1751": {
      "op": "itob",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "1752": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "0x151f7c75"
      ]
    },
    "1753": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%32#0"
      ]
    },
    "1754": {
      "op": "concat",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1755": {
      "op": "log",
      "stack_out": []
    },
    "1756": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1757": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19"
    },
    "1760": {
      "block": "approval_program_test_extend_from_arc4_tuple_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1762": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "NoOp"
      ]
    },
    "1763": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1764": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1765": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1767": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "1768": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1769": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1770": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%1#0"
      ]
    },
    "1773": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "op": "callsub test_extend_from_arc4_tuple",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1776": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "0x151f7c75"
      ]
    },
    "1777": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%24#0"
      ]
    },
    "1778": {
      "op": "concat",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1779": {
      "op": "log",
      "stack_out": []
    },
    "1780": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1781": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19"
    },
    "1784": {
      "block": "approval_program_test_extend_from_tuple_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1786": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "NoOp"
      ]
    },
    "1787": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1788": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1789": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1791": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "1792": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1793": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1794": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "1797": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ]
    },
    "1798": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)",
        "0"
      ]
    },
    "1799": {
      "op": "intc_3 // 16",
      "defined_out": [
        "0",
        "16",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)",
        "0",
        "16"
      ]
    },
    "1800": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "aggregate%extract%0#1"
      ]
    },
    "1801": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%0#1",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "1802": {
      "op": "intc_3 // 16",
      "stack_out": [
        "aggregate%extract%0#1",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "16"
      ]
    },
    "1803": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%0#1",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "16",
        "16"
      ]
    },
    "1804": {
      "op": "extract3",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1805": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "op": "callsub test_extend_from_tuple",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1808": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0x151f7c75"
      ]
    },
    "1809": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%18#0"
      ]
    },
    "1810": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1811": {
      "op": "log",
      "stack_out": []
    },
    "1812": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1813": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19"
    },
    "1816": {
      "block": "approval_program_test_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1818": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "1819": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1820": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1821": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1823": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1824": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1825": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1826": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1829": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "1832": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0"
      ]
    },
    "1833": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "1836": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "reinterpret_Encoded(uint64)%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "1839": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%8#0"
      ]
    },
    "1840": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%8#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1842": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%8#0",
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0"
      ]
    },
    "1844": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%8#0",
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "1846": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%8#0"
      ]
    },
    "1848": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_array",
      "op": "callsub test_array",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1851": {
      "op": "itob",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1852": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0x151f7c75"
      ]
    },
    "1853": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%10#0"
      ]
    },
    "1854": {
      "op": "concat",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1855": {
      "op": "log",
      "stack_out": []
    },
    "1856": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1857": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19"
    },
    "1860": {
      "block": "approval_program_bare_routing@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "1862": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0",
        "0"
      ]
    },
    "1863": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%54#0"
      ]
    },
    "1864": {
      "op": "match approval_program___algopy_default_create@13",
      "stack_out": []
    },
    "1868": {
      "block": "approval_program_switch_case_next@17",
      "stack_in": [],
      "op": "b approval_program_after_if_else@18"
    },
    "1871": {
      "block": "approval_program___algopy_default_create@13",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "1873": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "0"
      ]
    },
    "1874": {
      "op": "==",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "1875": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1876": {
      "block": "approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__algopy_default_create@15",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1877": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@19"
    },
    "1880": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot@entry",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "1882": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1883": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "1885": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "1888": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "1890": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "1891": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "1892": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "1893": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1895": {
      "retsub": true,
      "op": "retsub"
    }
  }
}