{
  "version": 3,
  "sources": [
    "../static_size.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;;;;;AAEiB;;AAAA;AAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACJ;AACkB;;AAAA;AAAA;AAAA;AAAA;AAAV;AAArB;AAA4B;AAAP;;AAAA;;AAAA;AAArB;;;AACgB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;;AAAA;;AAAA;;AACa;;AAAV;AAAX;;;AACiB;;AAAA;AAAsB;AAAA;AAAtB;AAAL;;AAGD;;AAAA;;AAAA;AAAX;;;AACY;;AAAA;;AAAK;AAGS;;AAAA;AAAA;AAAU;AAAA;AAAA;AAAV;AAAR;AAAV;;AAAA;AAAA;;AAVa;;AAAA;AAAA;AAAA;;;;;AAST;;AAAA;;AAAK;;;;AAJA;AAAiB;;AAAA;AAAjB;AAAL;;;;;AAMR;;AAAA;;AAAA;AAzGI;AAAa;AAAb;;AAER;;;AAEQ;AAAa;AAAb;AAE6C;;;AAAA;;AAAA;;AAAA;AACjB;;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAFhB;AAAA;;AAAA;AAAiB;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAEK;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAFL;AAGK;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAHL;AAAA;;;AAAA;AAAA;;AAAA;AAKE;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAmB;;AAAI;AAAJ;AAAnB;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAuB;;AAAI;;AAAJ;AAAvB;AAAA;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAwB;;AAAI;AAAJ;AAAA;AAAU;;AAAI;AAAJ;AAAX;;AAAA;AAAvB;AAAA;AAAP;AAHK;;AAAA;AAAA;AAAA;;;;;AAKmC;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAb;;;AAA/B;;AAA+B;;;AAA/B;AAAA;AACO;;;AAAP;;AAAA;AAER;;;AAEc;;;AAAA;AAAA;AAAA;AADuB;AAAA;;AAAA;AAElB;AAAA;AAAA;AAFkB;AAAA;;AAAA;AAElB;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;AAER;;;AAIc;;;AAAA;AAAA;AAAA;AACK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;AAER;;;;;;AAEc;;;AAAA;AAAA;AAAA;AAAN;AACO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEmB;;AAAS;AAAT;AAAV;AAAjB;AAAwB;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAI;;AAAJ;AAAS;AAAT;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACQ;AAAR;;AACW;AAAA;AAAA;AAAA;AAAA;;;;;AAAnB;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AACA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AACR;;AAAA;;AAAA;AAER;;;;;;AAEc;;;AAAA;AAAA;AAAA;AAAN;AACO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEmB;;AAAS;AAAT;AAAV;AAAjB;AAAwB;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACQ;AAAR;;AACW;AAAA;AAAA;AAAA;AAAA;;;;;AAAnB;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe;;AAAA;;;;;AAAf;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AAEG;AAAA;AAAA;AACX;;;AAAgB;;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAEA;;AAAA;AAER;;;AAEc;;;AAAA;AAAA;AAAA;AAAN;AACW;;AAAA;;;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAEQ;AAAR;AACY;AAAA;AAAA;AAAA;;AAApB;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACqB;AAAT;;AAAA;AAAA;;;;;;;;;;;AAEJ;;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;AAAA;AAEM;;AACA;AAAA;AAAA;AAAA;AACA;;AACA;;;AAJN;;AAAA;;AAAA;;AAAA;;AAAA;AAS4B;AAAA;AAAA;AAAA;AAAa;AAAb;AAAZ;AAA6C;AAAA;AAAA;AAAA;AAAa;AAAA;AAAA;AAAA;AAAb;AAAZ;AAA1C;AAAA;;AAAA;AAAA;AAAA;AAAP;AAzFR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;AAAA;;AAkEK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlEL;;;AAkEK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAlBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhDL;;;AAAA;AAgDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAdA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlCL;;;AAAA;AAkCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1BL;;;AA0BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApBL;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAhBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAJL;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAIK;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAJL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 80"
    },
    "7": {
      "op": "bytecblock 0x \"count\" 0x151f7c75 0x0000 0x0000000000000000"
    },
    "33": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ],
      "stack_out": [
        "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "67": {
      "op": "store 0",
      "stack_out": []
    },
    "69": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "71": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "74": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.__init__",
      "op": "callsub __init__"
    },
    "77": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "80": {
      "op": "return",
      "stack_out": []
    },
    "81": {
      "subroutine": "test_cases.array.static_size.path_length",
      "params": {
        "path#0": "uint64"
      },
      "block": "path_length",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "84": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "dx#0"
      ]
    },
    "85": {
      "op": "dup",
      "stack_out": [
        "dx#0",
        "point.y#0"
      ]
    },
    "86": {
      "op": "frame_dig -1",
      "defined_out": [
        "path#0 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "path#0 (copy)"
      ]
    },
    "88": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0"
      ]
    },
    "89": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0",
        "0"
      ]
    },
    "90": {
      "op": "intc_3 // 80",
      "defined_out": [
        "0",
        "80",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0",
        "0",
        "80"
      ]
    },
    "91": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0",
        "array%bytes_index%0#1"
      ]
    },
    "92": {
      "op": "intc_3 // 80",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "slot_contents%0#0",
        "array%bytes_index%0#1",
        "80"
      ]
    },
    "93": {
      "op": "extract3",
      "defined_out": [
        "array%value%0#1"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%value%0#1"
      ]
    },
    "94": {
      "op": "dup",
      "defined_out": [
        "array%value%0#1",
        "array%value%0#1 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%value%0#1",
        "array%value%0#1 (copy)"
      ]
    },
    "95": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%value%0#1",
        "array%value%0#1 (copy)",
        "0"
      ]
    },
    "96": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "array%value%0#1",
        "array%value%0#1 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%value%0#1",
        "array%value%0#1 (copy)",
        "0",
        "8"
      ]
    },
    "97": {
      "op": "extract3",
      "defined_out": [
        "array%sub_item%0#1",
        "array%value%0#1"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%value%0#1",
        "array%sub_item%0#1"
      ]
    },
    "98": {
      "op": "swap",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%sub_item%0#1",
        "array%value%0#1"
      ]
    },
    "99": {
      "op": "intc_2 // 8",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%sub_item%0#1",
        "array%value%0#1",
        "8"
      ]
    },
    "100": {
      "op": "dup",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%sub_item%0#1",
        "array%value%0#1",
        "8",
        "8"
      ]
    },
    "101": {
      "op": "extract3",
      "defined_out": [
        "array%sub_item%0#1",
        "array%sub_item%1#1"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "array%sub_item%0#1",
        "array%sub_item%1#1"
      ]
    },
    "102": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0"
      ]
    },
    "103": {
      "op": "intc_0 // 0",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ]
    },
    "104": {
      "op": "frame_dig -1",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "path#0 (copy)"
      ]
    },
    "106": {
      "op": "loads",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%1#0"
      ]
    },
    "107": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array%bytes_len%0#1"
      ]
    },
    "108": {
      "op": "intc_3 // 80",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "array%bytes_len%0#1",
        "80"
      ]
    },
    "109": {
      "op": "/",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0"
      ]
    },
    "110": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "1"
      ]
    },
    "111": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0"
      ]
    },
    "112": {
      "op": "intc_1 // 1",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "point_idx#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ]
    },
    "113": {
      "block": "path_length_for_header@1",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point_idx#0"
      ]
    },
    "115": {
      "op": "frame_dig 5",
      "defined_out": [
        "point_idx#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point_idx#0",
        "tmp%0#0"
      ]
    },
    "117": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "point_idx#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "continue_looping%0#0"
      ]
    },
    "118": {
      "op": "bz path_length_after_for@10",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ]
    },
    "121": {
      "block": "path_length_for_body@2",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "path#0 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "path#0 (copy)"
      ]
    },
    "123": {
      "op": "loads",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "slot_contents%2#0"
      ]
    },
    "124": {
      "op": "frame_dig 6",
      "defined_out": [
        "point_idx#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "slot_contents%2#0",
        "point_idx#0"
      ]
    },
    "126": {
      "op": "intc_3 // 80",
      "defined_out": [
        "80",
        "point_idx#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "slot_contents%2#0",
        "point_idx#0",
        "80"
      ]
    },
    "127": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%1#1",
        "point_idx#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "slot_contents%2#0",
        "array%bytes_index%1#1"
      ]
    },
    "128": {
      "op": "intc_3 // 80",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "slot_contents%2#0",
        "array%bytes_index%1#1",
        "80"
      ]
    },
    "129": {
      "op": "extract3",
      "defined_out": [
        "array%value%1#1",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%value%1#1"
      ]
    },
    "130": {
      "op": "dup",
      "defined_out": [
        "array%value%1#1",
        "array%value%1#1 (copy)",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%value%1#1",
        "array%value%1#1 (copy)"
      ]
    },
    "131": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array%value%1#1",
        "array%value%1#1 (copy)",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%value%1#1",
        "array%value%1#1 (copy)",
        "0"
      ]
    },
    "132": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "array%value%1#1",
        "array%value%1#1 (copy)",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%value%1#1",
        "array%value%1#1 (copy)",
        "0",
        "8"
      ]
    },
    "133": {
      "op": "extract3",
      "defined_out": [
        "array%sub_item%9#1",
        "array%value%1#1",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%value%1#1",
        "array%sub_item%9#1"
      ]
    },
    "134": {
      "op": "swap",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%sub_item%9#1",
        "array%value%1#1"
      ]
    },
    "135": {
      "op": "intc_2 // 8",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%sub_item%9#1",
        "array%value%1#1",
        "8"
      ]
    },
    "136": {
      "op": "dup",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%sub_item%9#1",
        "array%value%1#1",
        "8",
        "8"
      ]
    },
    "137": {
      "op": "extract3",
      "defined_out": [
        "array%sub_item%10#1",
        "array%sub_item%9#1",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%sub_item%9#1",
        "array%sub_item%10#1"
      ]
    },
    "138": {
      "op": "btoi",
      "defined_out": [
        "array%sub_item%11#1",
        "array%sub_item%9#1",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%sub_item%9#1",
        "array%sub_item%11#1"
      ]
    },
    "139": {
      "op": "swap",
      "defined_out": [
        "array%sub_item%11#1",
        "point.x#0",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%sub_item%11#1",
        "point.x#0"
      ]
    },
    "140": {
      "op": "dup",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "array%sub_item%11#1",
        "point.x#0",
        "point.x#0 (copy)"
      ]
    },
    "141": {
      "op": "cover 2",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0",
        "array%sub_item%11#1",
        "point.x#0"
      ]
    },
    "143": {
      "op": "cover 2",
      "defined_out": [
        "point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0",
        "point.x#0",
        "point.y#0"
      ]
    },
    "145": {
      "op": "frame_bury 1",
      "defined_out": [
        "point.x#0",
        "point.y#0",
        "point_idx#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "147": {
      "op": "frame_dig 2",
      "defined_out": [
        "point.x#0",
        "point.y#0",
        "point_idx#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "149": {
      "op": "b<",
      "defined_out": [
        "point.x#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0",
        "tmp%1#0"
      ]
    },
    "150": {
      "op": "bz path_length_else_body@4",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0"
      ]
    },
    "153": {
      "block": "path_length_if_body@3",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0",
        "last_point.x#0"
      ]
    },
    "155": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0",
        "tmp%2#0"
      ]
    },
    "156": {
      "op": "swap",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%2#0",
        "point.x#0"
      ]
    },
    "157": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "158": {
      "op": "-",
      "defined_out": [
        "dx#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "dx#0"
      ]
    },
    "159": {
      "op": "frame_bury 0",
      "defined_out": [
        "dx#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ]
    },
    "161": {
      "block": "path_length_after_if_else@5",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.y#0"
      ]
    },
    "163": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "165": {
      "op": "<",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%6#0"
      ]
    },
    "166": {
      "op": "bz path_length_else_body@7",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ]
    },
    "169": {
      "block": "path_length_if_body@6",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "last_point.y#0"
      ]
    },
    "171": {
      "op": "frame_dig 1",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "last_point.y#0",
        "point.y#0"
      ]
    },
    "173": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "dy#0"
      ]
    },
    "174": {
      "block": "path_length_after_if_else@8",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "dy#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "dx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "dy#0",
        "dx#0"
      ]
    },
    "176": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dx#0 (copy)"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "dy#0",
        "dx#0 (copy)",
        "dx#0"
      ]
    },
    "177": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "dy#0",
        "tmp%7#0"
      ]
    },
    "178": {
      "op": "swap",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%7#0",
        "dy#0"
      ]
    },
    "179": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dy#0",
        "dy#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%7#0",
        "dy#0 (copy)",
        "dy#0"
      ]
    },
    "180": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "181": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%9#0"
      ]
    },
    "182": {
      "op": "sqrt",
      "defined_out": [
        "dx#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%10#0"
      ]
    },
    "183": {
      "op": "frame_dig 4",
      "defined_out": [
        "dx#0",
        "length#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%10#0",
        "length#0"
      ]
    },
    "185": {
      "op": "+",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "length#0"
      ]
    },
    "186": {
      "op": "frame_bury 4",
      "defined_out": [
        "dx#0",
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ]
    },
    "188": {
      "block": "path_length_for_footer@9",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point_idx#0"
      ]
    },
    "190": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point_idx#0",
        "1"
      ]
    },
    "191": {
      "op": "+",
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point_idx#0"
      ]
    },
    "192": {
      "op": "frame_bury 6",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ]
    },
    "194": {
      "op": "b path_length_for_header@1"
    },
    "197": {
      "block": "path_length_else_body@7",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.y#0"
      ]
    },
    "199": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "201": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "dy#0"
      ]
    },
    "202": {
      "op": "b path_length_after_if_else@8"
    },
    "205": {
      "block": "path_length_else_body@4",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "point.x#0"
      ],
      "op": "btoi",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%4#0"
      ]
    },
    "206": {
      "op": "frame_dig 2",
      "defined_out": [
        "last_point.x#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%4#0",
        "last_point.x#0"
      ]
    },
    "208": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "209": {
      "op": "-",
      "defined_out": [
        "dx#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "dx#0"
      ]
    },
    "210": {
      "op": "frame_bury 0",
      "defined_out": [
        "dx#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ]
    },
    "212": {
      "op": "b path_length_after_if_else@5"
    },
    "215": {
      "block": "path_length_after_for@10",
      "stack_in": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "dx#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "point_idx#0",
        "length#0"
      ]
    },
    "217": {
      "op": "frame_bury 0"
    },
    "219": {
      "retsub": true,
      "op": "retsub"
    },
    "220": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "\"count\""
      ]
    },
    "221": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "\"count\"",
        "0"
      ]
    },
    "222": {
      "op": "app_global_put",
      "stack_out": []
    },
    "223": {
      "retsub": true,
      "op": "retsub"
    },
    "224": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_array",
      "params": {
        "x1#0": "bytes",
        "y1#0": "uint64",
        "x2#0": "bytes",
        "y2#0": "uint64"
      },
      "block": "test_array",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "227": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "\"count\""
      ]
    },
    "228": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "\"count\"",
        "0"
      ]
    },
    "229": {
      "op": "app_global_put",
      "stack_out": []
    },
    "230": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "233": {
      "op": "cover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "235": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "237": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "238": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "241": {
      "op": "cover 7",
      "stack_out": [
        "tmp%7#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "243": {
      "op": "cover 6",
      "stack_out": [
        "tmp%7#0",
        "tmp%6#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "245": {
      "op": "cover 5",
      "stack_out": [
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "247": {
      "op": "cover 4",
      "stack_out": [
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "249": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "252": {
      "op": "cover 11",
      "stack_out": [
        "tmp%11#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "254": {
      "op": "cover 10",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "256": {
      "op": "cover 9",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "258": {
      "op": "cover 8",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "260": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "261": {
      "op": "bytec 4 // 0x0000000000000000",
      "defined_out": [
        "0x",
        "0x0000000000000000",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "0x0000000000000000"
      ]
    },
    "263": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "array%encoded%0#1"
      ]
    },
    "264": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "array%encoded%0#1",
        "0"
      ]
    },
    "265": {
      "op": "itob",
      "defined_out": [
        "array%encoded%0#1",
        "array%sub_item%0#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "array%encoded%0#1",
        "array%sub_item%0#1"
      ]
    },
    "266": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "array%encoded%1#1"
      ]
    },
    "267": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "array%encoded%1#1",
        "tmp%0#0"
      ]
    },
    "268": {
      "op": "itob",
      "defined_out": [
        "array%encoded%1#1",
        "array%sub_item%1#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "array%encoded%1#1",
        "array%sub_item%1#1"
      ]
    },
    "269": {
      "op": "concat",
      "defined_out": [
        "array%encoded%2#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "array%encoded%2#1"
      ]
    },
    "270": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "array%encoded%2#1",
        "tmp%1#0"
      ]
    },
    "271": {
      "op": "itob",
      "defined_out": [
        "array%encoded%2#1",
        "array%sub_item%2#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "array%encoded%2#1",
        "array%sub_item%2#1"
      ]
    },
    "272": {
      "op": "concat",
      "defined_out": [
        "array%encoded%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "array%encoded%3#1"
      ]
    },
    "273": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "array%encoded%3#1",
        "tmp%2#0"
      ]
    },
    "274": {
      "op": "concat",
      "defined_out": [
        "array%encoded%4#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "array%encoded%4#1"
      ]
    },
    "275": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%encoded%4#1",
        "tmp%3#0"
      ]
    },
    "276": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%encoded%5#1"
      ]
    },
    "277": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%encoded%5#1",
        "0x"
      ]
    },
    "278": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "0x",
        "array%encoded%5#1"
      ]
    },
    "279": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%data%0#1"
      ]
    },
    "280": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%data%0#1",
        "0x"
      ]
    },
    "281": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x",
        "array%data%0#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%data%0#1",
        "0x",
        "x1#0 (copy)"
      ]
    },
    "283": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%6#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%data%0#1",
        "array%encoded%6#1"
      ]
    },
    "284": {
      "op": "frame_dig -3",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%6#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "y1#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%data%0#1",
        "array%encoded%6#1",
        "y1#0 (copy)"
      ]
    },
    "286": {
      "op": "itob",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%6#1",
        "array%sub_item%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%data%0#1",
        "array%encoded%6#1",
        "array%sub_item%3#1"
      ]
    },
    "287": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%7#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "array%data%0#1",
        "array%encoded%7#1"
      ]
    },
    "288": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "array%data%0#1",
        "array%encoded%7#1",
        "tmp%4#0"
      ]
    },
    "290": {
      "op": "itob",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%7#1",
        "array%sub_item%4#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "array%data%0#1",
        "array%encoded%7#1",
        "array%sub_item%4#1"
      ]
    },
    "291": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%8#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "array%data%0#1",
        "array%encoded%8#1"
      ]
    },
    "292": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "array%data%0#1",
        "array%encoded%8#1",
        "tmp%5#0"
      ]
    },
    "294": {
      "op": "itob",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%8#1",
        "array%sub_item%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "array%data%0#1",
        "array%encoded%8#1",
        "array%sub_item%5#1"
      ]
    },
    "295": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%9#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "array%data%0#1",
        "array%encoded%9#1"
      ]
    },
    "296": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "array%data%0#1",
        "array%encoded%9#1",
        "tmp%6#0"
      ]
    },
    "298": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%10#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "array%data%0#1",
        "array%encoded%10#1"
      ]
    },
    "299": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%0#1",
        "array%encoded%10#1",
        "tmp%7#0"
      ]
    },
    "301": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%11#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%0#1",
        "array%encoded%11#1"
      ]
    },
    "302": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%1#1"
      ]
    },
    "303": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%1#1",
        "0x"
      ]
    },
    "304": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "array%data%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%1#1",
        "0x",
        "x2#0 (copy)"
      ]
    },
    "306": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%12#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%1#1",
        "array%encoded%12#1"
      ]
    },
    "307": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%12#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0",
        "y2#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%1#1",
        "array%encoded%12#1",
        "y2#0 (copy)"
      ]
    },
    "309": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%12#1",
        "array%sub_item%6#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%1#1",
        "array%encoded%12#1",
        "array%sub_item%6#1"
      ]
    },
    "310": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%13#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "array%data%1#1",
        "array%encoded%13#1"
      ]
    },
    "311": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "array%data%1#1",
        "array%encoded%13#1",
        "tmp%8#0"
      ]
    },
    "313": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%13#1",
        "array%sub_item%7#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "array%data%1#1",
        "array%encoded%13#1",
        "array%sub_item%7#1"
      ]
    },
    "314": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%14#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "array%data%1#1",
        "array%encoded%14#1"
      ]
    },
    "315": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "array%data%1#1",
        "array%encoded%14#1",
        "tmp%9#0"
      ]
    },
    "317": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%14#1",
        "array%sub_item%8#1",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "array%data%1#1",
        "array%encoded%14#1",
        "array%sub_item%8#1"
      ]
    },
    "318": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%15#1",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "array%data%1#1",
        "array%encoded%15#1"
      ]
    },
    "319": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%15#1",
        "tmp%10#0"
      ]
    },
    "321": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%16#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%16#1"
      ]
    },
    "322": {
      "op": "uncover 2",
      "stack_out": [
        "array%data%1#1",
        "array%encoded%16#1",
        "tmp%11#0"
      ]
    },
    "324": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%17#1"
      ],
      "stack_out": [
        "array%data%1#1",
        "array%encoded%17#1"
      ]
    },
    "325": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "326": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "329": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "330": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "332": {
      "op": "stores",
      "defined_out": [
        "path#0"
      ],
      "stack_out": [
        "path#0"
      ]
    },
    "333": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "1"
      ]
    },
    "334": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "path#0"
      ]
    },
    "335": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0"
      ]
    },
    "336": {
      "block": "test_array_for_header@1",
      "stack_in": [
        "path#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0"
      ]
    },
    "338": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "340": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "341": {
      "op": "bz test_array_after_for@4",
      "stack_out": [
        "path#0",
        "i#0"
      ]
    },
    "344": {
      "block": "test_array_for_body@2",
      "stack_in": [
        "path#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0"
      ]
    },
    "346": {
      "op": "dup",
      "defined_out": [
        "path#0",
        "path#0 (copy)"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "path#0 (copy)"
      ]
    },
    "347": {
      "op": "loads",
      "defined_out": [
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%0#0"
      ]
    },
    "348": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "350": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "351": {
      "op": "cover 2",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)"
      ]
    },
    "353": {
      "op": "intc_3 // 80",
      "defined_out": [
        "80",
        "i#0",
        "i#0 (copy)",
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "80"
      ]
    },
    "354": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%0#1",
        "i#0",
        "path#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%0#0",
        "array%bytes_index%0#1"
      ]
    },
    "355": {
      "op": "intc_3 // 80",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%0#0",
        "array%bytes_index%0#1",
        "80"
      ]
    },
    "356": {
      "op": "extract3",
      "defined_out": [
        "array%value%0#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array%value%0#1"
      ]
    },
    "357": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "array%value%0#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array%value%0#1",
        "24"
      ]
    },
    "359": {
      "op": "intc_2 // 8",
      "defined_out": [
        "24",
        "8",
        "array%value%0#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array%value%0#1",
        "24",
        "8"
      ]
    },
    "360": {
      "op": "extract3",
      "defined_out": [
        "array%sub_item%14#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array%sub_item%14#1"
      ]
    },
    "361": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "362": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%15#0",
        "i#0 (copy)"
      ]
    },
    "364": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "path#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%15#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "365": {
      "op": "+",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%15#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%15#0",
        "tmp%18#0"
      ]
    },
    "366": {
      "op": "==",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "367": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0"
      ]
    },
    "368": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "path#0 (copy)"
      ]
    },
    "370": {
      "op": "loads",
      "defined_out": [
        "i#0",
        "path#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "371": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0",
        "i#0 (copy)"
      ]
    },
    "373": {
      "op": "intc_3 // 80",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0",
        "i#0 (copy)",
        "80"
      ]
    },
    "374": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%1#1",
        "i#0",
        "path#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0",
        "array%bytes_index%1#1"
      ]
    },
    "375": {
      "op": "intc_3 // 80",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "slot_contents%1#0",
        "array%bytes_index%1#1",
        "80"
      ]
    },
    "376": {
      "op": "extract3",
      "defined_out": [
        "array%value%1#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array%value%1#1"
      ]
    },
    "377": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "array%value%1#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array%value%1#1",
        "64"
      ]
    },
    "379": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "64",
        "array%value%1#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "array%value%1#1",
        "64",
        "16"
      ]
    },
    "381": {
      "op": "extract3",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%25#0"
      ]
    },
    "382": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "path#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%25#0",
        "0"
      ]
    },
    "383": {
      "op": "intc_2 // 8",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%25#0",
        "0",
        "8"
      ]
    },
    "384": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "385": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "i#0 (copy)"
      ]
    },
    "387": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)",
        "path#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "389": {
      "op": "+",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "tmp%26#0"
      ]
    },
    "390": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%0#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "tmp%27#0"
      ]
    },
    "391": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0",
        "tmp%28#0"
      ]
    },
    "392": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "i#0"
      ]
    },
    "393": {
      "op": "swap",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "path#0"
      ]
    },
    "394": {
      "op": "loads",
      "defined_out": [
        "i#0",
        "path#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "395": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0",
        "i#0 (copy)"
      ]
    },
    "397": {
      "op": "intc_3 // 80",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0",
        "i#0 (copy)",
        "80"
      ]
    },
    "398": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%2#1",
        "i#0",
        "path#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0",
        "array%bytes_index%2#1"
      ]
    },
    "399": {
      "op": "intc_3 // 80",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "slot_contents%2#0",
        "array%bytes_index%2#1",
        "80"
      ]
    },
    "400": {
      "op": "extract3",
      "defined_out": [
        "array%value%2#1",
        "i#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "array%value%2#1"
      ]
    },
    "401": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "array%value%2#1",
        "64"
      ]
    },
    "403": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "array%value%2#1",
        "64",
        "16"
      ]
    },
    "405": {
      "op": "extract3",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "tmp%34#0"
      ]
    },
    "406": {
      "op": "intc_2 // 8",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "tmp%34#0",
        "8"
      ]
    },
    "407": {
      "op": "dup",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "tmp%34#0",
        "8",
        "8"
      ]
    },
    "408": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "409": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "i#0 (copy)"
      ]
    },
    "411": {
      "op": "intc_1 // 1",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "412": {
      "op": "+",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "tmp%35#0"
      ]
    },
    "413": {
      "op": "swap",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "tmp%35#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "414": {
      "op": "uncover 2",
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%35#0",
        "reinterpret_biguint%1#0",
        "i#0"
      ]
    },
    "416": {
      "op": "intc_1 // 1",
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%35#0",
        "reinterpret_biguint%1#0",
        "i#0",
        "1"
      ]
    },
    "417": {
      "op": "+",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%35#0",
        "reinterpret_biguint%1#0",
        "tmp%36#0"
      ]
    },
    "418": {
      "op": "uncover 2",
      "stack_out": [
        "path#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "tmp%36#0",
        "tmp%35#0"
      ]
    },
    "420": {
      "op": "*",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "tmp%37#0"
      ]
    },
    "421": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "reinterpret_biguint%1#0",
        "tmp%38#0"
      ]
    },
    "422": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "path#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%39#0"
      ]
    },
    "423": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "i#0"
      ]
    },
    "424": {
      "block": "test_array_for_footer@3",
      "stack_in": [
        "path#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0"
      ]
    },
    "426": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "427": {
      "op": "+",
      "stack_out": [
        "path#0",
        "i#0",
        "i#0"
      ]
    },
    "428": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "path#0",
        "i#0"
      ]
    },
    "430": {
      "op": "b test_array_for_header@1"
    },
    "433": {
      "block": "test_array_after_for@4",
      "stack_in": [
        "path#0",
        "i#0"
      ],
      "op": "bytec_3 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "0x0000"
      ]
    },
    "434": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "0x0000",
        "0x"
      ]
    },
    "435": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "array_data%0#0"
      ]
    },
    "436": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "439": {
      "op": "frame_dig 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "path#0"
      ]
    },
    "441": {
      "op": "dup",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "path#0",
        "path#0 (copy)"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "path#0 (copy)",
        "path#0 (copy)"
      ]
    },
    "442": {
      "op": "cover 2",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "expr_value_trimmed%0#0",
        "path#0 (copy)"
      ]
    },
    "444": {
      "op": "loads",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "expr_value_trimmed%0#0",
        "slot_contents%3#0"
      ]
    },
    "445": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concatenated%0#0"
      ]
    },
    "446": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "447": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "448": {
      "op": "intc_3 // 80",
      "defined_out": [
        "80",
        "byte_len%0#0",
        "concatenated%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "80"
      ]
    },
    "449": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "450": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "451": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "454": {
      "op": "swap",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "455": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concat_result%0#0"
      ]
    },
    "456": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "concat_result%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concat_result%0#0",
        "\"a\""
      ]
    },
    "459": {
      "op": "box_del",
      "defined_out": [
        "concat_result%0#0",
        "path#0",
        "{box_del}"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concat_result%0#0",
        "{box_del}"
      ]
    },
    "460": {
      "op": "pop",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concat_result%0#0"
      ]
    },
    "461": {
      "op": "pushbytes \"a\"",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "concat_result%0#0",
        "\"a\""
      ]
    },
    "464": {
      "op": "swap",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0",
        "\"a\"",
        "concat_result%0#0"
      ]
    },
    "465": {
      "op": "box_put",
      "stack_out": [
        "path#0",
        "i#0",
        "path#0"
      ]
    },
    "466": {
      "callsub": "test_cases.array.static_size.path_length",
      "op": "callsub path_length",
      "defined_out": [
        "path#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "path#0",
        "i#0",
        "tmp%40#0"
      ]
    },
    "469": {
      "op": "frame_bury 0"
    },
    "471": {
      "retsub": true,
      "op": "retsub"
    },
    "472": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "params": {
        "some_more.0#0": "bytes",
        "some_more.1#0": "bytes"
      },
      "block": "test_extend_from_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "475": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "478": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "479": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "480": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "481": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "0x"
      ]
    },
    "482": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arr#0",
        "some_more.0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "0x",
        "some_more.0#0 (copy)"
      ]
    },
    "484": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%encoded%0#1"
      ]
    },
    "485": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "486": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "487": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%data%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%data%0#1"
      ]
    },
    "488": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "array%data%0#1",
        "0x"
      ]
    },
    "489": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "arr#0",
        "array%data%0#1",
        "some_more.1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "array%data%0#1",
        "0x",
        "some_more.1#0 (copy)"
      ]
    },
    "491": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%data%0#1",
        "array%encoded%1#1"
      ],
      "stack_out": [
        "arr#0",
        "array%data%0#1",
        "array%encoded%1#1"
      ]
    },
    "492": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0"
      ]
    },
    "493": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "encoded%1#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0",
        "arr#0 (copy)"
      ]
    },
    "495": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0",
        "slot_contents%0#0"
      ]
    },
    "496": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "497": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "extended%0#0"
      ],
      "stack_out": [
        "arr#0",
        "extended%0#0"
      ]
    },
    "498": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "extended%0#0",
        "arr#0 (copy)"
      ]
    },
    "500": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "extended%0#0"
      ]
    },
    "501": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "502": {
      "op": "bytec_3 // 0x0000",
      "defined_out": [
        "0x0000",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "0x0000"
      ]
    },
    "503": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "0x0000",
        "0x"
      ]
    },
    "504": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array_data%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_data%0#0"
      ]
    },
    "505": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "508": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "arr#0"
      ]
    },
    "509": {
      "op": "loads",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "slot_contents%1#0"
      ]
    },
    "510": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "511": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "512": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "513": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "16"
      ]
    },
    "515": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "516": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "517": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "520": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "521": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0"
      ],
      "stack_out": [
        "concat_result%0#0"
      ]
    },
    "522": {
      "retsub": true,
      "op": "retsub"
    },
    "523": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "params": {
        "some_more#0": "bytes"
      },
      "block": "test_extend_from_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "526": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "529": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "530": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "531": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "532": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "0x"
      ]
    },
    "533": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "arr#0",
        "some_more#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "0x",
        "some_more#0 (copy)"
      ]
    },
    "535": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%encoded%0#1"
      ]
    },
    "536": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "537": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "538": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0"
      ]
    },
    "539": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "encoded%1#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0",
        "arr#0 (copy)"
      ]
    },
    "541": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0",
        "slot_contents%0#0"
      ]
    },
    "542": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "543": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "extended%0#0"
      ],
      "stack_out": [
        "arr#0",
        "extended%0#0"
      ]
    },
    "544": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "extended%0#0",
        "arr#0 (copy)"
      ]
    },
    "546": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "extended%0#0"
      ]
    },
    "547": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "548": {
      "op": "bytec_3 // 0x0000",
      "defined_out": [
        "0x0000",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "0x0000"
      ]
    },
    "549": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "0x0000",
        "0x"
      ]
    },
    "550": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array_data%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_data%0#0"
      ]
    },
    "551": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "554": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "arr#0"
      ]
    },
    "555": {
      "op": "loads",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "slot_contents%1#0"
      ]
    },
    "556": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "557": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "558": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "559": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "16"
      ]
    },
    "561": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "562": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "563": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "566": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "567": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0"
      ],
      "stack_out": [
        "concat_result%0#0"
      ]
    },
    "568": {
      "retsub": true,
      "op": "retsub"
    },
    "569": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "572": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "573": {
      "op": "dupn 3",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ]
    },
    "575": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0#0"
      ]
    },
    "578": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "579": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "580": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "581": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "arr#0"
      ]
    },
    "582": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "583": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "array%bytes_len%0#1"
      ]
    },
    "584": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "array%bytes_len%0#1",
        "1"
      ]
    },
    "585": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "586": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "587": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "588": {
      "op": "assert",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "589": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)"
      ]
    },
    "591": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "592": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "593": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "594": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "595": {
      "op": "intc_1 // 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "596": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "598": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "600": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "601": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "604": {
      "block": "test_bool_array_for_body@2",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "606": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "608": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "609": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "0"
      ]
    },
    "610": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "611": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "tmp%4#0",
        "0x00"
      ]
    },
    "614": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x00",
        "0x80",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "tmp%4#0",
        "0x00",
        "0x80"
      ]
    },
    "617": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "0x00",
        "0x80",
        "tmp%4#0"
      ]
    },
    "619": {
      "op": "select",
      "defined_out": [
        "array%encoded_bit%0#1",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%encoded_bit%0#1"
      ]
    },
    "620": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array%encoded_bit%0#1",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%encoded_bit%0#1",
        "0x"
      ]
    },
    "621": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "0x",
        "array%encoded_bit%0#1"
      ]
    },
    "622": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%encoded%0#1"
      ]
    },
    "623": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "624": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "625": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "encoded%1#0"
      ]
    },
    "626": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "encoded%1#0",
        "arr#0"
      ]
    },
    "628": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "encoded%1#0",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "encoded%1#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "629": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "encoded%1#0",
        "arr#0 (copy)"
      ]
    },
    "631": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "encoded%1#0",
        "slot_contents%1#0"
      ]
    },
    "632": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "encoded%1#0"
      ]
    },
    "633": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "extended%0#0",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "extended%0#0"
      ]
    },
    "634": {
      "op": "stores",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "635": {
      "block": "test_bool_array_for_footer@3",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "637": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "638": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "639": {
      "op": "frame_bury 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "641": {
      "op": "b test_bool_array_for_header@1"
    },
    "644": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0"
      ]
    },
    "646": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "647": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "slot_contents%2#0"
      ]
    },
    "648": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "array%bytes_len%1#1"
      ]
    },
    "649": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "array%bytes_len%1#1",
        "1"
      ]
    },
    "650": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "651": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "tmp%5#0",
        "length#0 (copy)"
      ]
    },
    "653": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "tmp%6#0"
      ]
    },
    "654": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0"
      ]
    },
    "655": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "count#0"
      ]
    },
    "656": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0"
      ]
    },
    "658": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "count#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "659": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%2#1",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%2#1"
      ]
    },
    "660": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%2#1",
        "1"
      ]
    },
    "661": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array_length%0#0"
      ]
    },
    "662": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "664": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "665": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "667": {
      "block": "test_bool_array_for_header@5",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "669": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "671": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "672": {
      "op": "bz test_bool_array_after_for@10",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "675": {
      "block": "test_bool_array_for_body@6",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0"
      ]
    },
    "677": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0"
      ]
    },
    "678": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0"
      ]
    },
    "680": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "681": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%bytes_index%0#1",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "array%bytes_index%0#1"
      ]
    },
    "682": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "array%bytes_index%0#1",
        "1"
      ]
    },
    "683": {
      "op": "extract3",
      "defined_out": [
        "arr#0",
        "array%value%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%value%0#1"
      ]
    },
    "684": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array%value%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%value%0#1",
        "0"
      ]
    },
    "685": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%value%0#1",
        "0",
        "1"
      ]
    },
    "686": {
      "op": "extract3",
      "defined_out": [
        "arr#0",
        "array%sub_item%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%sub_item%0#1"
      ]
    },
    "687": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "val#0"
      ]
    },
    "688": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "count#9",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "val#0",
        "count#9"
      ]
    },
    "690": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "count#9",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "val#0"
      ]
    },
    "692": {
      "op": "bz test_bool_array_after_if_else@8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "695": {
      "block": "test_bool_array_if_body@7",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "697": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#0",
        "1"
      ]
    },
    "698": {
      "op": "+",
      "defined_out": [
        "count#0",
        "count#9"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#9"
      ]
    },
    "699": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0",
        "count#9"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "701": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "703": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "705": {
      "block": "test_bool_array_for_footer@9",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "707": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "708": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "709": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "711": {
      "op": "b test_bool_array_for_header@5"
    },
    "714": {
      "block": "test_bool_array_after_for@10",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "716": {
      "op": "frame_bury 0"
    },
    "718": {
      "retsub": true,
      "op": "retsub"
    },
    "719": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_arc4_conversion",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "722": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "723": {
      "op": "dupn 3",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ]
    },
    "725": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0#0"
      ]
    },
    "728": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "729": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "730": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "731": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "arr#0"
      ]
    },
    "732": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "733": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "array%bytes_len%0#1"
      ]
    },
    "734": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "735": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "736": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "737": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "738": {
      "op": "assert",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "739": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)"
      ]
    },
    "741": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "742": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "743": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "744": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "745": {
      "op": "intc_1 // 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "746": {
      "block": "test_arc4_conversion_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "748": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "750": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "751": {
      "op": "bz test_arc4_conversion_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "754": {
      "block": "test_arc4_conversion_for_body@2",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "756": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "757": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "758": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "759": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%encoded%0#1"
      ]
    },
    "760": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "761": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "762": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "encoded%1#0"
      ]
    },
    "763": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "encoded%1#0",
        "arr#0"
      ]
    },
    "765": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "encoded%1#0",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "encoded%1#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "766": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "encoded%1#0",
        "arr#0 (copy)"
      ]
    },
    "768": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "encoded%1#0",
        "slot_contents%1#0"
      ]
    },
    "769": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "slot_contents%1#0",
        "encoded%1#0"
      ]
    },
    "770": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "extended%0#0",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "extended%0#0"
      ]
    },
    "771": {
      "op": "stores",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "772": {
      "block": "test_arc4_conversion_for_footer@3",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "774": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "775": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "776": {
      "op": "frame_bury 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "778": {
      "op": "b test_arc4_conversion_for_header@1"
    },
    "781": {
      "block": "test_arc4_conversion_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0"
      ]
    },
    "783": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "784": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "slot_contents%2#0"
      ]
    },
    "785": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "array%bytes_len%1#1"
      ]
    },
    "786": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "787": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "tmp%3#0"
      ]
    },
    "788": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "tmp%3#0",
        "length#0 (copy)"
      ]
    },
    "790": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "tmp%4#0"
      ]
    },
    "791": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0"
      ]
    },
    "792": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0",
        "count#0"
      ]
    },
    "793": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0"
      ]
    },
    "795": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "count#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "796": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%2#1",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%2#1"
      ]
    },
    "797": {
      "op": "intc_2 // 8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "798": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array_length%0#0"
      ]
    },
    "799": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "801": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "802": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "804": {
      "block": "test_arc4_conversion_for_header@5",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "806": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "808": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "809": {
      "op": "bz test_arc4_conversion_after_for@10",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "812": {
      "block": "test_arc4_conversion_for_body@6",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arr#0"
      ]
    },
    "814": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0"
      ]
    },
    "815": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0"
      ]
    },
    "817": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "818": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%bytes_index%0#1",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "array%bytes_index%0#1"
      ]
    },
    "819": {
      "op": "intc_2 // 8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "array%bytes_index%0#1",
        "8"
      ]
    },
    "820": {
      "op": "extract3",
      "defined_out": [
        "arr#0",
        "array%value%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%value%0#1"
      ]
    },
    "821": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array%value%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%value%0#1",
        "0"
      ]
    },
    "822": {
      "op": "intc_2 // 8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "array%value%0#1",
        "0",
        "8"
      ]
    },
    "823": {
      "op": "extract3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "val#0"
      ]
    },
    "824": {
      "op": "bytec 4 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "arr#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "val#0",
        "0x0000000000000000"
      ]
    },
    "826": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "827": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "count#9",
        "item_index_internal%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "tmp%5#0",
        "count#9"
      ]
    },
    "829": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "count#9",
        "item_index_internal%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "831": {
      "op": "bz test_arc4_conversion_after_if_else@8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "834": {
      "block": "test_arc4_conversion_if_body@7",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "836": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#0",
        "1"
      ]
    },
    "837": {
      "op": "+",
      "defined_out": [
        "count#0",
        "count#9"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#9"
      ]
    },
    "838": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0",
        "count#9"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "840": {
      "block": "test_arc4_conversion_after_if_else@8",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "842": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "844": {
      "block": "test_arc4_conversion_for_footer@9",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "846": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "847": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "848": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "850": {
      "op": "b test_arc4_conversion_for_header@5"
    },
    "853": {
      "block": "test_arc4_conversion_after_for@10",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "bytec_3 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "0x0000"
      ]
    },
    "854": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "0x0000",
        "0x"
      ]
    },
    "855": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arc4_arr#0"
      ]
    },
    "856": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "859": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "arr#0"
      ]
    },
    "861": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "slot_contents%5#0"
      ]
    },
    "862": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "863": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "864": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "865": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "866": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "867": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "868": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "871": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "872": {
      "op": "concat",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "i#0",
        "arc4_arr#0"
      ]
    },
    "873": {
      "op": "frame_bury 0"
    },
    "875": {
      "retsub": true,
      "op": "retsub"
    },
    "876": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "params": {
        "arc4_arr#0": "bytes"
      },
      "block": "sum_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "879": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "882": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "883": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "884": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "885": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "886": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc4_arr#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "arc4_arr#0 (copy)"
      ]
    },
    "888": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "891": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "arr#0"
      ]
    },
    "892": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "893": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "894": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "896": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "extended%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "extended%0#0"
      ]
    },
    "897": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "extended%0#0",
        "arr#0 (copy)"
      ]
    },
    "899": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "extended%0#0"
      ]
    },
    "900": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "901": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "total#0"
      ]
    },
    "902": {
      "op": "swap",
      "defined_out": [
        "arr#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "arr#0"
      ]
    },
    "903": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "slot_contents%1#0"
      ]
    },
    "904": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array%bytes_len%0#1"
      ]
    },
    "905": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%0#1",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "906": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0"
      ]
    },
    "907": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "908": {
      "block": "sum_array_for_header@1",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "910": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "912": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "913": {
      "op": "bz sum_array_after_for@4",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "916": {
      "block": "sum_array_for_body@2",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "918": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0"
      ]
    },
    "919": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0",
        "item_index_internal%0#0"
      ]
    },
    "921": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "922": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%bytes_index%0#1",
        "item_index_internal%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0",
        "array%bytes_index%0#1"
      ]
    },
    "923": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%2#0",
        "array%bytes_index%0#1",
        "8"
      ]
    },
    "924": {
      "op": "extract3",
      "defined_out": [
        "arr#0",
        "array%value%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array%value%0#1"
      ]
    },
    "925": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array%value%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array%value%0#1",
        "0"
      ]
    },
    "926": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array%value%0#1",
        "0",
        "8"
      ]
    },
    "927": {
      "op": "extract3",
      "defined_out": [
        "arr#0",
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "928": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "929": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ]
    },
    "931": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "932": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "934": {
      "block": "sum_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "936": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "937": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "938": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "940": {
      "op": "b sum_array_for_header@1"
    },
    "943": {
      "block": "sum_array_after_for@4",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "945": {
      "op": "frame_bury 0"
    },
    "947": {
      "retsub": true,
      "op": "retsub"
    },
    "948": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.xtra",
      "params": {},
      "block": "xtra",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "949": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "950": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "951": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "952": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "953": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "954": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"count\""
      ]
    },
    "955": {
      "op": "swap",
      "stack_out": [
        "\"count\"",
        "new_state_value%0#0"
      ]
    },
    "956": {
      "op": "app_global_put",
      "stack_out": []
    },
    "957": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "959": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "960": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"count\""
      ]
    },
    "961": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "962": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "963": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ]
    },
    "965": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.more",
      "op": "callsub more",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "968": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "970": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "972": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ]
    },
    "974": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "976": {
      "retsub": true,
      "op": "retsub"
    },
    "977": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.more",
      "params": {},
      "block": "more",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "978": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "979": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "980": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "981": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "982": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "983": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "984": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "985": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "0",
        "\"count\""
      ]
    },
    "986": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "987": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0"
      ]
    },
    "988": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "989": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "0",
        "\"count\""
      ]
    },
    "990": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "991": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "992": {
      "op": "*",
      "defined_out": [
        "to_encode%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "to_encode%1#0"
      ]
    },
    "993": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "994": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0x"
      ]
    },
    "995": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%1#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "997": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "998": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "val_as_bytes%1#0"
      ]
    },
    "999": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1000": {
      "retsub": true,
      "op": "retsub"
    },
    "1001": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1003": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "1004": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1005": {
      "op": "bz approval_program_bare_routing@11",
      "stack_out": []
    },
    "1008": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1011": {
      "op": "pushbytes 0x28d7c1b8 // method \"test_array(uint64,uint64,uint64,uint64)uint64\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)"
      ]
    },
    "1017": {
      "op": "pushbytes 0xfa9cb973 // method \"test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])"
      ]
    },
    "1023": {
      "op": "pushbytes 0x6039a240 // method \"test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])"
      ]
    },
    "1029": {
      "op": "pushbytes 0xf8fd68a7 // method \"test_bool_array(uint64)uint64\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)"
      ]
    },
    "1035": {
      "op": "pushbytes 0x1f028db1 // method \"test_arc4_conversion(uint64)uint64[]\"",
      "defined_out": [
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])"
      ]
    },
    "1041": {
      "op": "pushbytes 0x096b3a59 // method \"sum_array(uint64[])uint64\"",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)"
      ]
    },
    "1047": {
      "op": "uncover 6",
      "stack_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "tmp%2#0"
      ]
    },
    "1049": {
      "op": "match approval_program_test_array_route@3 approval_program_test_extend_from_tuple_route@4 approval_program_test_extend_from_arc4_tuple_route@5 approval_program_test_bool_array_route@6 approval_program_test_arc4_conversion_route@7 approval_program_sum_array_route@8",
      "stack_out": []
    },
    "1063": {
      "block": "approval_program_after_if_else@17",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1064": {
      "block": "approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18",
      "stack_in": [
        "tmp%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "1065": {
      "block": "approval_program_sum_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1067": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "NoOp"
      ]
    },
    "1068": {
      "op": "==",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1069": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1070": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1072": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "0"
      ]
    },
    "1073": {
      "op": "!=",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1074": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1075": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1078": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "op": "callsub sum_array",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "1081": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "1082": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "1083": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "1084": {
      "op": "concat",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "1085": {
      "op": "log",
      "stack_out": []
    },
    "1086": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1087": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18"
    },
    "1090": {
      "block": "approval_program_test_arc4_conversion_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1092": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "NoOp"
      ]
    },
    "1093": {
      "op": "==",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1094": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1095": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1097": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "0"
      ]
    },
    "1098": {
      "op": "!=",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1099": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1100": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "1103": {
      "op": "btoi",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "1104": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "op": "callsub test_arc4_conversion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1107": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "0x151f7c75"
      ]
    },
    "1108": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%33#0"
      ]
    },
    "1109": {
      "op": "concat",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1110": {
      "op": "log",
      "stack_out": []
    },
    "1111": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1112": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18"
    },
    "1115": {
      "block": "approval_program_test_bool_array_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1117": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "NoOp"
      ]
    },
    "1118": {
      "op": "==",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1119": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1120": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1122": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "0"
      ]
    },
    "1123": {
      "op": "!=",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1124": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1125": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "1128": {
      "op": "btoi",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1129": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "op": "callsub test_bool_array",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "1132": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "1133": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "1134": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "1135": {
      "op": "concat",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1136": {
      "op": "log",
      "stack_out": []
    },
    "1137": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1138": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18"
    },
    "1141": {
      "block": "approval_program_test_extend_from_arc4_tuple_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1143": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "NoOp"
      ]
    },
    "1144": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1145": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1146": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1148": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0"
      ]
    },
    "1149": {
      "op": "!=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1150": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1151": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "1154": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "op": "callsub test_extend_from_arc4_tuple",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1157": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "0x151f7c75"
      ]
    },
    "1158": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%20#0"
      ]
    },
    "1159": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1160": {
      "op": "log",
      "stack_out": []
    },
    "1161": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1162": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18"
    },
    "1165": {
      "block": "approval_program_test_extend_from_tuple_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1167": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "NoOp"
      ]
    },
    "1168": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1169": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1170": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1172": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "1173": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1174": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1175": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1178": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%0#0 (copy)"
      ]
    },
    "1179": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%0#0 (copy)",
        "0"
      ]
    },
    "1180": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%0#0 (copy)",
        "0",
        "16"
      ]
    },
    "1182": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "item0%0#0"
      ]
    },
    "1183": {
      "op": "swap",
      "stack_out": [
        "item0%0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1184": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "item0%0#0",
        "reinterpret_bytes[32]%0#0",
        "16"
      ]
    },
    "1186": {
      "op": "dup",
      "stack_out": [
        "item0%0#0",
        "reinterpret_bytes[32]%0#0",
        "16",
        "16"
      ]
    },
    "1187": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "item0%0#0",
        "item1%0#0"
      ]
    },
    "1188": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "op": "callsub test_extend_from_tuple",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1191": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "1192": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%14#0"
      ]
    },
    "1193": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1194": {
      "op": "log",
      "stack_out": []
    },
    "1195": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1196": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18"
    },
    "1199": {
      "block": "approval_program_test_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1201": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "1202": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1203": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1204": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1206": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1207": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1208": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1209": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1212": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "1215": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ]
    },
    "1216": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "1219": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "1222": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%8#0"
      ]
    },
    "1223": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%8#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1225": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%8#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ]
    },
    "1227": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%8#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "1229": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%8#0"
      ]
    },
    "1231": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_array",
      "op": "callsub test_array",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1234": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1235": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1236": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "1237": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1238": {
      "op": "log",
      "stack_out": []
    },
    "1239": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1240": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18"
    },
    "1243": {
      "block": "approval_program_bare_routing@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1245": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "0"
      ]
    },
    "1246": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%41#0"
      ]
    },
    "1247": {
      "op": "match approval_program___algopy_default_create@12",
      "stack_out": []
    },
    "1251": {
      "block": "approval_program_switch_case_next@16",
      "stack_in": [],
      "op": "b approval_program_after_if_else@17"
    },
    "1254": {
      "block": "approval_program___algopy_default_create@12",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "1256": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "0"
      ]
    },
    "1257": {
      "op": "==",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1258": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1259": {
      "block": "approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__algopy_default_create@14",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1260": {
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@18"
    },
    "1263": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "1265": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1266": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "1268": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "1271": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "1273": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "1274": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "1275": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "1276": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1278": {
      "retsub": true,
      "op": "retsub"
    }
  }
}