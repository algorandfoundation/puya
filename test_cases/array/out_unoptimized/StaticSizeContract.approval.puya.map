{
  "version": 3,
  "sources": [
    "../static_size.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;;;;;;;;;;AAEiB;;AAAA;AAAK;AAAL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJ;AACkB;;AAAA;AAAA;AAAA;;AAAA;AAAV;AAArB;AAA4B;;;;AAA5B;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAqB;;AACL;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAR;AAAA;;AAAA;;AAAA;;AACa;;AAAV;AAAX;;;AAAA;;;AACiB;;AAAA;AAAsB;;AAAA;AAAtB;AAAL;;;;;AAGD;;AAAA;;AAAA;AAAX;;;AAAA;;;AACiB;;AAAA;;AAAA;AAAL;;;;;AAGc;;AAAA;AAAA;AAAU;;AAAA;AAAA;AAAV;AAAR;AAAV;;AAAA;AAAA;;;;;AAVa;;AAAA;AAAA;AAAA;;;;;AASJ;;AAAA;;AAAA;AAAL;;;;;AAJK;;AAAA;AAAiB;;AAAA;AAAjB;AAAL;;;;;AAMR;;AAAA;;AAAA;;;;AA3IC;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAgBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAUA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAmBA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAkBA;;;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA0BA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAnGG;AAAa;AAAb;;AAER;;;;;;AAEQ;AAAa;AAAb;AAE6C;;;AAAA;;AAAA;;AAAA;;AAAA;;AACjB;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAHrB;AACK;;;;;;;;;;AADL;AACsB;AADtjB;AAAiB;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAiB;;AACE;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmB;;AAAI;AAAJ;AAAnB;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;;AAAI;;AAAJ;AAAvB;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;;AAAI;AAAJ;AAAA;;AAAU;;AAAI;AAAJ;AAAX;;AAAA;AAAvB;AAAA;AAAP;;;;AAHK;;AAAA;AAAA;AAAA;;;;;AAKmC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAb;;;AAA/B;;AAA+B;;;AAA/B;;AAAA;AACO;;;AAAP;;AAAA;AAER;;;;;;AAEc;;;AAAA;AAAA;AAAA;AACN;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAP;AACS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACK;AAAA;AAAA;AAAP;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACA;AAER;;;;;;AAIc;;;AAAA;AAAA;AAAA;AACN;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AAER;;;;;;;;;;AAEc;;;AAAA;AAAA;AAAA;AAAN;AACO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEmB;;AAAS;AAAT;AAAV;AAAjB;AAAwB;;;;AAAxB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAiB;;AACU;;AAAJ;AAAS;AAAT;AAAX;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AACP;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AACO;AAAA;AAAA;AAAA;AAAe;;AAAS;;AAAT;AAAf;AAAP;AAEQ;AAAR;;AACR;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AACA;;;AAAA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;;;;;;;AACR;;AAAA;;AAAA;AAER;;;;;;;;;;AAEc;;;AAAA;AAAA;AAAA;AAAN;AACO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEmB;;AAAS;AAAT;AAAV;AAAjB;AAAwB;;;;AAAxB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAiB;;AACM;AAAX;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACQ;AAAR;;AACR;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACe;AAAA;;;;;AAAf;;;AAAA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;;;;;;;AAEG;AAAA;AAAA;;;AACX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAEA;;AAAA;AAER;;;;;;AAEc;;;AAAA;AAAA;AAAA;AAAN;;AACA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEQ;AAAR;;AACR;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACqB;AAAT;;AAAA;AAAA;;;;;;;;;;;;;;AAEJ;;AAAA;;AAAA;;;;AAIA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;;AAAA;AAEM;;AACA;AAAA;AAAA;AAAA;AACA;;AACA;;;AACQ;AAAA;AAAA;AAAA;AAAR;AALN;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;AAU4B;AAAA;AAAA;AAAA;AAAa;AAAb;AAAZ;AAA6C;AAAA;AAAA;AAAA;AAAa;AAAA;AAAA;AAAA;AAAb;AAAZ;AAA1C;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAER;;;;;;AAEc;;;AAAA;AAAA;AAAA;AAAN;AACqB;;AAAc;;AAAd;AAAV;AAAA;AAAA;;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACqB;;AAAc;;AAAd;AAAV;AAAA;AAAA;;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEU;AAAA;AAAA;;;AACV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AACO;AAAA;AAAA;AAAkB;;AAAlB;AAAP;AACO;AAAA;AAAwB;;AAAxB;AAAP;AACO;AAAA;AAAA;AAAQ;AAAR;AAAA;AAAQ;AAAR;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAe;;AAAc;;AAAd;AAAf;AAAP;AACO;AAAA;AAAA;AAAQ;AAAR;AAAA;AAAQ;AAAR;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAe;;AAAc;;AAAd;AAAf;AAAP;AAEO;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAP;;AAGR;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AACY;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;;;;;AACG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;AAAA;AAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAA;AAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAA;AAAK;;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAK;;AAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AAEO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAP;;AAAA;;;;;;;AA7HR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AAAA;AAqGK;;;;;;AA1BA;;;;;;AAlBA;;;;;;AAnBA;;;;;;AARA;;;;;;AAVA;;;;;;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 16 144 128"
    },
    "11": {
      "op": "bytecblock 0x \"count\" 0x151f7c75 0x00"
    },
    "27": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "61": {
      "op": "store 0"
    },
    "63": {
      "op": "b main_block@0"
    },
    "66": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "68": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "71": {
      "op": "b main_call___init__@1"
    },
    "74": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.__init__",
      "op": "callsub __init__"
    },
    "77": {
      "op": "b main_after_if_else@2"
    },
    "80": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "83": {
      "op": "return",
      "stack_out": []
    },
    "84": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "87": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "88": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0",
        "write_end#0"
      ]
    },
    "89": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "90": {
      "op": "b dynamic_array_concat_bits_block@0"
    },
    "93": {
      "block": "dynamic_array_concat_bits_block@0",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "95": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "96": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "tmp%0#0"
      ]
    },
    "97": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "99": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "101": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "102": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "103": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ]
    },
    "104": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "107": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "109": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "111": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%4#0"
      ]
    },
    "113": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)",
        "result#0 (copy)"
      ]
    },
    "114": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)"
      ]
    },
    "116": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "118": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "120": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "122": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0"
      ]
    },
    "123": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0",
        "8"
      ]
    },
    "124": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%6#0"
      ]
    },
    "125": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "current_bytes#0 (copy)",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0 (copy)"
      ]
    },
    "126": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "128": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "130": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "132": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0"
      ]
    },
    "133": {
      "op": "intc_2 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0",
        "8"
      ]
    },
    "134": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%8#0"
      ]
    },
    "135": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0 (copy)"
      ]
    },
    "136": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "138": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%9#0"
      ]
    },
    "139": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "142": {
      "op": "b dynamic_array_concat_bits_if_body@1"
    },
    "145": {
      "block": "dynamic_array_concat_bits_if_body@1",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "required_bytes#0"
      ]
    },
    "147": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "149": {
      "op": "-",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%10#0"
      ]
    },
    "150": {
      "op": "bzero",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%11#0"
      ]
    },
    "151": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%11#0",
        "result#0"
      ]
    },
    "153": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "result#0",
        "tmp%11#0"
      ]
    },
    "155": {
      "op": "concat",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "result#0"
      ]
    },
    "156": {
      "op": "frame_bury 7",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "158": {
      "op": "b dynamic_array_concat_bits_after_if_else@2"
    },
    "161": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "0"
      ]
    },
    "162": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "164": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "array_length#0"
      ]
    },
    "166": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "array_length#0",
        "16"
      ]
    },
    "167": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%13#0"
      ]
    },
    "168": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0",
        "write_offset#0 (copy)"
      ]
    },
    "169": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0"
      ]
    },
    "171": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "173": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "tmp%14#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%14#0"
      ]
    },
    "174": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "176": {
      "op": "frame_dig 7",
      "defined_out": [
        "array_length#0",
        "result#4",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "result#4"
      ]
    },
    "178": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length#0",
        "result#4",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "180": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "183": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0"
      ]
    },
    "185": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "187": {
      "op": "<",
      "defined_out": [
        "tmp%15#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%15#0"
      ]
    },
    "188": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "191": {
      "op": "b dynamic_array_concat_bits_while_body@4"
    },
    "194": {
      "block": "dynamic_array_concat_bits_while_body@4",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "new_items_bytes#0 (copy)"
      ]
    },
    "196": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "198": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "199": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "201": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%16#0"
      ]
    },
    "202": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%16#0",
        "result#0"
      ]
    },
    "204": {
      "op": "frame_dig 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "206": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "207": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "209": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%16#0"
      ]
    },
    "211": {
      "op": "setbit",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%17#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0",
        "tmp%17#0"
      ]
    },
    "212": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "214": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "215": {
      "op": "+",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%18#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%18#0"
      ]
    },
    "216": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0"
      ]
    },
    "218": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "220": {
      "op": "+",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%19#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%19#0"
      ]
    },
    "221": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "223": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "226": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "result#0"
      ]
    },
    "228": {
      "op": "frame_bury 0"
    },
    "230": {
      "retsub": true,
      "op": "retsub"
    },
    "231": {
      "subroutine": "test_cases.array.static_size.path_length",
      "params": {
        "path#0": "uint64"
      },
      "block": "path_length",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "234": {
      "op": "intc_0 // 0",
      "stack_out": [
        "point.x#0"
      ]
    },
    "235": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "point.x#0",
        "dx#0"
      ]
    },
    "236": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0"
      ]
    },
    "237": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0"
      ]
    },
    "238": {
      "op": "b path_length_block@0"
    },
    "241": {
      "block": "path_length_block@0",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "path#0 (copy)"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "path#0 (copy)"
      ]
    },
    "243": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "slot_contents%0#0"
      ]
    },
    "244": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "slot_contents%0#0",
        "0"
      ]
    },
    "245": {
      "op": "intc 4 // 144",
      "defined_out": [
        "0",
        "144",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "slot_contents%0#0",
        "0",
        "144"
      ]
    },
    "247": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "248": {
      "op": "intc 4 // 144",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0",
        "144"
      ]
    },
    "250": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "array_item%0#0"
      ]
    },
    "251": {
      "op": "dup",
      "defined_out": [
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "252": {
      "op": "intc_0 // 0",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0"
      ]
    },
    "253": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "254": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "array_item%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "255": {
      "op": "cover 1",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "aggregate%extract%0#0",
        "array_item%0#0"
      ]
    },
    "257": {
      "op": "intc_2 // 8",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "aggregate%extract%0#0",
        "array_item%0#0",
        "8"
      ]
    },
    "258": {
      "op": "intc_2 // 8",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "aggregate%extract%0#0",
        "array_item%0#0",
        "8",
        "8"
      ]
    },
    "259": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "260": {
      "op": "btoi",
      "defined_out": [],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0"
      ]
    },
    "261": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ]
    },
    "262": {
      "op": "frame_dig -1",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "path#0 (copy)"
      ]
    },
    "264": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "265": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "266": {
      "op": "intc 4 // 144",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "aggregate%bytes_len%0#0",
        "144"
      ]
    },
    "268": {
      "op": "/",
      "defined_out": [],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0"
      ]
    },
    "269": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "1"
      ]
    },
    "270": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0"
      ]
    },
    "271": {
      "op": "intc_1 // 1",
      "defined_out": [],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "272": {
      "op": "b path_length_for_header@1"
    },
    "275": {
      "block": "path_length_for_header@1",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "277": {
      "op": "frame_dig 7",
      "defined_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "279": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "280": {
      "op": "bz path_length_after_for@10",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "283": {
      "op": "b path_length_for_body@2"
    },
    "286": {
      "block": "path_length_for_body@2",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "point_idx#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point_idx#1"
      ]
    },
    "288": {
      "op": "frame_dig -1",
      "defined_out": [
        "path#0 (copy)",
        "point_idx#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point_idx#1",
        "path#0 (copy)"
      ]
    },
    "290": {
      "op": "loads",
      "defined_out": [
        "point_idx#1",
        "slot_contents%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point_idx#1",
        "slot_contents%1#0"
      ]
    },
    "291": {
      "op": "cover 1",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "slot_contents%1#0",
        "point_idx#1"
      ]
    },
    "293": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "point_idx#1",
        "slot_contents%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "slot_contents%1#0",
        "point_idx#1",
        "144"
      ]
    },
    "295": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "slot_contents%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "296": {
      "op": "intc 4 // 144",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#0",
        "144"
      ]
    },
    "298": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "array_item%1#0"
      ]
    },
    "299": {
      "op": "dup",
      "defined_out": [
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "300": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "0"
      ]
    },
    "301": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "302": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%8#0",
        "array_item%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "array_item%1#0",
        "aggregate%extract%8#0"
      ]
    },
    "303": {
      "op": "cover 1",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "aggregate%extract%8#0",
        "array_item%1#0"
      ]
    },
    "305": {
      "op": "intc_2 // 8",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "aggregate%extract%8#0",
        "array_item%1#0",
        "8"
      ]
    },
    "306": {
      "op": "intc_2 // 8",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "aggregate%extract%8#0",
        "array_item%1#0",
        "8",
        "8"
      ]
    },
    "307": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%8#0",
        "aggregate%extract%9#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "aggregate%extract%8#0",
        "aggregate%extract%9#0"
      ]
    },
    "308": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%2#0",
        "value_internal%0#0",
        "values%7#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "values%7#0",
        "aggregate%item1%2#0"
      ]
    },
    "309": {
      "op": "cover 1",
      "defined_out": [
        "value_internal%0#0",
        "values%7#0",
        "values%8#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "values%8#0",
        "values%7#0"
      ]
    },
    "311": {
      "op": "dup",
      "defined_out": [
        "point.x#0 (copy)",
        "value_internal%0#0",
        "values%8#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "values%8#0",
        "point.x#0 (copy)",
        "point.x#0 (copy)"
      ]
    },
    "312": {
      "op": "cover 2",
      "defined_out": [
        "point.x#0",
        "point.x#0 (copy)",
        "value_internal%0#0",
        "values%8#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point.x#0",
        "values%8#0",
        "point.x#0 (copy)"
      ]
    },
    "314": {
      "op": "frame_bury 0",
      "defined_out": [
        "point.x#0",
        "value_internal%0#0",
        "values%8#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point.x#0",
        "values%8#0"
      ]
    },
    "316": {
      "op": "frame_bury 3",
      "defined_out": [
        "point.x#0",
        "reinterpret_biguint%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "318": {
      "op": "frame_dig 4",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "320": {
      "op": "b<",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%1#0"
      ]
    },
    "321": {
      "op": "bz path_length_else_body@4",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "324": {
      "op": "b path_length_if_body@3"
    },
    "327": {
      "block": "path_length_if_body@3",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "last_point.x#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "last_point.x#0"
      ]
    },
    "329": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%2#0"
      ]
    },
    "330": {
      "op": "frame_dig 0",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%2#0",
        "point.x#0"
      ]
    },
    "332": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "333": {
      "op": "-",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "334": {
      "op": "frame_bury 1",
      "defined_out": [
        "last_point.x#0",
        "point.x#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "336": {
      "op": "b path_length_after_if_else@5"
    },
    "339": {
      "block": "path_length_after_if_else@5",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point.y#0"
      ]
    },
    "341": {
      "op": "frame_dig 5",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "343": {
      "op": "<",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%8#0"
      ]
    },
    "344": {
      "op": "bz path_length_else_body@7",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "347": {
      "op": "b path_length_if_body@6"
    },
    "350": {
      "block": "path_length_if_body@6",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "last_point.y#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "last_point.y#0"
      ]
    },
    "352": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "last_point.y#0",
        "point.y#0"
      ]
    },
    "354": {
      "op": "-",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%9#0"
      ]
    },
    "355": {
      "op": "frame_bury 2",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "357": {
      "op": "b path_length_after_if_else@8"
    },
    "360": {
      "block": "path_length_after_if_else@8",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "dx#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "dx#0"
      ]
    },
    "362": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dx#0 (copy)"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "dx#0 (copy)",
        "dx#0"
      ]
    },
    "363": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%11#0"
      ]
    },
    "364": {
      "op": "frame_dig 2",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%11#0",
        "dy#0"
      ]
    },
    "366": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dy#0",
        "dy#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%11#0",
        "dy#0 (copy)",
        "dy#0"
      ]
    },
    "367": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "368": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%13#0"
      ]
    },
    "369": {
      "op": "sqrt",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%14#0"
      ]
    },
    "370": {
      "op": "frame_dig 6",
      "defined_out": [
        "dx#0",
        "dy#0",
        "length#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%14#0",
        "length#0"
      ]
    },
    "372": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "dy#0",
        "length#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%15#0"
      ]
    },
    "373": {
      "op": "frame_bury 6",
      "defined_out": [
        "dx#0",
        "dy#0",
        "length#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "375": {
      "op": "b path_length_for_footer@9"
    },
    "378": {
      "block": "path_length_for_footer@9",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "380": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "381": {
      "op": "+",
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "382": {
      "op": "frame_bury 8",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "384": {
      "op": "b path_length_for_header@1"
    },
    "387": {
      "block": "path_length_else_body@7",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point.y#0"
      ]
    },
    "389": {
      "op": "frame_dig 5",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "391": {
      "op": "-",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%10#0"
      ]
    },
    "392": {
      "op": "frame_bury 2",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "394": {
      "op": "b path_length_after_if_else@8"
    },
    "397": {
      "block": "path_length_else_body@4",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "point.x#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "point.x#0"
      ]
    },
    "399": {
      "op": "btoi",
      "defined_out": [
        "point.x#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%5#0"
      ]
    },
    "400": {
      "op": "frame_dig 4",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%5#0",
        "last_point.x#0"
      ]
    },
    "402": {
      "op": "btoi",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "403": {
      "op": "-",
      "defined_out": [
        "last_point.x#0",
        "point.x#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%7#0"
      ]
    },
    "404": {
      "op": "frame_bury 1",
      "defined_out": [
        "last_point.x#0",
        "point.x#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "406": {
      "op": "b path_length_after_if_else@5"
    },
    "409": {
      "block": "path_length_after_for@10",
      "stack_in": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "point.x#0",
        "dx#0",
        "dy#0",
        "point.y#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "tmp%0#0",
        "value_internal%0#0",
        "length#0"
      ]
    },
    "411": {
      "op": "frame_bury 0"
    },
    "413": {
      "retsub": true,
      "op": "retsub"
    },
    "414": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_array[routing]",
      "params": {},
      "block": "test_array",
      "stack_in": [],
      "op": "b test_array_block@0"
    },
    "417": {
      "block": "test_array_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "420": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "423": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0"
      ]
    },
    "424": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "427": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "reinterpret_Encoded(uint64)%3#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "430": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%1#0"
      ]
    },
    "431": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%1#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "433": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%1#0",
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0"
      ]
    },
    "435": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "437": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%1#0"
      ]
    },
    "439": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_array",
      "op": "callsub test_cases.array.static_size.StaticSizeContract.test_array",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "442": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "443": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "444": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%3#0"
      ]
    },
    "446": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "447": {
      "op": "log",
      "stack_out": []
    },
    "448": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "449": {
      "op": "return",
      "stack_out": []
    },
    "450": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple[routing]",
      "params": {},
      "block": "test_extend_from_tuple",
      "stack_in": [],
      "op": "b test_extend_from_tuple_block@0"
    },
    "453": {
      "block": "test_extend_from_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "456": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ]
    },
    "457": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)",
        "0"
      ]
    },
    "458": {
      "op": "intc_3 // 16",
      "defined_out": [
        "0",
        "16",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)",
        "0",
        "16"
      ]
    },
    "459": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "460": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "462": {
      "op": "intc_3 // 16",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "16"
      ]
    },
    "463": {
      "op": "intc_3 // 16",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "16",
        "16"
      ]
    },
    "464": {
      "op": "extract3",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "465": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "op": "callsub test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "468": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "469": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "471": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "472": {
      "op": "log",
      "stack_out": []
    },
    "473": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "474": {
      "op": "return",
      "stack_out": []
    },
    "475": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple[routing]",
      "params": {},
      "block": "test_extend_from_arc4_tuple",
      "stack_in": [],
      "op": "b test_extend_from_arc4_tuple_block@0"
    },
    "478": {
      "block": "test_extend_from_arc4_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "481": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "op": "callsub test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "484": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "485": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "487": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "488": {
      "op": "log",
      "stack_out": []
    },
    "489": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "490": {
      "op": "return",
      "stack_out": []
    },
    "491": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_bool_array[routing]",
      "params": {},
      "block": "test_bool_array",
      "stack_in": [],
      "op": "b test_bool_array_block@0"
    },
    "494": {
      "block": "test_bool_array_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "497": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "498": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "op": "callsub test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "501": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "502": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "503": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "505": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "506": {
      "op": "log",
      "stack_out": []
    },
    "507": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "508": {
      "op": "return",
      "stack_out": []
    },
    "509": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion[routing]",
      "params": {},
      "block": "test_arc4_conversion",
      "stack_in": [],
      "op": "b test_arc4_conversion_block@0"
    },
    "512": {
      "block": "test_arc4_conversion_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "515": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "516": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "op": "callsub test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "519": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "520": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "522": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "523": {
      "op": "log",
      "stack_out": []
    },
    "524": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "525": {
      "op": "return",
      "stack_out": []
    },
    "526": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.sum_array[routing]",
      "params": {},
      "block": "sum_array",
      "stack_in": [],
      "op": "b sum_array_block@0"
    },
    "529": {
      "block": "sum_array_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "532": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "op": "callsub test_cases.array.static_size.StaticSizeContract.sum_array",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "535": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "536": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "537": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "539": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "540": {
      "op": "log",
      "stack_out": []
    },
    "541": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "542": {
      "op": "return",
      "stack_out": []
    },
    "543": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool[routing]",
      "params": {},
      "block": "test_arc4_bool",
      "stack_in": [],
      "op": "b test_arc4_bool_block@0"
    },
    "546": {
      "block": "test_arc4_bool_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool",
      "op": "callsub test_cases.array.static_size.StaticSizeContract.test_arc4_bool",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "549": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "550": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "552": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "553": {
      "op": "log",
      "stack_out": []
    },
    "554": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "555": {
      "op": "return",
      "stack_out": []
    },
    "556": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "559": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "\"count\""
      ]
    },
    "560": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "\"count\"",
        "0"
      ]
    },
    "561": {
      "op": "app_global_put",
      "stack_out": []
    },
    "562": {
      "retsub": true,
      "op": "retsub"
    },
    "563": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_array",
      "params": {
        "x1#0": "bytes",
        "y1#0": "uint64",
        "x2#0": "bytes",
        "y2#0": "uint64"
      },
      "block": "test_cases.array.static_size.StaticSizeContract.test_array",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "566": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_array_block@0"
    },
    "569": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_array_block@0",
      "stack_in": [],
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "\"count\""
      ]
    },
    "570": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "\"count\"",
        "0"
      ]
    },
    "571": {
      "op": "app_global_put",
      "stack_out": []
    },
    "572": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "575": {
      "op": "cover 4",
      "stack_out": [
        "tmp%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "577": {
      "op": "cover 3",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "579": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "581": {
      "op": "cover 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "583": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "586": {
      "op": "cover 9",
      "stack_out": [
        "tmp%9#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "588": {
      "op": "cover 8",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "590": {
      "op": "cover 7",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "592": {
      "op": "cover 6",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "594": {
      "op": "cover 5",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "596": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "599": {
      "op": "cover 14",
      "stack_out": [
        "tmp%14#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "601": {
      "op": "cover 13",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "603": {
      "op": "cover 12",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "605": {
      "op": "cover 11",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "607": {
      "op": "cover 10",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "609": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "610": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x",
        "0x0000000000000000",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "0x0000000000000000"
      ]
    },
    "620": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "621": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "0"
      ]
    },
    "622": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "623": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "624": {
      "op": "cover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "626": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%1#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "627": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "628": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "630": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%2#0"
      ]
    },
    "631": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "aggregate%head%2#0",
        "tmp%1#0"
      ]
    },
    "633": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "634": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "aggregate%head%3#0"
      ]
    },
    "635": {
      "op": "uncover 1",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(uint8[32])%0#0"
      ]
    },
    "637": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%head%4#0"
      ]
    },
    "638": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%4#0",
        "tmp%3#0"
      ]
    },
    "640": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0"
      ]
    },
    "641": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "tmp%4#0 (copy)"
      ]
    },
    "643": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0"
      ]
    },
    "644": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "646": {
      "op": "<=",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%len_ok%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "647": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0"
      ]
    },
    "648": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "64"
      ]
    },
    "650": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0"
      ]
    },
    "651": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0",
        "tmp%4#0"
      ]
    },
    "653": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%0#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "654": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%0#0",
        "aggregate%head%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%0#0"
      ]
    },
    "655": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%0#0"
      ]
    },
    "656": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%0#0",
        "0x"
      ]
    },
    "657": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "0x",
        "aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%0#0"
      ]
    },
    "659": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%8#0"
      ]
    },
    "660": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%8#0",
        "0x"
      ]
    },
    "661": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%8#0",
        "0x",
        "x1#0 (copy)"
      ]
    },
    "663": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "aggregate%head%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%8#0",
        "aggregate%head%9#0"
      ]
    },
    "664": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%head%8#0",
        "aggregate%head%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "y1#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%8#0",
        "aggregate%head%9#0",
        "y1#0 (copy)"
      ]
    },
    "666": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%8#0",
        "aggregate%head%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%8#0",
        "aggregate%head%9#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "667": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0"
      ]
    },
    "668": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "tmp%5#0"
      ]
    },
    "670": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#0",
        "aggregate%head%10#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "671": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(uint64)%4#0",
        "0x"
      ]
    },
    "672": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "0x",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "674": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%11#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%11#0"
      ]
    },
    "675": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%11#0",
        "tmp%6#0"
      ]
    },
    "677": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%10#0",
        "aggregate%head%11#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "678": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0"
      ]
    },
    "679": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%1#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%as_Encoded(uint8[32])%1#0"
      ]
    },
    "681": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0"
      ]
    },
    "682": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "tmp%8#0"
      ]
    },
    "684": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0"
      ]
    },
    "685": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "tmp%9#0 (copy)"
      ]
    },
    "687": {
      "op": "len",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%8#0",
        "aggregate%value_len%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%value_len%1#0"
      ]
    },
    "688": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%value_len%1#0",
        "64"
      ]
    },
    "690": {
      "op": "<=",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%8#0",
        "aggregate%len_ok%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%len_ok%1#0"
      ]
    },
    "691": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0"
      ]
    },
    "692": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "64"
      ]
    },
    "694": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%1#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%bzero%1#0"
      ]
    },
    "695": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%bzero%1#0",
        "tmp%9#0"
      ]
    },
    "697": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%1#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%as_Encoded(uint512)%1#0"
      ]
    },
    "698": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%1#0",
        "aggregate%head%10#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%8#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%1#0"
      ]
    },
    "699": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%1#0",
        "aggregate%head%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%8#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%1#0"
      ]
    },
    "700": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%17#0"
      ]
    },
    "701": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%17#0",
        "0x"
      ]
    },
    "702": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "aggregate%head%17#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "x2#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%17#0",
        "0x",
        "x2#0 (copy)"
      ]
    },
    "704": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%18#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%17#0",
        "aggregate%head%18#0"
      ]
    },
    "705": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%18#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "y2#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%17#0",
        "aggregate%head%18#0",
        "y2#0 (copy)"
      ]
    },
    "707": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%6#0",
        "aggregate%head%17#0",
        "aggregate%head%18#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%17#0",
        "aggregate%head%18#0",
        "aggregate%as_Encoded(uint64)%6#0"
      ]
    },
    "708": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0"
      ]
    },
    "709": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "tmp%10#0"
      ]
    },
    "711": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%7#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%as_Encoded(uint64)%7#0"
      ]
    },
    "712": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%as_Encoded(uint64)%7#0",
        "0x"
      ]
    },
    "713": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "0x",
        "aggregate%as_Encoded(uint64)%7#0"
      ]
    },
    "715": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%20#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%20#0"
      ]
    },
    "716": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%20#0",
        "tmp%11#0"
      ]
    },
    "718": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%8#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%20#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%20#0",
        "aggregate%as_Encoded(uint64)%8#0"
      ]
    },
    "719": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0"
      ]
    },
    "720": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%2#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0",
        "aggregate%as_Encoded(uint8[32])%2#0"
      ]
    },
    "722": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0"
      ]
    },
    "723": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0",
        "tmp%13#0"
      ]
    },
    "725": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ]
    },
    "726": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0 (copy)"
      ]
    },
    "728": {
      "op": "len",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0"
      ]
    },
    "729": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0",
        "64"
      ]
    },
    "731": {
      "op": "<=",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%len_ok%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%len_ok%2#0"
      ]
    },
    "732": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ]
    },
    "733": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "64"
      ]
    },
    "735": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%2#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%bzero%2#0"
      ]
    },
    "736": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%bzero%2#0",
        "tmp%14#0"
      ]
    },
    "738": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%2#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ],
      "stack_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%as_Encoded(uint512)%2#0"
      ]
    },
    "739": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%2#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0"
      ],
      "stack_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%2#0"
      ]
    },
    "740": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%2#0",
        "aggregate%head%17#0"
      ],
      "stack_out": [
        "aggregate%head%17#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%2#0"
      ]
    },
    "741": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "742": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "745": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "746": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "748": {
      "op": "stores",
      "defined_out": [],
      "stack_out": [
        "path#0"
      ]
    },
    "749": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "path#0",
        "1"
      ]
    },
    "750": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "path#0"
      ]
    },
    "751": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "path#0",
        "value_internal%0#0"
      ]
    },
    "752": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_array_for_header@1"
    },
    "755": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_array_for_header@1",
      "stack_in": [
        "path#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "757": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "3"
      ]
    },
    "759": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "760": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.test_array_after_for@4",
      "stack_out": [
        "path#0",
        "value_internal%0#0"
      ]
    },
    "763": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_array_for_body@2"
    },
    "766": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_array_for_body@2",
      "stack_in": [
        "path#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "768": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "path#0"
      ]
    },
    "770": {
      "op": "dup",
      "defined_out": [
        "i#1",
        "path#0",
        "path#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "path#0 (copy)",
        "path#0 (copy)"
      ]
    },
    "771": {
      "op": "cover 2",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "path#0 (copy)"
      ]
    },
    "773": {
      "op": "loads",
      "defined_out": [
        "i#1",
        "path#0",
        "slot_contents%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "slot_contents%0#0"
      ]
    },
    "774": {
      "op": "cover 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%0#0",
        "i#1"
      ]
    },
    "776": {
      "op": "dup",
      "defined_out": [
        "i#1",
        "i#1 (copy)",
        "path#0",
        "slot_contents%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%0#0",
        "i#1",
        "i#1 (copy)"
      ]
    },
    "777": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "i#1",
        "i#1 (copy)",
        "path#0",
        "slot_contents%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%0#0",
        "i#1",
        "i#1 (copy)",
        "144"
      ]
    },
    "779": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "i#1",
        "path#0",
        "slot_contents%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%0#0",
        "i#1",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "780": {
      "op": "uncover 2",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "aggregate%bytes_offset%0#0",
        "slot_contents%0#0"
      ]
    },
    "782": {
      "op": "uncover 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "784": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0",
        "144"
      ]
    },
    "786": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "array_item%0#0"
      ]
    },
    "787": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "array_item%0#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "array_item%0#0",
        "16"
      ]
    },
    "788": {
      "op": "intc 5 // 128",
      "defined_out": [
        "128",
        "16",
        "array_item%0#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "array_item%0#0",
        "16",
        "128"
      ]
    },
    "790": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "aggregate%extract%2#0"
      ]
    },
    "791": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%2#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "aggregate%extract%2#0",
        "8"
      ]
    },
    "792": {
      "op": "intc_2 // 8",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "aggregate%extract%2#0",
        "8",
        "8"
      ]
    },
    "793": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "aggregate%extract%4#0"
      ]
    },
    "794": {
      "op": "btoi",
      "defined_out": [
        "i#1",
        "path#0",
        "value_internal%0#0",
        "values%3#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "values%3#0"
      ]
    },
    "795": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "values%3#0",
        "i#1 (copy)"
      ]
    },
    "797": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#1",
        "i#1 (copy)",
        "path#0",
        "value_internal%0#0",
        "values%3#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "values%3#0",
        "i#1 (copy)",
        "1"
      ]
    },
    "798": {
      "op": "+",
      "defined_out": [
        "i#1",
        "path#0",
        "tmp%15#0",
        "value_internal%0#0",
        "values%3#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "values%3#0",
        "tmp%15#0"
      ]
    },
    "799": {
      "op": "==",
      "defined_out": [
        "i#1",
        "path#0",
        "tmp%16#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "tmp%16#0"
      ]
    },
    "800": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1"
      ]
    },
    "801": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "path#0 (copy)"
      ]
    },
    "803": {
      "op": "loads",
      "defined_out": [
        "i#1",
        "path#0",
        "slot_contents%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "slot_contents%1#0"
      ]
    },
    "804": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "slot_contents%1#0",
        "i#1 (copy)"
      ]
    },
    "806": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "slot_contents%1#0",
        "i#1 (copy)",
        "144"
      ]
    },
    "808": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "i#1",
        "path#0",
        "slot_contents%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "809": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#0",
        "144"
      ]
    },
    "811": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%1#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "array_item%1#0"
      ]
    },
    "812": {
      "op": "intc_3 // 16",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "array_item%1#0",
        "16"
      ]
    },
    "813": {
      "op": "intc 5 // 128",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "array_item%1#0",
        "16",
        "128"
      ]
    },
    "815": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%10#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "aggregate%extract%10#0"
      ]
    },
    "816": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "aggregate%extract%10#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "aggregate%extract%10#0",
        "48"
      ]
    },
    "818": {
      "op": "intc_3 // 16",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "aggregate%extract%10#0",
        "48",
        "16"
      ]
    },
    "819": {
      "op": "extract3",
      "defined_out": [
        "i#1",
        "path#0",
        "value_internal%0#0",
        "values%12#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "values%12#0"
      ]
    },
    "820": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#1",
        "path#0",
        "value_internal%0#0",
        "values%12#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "values%12#0",
        "0"
      ]
    },
    "821": {
      "op": "intc_2 // 8",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "values%12#0",
        "0",
        "8"
      ]
    },
    "822": {
      "op": "extract3",
      "defined_out": [
        "i#1",
        "path#0",
        "reinterpret_biguint%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "823": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "reinterpret_biguint%0#0",
        "i#1 (copy)"
      ]
    },
    "825": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#1",
        "i#1 (copy)",
        "path#0",
        "reinterpret_biguint%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "reinterpret_biguint%0#0",
        "i#1 (copy)",
        "2"
      ]
    },
    "827": {
      "op": "+",
      "defined_out": [
        "i#1",
        "path#0",
        "reinterpret_biguint%0#0",
        "tmp%17#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "reinterpret_biguint%0#0",
        "tmp%17#0"
      ]
    },
    "828": {
      "op": "itob",
      "defined_out": [
        "i#1",
        "path#0",
        "reinterpret_biguint%0#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "reinterpret_biguint%0#0",
        "tmp%18#0"
      ]
    },
    "829": {
      "op": "b==",
      "defined_out": [
        "i#1",
        "path#0",
        "tmp%19#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1",
        "tmp%19#0"
      ]
    },
    "830": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "i#1"
      ]
    },
    "831": {
      "op": "uncover 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "path#0"
      ]
    },
    "833": {
      "op": "loads",
      "defined_out": [
        "i#1",
        "path#0",
        "slot_contents%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "slot_contents%2#0"
      ]
    },
    "834": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "slot_contents%2#0",
        "i#1 (copy)"
      ]
    },
    "836": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "slot_contents%2#0",
        "i#1 (copy)",
        "144"
      ]
    },
    "838": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%2#0",
        "i#1",
        "path#0",
        "slot_contents%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "slot_contents%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "839": {
      "op": "intc 4 // 144",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "slot_contents%2#0",
        "aggregate%bytes_offset%2#0",
        "144"
      ]
    },
    "841": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%2#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "array_item%2#0"
      ]
    },
    "842": {
      "op": "intc_3 // 16",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "array_item%2#0",
        "16"
      ]
    },
    "843": {
      "op": "intc 5 // 128",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "array_item%2#0",
        "16",
        "128"
      ]
    },
    "845": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%19#0",
        "i#1",
        "path#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%extract%19#0"
      ]
    },
    "846": {
      "op": "pushint 48 // 48",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%extract%19#0",
        "48"
      ]
    },
    "848": {
      "op": "intc_3 // 16",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%extract%19#0",
        "48",
        "16"
      ]
    },
    "849": {
      "op": "extract3",
      "defined_out": [
        "i#1",
        "path#0",
        "value_internal%0#0",
        "values%19#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "values%19#0"
      ]
    },
    "850": {
      "op": "intc_2 // 8",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "values%19#0",
        "8"
      ]
    },
    "851": {
      "op": "intc_2 // 8",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "values%19#0",
        "8",
        "8"
      ]
    },
    "852": {
      "op": "extract3",
      "defined_out": [
        "i#1",
        "path#0",
        "reinterpret_biguint%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "reinterpret_biguint%1#0"
      ]
    },
    "853": {
      "op": "dig 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "reinterpret_biguint%1#0",
        "i#1 (copy)"
      ]
    },
    "855": {
      "op": "intc_1 // 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "reinterpret_biguint%1#0",
        "i#1 (copy)",
        "1"
      ]
    },
    "856": {
      "op": "+",
      "defined_out": [
        "i#1",
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%20#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "reinterpret_biguint%1#0",
        "tmp%20#0"
      ]
    },
    "857": {
      "op": "cover 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "i#1",
        "tmp%20#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "859": {
      "op": "uncover 2",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "tmp%20#0",
        "reinterpret_biguint%1#0",
        "i#1"
      ]
    },
    "861": {
      "op": "intc_1 // 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "tmp%20#0",
        "reinterpret_biguint%1#0",
        "i#1",
        "1"
      ]
    },
    "862": {
      "op": "+",
      "defined_out": [
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%20#0",
        "tmp%21#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "tmp%20#0",
        "reinterpret_biguint%1#0",
        "tmp%21#0"
      ]
    },
    "863": {
      "op": "uncover 2",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "reinterpret_biguint%1#0",
        "tmp%21#0",
        "tmp%20#0"
      ]
    },
    "865": {
      "op": "*",
      "defined_out": [
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%22#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "reinterpret_biguint%1#0",
        "tmp%22#0"
      ]
    },
    "866": {
      "op": "itob",
      "defined_out": [
        "path#0",
        "reinterpret_biguint%1#0",
        "tmp%23#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "reinterpret_biguint%1#0",
        "tmp%23#0"
      ]
    },
    "867": {
      "op": "b==",
      "defined_out": [
        "path#0",
        "tmp%24#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "tmp%24#0"
      ]
    },
    "868": {
      "op": "assert",
      "stack_out": [
        "path#0",
        "value_internal%0#0"
      ]
    },
    "869": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_array_for_footer@3"
    },
    "872": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_array_for_footer@3",
      "stack_in": [
        "path#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "874": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "875": {
      "op": "+",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "876": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0"
      ]
    },
    "878": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_array_for_header@1"
    },
    "881": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_array_after_for@4",
      "stack_in": [
        "path#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0"
      ]
    },
    "883": {
      "op": "dup",
      "defined_out": [
        "path#0",
        "path#0 (copy)"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "path#0 (copy)"
      ]
    },
    "884": {
      "op": "loads",
      "defined_out": [
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%3#0"
      ]
    },
    "885": {
      "op": "dup",
      "defined_out": [
        "path#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "886": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%3#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "887": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "aggregate%bytes_len%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%3#0",
        "aggregate%bytes_len%0#0",
        "144"
      ]
    },
    "889": {
      "op": "/",
      "defined_out": [
        "path#0",
        "slot_contents%3#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%3#0",
        "tmp%25#0"
      ]
    },
    "890": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%3#0",
        "as_bytes%0#0"
      ]
    },
    "891": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "path#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "slot_contents%3#0",
        "as_u16_bytes%0#0"
      ]
    },
    "894": {
      "op": "uncover 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "as_u16_bytes%0#0",
        "slot_contents%3#0"
      ]
    },
    "896": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "converted_array%0#0"
      ]
    },
    "897": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "converted_array%0#0",
        "path#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "converted_array%0#0",
        "\"a\""
      ]
    },
    "900": {
      "op": "box_del",
      "defined_out": [
        "converted_array%0#0",
        "path#0",
        "{box_del}"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "converted_array%0#0",
        "{box_del}"
      ]
    },
    "901": {
      "op": "pop",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "converted_array%0#0"
      ]
    },
    "902": {
      "op": "pushbytes \"a\"",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "converted_array%0#0",
        "\"a\""
      ]
    },
    "905": {
      "op": "uncover 1",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0",
        "\"a\"",
        "converted_array%0#0"
      ]
    },
    "907": {
      "op": "box_put",
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "path#0"
      ]
    },
    "908": {
      "callsub": "test_cases.array.static_size.path_length",
      "op": "callsub path_length",
      "defined_out": [
        "path#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "path#0",
        "value_internal%0#0",
        "tmp%26#0"
      ]
    },
    "911": {
      "op": "frame_bury 0"
    },
    "913": {
      "retsub": true,
      "op": "retsub"
    },
    "914": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "params": {
        "some_more.0#0": "bytes",
        "some_more.1#0": "bytes"
      },
      "block": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "917": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple_block@0"
    },
    "920": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple_block@0",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "923": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "924": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "925": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "926": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "927": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "928": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "0x"
      ]
    },
    "929": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arr#0",
        "slot_contents%0#0",
        "some_more.0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "some_more.0#0 (copy)"
      ]
    },
    "931": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "aggregate%head%0#0"
      ]
    },
    "932": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "slot_contents%0#0",
        "some_more.1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "aggregate%head%0#0",
        "some_more.1#0 (copy)"
      ]
    },
    "934": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ]
    },
    "935": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "936": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "938": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "940": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "941": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "942": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "943": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "944": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%bytes_len%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%bytes_len%0#0",
        "16"
      ]
    },
    "945": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "946": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0",
        "1"
      ]
    },
    "947": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "948": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "arr#0 (copy)"
      ]
    },
    "950": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "slot_contents%1#0"
      ]
    },
    "951": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%2#0"
      ]
    },
    "953": {
      "op": "intc_3 // 16",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%2#0",
        "16"
      ]
    },
    "954": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "955": {
      "op": "intc_3 // 16",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "956": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "last#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0"
      ]
    },
    "957": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "last#0",
        "last#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "last#0 (copy)"
      ]
    },
    "958": {
      "op": "frame_dig -1",
      "stack_out": [
        "arr#0",
        "last#0",
        "last#0 (copy)",
        "some_more.1#0 (copy)"
      ]
    },
    "960": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "last#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "tmp%3#0"
      ]
    },
    "961": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "last#0"
      ]
    },
    "962": {
      "op": "uncover 1",
      "stack_out": [
        "last#0",
        "arr#0"
      ]
    },
    "964": {
      "op": "loads",
      "defined_out": [
        "last#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%2#0"
      ]
    },
    "965": {
      "op": "dup",
      "defined_out": [
        "last#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ]
    },
    "966": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "last#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "967": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%1#0",
        "16"
      ]
    },
    "968": {
      "op": "/",
      "defined_out": [
        "last#0",
        "slot_contents%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%2#0",
        "tmp%4#0"
      ]
    },
    "969": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "last#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%2#0",
        "as_bytes%0#0"
      ]
    },
    "970": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "last#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%2#0",
        "as_u16_bytes%0#0"
      ]
    },
    "973": {
      "op": "uncover 1",
      "stack_out": [
        "last#0",
        "as_u16_bytes%0#0",
        "slot_contents%2#0"
      ]
    },
    "975": {
      "op": "concat",
      "defined_out": [
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0"
      ]
    },
    "976": {
      "op": "dup",
      "defined_out": [
        "last#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "977": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "last#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "result#0 (copy)",
        "0"
      ]
    },
    "978": {
      "op": "extract_uint16",
      "defined_out": [
        "last#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%5#0"
      ]
    },
    "979": {
      "op": "intc_1 // 1",
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%5#0",
        "1"
      ]
    },
    "980": {
      "op": "-",
      "defined_out": [
        "last#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0"
      ]
    },
    "981": {
      "op": "dig 1",
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0",
        "result#0 (copy)"
      ]
    },
    "983": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "last#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0",
        "aggregate%total_length%0#0"
      ]
    },
    "984": {
      "op": "cover 1",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%total_length%0#0",
        "tmp%6#0"
      ]
    },
    "986": {
      "op": "dig 2",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%total_length%0#0",
        "tmp%6#0",
        "result#0 (copy)"
      ]
    },
    "988": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "last#0",
        "result#0",
        "result#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%total_length%0#0",
        "tmp%6#0",
        "result#0 (copy)",
        "2"
      ]
    },
    "990": {
      "op": "uncover 3",
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0",
        "result#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "992": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "last#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "993": {
      "op": "uncover 1",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0"
      ]
    },
    "995": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0",
        "16"
      ]
    },
    "996": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "997": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "998": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%1#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "array_item%1#0"
      ]
    },
    "999": {
      "op": "uncover 2",
      "stack_out": [
        "result#0",
        "array_item%1#0",
        "last#0"
      ]
    },
    "1001": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%7#0"
      ]
    },
    "1002": {
      "op": "assert",
      "stack_out": [
        "result#0"
      ]
    },
    "1003": {
      "retsub": true,
      "op": "retsub"
    },
    "1004": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "params": {
        "some_more#0": "bytes"
      },
      "block": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1007": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple_block@0"
    },
    "1010": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple_block@0",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "1013": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1014": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "1015": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1016": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1017": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "1018": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "some_more#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "some_more#0 (copy)"
      ]
    },
    "1020": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "1021": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1023": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "1025": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1026": {
      "op": "loads",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0"
      ]
    },
    "1027": {
      "op": "dup",
      "defined_out": [
        "slot_contents%1#0",
        "slot_contents%1#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "slot_contents%1#0 (copy)"
      ]
    },
    "1028": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1029": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%bytes_len%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "aggregate%bytes_len%0#0",
        "16"
      ]
    },
    "1030": {
      "op": "/",
      "defined_out": [
        "slot_contents%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "tmp%0#0"
      ]
    },
    "1031": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "as_bytes%0#0"
      ]
    },
    "1032": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1035": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "slot_contents%1#0"
      ]
    },
    "1037": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0"
      ],
      "stack_out": [
        "converted_array%0#0"
      ]
    },
    "1038": {
      "retsub": true,
      "op": "retsub"
    },
    "1039": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1042": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "1043": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0",
        "count#0"
      ]
    },
    "1044": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3"
      ]
    },
    "1045": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0"
      ]
    },
    "1046": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_block@0"
    },
    "1049": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_block@0",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0"
      ],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "slot%0#0"
      ]
    },
    "1052": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1053": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "1054": {
      "op": "stores",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "slot%0#0"
      ]
    },
    "1055": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "arr#0"
      ]
    },
    "1056": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1057": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1058": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%bytes_len%0#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%0#0",
        "1"
      ]
    },
    "1059": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1060": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1061": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1062": {
      "op": "assert",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "1063": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)"
      ]
    },
    "1065": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "1066": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "1067": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "1068": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "1069": {
      "op": "intc_1 // 1",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1070": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_for_header@1"
    },
    "1073": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1075": {
      "op": "frame_dig 5",
      "defined_out": [
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "tmp%2#0"
      ]
    },
    "1077": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1078": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.test_bool_array_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1081": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_for_body@2"
    },
    "1084": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_for_body@2",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1086": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "i#1",
        "2"
      ]
    },
    "1088": {
      "op": "%",
      "defined_out": [
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%3#0"
      ]
    },
    "1089": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1090": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "1091": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%4#0",
        "arr#0"
      ]
    },
    "1093": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%4#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "1094": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%4#0",
        "arr#0 (copy)"
      ]
    },
    "1096": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%4#0",
        "slot_contents%0#0"
      ]
    },
    "1097": {
      "op": "cover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0"
      ]
    },
    "1099": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "0x00"
      ]
    },
    "1100": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "0x00",
        "0"
      ]
    },
    "1101": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "0x00",
        "0",
        "tmp%4#0"
      ]
    },
    "1103": {
      "op": "setbit",
      "defined_out": [
        "aggregate%as_Encoded(bool8)%0#0",
        "arr#0",
        "slot_contents%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "1104": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(bool8)%0#0",
        "arr#0",
        "slot_contents%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "aggregate%as_Encoded(bool8)%0#0",
        "0x"
      ]
    },
    "1105": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "1107": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%5#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%5#0"
      ]
    },
    "1108": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1109": {
      "op": "stores",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1110": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_for_footer@3"
    },
    "1113": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_for_footer@3",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1115": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1116": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1117": {
      "op": "frame_bury 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1119": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_for_header@1"
    },
    "1122": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1124": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1125": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%1#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%slot_contents%1#0"
      ]
    },
    "1126": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "1127": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%bytes_len%1#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%1#0",
        "1"
      ]
    },
    "1128": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%6#0"
      ]
    },
    "1129": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%6#0",
        "length#0 (copy)"
      ]
    },
    "1131": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "1132": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1133": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0",
        "slot%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot%1#0"
      ]
    },
    "1136": {
      "op": "dig 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot%1#0",
        "arr#0 (copy)"
      ]
    },
    "1138": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot%1#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot%1#0",
        "slot_contents%1#0"
      ]
    },
    "1139": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot%1#0",
        "slot_contents%1#0",
        "slot%1#0 (copy)"
      ]
    },
    "1141": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%1#0"
      ]
    },
    "1143": {
      "op": "stores",
      "defined_out": [
        "arr#0",
        "arr2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr2#0"
      ]
    },
    "1144": {
      "op": "dig 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr2#0",
        "arr#0 (copy)"
      ]
    },
    "1146": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr2#0",
        "slot_contents%2#0"
      ]
    },
    "1147": {
      "op": "cover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%2#0",
        "arr2#0"
      ]
    },
    "1149": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%2#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1150": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%2#0",
        "arr2#0",
        "slot_contents%3#0"
      ]
    },
    "1151": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr2#0",
        "slot_contents%3#0",
        "slot_contents%2#0"
      ]
    },
    "1153": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr2#0",
        "concat%1#0"
      ]
    },
    "1154": {
      "op": "dig 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr2#0",
        "concat%1#0",
        "arr2#0 (copy)"
      ]
    },
    "1156": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)",
        "concat%1#0"
      ]
    },
    "1158": {
      "op": "stores",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr2#0"
      ]
    },
    "1159": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%2#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%slot_contents%2#0"
      ]
    },
    "1160": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1161": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%2#0",
        "1"
      ]
    },
    "1162": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "1163": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%8#0",
        "length#0 (copy)"
      ]
    },
    "1165": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "length#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%8#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "1167": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1168": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "1169": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1170": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "0"
      ]
    },
    "1171": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1173": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%3#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%slot_contents%3#0"
      ]
    },
    "1174": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%bytes_len%3#0"
      ]
    },
    "1175": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%bytes_len%3#0",
        "1"
      ]
    },
    "1176": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%3#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%array_len%3#0"
      ]
    },
    "1177": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1179": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1180": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1182": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_for_header@5"
    },
    "1185": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_for_header@5",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1187": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "1189": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "1190": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.test_bool_array_after_for@10",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1193": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_for_body@6"
    },
    "1196": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_for_body@6",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1198": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%4#0"
      ]
    },
    "1199": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%4#0",
        "item_index_internal%0#0"
      ]
    },
    "1201": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%4#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1202": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%4#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1203": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%4#0",
        "aggregate%bytes_offset%0#0",
        "1"
      ]
    },
    "1204": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "array_item%0#0"
      ]
    },
    "1205": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_item%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "array_item%0#0",
        "0"
      ]
    },
    "1206": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "val#0"
      ]
    },
    "1207": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "count#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "val#0",
        "count#0"
      ]
    },
    "1209": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "count#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "val#0"
      ]
    },
    "1211": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.test_bool_array_after_if_else@8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1214": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_if_body@7"
    },
    "1217": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_if_body@7",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#0"
      ]
    },
    "1219": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#0",
        "1"
      ]
    },
    "1220": {
      "op": "+",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#0"
      ]
    },
    "1221": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1223": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_after_if_else@8"
    },
    "1226": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_after_if_else@8",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_for_footer@9"
    },
    "1229": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_for_footer@9",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1231": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1232": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1233": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1235": {
      "op": "frame_dig 2",
      "defined_out": [
        "count#3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#3"
      ]
    },
    "1237": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1239": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_bool_array_for_header@5"
    },
    "1242": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_bool_array_after_for@10",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#0"
      ]
    },
    "1244": {
      "op": "frame_bury 0"
    },
    "1246": {
      "retsub": true,
      "op": "retsub"
    },
    "1247": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1250": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "1251": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0",
        "count#0"
      ]
    },
    "1252": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3"
      ]
    },
    "1253": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0"
      ]
    },
    "1254": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_block@0"
    },
    "1257": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_block@0",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0"
      ],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "slot%0#0"
      ]
    },
    "1260": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1261": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "1262": {
      "op": "stores",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "slot%0#0"
      ]
    },
    "1263": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "arr#0"
      ]
    },
    "1264": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1265": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1266": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%bytes_len%0#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "1267": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1268": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1269": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1270": {
      "op": "assert",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "1271": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)"
      ]
    },
    "1273": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "1274": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "1275": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "1276": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "1277": {
      "op": "intc_1 // 1",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1278": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_header@1"
    },
    "1281": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1283": {
      "op": "frame_dig 5",
      "defined_out": [
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "tmp%2#0"
      ]
    },
    "1285": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1286": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1289": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_body@2"
    },
    "1292": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_body@2",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1294": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%3#0"
      ]
    },
    "1295": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%3#0",
        "arr#0"
      ]
    },
    "1297": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%3#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "1298": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%3#0",
        "arr#0 (copy)"
      ]
    },
    "1300": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%3#0",
        "slot_contents%0#0"
      ]
    },
    "1301": {
      "op": "cover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0"
      ]
    },
    "1303": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0",
        "0x"
      ]
    },
    "1304": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "tmp%3#0"
      ]
    },
    "1306": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0"
      ]
    },
    "1307": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1308": {
      "op": "stores",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1309": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_footer@3"
    },
    "1312": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_footer@3",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1314": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1315": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1316": {
      "op": "frame_bury 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1318": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_header@1"
    },
    "1321": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1323": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1324": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%1#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%slot_contents%1#0"
      ]
    },
    "1325": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "1326": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%bytes_len%1#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%bytes_len%1#0",
        "8"
      ]
    },
    "1327": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "1328": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%5#0",
        "length#0 (copy)"
      ]
    },
    "1330": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%6#0"
      ]
    },
    "1331": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1332": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0",
        "0"
      ]
    },
    "1333": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1335": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%2#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%slot_contents%2#0"
      ]
    },
    "1336": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1337": {
      "op": "intc_2 // 8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%bytes_len%2#0",
        "8"
      ]
    },
    "1338": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%2#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%array_len%2#0"
      ]
    },
    "1339": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1341": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1342": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1344": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_header@5"
    },
    "1347": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_header@5",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1349": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "1351": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "1352": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_after_for@10",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1355": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_body@6"
    },
    "1358": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_body@6",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "1360": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%1#0"
      ]
    },
    "1361": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1363": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1364": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1365": {
      "op": "intc_2 // 8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "1366": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1367": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "item_index_internal%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "reinterpret_biguint%0#0",
        "0x"
      ]
    },
    "1368": {
      "op": "b!=",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%7#0"
      ]
    },
    "1369": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "count#0",
        "item_index_internal%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%7#0",
        "count#0"
      ]
    },
    "1371": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "count#0",
        "item_index_internal%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "tmp%7#0"
      ]
    },
    "1373": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_after_if_else@8",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1376": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_if_body@7"
    },
    "1379": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_if_body@7",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#0"
      ]
    },
    "1381": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#0",
        "1"
      ]
    },
    "1382": {
      "op": "+",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#0"
      ]
    },
    "1383": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1385": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_after_if_else@8"
    },
    "1388": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_after_if_else@8",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_footer@9"
    },
    "1391": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_footer@9",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1393": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1394": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1395": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1397": {
      "op": "frame_dig 2",
      "defined_out": [
        "count#3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "count#3"
      ]
    },
    "1399": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ]
    },
    "1401": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_for_header@5"
    },
    "1404": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion_after_for@10",
      "stack_in": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1405": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1406": {
      "op": "extract 6 2",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arc4_arr#0"
      ]
    },
    "1409": {
      "op": "frame_dig 4",
      "defined_out": [
        "arc4_arr#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arc4_arr#0",
        "arr#0"
      ]
    },
    "1411": {
      "op": "loads",
      "defined_out": [
        "arc4_arr#0",
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arc4_arr#0",
        "slot_contents%2#0"
      ]
    },
    "1412": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0"
      ]
    },
    "1413": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "1414": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "total_length%0#0"
      ]
    },
    "1415": {
      "op": "cover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "total_length%0#0",
        "concat%1#0"
      ]
    },
    "1417": {
      "op": "dup",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "total_length%0#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "1418": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "total_length%0#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "2"
      ]
    },
    "1420": {
      "op": "uncover 3",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "1422": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "extract_to_end%0#0"
      ]
    },
    "1423": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "len%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "len%0#0"
      ]
    },
    "1424": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "concat%1#0",
        "len%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "len%0#0",
        "8"
      ]
    },
    "1425": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "div_floor%0#0"
      ]
    },
    "1426": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "as_bytes%0#0"
      ]
    },
    "1427": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1430": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%1#0"
      ]
    },
    "1432": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%1#0",
        "0"
      ]
    },
    "1433": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "1435": {
      "op": "replace3",
      "defined_out": [
        "arc4_arr#0",
        "arr#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "count#0",
        "count#3",
        "item_index_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0",
        "arc4_arr#0"
      ]
    },
    "1436": {
      "op": "frame_bury 0"
    },
    "1438": {
      "retsub": true,
      "op": "retsub"
    },
    "1439": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "params": {
        "arc4_arr#0": "bytes"
      },
      "block": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1442": {
      "op": "b test_cases.array.static_size.StaticSizeContract.sum_array_block@0"
    },
    "1445": {
      "block": "test_cases.array.static_size.StaticSizeContract.sum_array_block@0",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "1448": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1449": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "1450": {
      "op": "stores",
      "stack_out": [
        "slot%0#0"
      ]
    },
    "1451": {
      "op": "dupn 2",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1453": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "1454": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc4_arr#0 (copy)",
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "arc4_arr#0 (copy)"
      ]
    },
    "1456": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ]
    },
    "1457": {
      "op": "frame_dig -1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "total_length%0#0",
        "arc4_arr#0 (copy)"
      ]
    },
    "1459": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arc4_arr#0 (copy)",
        "arr#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "total_length%0#0",
        "arc4_arr#0 (copy)",
        "2"
      ]
    },
    "1461": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "arc4_arr#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "1463": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "extract_to_end%0#0"
      ]
    },
    "1464": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1465": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1467": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "1469": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1470": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "1471": {
      "op": "cover 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "arr#0"
      ]
    },
    "1473": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1474": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1475": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%bytes_len%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "1476": {
      "op": "/",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0"
      ]
    },
    "1477": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1478": {
      "op": "b test_cases.array.static_size.StaticSizeContract.sum_array_for_header@1"
    },
    "1481": {
      "block": "test_cases.array.static_size.StaticSizeContract.sum_array_for_header@1",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1483": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "1485": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1486": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.sum_array_after_for@4",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1489": {
      "op": "b test_cases.array.static_size.StaticSizeContract.sum_array_for_body@2"
    },
    "1492": {
      "block": "test_cases.array.static_size.StaticSizeContract.sum_array_for_body@2",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "1494": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ]
    },
    "1495": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1497": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1498": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1499": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "1500": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "1501": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1502": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ]
    },
    "1504": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1505": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1507": {
      "op": "b test_cases.array.static_size.StaticSizeContract.sum_array_for_footer@3"
    },
    "1510": {
      "block": "test_cases.array.static_size.StaticSizeContract.sum_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1512": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1513": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1514": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1516": {
      "op": "b test_cases.array.static_size.StaticSizeContract.sum_array_for_header@1"
    },
    "1519": {
      "block": "test_cases.array.static_size.StaticSizeContract.sum_array_after_for@4",
      "stack_in": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "arr#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1521": {
      "op": "frame_bury 0"
    },
    "1523": {
      "retsub": true,
      "op": "retsub"
    },
    "1524": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.xtra",
      "params": {},
      "block": "xtra",
      "stack_in": [],
      "op": "b xtra_block@0"
    },
    "1527": {
      "block": "xtra_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1528": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "1529": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1530": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1531": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1532": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1533": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "\"count\""
      ]
    },
    "1534": {
      "op": "uncover 1",
      "stack_out": [
        "\"count\"",
        "tmp%0#0"
      ]
    },
    "1536": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1537": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1539": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "1540": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%1#0",
        "0",
        "\"count\""
      ]
    },
    "1541": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1542": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1543": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ]
    },
    "1545": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.more",
      "op": "callsub more",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1548": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1549": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0",
        "\"count\""
      ]
    },
    "1550": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1551": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0"
      ]
    },
    "1552": {
      "op": "itob",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1553": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0"
      ]
    },
    "1555": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1557": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ]
    },
    "1559": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%4#0",
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1561": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1563": {
      "retsub": true,
      "op": "retsub"
    },
    "1564": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.more",
      "params": {},
      "block": "more",
      "stack_in": [],
      "op": "b more_block@0"
    },
    "1567": {
      "block": "more_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1568": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "1569": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1570": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1571": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1572": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1573": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1574": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "1575": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%1#0",
        "0",
        "\"count\""
      ]
    },
    "1576": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1577": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1578": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1579": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "0",
        "\"count\""
      ]
    },
    "1580": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1581": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "1582": {
      "op": "*",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1583": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1584": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "0x"
      ]
    },
    "1585": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "0x",
        "tmp%1#0"
      ]
    },
    "1587": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1588": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "1590": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1591": {
      "retsub": true,
      "op": "retsub"
    },
    "1592": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool",
      "params": {},
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1595": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_bool_block@0"
    },
    "1598": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool_block@0",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "1601": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1602": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "1603": {
      "op": "stores",
      "stack_out": [
        "slot%0#0"
      ]
    },
    "1604": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1605": {
      "op": "txn Sender",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1607": {
      "op": "txn Receiver",
      "defined_out": [
        "arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1609": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "1610": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%2#0",
        "0x00"
      ]
    },
    "1611": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "1612": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "1614": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%3#0"
      ]
    },
    "1615": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%3#0",
        "arr#0 (copy)"
      ]
    },
    "1617": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%3#0",
        "slot_contents%0#0"
      ]
    },
    "1618": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0"
      ]
    },
    "1620": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%3#0",
        "0x"
      ]
    },
    "1621": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "tmp%3#0"
      ]
    },
    "1623": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%0#0",
        "tmp%4#0"
      ]
    },
    "1624": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1625": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1627": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "1629": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1630": {
      "op": "txn Sender",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "1632": {
      "op": "txn Receiver",
      "defined_out": [
        "arr#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1634": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "1635": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%7#0",
        "0x00"
      ]
    },
    "1636": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%7#0",
        "0x00",
        "0"
      ]
    },
    "1637": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0x00",
        "0",
        "tmp%7#0"
      ]
    },
    "1639": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "1640": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%8#0",
        "arr#0 (copy)"
      ]
    },
    "1642": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%8#0",
        "slot_contents%1#0"
      ]
    },
    "1643": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%8#0"
      ]
    },
    "1645": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%8#0",
        "0x"
      ]
    },
    "1646": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "0x",
        "tmp%8#0"
      ]
    },
    "1648": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%9#0"
      ]
    },
    "1649": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%1#0"
      ]
    },
    "1650": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "concat%1#0",
        "arr#0 (copy)"
      ]
    },
    "1652": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "concat%1#0"
      ]
    },
    "1654": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1655": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "1656": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1657": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1660": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "arr#0 (copy)"
      ]
    },
    "1662": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ]
    },
    "1663": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ]
    },
    "1664": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1665": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%bytes_len%0#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0",
        "1"
      ]
    },
    "1666": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "tmp%10#0"
      ]
    },
    "1667": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%2#0",
        "tmp%10#0",
        "dyn_arr#0"
      ]
    },
    "1669": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "tmp%10#0",
        "dyn_arr#0",
        "slot_contents%2#0"
      ]
    },
    "1671": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "tmp%10#0"
      ]
    },
    "1673": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot_contents%2#0",
        "tmp%10#0",
        "8"
      ]
    },
    "1674": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+bool1[])%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "as_Encoded(len+bool1[])%0#0"
      ]
    },
    "1677": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1678": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1680": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1681": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)",
        "0"
      ]
    },
    "1682": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%11#0"
      ]
    },
    "1683": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "dyn_arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%11#0",
        "2"
      ]
    },
    "1685": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%12#0"
      ]
    },
    "1686": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1687": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1688": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0"
      ]
    },
    "1689": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%13#0",
        "3"
      ]
    },
    "1691": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%14#0"
      ]
    },
    "1692": {
      "error": "expected 3 bytes",
      "op": "assert // expected 3 bytes",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1693": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1694": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)",
        "0"
      ]
    },
    "1695": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "1696": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_length%1#0",
        "0"
      ]
    },
    "1697": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%0#0",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%lt%0#0"
      ]
    },
    "1698": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1699": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "0"
      ]
    },
    "1700": {
      "op": "intc_3 // 16",
      "defined_out": [
        "0",
        "16",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "0",
        "16"
      ]
    },
    "1701": {
      "op": "+",
      "defined_out": [
        "aggregate%add%0#0",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%add%0#0"
      ]
    },
    "1702": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%add%0#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1704": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)",
        "aggregate%add%0#0"
      ]
    },
    "1706": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%0#0"
      ]
    },
    "1707": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%0#0",
        "0x00"
      ]
    },
    "1708": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%0#0",
        "0x00",
        "0"
      ]
    },
    "1709": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "0x00",
        "0",
        "array_item%0#0"
      ]
    },
    "1711": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "values%0#0"
      ]
    },
    "1712": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "values%0#0",
        "0"
      ]
    },
    "1713": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%15#0"
      ]
    },
    "1714": {
      "op": "txn Sender",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1716": {
      "op": "txn Receiver",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1718": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%15#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%15#0",
        "tmp%18#0"
      ]
    },
    "1719": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%19#0"
      ]
    },
    "1720": {
      "error": "expected correct value at 0",
      "op": "assert // expected correct value at 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1721": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1722": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)",
        "0"
      ]
    },
    "1723": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_length%2#0"
      ]
    },
    "1724": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%array_length%2#0",
        "1"
      ]
    },
    "1725": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%1#0",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%lt%1#0"
      ]
    },
    "1726": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1727": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "1"
      ]
    },
    "1728": {
      "op": "intc_3 // 16",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "1",
        "16"
      ]
    },
    "1729": {
      "op": "+",
      "defined_out": [
        "aggregate%add%1#0",
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%add%1#0"
      ]
    },
    "1730": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "aggregate%add%1#0",
        "dyn_arr#0 (copy)"
      ]
    },
    "1732": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0 (copy)",
        "aggregate%add%1#0"
      ]
    },
    "1734": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%1#0"
      ]
    },
    "1735": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%1#0",
        "0x00"
      ]
    },
    "1736": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "array_item%1#0",
        "0x00",
        "0"
      ]
    },
    "1737": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "0x00",
        "0",
        "array_item%1#0"
      ]
    },
    "1739": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "values%1#0"
      ]
    },
    "1740": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "values%1#0",
        "0"
      ]
    },
    "1741": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%20#0"
      ]
    },
    "1742": {
      "op": "txn Sender",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "1744": {
      "op": "txn Receiver",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1746": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%20#0",
        "tmp%23#0"
      ]
    },
    "1747": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "tmp%24#0"
      ]
    },
    "1748": {
      "error": "expected correct value at 1",
      "op": "assert // expected correct value at 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0"
      ]
    },
    "1749": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot%1#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr#0",
        "dyn_arr#0",
        "slot%1#0"
      ]
    },
    "1752": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "arr#0"
      ]
    },
    "1754": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot_contents%3#0"
      ]
    },
    "1755": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot_contents%3#0",
        "slot%1#0 (copy)"
      ]
    },
    "1757": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%3#0"
      ]
    },
    "1759": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "dyn_arr#0",
        "slot%1#0"
      ]
    },
    "1760": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "dyn_arr#0"
      ]
    },
    "1762": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "dyn_arr#0",
        "0"
      ]
    },
    "1763": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0"
      ]
    },
    "1764": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "dyn_arr#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1765": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_bool_for_header@1"
    },
    "1768": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool_for_header@1",
      "stack_in": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1770": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "1772": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1773": {
      "op": "bz test_cases.array.static_size.StaticSizeContract.test_arc4_bool_after_for@4",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1776": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_bool_for_body@2"
    },
    "1779": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool_for_body@2",
      "stack_in": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1781": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "16"
      ]
    },
    "1782": {
      "op": "+",
      "defined_out": [
        "aggregate%add%2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%add%2#0"
      ]
    },
    "1783": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%add%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%add%2#0",
        "dyn_arr#0"
      ]
    },
    "1785": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "dyn_arr#0",
        "aggregate%add%2#0"
      ]
    },
    "1787": {
      "op": "getbit",
      "defined_out": [
        "array_item%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0"
      ]
    },
    "1788": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "array_item%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "0x00"
      ]
    },
    "1789": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "array_item%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "0x00",
        "0"
      ]
    },
    "1790": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0x00",
        "0",
        "array_item%2#0"
      ]
    },
    "1792": {
      "op": "setbit",
      "defined_out": [
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "1793": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0",
        "arr2#0"
      ]
    },
    "1795": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)",
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0",
        "arr2#0 (copy)",
        "arr2#0 (copy)"
      ]
    },
    "1796": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "b#0",
        "arr2#0 (copy)"
      ]
    },
    "1798": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "b#0",
        "slot_contents%4#0"
      ]
    },
    "1799": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "b#0"
      ]
    },
    "1801": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr2#0",
        "b#0",
        "dyn_arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "b#0",
        "0x"
      ]
    },
    "1802": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "0x",
        "b#0"
      ]
    },
    "1804": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "dyn_arr#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%4#0",
        "tmp%25#0"
      ]
    },
    "1805": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "concat%2#0",
        "dyn_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "concat%2#0"
      ]
    },
    "1806": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1807": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_bool_for_footer@3"
    },
    "1810": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool_for_footer@3",
      "stack_in": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1812": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1813": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1814": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1816": {
      "op": "b test_cases.array.static_size.StaticSizeContract.test_arc4_bool_for_header@1"
    },
    "1819": {
      "block": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool_after_for@4",
      "stack_in": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1821": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1822": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1823": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "1824": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%bytes_len%1#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "aggregate%bytes_len%1#0",
        "1"
      ]
    },
    "1825": {
      "op": "/",
      "defined_out": [
        "arr2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%26#0"
      ]
    },
    "1826": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%26#0",
        "4"
      ]
    },
    "1828": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%27#0"
      ]
    },
    "1829": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1830": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1831": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%5#0"
      ]
    },
    "1832": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%5#0",
        "0"
      ]
    },
    "1833": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%5#0",
        "0",
        "1"
      ]
    },
    "1834": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr2#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%5#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1835": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%5#0",
        "aggregate%bytes_offset%0#0",
        "1"
      ]
    },
    "1836": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr2#0",
        "array_item%3#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%3#0"
      ]
    },
    "1837": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%3#0",
        "0"
      ]
    },
    "1838": {
      "op": "getbit",
      "defined_out": [
        "arr2#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%28#0"
      ]
    },
    "1839": {
      "op": "txn Sender",
      "defined_out": [
        "arr2#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "1841": {
      "op": "txn Receiver",
      "defined_out": [
        "arr2#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "1843": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%28#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%28#0",
        "tmp%31#0"
      ]
    },
    "1844": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%32#0"
      ]
    },
    "1845": {
      "error": "expected correct value at 0",
      "op": "assert // expected correct value at 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1846": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1847": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0"
      ]
    },
    "1848": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0",
        "1"
      ]
    },
    "1849": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0",
        "1",
        "1"
      ]
    },
    "1850": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "arr2#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "1851": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%6#0",
        "aggregate%bytes_offset%1#0",
        "1"
      ]
    },
    "1852": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr2#0",
        "array_item%4#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%4#0"
      ]
    },
    "1853": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%4#0",
        "0"
      ]
    },
    "1854": {
      "op": "getbit",
      "defined_out": [
        "arr2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%33#0"
      ]
    },
    "1855": {
      "op": "txn Sender",
      "defined_out": [
        "arr2#0",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "1857": {
      "op": "txn Receiver",
      "defined_out": [
        "arr2#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "1859": {
      "op": "!=",
      "defined_out": [
        "arr2#0",
        "tmp%33#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%33#0",
        "tmp%36#0"
      ]
    },
    "1860": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%37#0"
      ]
    },
    "1861": {
      "error": "expected correct value at 1",
      "op": "assert // expected correct value at 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1862": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1863": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0"
      ]
    },
    "1864": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0",
        "2"
      ]
    },
    "1866": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0",
        "2",
        "1"
      ]
    },
    "1867": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%2#0",
        "arr2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "1868": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "slot_contents%7#0",
        "aggregate%bytes_offset%2#0",
        "1"
      ]
    },
    "1869": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr2#0",
        "array_item%5#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%5#0"
      ]
    },
    "1870": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "array_item%5#0",
        "0"
      ]
    },
    "1871": {
      "op": "getbit",
      "defined_out": [
        "arr2#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%38#0"
      ]
    },
    "1872": {
      "op": "txn Sender",
      "defined_out": [
        "arr2#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "1874": {
      "op": "txn Receiver",
      "defined_out": [
        "arr2#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "1876": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%38#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%38#0",
        "tmp%41#0"
      ]
    },
    "1877": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0",
        "tmp%42#0"
      ]
    },
    "1878": {
      "error": "expected correct value at 2",
      "op": "assert // expected correct value at 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0"
      ]
    },
    "1879": {
      "op": "loads",
      "defined_out": [
        "arr2#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%8#0"
      ]
    },
    "1880": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr2#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%8#0",
        "3"
      ]
    },
    "1882": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%8#0",
        "3",
        "1"
      ]
    },
    "1883": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%3#0",
        "arr2#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "1884": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%3#0",
        "1"
      ]
    },
    "1885": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr2#0",
        "array_item%6#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%6#0"
      ]
    },
    "1886": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%6#0",
        "0"
      ]
    },
    "1887": {
      "op": "getbit",
      "defined_out": [
        "arr2#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%43#0"
      ]
    },
    "1888": {
      "op": "txn Sender",
      "defined_out": [
        "arr2#0",
        "tmp%43#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%43#0",
        "tmp%44#0"
      ]
    },
    "1890": {
      "op": "txn Receiver",
      "defined_out": [
        "arr2#0",
        "tmp%43#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%43#0",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "1892": {
      "op": "!=",
      "defined_out": [
        "arr2#0",
        "tmp%43#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%43#0",
        "tmp%46#0"
      ]
    },
    "1893": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%47#0"
      ]
    },
    "1894": {
      "error": "expected correct value at 3",
      "op": "assert // expected correct value at 3",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1895": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr#0"
      ]
    },
    "1897": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%9#0"
      ]
    },
    "1898": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%9#0",
        "slot_contents%9#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "slot_contents%9#0 (copy)"
      ]
    },
    "1899": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "arr#0",
        "arr2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1900": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0",
        "1"
      ]
    },
    "1901": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%9#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "tmp%48#0"
      ]
    },
    "1902": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "0x0000",
        "arr#0",
        "arr2#0",
        "slot_contents%9#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "tmp%48#0",
        "0x0000"
      ]
    },
    "1906": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%48#0",
        "0x0000",
        "slot_contents%9#0"
      ]
    },
    "1908": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0x0000",
        "slot_contents%9#0",
        "tmp%48#0"
      ]
    },
    "1910": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0x0000",
        "8",
        "arr#0",
        "arr2#0",
        "slot_contents%9#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0x0000",
        "slot_contents%9#0",
        "tmp%48#0",
        "8"
      ]
    },
    "1911": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "bit_packed_source%0#0"
      ],
      "stack_out": [
        "arr#0",
        "dyn_arr#0",
        "arr2#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "bit_packed_source%0#0"
      ]
    },
    "1914": {
      "op": "frame_bury 0"
    },
    "1916": {
      "retsub": true,
      "op": "retsub"
    },
    "1917": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "b approval_program_block@0"
    },
    "1920": {
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "b approval_program_block@1"
    },
    "1923": {
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1925": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "1926": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1927": {
      "op": "bz approval_program___algopy_default_create@14",
      "stack_out": []
    },
    "1930": {
      "op": "b approval_program_abi_routing@2"
    },
    "1933": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1935": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "1936": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1937": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "1938": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1940": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "1941": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1942": {
      "op": "bz approval_program_create_NoOp@12",
      "stack_out": []
    },
    "1945": {
      "op": "b approval_program_call_NoOp@3"
    },
    "1948": {
      "block": "approval_program_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1951": {
      "op": "pushbytes 0x28d7c1b8 // method \"test_array(uint64,uint64,uint64,uint64)uint64\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)"
      ]
    },
    "1957": {
      "op": "pushbytes 0xfa9cb973 // method \"test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])"
      ]
    },
    "1963": {
      "op": "pushbytes 0x6039a240 // method \"test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])"
      ]
    },
    "1969": {
      "op": "pushbytes 0xf8fd68a7 // method \"test_bool_array(uint64)uint64\"",
      "defined_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)"
      ]
    },
    "1975": {
      "op": "pushbytes 0x1f028db1 // method \"test_arc4_conversion(uint64)uint64[]\"",
      "defined_out": [
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])"
      ]
    },
    "1981": {
      "op": "pushbytes 0x096b3a59 // method \"sum_array(uint64[])uint64\"",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)"
      ]
    },
    "1987": {
      "op": "pushbytes 0x8d6e3a25 // method \"test_arc4_bool()bool[]\"",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])"
      ]
    },
    "1993": {
      "op": "uncover 7",
      "stack_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "tmp%6#0"
      ]
    },
    "1995": {
      "op": "match approval_program_test_array_route@4 approval_program_test_extend_from_tuple_route@5 approval_program_test_extend_from_arc4_tuple_route@6 approval_program_test_bool_array_route@7 approval_program_test_arc4_conversion_route@8 approval_program_sum_array_route@9 approval_program_test_arc4_bool_route@10",
      "stack_out": []
    },
    "2011": {
      "op": "b approval_program_switch_case_next@11"
    },
    "2014": {
      "block": "approval_program_switch_case_next@11",
      "stack_in": [],
      "op": "b approval_program_after_if_else@13"
    },
    "2017": {
      "block": "approval_program_after_if_else@13",
      "stack_in": [],
      "op": "b approval_program_after_if_else@17"
    },
    "2020": {
      "block": "approval_program_after_if_else@17",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "2021": {
      "block": "approval_program_test_arc4_bool_route@10",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool[routing]",
      "op": "callsub test_arc4_bool"
    },
    "2024": {
      "op": "b approval_program_switch_case_next@11"
    },
    "2027": {
      "block": "approval_program_sum_array_route@9",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.sum_array[routing]",
      "op": "callsub sum_array"
    },
    "2030": {
      "op": "b approval_program_switch_case_next@11"
    },
    "2033": {
      "block": "approval_program_test_arc4_conversion_route@8",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion[routing]",
      "op": "callsub test_arc4_conversion"
    },
    "2036": {
      "op": "b approval_program_switch_case_next@11"
    },
    "2039": {
      "block": "approval_program_test_bool_array_route@7",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_bool_array[routing]",
      "op": "callsub test_bool_array"
    },
    "2042": {
      "op": "b approval_program_switch_case_next@11"
    },
    "2045": {
      "block": "approval_program_test_extend_from_arc4_tuple_route@6",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple[routing]",
      "op": "callsub test_extend_from_arc4_tuple"
    },
    "2048": {
      "op": "b approval_program_switch_case_next@11"
    },
    "2051": {
      "block": "approval_program_test_extend_from_tuple_route@5",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple[routing]",
      "op": "callsub test_extend_from_tuple"
    },
    "2054": {
      "op": "b approval_program_switch_case_next@11"
    },
    "2057": {
      "block": "approval_program_test_array_route@4",
      "stack_in": [],
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_array[routing]",
      "op": "callsub test_array"
    },
    "2060": {
      "op": "b approval_program_switch_case_next@11"
    },
    "2063": {
      "block": "approval_program_create_NoOp@12",
      "stack_in": [],
      "op": "b approval_program_after_if_else@13"
    },
    "2066": {
      "block": "approval_program___algopy_default_create@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2068": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "2069": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "2070": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2072": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "2073": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "2074": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "2075": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "2076": {
      "op": "b approval_program_block@15"
    },
    "2079": {
      "block": "approval_program_block@15",
      "stack_in": [],
      "op": "b approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__algopy_default_create@16"
    },
    "2082": {
      "block": "approval_program_after_inlined_test_cases.array.static_size.StaticSizeContract.__algopy_default_create@16",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2083": {
      "op": "return",
      "stack_out": []
    },
    "2084": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "b _puya_lib.mem.new_slot@entry"
    },
    "2087": {
      "block": "_puya_lib.mem.new_slot@entry",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "2089": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "2090": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "2092": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "2095": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "2097": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "2098": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "2099": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "2100": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "2102": {
      "retsub": true,
      "op": "retsub"
    }
  }
}