{
  "version": 3,
  "sources": [
    "../immutable.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA+VK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA/VL;;;AA+VK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzVL;;;AAAA;;;AAyVK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjVL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAiVK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzUL;;;AAyUK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjUL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiUK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzTL;;;AAyTK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAVA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA/SL;;;AAAA;;;AAAA;AA+SK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAPA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxSL;;;AAAA;AAwSK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAPA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjSL;;;AAAA;AAiSK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAPA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1RL;;;AAAA;AA0RK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAPA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnRL;;;AAAA;AAmRK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA3BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxPL;;;AAAA;;;AAAA;;;AAAA;;;AAwPK;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAjEA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAlBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AArKL;;;AAAA;AAAA;;;AAqKK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjKL;;;AAiKK;;;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7JL;;;AA6JK;;;AAAA;;;;AAnBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAnBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAfA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAlBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAxBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA9DL;;;AAAA;AA8DK;;;AAAA;;;;AAzBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AApsWA;;;AAEa;AACC;AAAd;AAAc;AAAA;;AAAA;;AAAA;AAAd;;;AACQ;;AAAU;;;AAAV;AAAA;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;AAGJ;;;AAEa;AAAb;AAAa;AAAA;;AAAA;;AAAA;AAAb;;;AACc;;AAAA;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;;AAAA;AAAA;AAGJ;;;AAEc;AAAd;AAAc;AAAA;;AAAA;;AAAA;AAAd;;;AACc;;AAAA;AAAA;;;AAAA;;AAAN;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;;AAAA;AAAA;AAGJ;;;AAEa;AAAb;AAAa;AAAA;;AAAA;;AAAA;AAAb;;;AACc;;AAAA;;;AAAW;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;;AAAA;AAAA;AAGJ;;;AAEY;AACZ;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ;;AAAA;AAAA;;;;;;;;;;;AACJ;AArYU;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AAEM;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEM;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;;;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEM;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEqB;;AAAf;AAAA;;AAAA;AAAA;AAAY;AAAZ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEA;;;AAAA;AAAA;;AAIM;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AAEM;;;AAAmB;;AAAmB;AAAnB;AAAR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAX;AAAP;AAEkB;;AAAZ;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;AAAX;AAAP;AAEM;;;AAAiC;;AAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAX;AAAP;AACO;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAU;AAAV;AAAP;AAEM;;;AAAW;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAU;AAAV;AAAP;AAEiC;;AAAjC;;AAAiC;;AAAjC;AAAA;;AAER;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAA;;AAAA;AAAjB;;;AACkC;;AAAL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEG;;AAAS;AAAT;AAAX;;;AACuB;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AACD;;AAAS;AAAT;AAAX;;;AACuB;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AACD;;AAAS;AAAT;AAAX;;;AACmB;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACD;;AAAS;;AAAT;AAAX;;;AAC2B;;AAAS;AAAT;AAAJ;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AAEJ;;;AAAA;;AAAA;AACG;;AAAA;AAAA;AAAX;;;AACkB;;AAAA;;;AAAA;;AACC;AAAA;AAAc;;AAAS;AAAT;AAAd;AAAP;;AAEZ;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACkB;;AAAA;;;AAAY;;AAAA;AAAI;AAAJ;AAAA;AAAW;AAAJ;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAD;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAsB;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAA;AAAuB;;AAAvB;AAAA;AAAP;AAEM;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAsB;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAA;AAAuB;;AAAvB;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACkB;;AAAA;;;AAA8B;;AAAA;AAAI;AAAJ;AAAS;AAAT;AAAA;AAAgB;AAAI;;AAAJ;AAAQ;AAAR;AAAa;AAAb;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAZ;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACgB;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AACc;AAAP;AAAP;AACA;AACA;AACA;;;AAAA;AAAA;;AAER;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AAC8B;;AAAA;AAAI;AAAJ;AAAA;AAAO;AAAA;AAAP;AAAA;AAAO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAc;;AAAd;AAAP;AACS;AAAjB;AAAiB;AAAL;;AAAK;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAI;AAAJ;AAAb;AAAP;AACO;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAP;AAFK;;AAAA;AAAA;AAAA;;;;;AAIH;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAW;AAAX;AAAA;AAA+B;AAAT;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAY;;AAAZ;AAAA;AAAgC;;AAAT;AAAvB;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACqD;;AAAA;AAAI;AAAJ;AAAA;AAAW;;;AAAA;AAAX;AAAA;AAAW;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAc;;AAAd;AAAP;AACS;AAAjB;AAAiB;AAAL;;AAAK;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAI;AAAJ;AAAb;AAAP;AACO;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAa;AAAA;;;AAAb;AAAP;AAFK;;AAAA;AAAA;AAAA;;;;;AAIH;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAA8B;AAA9B;AAAA;AAAyC;AAAzC;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAA+B;;AAA/B;AAAA;AAA0C;;;;;AAA1C;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;AAEQ;;AAAA;;AAER;;;AAEQ;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;;AAER;;;;;;;;AAKiB;AAAjB;AAAiB;AAAA;;AAAA;;AAAA;AAAjB;;;AACwB;AAAA;AAAA;AAAZ;;AACS;AAArB;AAAqB;AAAL;;AAAK;;AAAA;;AAAA;AAArB;;;AAC4B;;AAAA;;;AAAiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAZ;;AADK;;AAAA;AAAA;AAAA;;;;;AAEH;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAN;;AAJK;;AAAA;AAAA;AAAA;;;;;AAOA;AAAA;AAAA;AAAT;;AACR;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACqB;;AAAA;;;AAAA;AAAc;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAT;;;;;;;;;;;AAEJ;;AAAA;;AAAA;AAER;;;AAEe;AAAA;AAAA;AAAP;AACO;AAAA;AAAA;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAA;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAA;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;;;AAA2B;;AAAA;AAAK;AAAL;AAAA;AAAU;AAAK;AAAL;AAAA;AAAV;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAf;AAAA;AAAA;AAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AACO;;AAAA;;;AAAA;AAIG;AAAK;AAAL;AAAA;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AAPE;AAAI;AAAJ;AAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AADR;AAAA;AAAA;AADG;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AAaO;;AAAA;;;AAAA;AAIG;AAAK;AAAL;AAAA;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AARE;AAAI;AAAJ;AAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AADR;AAAA;AAAA;AADG;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AAcO;;AAAA;;;AAAA;AAIG;AAAK;AAAL;AAAA;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AATE;AAAI;AAAJ;AAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AA7BK;;AAAA;AAAA;AAAA;;;;;AA6CF;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;AAAA;;AAER;;;;;;AAQoC;AAAA;;AACpC;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACY;;AAAA;AAAA;;;;;;;;;;;AACZ;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;;AACA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;;;;;;;AAChB;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAY;;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;;;;AACZ;;;AACgB;;AAAQ;AAAR;;;;;;;;;;AAChB;;AAAA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;;;;;;;AAChB;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAY;AACA;;AAAA;AACQ;;AAAA;AAAR;AAAA;;AACO;AAAA;AAAP;;;;;;;;;;AAEJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAER;;;AAEc;AAAA;AAAA;AAAA;;;AAAe;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAA0B;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAqC;;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACG;AAAjB;AAAiB;AAAA;;AAAA;;AAAA;AAAjB;;;AACkB;;AAAA;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;AAEc;AAAA;AAAA;AAAe;AAAA;AAAA;AAAA;AAAM;AAAA;AAAA;AAAA;AAAO;AAAA;AAAA;AAAA;AAAM;AAAA;AAAA;AAAA;AAAO;AAAA;AAAA;AAAA;AAAzC;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AACG;AAAjB;AAAiB;AAAA;;AAAA;;AAAA;AAAjB;;;AAC6B;;AAAI;AAAJ;AAAS;AAAT;AAAA;AAAA;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;AAEc;AAAA;AAAA;AAAA;;;AAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAU;AAAV;AAAA;AAAA;;AAAgB;AAAhB;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACG;AAAjB;AAAiB;AAAA;;AAAA;;AAAA;AAAjB;;;AACkB;;AAAA;;;AAA8B;;AAAA;AAAI;AAAJ;AAAS;AAAT;AAAA;AAAgB;AAAI;;AAAJ;AAAS;AAAT;AAAA;;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAZ;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;AAEc;AAAA;AAAA;AAAmC;AAAA;AAAU;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AACG;AAAjB;AAAiB;AAAA;;AAAA;;AAAA;AAAjB;;;AACoD;;AAAA;AAAA;;;AAAA;AAAH;AAAA;AAAG;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;AAIkB;;;AAAA;AAAA;AAAA;AAAV;AACe;;AAAA;;;AAAA;AAAf;AAAA;AAAA;;AAAA;AAAA;AACS;AAAjB;AAAiB;AAAA;;AAAA;;AAAA;AAAjB;;;AAC8C;;AAAA;AAAI;AAAJ;AAAS;AAAT;AAAA;AAAgB;AAAI;;AAAJ;AAAS;AAAT;AAAA;;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAZ;AAAA;AAAA;AAAf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AAAA;AAER;;;AAIiB;AAAA;AAAA;AAAA;;;AAAe;AAAA;;AAAA;AAAf;AAAA;AAAA;AAA+B;AAAA;;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;;AAAS;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACT;AAER;;;AAIiB;AAAA;AAAA;AAAA;;;AAAe;AAAA;;AAAA;AAAf;AAAA;AAAA;AAA+B;AAAA;;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;;AAHH;AAAA;;AAAA;AAGY;AAAA;AAAA;AAHZ;AAAA;;AAAA;AAGY;AAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACT;AAER;;;AAIiB;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAiC;;AAAjC;AAAA;AAAA;;;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AACT;AAER;;;AAIiB;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAiC;;AAAjC;AAAA;AAAA;;;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AACT;AAER;;;AAIe;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAP;AAER;;;AAEe;;AAAA;AAAA;AAAA;AAAA;AAAP;AACkC;;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAa;AAAb;AAAZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAN;;AACA;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8"
    },
    "7": {
      "op": "bytecblock 0x 0x00 0x0000 0x151f7c75 0x80 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x62696775696e74 \"Hello\" 0x0000000000000001 0x0000000000000002 0x000161 0x000162"
    },
    "127": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "161": {
      "op": "store 0"
    },
    "163": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "165": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "166": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "167": {
      "op": "bz main_bare_routing@28",
      "stack_out": []
    },
    "170": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "173": {
      "op": "pushbytes 0x44d42f99 // method \"test_uint64_array()void\"",
      "defined_out": [
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)"
      ]
    },
    "179": {
      "op": "pushbytes 0xb7eaa60b // method \"test_biguint_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)"
      ]
    },
    "185": {
      "op": "pushbytes 0x743d70ed // method \"test_bool_array(uint64)void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)"
      ]
    },
    "191": {
      "op": "pushbytes 0x1c7e0494 // method \"test_fixed_size_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)"
      ]
    },
    "197": {
      "op": "pushbytes 0xa2d5860b // method \"test_fixed_size_named_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)"
      ]
    },
    "203": {
      "op": "pushbytes 0xe05fc564 // method \"test_dynamic_sized_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)"
      ]
    },
    "209": {
      "op": "pushbytes 0x1e092b83 // method \"test_dynamic_sized_named_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)"
      ]
    },
    "215": {
      "op": "pushbytes 0x01310262 // method \"test_implicit_conversion_log(uint64[])void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)"
      ]
    },
    "221": {
      "op": "pushbytes 0xc8654a98 // method \"test_implicit_conversion_emit(uint64[])void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)"
      ]
    },
    "227": {
      "op": "pushbytes 0x89d196f8 // method \"test_nested_array(uint64,uint64[][])uint64[]\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])"
      ]
    },
    "233": {
      "op": "pushbytes 0x6cb7c991 // method \"test_bit_packed_tuples()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)"
      ]
    },
    "239": {
      "op": "pushbytes 0x9898bf02 // method \"sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))"
      ]
    },
    "245": {
      "op": "pushbytes 0xf6b61ee8 // method \"test_uint64_return(uint64)uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])"
      ]
    },
    "251": {
      "op": "pushbytes 0x60b86a7b // method \"test_bool_return(uint64)bool[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])"
      ]
    },
    "257": {
      "op": "pushbytes 0x73ad283f // method \"test_tuple_return(uint64)(uint64,bool,bool)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])"
      ]
    },
    "263": {
      "op": "pushbytes 0x529dfae9 // method \"test_dynamic_tuple_return(uint64)(uint64,string)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])"
      ]
    },
    "269": {
      "op": "pushbytes 0x206d514f // method \"test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])"
      ]
    },
    "275": {
      "op": "pushbytes 0xe06465e2 // method \"test_concat_with_arc4_tuple((uint64,uint64))uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])"
      ]
    },
    "281": {
      "op": "pushbytes 0xec0300a2 // method \"test_concat_with_native_tuple((uint64,uint64))uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])"
      ]
    },
    "287": {
      "op": "pushbytes 0xecdf14af // method \"test_dynamic_concat_with_arc4_tuple((string,string))string[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])"
      ]
    },
    "293": {
      "op": "pushbytes 0x511aca64 // method \"test_dynamic_concat_with_native_tuple((string,string))string[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])"
      ]
    },
    "299": {
      "op": "pushbytes 0x29852e4f // method \"test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])"
      ]
    },
    "305": {
      "op": "pushbytes 0x6d4aa358 // method \"test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])"
      ]
    },
    "311": {
      "op": "uncover 23",
      "stack_out": [
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "tmp%2#0"
      ]
    },
    "313": {
      "op": "match main_test_uint64_array_route@3 main_test_biguint_array_route@4 main_test_bool_array_route@5 main_test_fixed_size_tuple_array_route@6 main_test_fixed_size_named_tuple_array_route@7 main_test_dynamic_sized_tuple_array_route@8 main_test_dynamic_sized_named_tuple_array_route@9 main_test_implicit_conversion_log_route@10 main_test_implicit_conversion_emit_route@11 main_test_nested_array_route@12 main_test_bit_packed_tuples_route@13 main_sum_uints_and_lengths_and_trues_route@14 main_test_uint64_return_route@15 main_test_bool_return_route@16 main_test_tuple_return_route@17 main_test_dynamic_tuple_return_route@18 main_test_convert_to_array_and_back_route@19 main_test_concat_with_arc4_tuple_route@20 main_test_concat_with_native_tuple_route@21 main_test_dynamic_concat_with_arc4_tuple_route@22 main_test_dynamic_concat_with_native_tuple_route@23 main_test_concat_immutable_dynamic_route@24 main_test_immutable_arc4_route@25",
      "stack_out": []
    },
    "361": {
      "block": "main_after_if_else@32",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "362": {
      "block": "main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "363": {
      "block": "main_test_immutable_arc4_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "365": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0",
        "NoOp"
      ]
    },
    "366": {
      "op": "==",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "367": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "368": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "370": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "0"
      ]
    },
    "371": {
      "op": "!=",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "372": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "373": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[16][]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16][]%0#0"
      ]
    },
    "376": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "op": "callsub test_immutable_arc4",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "379": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0",
        "0x151f7c75"
      ]
    },
    "380": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%127#0"
      ]
    },
    "381": {
      "op": "concat",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0"
      ]
    },
    "382": {
      "op": "log",
      "stack_out": []
    },
    "383": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "384": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "387": {
      "block": "main_test_concat_immutable_dynamic_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "389": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0",
        "NoOp"
      ]
    },
    "390": {
      "op": "==",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "391": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "392": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "394": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0",
        "0"
      ]
    },
    "395": {
      "op": "!=",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "396": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "397": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_(encoded_uint64,bytes)[]%1#0"
      ],
      "stack_out": [
        "reinterpret_(encoded_uint64,bytes)[]%1#0"
      ]
    },
    "400": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_(encoded_uint64,bytes)[]%1#0",
        "reinterpret_(encoded_uint64,bytes)[]%2#0"
      ],
      "stack_out": [
        "reinterpret_(encoded_uint64,bytes)[]%1#0",
        "reinterpret_(encoded_uint64,bytes)[]%2#0"
      ]
    },
    "403": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "op": "callsub test_concat_immutable_dynamic",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "406": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0",
        "0x151f7c75"
      ]
    },
    "407": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%121#0"
      ]
    },
    "408": {
      "op": "concat",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "409": {
      "op": "log",
      "stack_out": []
    },
    "410": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "411": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "414": {
      "block": "main_test_dynamic_concat_with_native_tuple_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "416": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0",
        "NoOp"
      ]
    },
    "417": {
      "op": "==",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "418": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "419": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "421": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0",
        "0"
      ]
    },
    "422": {
      "op": "!=",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "423": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "424": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "427": {
      "op": "dup",
      "defined_out": [
        "tmp%114#0",
        "tmp%114#0 (copy)"
      ],
      "stack_out": [
        "tmp%114#0",
        "tmp%114#0 (copy)"
      ]
    },
    "428": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%114#0",
        "tmp%114#0 (copy)",
        "0"
      ]
    },
    "429": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "item_start_offset%0#0"
      ]
    },
    "430": {
      "op": "swap",
      "stack_out": [
        "item_start_offset%0#0",
        "tmp%114#0"
      ]
    },
    "431": {
      "op": "dup",
      "stack_out": [
        "item_start_offset%0#0",
        "tmp%114#0",
        "tmp%114#0 (copy)"
      ]
    },
    "432": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "item_start_offset%0#0",
        "tmp%114#0",
        "tmp%114#0 (copy)"
      ],
      "stack_out": [
        "item_start_offset%0#0",
        "tmp%114#0",
        "tmp%114#0 (copy)",
        "2"
      ]
    },
    "433": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%114#0"
      ],
      "stack_out": [
        "item_start_offset%0#0",
        "tmp%114#0",
        "item_end_offset%0#0"
      ]
    },
    "434": {
      "op": "dig 1",
      "stack_out": [
        "item_start_offset%0#0",
        "tmp%114#0",
        "item_end_offset%0#0",
        "tmp%114#0 (copy)"
      ]
    },
    "436": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%114#0",
        "item_end_offset%0#0",
        "tmp%114#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "438": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%114#0",
        "tmp%114#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "440": {
      "op": "substring3",
      "defined_out": [
        "item0%1#0",
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "item0%1#0"
      ]
    },
    "441": {
      "op": "swap",
      "stack_out": [
        "item0%1#0",
        "tmp%114#0"
      ]
    },
    "442": {
      "op": "dup",
      "stack_out": [
        "item0%1#0",
        "tmp%114#0",
        "tmp%114#0 (copy)"
      ]
    },
    "443": {
      "op": "intc_2 // 2",
      "stack_out": [
        "item0%1#0",
        "tmp%114#0",
        "tmp%114#0 (copy)",
        "2"
      ]
    },
    "444": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%1#0",
        "item_start_offset%1#0",
        "tmp%114#0"
      ],
      "stack_out": [
        "item0%1#0",
        "tmp%114#0",
        "item_start_offset%1#0"
      ]
    },
    "445": {
      "op": "swap",
      "stack_out": [
        "item0%1#0",
        "item_start_offset%1#0",
        "tmp%114#0"
      ]
    },
    "446": {
      "op": "dup",
      "stack_out": [
        "item0%1#0",
        "item_start_offset%1#0",
        "tmp%114#0",
        "tmp%114#0 (copy)"
      ]
    },
    "447": {
      "op": "len",
      "defined_out": [
        "item0%1#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "tmp%114#0"
      ],
      "stack_out": [
        "item0%1#0",
        "item_start_offset%1#0",
        "tmp%114#0",
        "item_end_offset%1#0"
      ]
    },
    "448": {
      "op": "swap",
      "stack_out": [
        "item0%1#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "tmp%114#0"
      ]
    },
    "449": {
      "op": "uncover 2",
      "stack_out": [
        "item0%1#0",
        "item_end_offset%1#0",
        "tmp%114#0",
        "item_start_offset%1#0"
      ]
    },
    "451": {
      "op": "uncover 2",
      "stack_out": [
        "item0%1#0",
        "tmp%114#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "453": {
      "op": "substring3",
      "defined_out": [
        "item0%1#0",
        "item1%1#0"
      ],
      "stack_out": [
        "item0%1#0",
        "item1%1#0"
      ]
    },
    "454": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "op": "callsub test_dynamic_concat_with_native_tuple",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "457": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0",
        "0x151f7c75"
      ]
    },
    "458": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%115#0"
      ]
    },
    "459": {
      "op": "concat",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "460": {
      "op": "log",
      "stack_out": []
    },
    "461": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "462": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "465": {
      "block": "main_test_dynamic_concat_with_arc4_tuple_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "467": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "NoOp"
      ]
    },
    "468": {
      "op": "==",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "469": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "470": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "472": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "0"
      ]
    },
    "473": {
      "op": "!=",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "474": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "475": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "478": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "op": "callsub test_dynamic_concat_with_arc4_tuple",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "481": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0",
        "0x151f7c75"
      ]
    },
    "482": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%108#0"
      ]
    },
    "483": {
      "op": "concat",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "484": {
      "op": "log",
      "stack_out": []
    },
    "485": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "486": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "489": {
      "block": "main_test_concat_with_native_tuple_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "491": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0",
        "NoOp"
      ]
    },
    "492": {
      "op": "==",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "493": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "494": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "496": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0",
        "0"
      ]
    },
    "497": {
      "op": "!=",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "498": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "499": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[16]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%1#0"
      ]
    },
    "502": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)"
      ]
    },
    "503": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)",
        "0"
      ]
    },
    "504": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "505": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "reinterpret_bytes[16]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%1#0",
        "item0%0#0"
      ]
    },
    "506": {
      "op": "swap",
      "stack_out": [
        "item0%0#0",
        "reinterpret_bytes[16]%1#0"
      ]
    },
    "507": {
      "op": "intc_3 // 8",
      "stack_out": [
        "item0%0#0",
        "reinterpret_bytes[16]%1#0",
        "8"
      ]
    },
    "508": {
      "op": "dup",
      "stack_out": [
        "item0%0#0",
        "reinterpret_bytes[16]%1#0",
        "8",
        "8"
      ]
    },
    "509": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "item0%0#0",
        "item1%0#0"
      ]
    },
    "510": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "op": "callsub test_concat_with_native_tuple",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "513": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0",
        "0x151f7c75"
      ]
    },
    "514": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%101#0"
      ]
    },
    "515": {
      "op": "concat",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "516": {
      "op": "log",
      "stack_out": []
    },
    "517": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "518": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "521": {
      "block": "main_test_concat_with_arc4_tuple_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "523": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0",
        "NoOp"
      ]
    },
    "524": {
      "op": "==",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "525": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "526": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "528": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0",
        "0"
      ]
    },
    "529": {
      "op": "!=",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "530": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "531": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%0#0"
      ]
    },
    "534": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "op": "callsub test_concat_with_arc4_tuple",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "537": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0",
        "0x151f7c75"
      ]
    },
    "538": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%95#0"
      ]
    },
    "539": {
      "op": "concat",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "540": {
      "op": "log",
      "stack_out": []
    },
    "541": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "542": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "545": {
      "block": "main_test_convert_to_array_and_back_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "547": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0",
        "NoOp"
      ]
    },
    "548": {
      "op": "==",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "549": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "550": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "552": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0",
        "0"
      ]
    },
    "553": {
      "op": "!=",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "554": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "555": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%1#0"
      ],
      "stack_out": [
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%1#0"
      ]
    },
    "558": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%1#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "561": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%1#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%1#0",
        "tmp%88#0"
      ]
    },
    "562": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "op": "callsub test_convert_to_array_and_back",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "565": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0",
        "0x151f7c75"
      ]
    },
    "566": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%89#0"
      ]
    },
    "567": {
      "op": "concat",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "568": {
      "op": "log",
      "stack_out": []
    },
    "569": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "570": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "573": {
      "block": "main_test_dynamic_tuple_return_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "575": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "NoOp"
      ]
    },
    "576": {
      "op": "==",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "577": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "578": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "580": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "0"
      ]
    },
    "581": {
      "op": "!=",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "582": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "583": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "586": {
      "op": "btoi",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "587": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "op": "callsub test_dynamic_tuple_return",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "590": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0",
        "0x151f7c75"
      ]
    },
    "591": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%82#0"
      ]
    },
    "592": {
      "op": "concat",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "593": {
      "op": "log",
      "stack_out": []
    },
    "594": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "595": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "598": {
      "block": "main_test_tuple_return_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "600": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0",
        "NoOp"
      ]
    },
    "601": {
      "op": "==",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "602": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "603": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "605": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0",
        "0"
      ]
    },
    "606": {
      "op": "!=",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "607": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "608": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "611": {
      "op": "btoi",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "612": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "op": "callsub test_tuple_return",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "615": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0",
        "0x151f7c75"
      ]
    },
    "616": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%75#0"
      ]
    },
    "617": {
      "op": "concat",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "618": {
      "op": "log",
      "stack_out": []
    },
    "619": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "620": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "623": {
      "block": "main_test_bool_return_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "625": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0",
        "NoOp"
      ]
    },
    "626": {
      "op": "==",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "627": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "628": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "630": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "0"
      ]
    },
    "631": {
      "op": "!=",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "632": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "633": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "636": {
      "op": "btoi",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "637": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "op": "callsub test_bool_return",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "640": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0",
        "0x151f7c75"
      ]
    },
    "641": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%68#0"
      ]
    },
    "642": {
      "op": "concat",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "643": {
      "op": "log",
      "stack_out": []
    },
    "644": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "645": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "648": {
      "block": "main_test_uint64_return_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "650": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0",
        "NoOp"
      ]
    },
    "651": {
      "op": "==",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "652": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "653": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "655": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "0"
      ]
    },
    "656": {
      "op": "!=",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "657": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "658": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "661": {
      "op": "btoi",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "662": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "op": "callsub test_uint64_return",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "665": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "0x151f7c75"
      ]
    },
    "666": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%61#0"
      ]
    },
    "667": {
      "op": "concat",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "668": {
      "op": "log",
      "stack_out": []
    },
    "669": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "670": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "673": {
      "block": "main_sum_uints_and_lengths_and_trues_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "675": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "NoOp"
      ]
    },
    "676": {
      "op": "==",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "677": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "678": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "680": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "0"
      ]
    },
    "681": {
      "op": "!=",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "682": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "683": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_encoded_uint64[]%2#0"
      ],
      "stack_out": [
        "reinterpret_encoded_uint64[]%2#0"
      ]
    },
    "686": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0"
      ],
      "stack_out": [
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0"
      ]
    },
    "689": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%0#0",
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0"
      ],
      "stack_out": [
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0",
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%0#0"
      ]
    },
    "692": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_(encoded_uint64,bytes)[]%0#0",
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%0#0",
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0"
      ],
      "stack_out": [
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0",
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%0#0",
        "reinterpret_(encoded_uint64,bytes)[]%0#0"
      ]
    },
    "695": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_encoded_uint8[]%0#0",
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%0#0",
        "reinterpret_(encoded_uint64,bytes)[]%0#0",
        "reinterpret_encoded_uint64[]%2#0"
      ]
    },
    "697": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%0#0",
        "reinterpret_(encoded_uint64,bytes)[]%0#0",
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0"
      ]
    },
    "699": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_(encoded_uint64,bytes)[]%0#0",
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0",
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%0#0"
      ]
    },
    "701": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_encoded_uint64[]%2#0",
        "reinterpret_encoded_uint8[]%0#0",
        "reinterpret_(encoded_uint64,encoded_uint8,encoded_uint8)[]%0#0",
        "reinterpret_(encoded_uint64,bytes)[]%0#0"
      ]
    },
    "703": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "op": "callsub sum_uints_and_lengths_and_trues",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0"
      ]
    },
    "706": {
      "op": "cover 3",
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0"
      ]
    },
    "708": {
      "op": "cover 2",
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "elements_to_encode%0#0",
        "elements_to_encode%1#0"
      ]
    },
    "710": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "elements_to_encode%1#0",
        "elements_to_encode%0#0"
      ]
    },
    "711": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "elements_to_encode%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "712": {
      "op": "cover 2",
      "stack_out": [
        "elements_to_encode%3#0",
        "val_as_bytes%0#0",
        "elements_to_encode%2#0",
        "elements_to_encode%1#0"
      ]
    },
    "714": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "val_as_bytes%0#0",
        "elements_to_encode%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "715": {
      "op": "cover 2",
      "stack_out": [
        "elements_to_encode%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%2#0"
      ]
    },
    "717": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "718": {
      "op": "cover 3",
      "stack_out": [
        "val_as_bytes%2#0",
        "elements_to_encode%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "720": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0"
      ]
    },
    "722": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "723": {
      "op": "cover 3",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "725": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "726": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%2#0",
        "val_as_bytes%1#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "727": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%2#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "728": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%1#0",
        "val_as_bytes%1#0"
      ]
    },
    "729": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "730": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "731": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "732": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ]
    },
    "733": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "734": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "0x151f7c75"
      ]
    },
    "735": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "736": {
      "op": "concat",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "737": {
      "op": "log",
      "stack_out": []
    },
    "738": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "739": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "742": {
      "block": "main_test_bit_packed_tuples_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "744": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "NoOp"
      ]
    },
    "745": {
      "op": "==",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "746": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "747": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "749": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "0"
      ]
    },
    "750": {
      "op": "!=",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "751": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "752": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "op": "callsub test_bit_packed_tuples"
    },
    "755": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "756": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "759": {
      "block": "main_test_nested_array_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "761": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "NoOp"
      ]
    },
    "762": {
      "op": "==",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "763": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "764": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "766": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "0"
      ]
    },
    "767": {
      "op": "!=",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "768": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "769": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "772": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "773": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_encoded_uint64[][]%0#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "reinterpret_encoded_uint64[][]%0#0"
      ]
    },
    "776": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "op": "callsub test_nested_array",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "779": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "0x151f7c75"
      ]
    },
    "780": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%45#0"
      ]
    },
    "781": {
      "op": "concat",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "782": {
      "op": "log",
      "stack_out": []
    },
    "783": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "784": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "787": {
      "block": "main_test_implicit_conversion_emit_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "789": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "NoOp"
      ]
    },
    "790": {
      "op": "==",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "791": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "792": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "794": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "0"
      ]
    },
    "795": {
      "op": "!=",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "796": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "797": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_encoded_uint64[]%1#0"
      ],
      "stack_out": [
        "reinterpret_encoded_uint64[]%1#0"
      ]
    },
    "800": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "op": "callsub test_implicit_conversion_emit",
      "stack_out": []
    },
    "803": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "804": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "807": {
      "block": "main_test_implicit_conversion_log_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "809": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "NoOp"
      ]
    },
    "810": {
      "op": "==",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "811": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "812": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "814": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "0"
      ]
    },
    "815": {
      "op": "!=",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "816": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "817": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_encoded_uint64[]%0#0"
      ],
      "stack_out": [
        "reinterpret_encoded_uint64[]%0#0"
      ]
    },
    "820": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "op": "callsub test_implicit_conversion_log",
      "stack_out": []
    },
    "823": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "824": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "827": {
      "block": "main_test_dynamic_sized_named_tuple_array_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "829": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "NoOp"
      ]
    },
    "830": {
      "op": "==",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "831": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "832": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "834": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "0"
      ]
    },
    "835": {
      "op": "!=",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "836": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "837": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "op": "callsub test_dynamic_sized_named_tuple_array"
    },
    "840": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "841": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "844": {
      "block": "main_test_dynamic_sized_tuple_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "846": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "NoOp"
      ]
    },
    "847": {
      "op": "==",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "848": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "849": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "851": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "0"
      ]
    },
    "852": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "853": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "854": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "op": "callsub test_dynamic_sized_tuple_array"
    },
    "857": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "858": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "861": {
      "block": "main_test_fixed_size_named_tuple_array_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "863": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "NoOp"
      ]
    },
    "864": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "865": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "866": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "868": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "869": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "870": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "871": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "op": "callsub test_fixed_size_named_tuple_array"
    },
    "874": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "875": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "878": {
      "block": "main_test_fixed_size_tuple_array_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "880": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "NoOp"
      ]
    },
    "881": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "882": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "883": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "885": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0"
      ]
    },
    "886": {
      "op": "!=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "887": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "888": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "op": "callsub test_fixed_size_tuple_array"
    },
    "891": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "892": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "895": {
      "block": "main_test_bool_array_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "897": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "NoOp"
      ]
    },
    "898": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "899": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "900": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "902": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "903": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "904": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "905": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "908": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "909": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "op": "callsub test_bool_array",
      "stack_out": []
    },
    "912": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "913": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "916": {
      "block": "main_test_biguint_array_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "918": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "919": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "920": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "921": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "923": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "924": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "925": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "926": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "op": "callsub test_biguint_array"
    },
    "929": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "930": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "933": {
      "block": "main_test_uint64_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "935": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "936": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "937": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "938": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "940": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "941": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "942": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "943": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "op": "callsub test_uint64_array"
    },
    "946": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "947": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "950": {
      "block": "main_bare_routing@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "952": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0",
        "0"
      ]
    },
    "953": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%129#0"
      ]
    },
    "954": {
      "op": "match main___algopy_default_create@29",
      "stack_out": []
    },
    "958": {
      "block": "main_switch_case_next@31",
      "stack_in": [],
      "op": "b main_after_if_else@32"
    },
    "961": {
      "block": "main___algopy_default_create@29",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "963": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0",
        "0"
      ]
    },
    "964": {
      "op": "==",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "965": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "966": {
      "block": "main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@35",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "967": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33"
    },
    "970": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_bit",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_bit",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "973": {
      "block": "dynamic_array_pop_bit_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "975": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "976": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "977": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "978": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "979": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "980": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "tmp%0#0"
      ]
    },
    "981": {
      "op": "extract 6 0",
      "defined_out": [
        "length_minus_1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "tmp%1#0"
      ]
    },
    "984": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "tmp%1#0",
        "array#0 (copy)"
      ]
    },
    "986": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "array#0 (copy)",
        "tmp%1#0"
      ]
    },
    "987": {
      "op": "replace2 0",
      "defined_out": [
        "length_minus_1#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0"
      ]
    },
    "989": {
      "op": "dig 1",
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "991": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)",
        "16"
      ]
    },
    "993": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "994": {
      "op": "dup2",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "popped_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "result#0 (copy)",
        "popped_location#0 (copy)"
      ]
    },
    "995": {
      "op": "getbit",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "tmp%2#0"
      ]
    },
    "996": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "length_minus_1#0",
        "popped_location#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "tmp%2#0",
        "0x00"
      ]
    },
    "997": {
      "op": "intc_0 // 0",
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "998": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "1000": {
      "op": "setbit",
      "defined_out": [
        "length_minus_1#0",
        "popped#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "popped#0"
      ]
    },
    "1001": {
      "op": "cover 3",
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "1003": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "0"
      ]
    },
    "1004": {
      "op": "setbit",
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0"
      ]
    },
    "1005": {
      "op": "swap",
      "stack_out": [
        "popped#0",
        "result#0",
        "length_minus_1#0"
      ]
    },
    "1006": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "length_minus_1#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "length_minus_1#0",
        "7"
      ]
    },
    "1008": {
      "op": "+",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%3#0"
      ]
    },
    "1009": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "popped#0",
        "result#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%3#0",
        "8"
      ]
    },
    "1010": {
      "op": "/",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%4#0"
      ]
    },
    "1011": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "popped#0",
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%4#0",
        "2"
      ]
    },
    "1012": {
      "op": "+",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%5#0"
      ]
    },
    "1013": {
      "op": "swap",
      "stack_out": [
        "popped#0",
        "tmp%5#0",
        "result#0"
      ]
    },
    "1014": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "tmp%5#0",
        "result#0",
        "0"
      ]
    },
    "1015": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "tmp%5#0"
      ]
    },
    "1017": {
      "op": "substring3",
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "1018": {
      "retsub": true,
      "op": "retsub"
    },
    "1019": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "params": {
        "array#0": "bytes",
        "fixed_byte_size#0": "uint64"
      },
      "block": "dynamic_array_pop_fixed_size",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "1022": {
      "block": "dynamic_array_pop_fixed_size_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "1024": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "1025": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "1026": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "1027": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "1028": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1029": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1032": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%1#0",
        "array#0 (copy)"
      ]
    },
    "1034": {
      "op": "swap",
      "stack_out": [
        "array#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1035": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1037": {
      "op": "dup",
      "defined_out": [
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "result#0 (copy)"
      ]
    },
    "1038": {
      "op": "len",
      "defined_out": [
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%2#0"
      ]
    },
    "1039": {
      "op": "frame_dig -1",
      "defined_out": [
        "fixed_byte_size#0 (copy)",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%2#0",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "1041": {
      "op": "-",
      "defined_out": [
        "item_location#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0"
      ]
    },
    "1042": {
      "op": "dup2",
      "defined_out": [
        "item_location#0",
        "item_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)"
      ]
    },
    "1043": {
      "op": "frame_dig -1",
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "1045": {
      "op": "extract3",
      "defined_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "popped#0"
      ]
    },
    "1046": {
      "op": "cover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "item_location#0"
      ]
    },
    "1048": {
      "op": "swap",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0"
      ]
    },
    "1049": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0",
        "0"
      ]
    },
    "1050": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "item_location#0"
      ]
    },
    "1052": {
      "op": "substring3",
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "1053": {
      "retsub": true,
      "op": "retsub"
    },
    "1054": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_dynamic_element",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "1057": {
      "block": "dynamic_array_pop_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "1059": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "1060": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "1061": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "1062": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "1063": {
      "op": "dupn 2",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "1065": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "2"
      ]
    },
    "1066": {
      "op": "*",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "1067": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0"
      ]
    },
    "1068": {
      "op": "cover 2",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "1070": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "array#0 (copy)"
      ]
    },
    "1072": {
      "op": "extract 2 0",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "1075": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0"
      ]
    },
    "1076": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "1078": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "1079": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "popped_header_offset#0"
      ]
    },
    "1081": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "1082": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ]
    },
    "1083": {
      "op": "cover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_offset#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "1085": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped_offset#0",
        "head_and_tail#0"
      ]
    },
    "1087": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "1088": {
      "op": "len",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped_offset#0",
        "head_and_tail#0",
        "tmp%0#0"
      ]
    },
    "1089": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped_offset#0",
        "tmp%0#0",
        "head_and_tail#0"
      ]
    },
    "1090": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%0#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "1092": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%0#0"
      ]
    },
    "1094": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped#0"
      ]
    },
    "1095": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0"
      ]
    },
    "1096": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0",
        "new_head#0"
      ]
    },
    "1097": {
      "op": "swap",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0"
      ]
    },
    "1098": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0",
        "2"
      ]
    },
    "1099": {
      "op": "*",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0"
      ]
    },
    "1100": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "2"
      ]
    },
    "1101": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0"
      ]
    },
    "1102": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1103": {
      "block": "dynamic_array_pop_dynamic_element_for_header@1",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1105": {
      "op": "frame_dig 6",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "1107": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "1108": {
      "op": "bz dynamic_array_pop_dynamic_element_after_for@4",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1111": {
      "block": "dynamic_array_pop_dynamic_element_for_body@2",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_and_tail#0"
      ]
    },
    "1113": {
      "op": "frame_dig 7",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0"
      ]
    },
    "1115": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1116": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "2"
      ]
    },
    "1117": {
      "op": "-",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1118": {
      "op": "itob",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%2#0"
      ]
    },
    "1119": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "1122": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0",
        "new_head#0"
      ]
    },
    "1124": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ]
    },
    "1125": {
      "op": "concat",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1126": {
      "op": "frame_bury 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1128": {
      "block": "dynamic_array_pop_dynamic_element_for_footer@3",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1130": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1131": {
      "op": "+",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1132": {
      "op": "frame_bury 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1134": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "1137": {
      "block": "dynamic_array_pop_dynamic_element_after_for@4",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "length_minus_1#0"
      ]
    },
    "1139": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "1140": {
      "op": "extract 6 2",
      "defined_out": [
        "length_minus_1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "1143": {
      "op": "frame_dig 5",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "1145": {
      "op": "concat",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "1146": {
      "op": "frame_dig 1",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "popped_header_offset#0"
      ]
    },
    "1148": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "popped_header_offset#0",
        "2"
      ]
    },
    "1149": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1150": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "tmp%7#0",
        "head_and_tail#0"
      ]
    },
    "1152": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "head_and_tail#0",
        "tmp%7#0"
      ]
    },
    "1153": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "head_and_tail#0",
        "tmp%7#0",
        "popped_offset#0"
      ]
    },
    "1155": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1156": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "updated#0"
      ]
    },
    "1157": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "updated#0",
        "popped#0"
      ]
    },
    "1159": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "popped#0",
        "updated#0"
      ]
    },
    "1160": {
      "op": "frame_bury 1"
    },
    "1162": {
      "op": "frame_bury 0"
    },
    "1164": {
      "retsub": true,
      "op": "retsub"
    },
    "1165": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "1168": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "1169": {
      "op": "dupn 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "1171": {
      "block": "dynamic_array_concat_bits_block@0",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "1173": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1174": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0"
      ]
    },
    "1175": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "1177": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1179": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "1180": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "1181": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%0#0"
      ]
    },
    "1182": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "1185": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "1187": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "1188": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "1190": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "1191": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "1193": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "1195": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "1196": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "1198": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%1#0"
      ]
    },
    "1199": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%1#0",
        "8"
      ]
    },
    "1200": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "1201": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0"
      ]
    },
    "1202": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "1204": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "1205": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "1207": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%2#0"
      ]
    },
    "1208": {
      "op": "intc_3 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%2#0",
        "8"
      ]
    },
    "1209": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "1210": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "1211": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "1213": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%3#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%3#0"
      ]
    },
    "1214": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1217": {
      "block": "dynamic_array_concat_bits_if_body@1",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0"
      ]
    },
    "1219": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "1221": {
      "op": "-",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%4#0"
      ]
    },
    "1222": {
      "op": "bzero",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%5#0"
      ]
    },
    "1223": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%5#0",
        "result#0"
      ]
    },
    "1225": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0",
        "tmp%5#0"
      ]
    },
    "1226": {
      "op": "concat",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#7"
      ]
    },
    "1227": {
      "op": "frame_bury 7",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1229": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "1231": {
      "op": "frame_bury 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1233": {
      "op": "intc_0 // 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "1234": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1236": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0"
      ]
    },
    "1238": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0",
        "16"
      ]
    },
    "1240": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "1241": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_offset#0"
      ]
    },
    "1242": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "1244": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1246": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_end#0"
      ]
    },
    "1247": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1249": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "1251": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "1253": {
      "op": "<",
      "defined_out": [
        "tmp%6#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%6#0"
      ]
    },
    "1254": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1257": {
      "block": "dynamic_array_concat_bits_while_body@4",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)"
      ]
    },
    "1259": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "1261": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "1262": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "1264": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%7#0"
      ]
    },
    "1265": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%7#0",
        "result#0"
      ]
    },
    "1267": {
      "op": "frame_dig 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%7#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%7#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "1269": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%7#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%7#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "1270": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "tmp%7#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "1272": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%7#0"
      ]
    },
    "1274": {
      "op": "setbit",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0"
      ]
    },
    "1275": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "1277": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "1278": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "1279": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "1281": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "1283": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "1284": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1286": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "1289": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "1291": {
      "op": "frame_bury 0"
    },
    "1293": {
      "retsub": true,
      "op": "retsub"
    },
    "1294": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1297": {
      "block": "dynamic_array_concat_byte_length_head_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "1299": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "1300": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "1301": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "1302": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1304": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "new_length#0"
      ]
    },
    "1305": {
      "op": "swap",
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "1306": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "1307": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%0#0"
      ]
    },
    "1308": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%0#0",
        "2"
      ]
    },
    "1309": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "1310": {
      "op": "swap",
      "stack_out": [
        "header_end#0",
        "new_length#0"
      ]
    },
    "1311": {
      "op": "dup",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ]
    },
    "1312": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "header_end#0",
        "new_length#0",
        "tmp%1#0"
      ]
    },
    "1313": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0"
      ]
    },
    "1316": {
      "op": "swap",
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0"
      ]
    },
    "1317": {
      "op": "frame_dig -3",
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "array#0 (copy)"
      ]
    },
    "1319": {
      "op": "intc_2 // 2",
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1320": {
      "op": "dig 4",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "1322": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%3#0"
      ]
    },
    "1323": {
      "op": "frame_dig -1",
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%3#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1325": {
      "op": "intc_2 // 2",
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%3#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1326": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1327": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "1328": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0"
      ]
    },
    "1329": {
      "op": "frame_dig -3",
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "array#0 (copy)"
      ]
    },
    "1331": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1332": {
      "op": "frame_dig -3",
      "stack_out": [
        "header_end#0",
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)"
      ]
    },
    "1334": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%7#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "1336": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%7#0"
      ]
    },
    "1338": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1339": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0"
      ]
    },
    "1340": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%9#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "1342": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_length#0",
        "tmp%10#0"
      ]
    },
    "1343": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "tmp%10#0",
        "new_length#0"
      ]
    },
    "1344": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "tmp%10#0",
        "new_length#0",
        "0"
      ]
    },
    "1345": {
      "callsub": "_puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head",
      "op": "callsub recalculate_head_for_elements_with_byte_length_head",
      "defined_out": [
        "tmp%11#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%11#0"
      ]
    },
    "1348": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1349": {
      "retsub": true,
      "op": "retsub"
    },
    "1350": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "1353": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1354": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "tmp%4#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0"
      ]
    },
    "1355": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1357": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1358": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "1359": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1361": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "1362": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ]
    },
    "1363": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "2"
      ]
    },
    "1364": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ]
    },
    "1365": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1366": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1368": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%0#0"
      ]
    },
    "1370": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "1371": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1374": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1376": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1378": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1379": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1381": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "1382": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%2#0"
      ]
    },
    "1383": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "1386": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%3#0",
        "new_head#0"
      ]
    },
    "1388": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ]
    },
    "1389": {
      "op": "concat",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1390": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1392": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1394": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1395": {
      "op": "+",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1396": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1398": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "1401": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1403": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1404": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1406": {
      "op": "frame_dig -2",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1408": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "item_offset_adjustment#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1409": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "1410": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1412": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "2"
      ]
    },
    "1413": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1414": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1415": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1417": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1419": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "1421": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "1422": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1425": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1427": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1429": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1430": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1432": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "1433": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "1434": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "1437": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%7#0",
        "new_head#0"
      ]
    },
    "1439": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "1440": {
      "op": "concat",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1441": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1443": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1445": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1446": {
      "op": "+",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1447": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "1449": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "1452": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1454": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1456": {
      "op": "+",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "1457": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%9#0"
      ]
    },
    "1458": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "1461": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0",
        "new_head#0"
      ]
    },
    "1463": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "1464": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1466": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "1467": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1468": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1470": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1471": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1473": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%13#0",
        "array_head_and_tail#0 (copy)",
        "tmp%12#0"
      ]
    },
    "1475": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1477": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "1478": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "1479": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1481": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1482": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1483": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1485": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1486": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1488": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)",
        "tmp%16#0"
      ]
    },
    "1490": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1492": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%15#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%18#0"
      ]
    },
    "1493": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%19#0"
      ]
    },
    "1494": {
      "op": "frame_bury 0"
    },
    "1496": {
      "retsub": true,
      "op": "retsub"
    },
    "1497": {
      "subroutine": "_puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head",
      "params": {
        "array_head_and_tail#0": "bytes",
        "length#0": "uint64",
        "start_at_index#0": "uint64"
      },
      "block": "recalculate_head_for_elements_with_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1500": {
      "block": "recalculate_head_for_elements_with_byte_length_head_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "length#0 (copy)"
      ]
    },
    "1502": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0 (copy)"
      ],
      "stack_out": [
        "length#0 (copy)",
        "2"
      ]
    },
    "1503": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1504": {
      "op": "frame_dig -1",
      "defined_out": [
        "start_at_index#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1506": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%0#0",
        "start_at_index#0 (copy)",
        "2"
      ]
    },
    "1507": {
      "op": "*",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1508": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1510": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1511": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1512": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1514": {
      "op": "select",
      "defined_out": [
        "tail_offset#0"
      ],
      "stack_out": [
        "tail_offset#0"
      ]
    },
    "1515": {
      "op": "frame_dig -2",
      "stack_out": [
        "tail_offset#0",
        "length#0 (copy)"
      ]
    },
    "1517": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "1518": {
      "op": "*",
      "defined_out": [
        "tail_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0"
      ]
    },
    "1519": {
      "op": "frame_dig -1",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1521": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "start_at_index#0 (copy)",
        "2"
      ]
    },
    "1522": {
      "op": "*",
      "defined_out": [
        "tail_offset#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1523": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "tmp%4#0",
        "2"
      ]
    },
    "1524": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0"
      ]
    },
    "1525": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_header@1",
      "stack_in": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1527": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "1529": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "1530": {
      "op": "bz recalculate_head_for_elements_with_byte_length_head_after_for@4",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0"
      ]
    },
    "1533": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_body@2",
      "stack_in": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tail_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "1535": {
      "op": "dup",
      "defined_out": [
        "tail_offset#0",
        "tail_offset#0 (copy)"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#0 (copy)"
      ]
    },
    "1536": {
      "op": "itob",
      "defined_out": [
        "tail_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%5#0"
      ]
    },
    "1537": {
      "op": "extract 6 2",
      "defined_out": [
        "tail_offset#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "1540": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "tail_offset#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1542": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1544": {
      "op": "uncover 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "1546": {
      "op": "replace3",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "array_head_and_tail#0"
      ]
    },
    "1547": {
      "op": "dup"
    },
    "1548": {
      "op": "frame_bury -3",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1550": {
      "op": "dig 1",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)",
        "tail_offset#0 (copy)"
      ]
    },
    "1552": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%6#0"
      ]
    },
    "1553": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "tail_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%6#0",
        "2"
      ]
    },
    "1554": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%7#0"
      ]
    },
    "1555": {
      "op": "+",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "1556": {
      "op": "frame_bury 0",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0"
      ]
    },
    "1558": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_footer@3",
      "stack_in": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1560": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1561": {
      "op": "+",
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1562": {
      "op": "frame_bury 2",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0"
      ]
    },
    "1564": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_header@1"
    },
    "1567": {
      "block": "recalculate_head_for_elements_with_byte_length_head_after_for@4",
      "stack_in": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%3#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1569": {
      "op": "frame_bury 0"
    },
    "1571": {
      "retsub": true,
      "op": "retsub"
    },
    "1572": {
      "subroutine": "test_cases.array.immutable.times",
      "params": {
        "n#0": "uint64"
      },
      "block": "times",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1575": {
      "block": "times_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1576": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "1"
      ]
    },
    "1577": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "result#0"
      ]
    },
    "1578": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1579": {
      "block": "times_for_header@1",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1581": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "n#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "n#0 (copy)"
      ]
    },
    "1583": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1584": {
      "op": "bz times_after_for@4",
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1587": {
      "block": "times_for_body@2",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "1589": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0",
        "\" \""
      ]
    },
    "1592": {
      "op": "concat",
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "1593": {
      "op": "frame_bury 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1595": {
      "block": "times_for_footer@3",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1597": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1598": {
      "op": "+",
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1599": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1601": {
      "op": "b times_for_header@1"
    },
    "1604": {
      "block": "times_after_for@4",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "1605": {
      "subroutine": "test_cases.array.immutable.add_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1608": {
      "block": "add_x_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1609": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1610": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1611": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1613": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "1615": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1616": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "1619": {
      "block": "add_x_for_body@2",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "1621": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1624": {
      "op": "frame_dig 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "1626": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1"
      ]
    },
    "1627": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "1628": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "1629": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "1630": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "1631": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "1632": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "1633": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0"
      ]
    },
    "1634": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1635": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1636": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "1637": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1638": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1639": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1642": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1643": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat_result%0#0"
      ]
    },
    "1644": {
      "op": "frame_bury -2",
      "stack_out": [
        "i#0"
      ]
    },
    "1646": {
      "block": "add_x_for_footer@3",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1648": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1649": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1650": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1652": {
      "op": "b add_x_for_header@1"
    },
    "1655": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "1657": {
      "op": "swap"
    },
    "1658": {
      "retsub": true,
      "op": "retsub"
    },
    "1659": {
      "subroutine": "test_cases.array.immutable.pop_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "pop_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1662": {
      "block": "pop_x_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1663": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1664": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "1665": {
      "block": "pop_x_for_header@1",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1667": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "x#0 (copy)"
      ]
    },
    "1669": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1670": {
      "op": "bz pop_x_after_for@4",
      "stack_out": [
        "_i#0"
      ]
    },
    "1673": {
      "block": "pop_x_for_body@2",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "arr#0 (copy)"
      ]
    },
    "1675": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "arr#0 (copy)",
        "8"
      ]
    },
    "1676": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "data%0#0",
        "popped%0#0"
      ],
      "stack_out": [
        "_i#0",
        "popped%0#0",
        "data%0#0"
      ]
    },
    "1679": {
      "op": "bury 1",
      "stack_out": [
        "_i#0",
        "data%0#0"
      ]
    },
    "1681": {
      "op": "frame_bury -2",
      "stack_out": [
        "_i#0"
      ]
    },
    "1683": {
      "block": "pop_x_for_footer@3",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1685": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1686": {
      "op": "+",
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1687": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "1689": {
      "op": "b pop_x_for_header@1"
    },
    "1692": {
      "block": "pop_x_after_for@4",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "arr#0 (copy)"
      ]
    },
    "1694": {
      "op": "swap"
    },
    "1695": {
      "retsub": true,
      "op": "retsub"
    },
    "1696": {
      "subroutine": "test_cases.array.immutable.add_xb",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_xb",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1699": {
      "block": "add_xb_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1700": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1701": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1702": {
      "block": "add_xb_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1704": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "1706": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1707": {
      "op": "bz add_xb_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "1710": {
      "block": "add_xb_for_body@2",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "1712": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1715": {
      "op": "frame_dig 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "1717": {
      "op": "itob",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%0#0"
      ]
    },
    "1718": {
      "op": "dup",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1719": {
      "op": "len",
      "defined_out": [
        "array%value_len%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%0#0",
        "array%value_len%0#1"
      ]
    },
    "1720": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "array%value_len%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%0#0",
        "array%value_len%0#1",
        "64"
      ]
    },
    "1722": {
      "op": "<=",
      "defined_out": [
        "array%len_ok%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%0#0",
        "array%len_ok%0#1"
      ]
    },
    "1723": {
      "error": "value is bigger than 64 bytes",
      "op": "assert // value is bigger than 64 bytes",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%0#0"
      ]
    },
    "1724": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%0#0",
        "64"
      ]
    },
    "1726": {
      "op": "bzero",
      "defined_out": [
        "array%bzero%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%0#0",
        "array%bzero%0#1"
      ]
    },
    "1727": {
      "op": "b|",
      "defined_out": [
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1"
      ]
    },
    "1728": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "1729": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "1730": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "1731": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "1732": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "1733": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "1734": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0"
      ]
    },
    "1735": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1736": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1737": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "64"
      ]
    },
    "1739": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1740": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1741": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1744": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1745": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat_result%0#0"
      ]
    },
    "1746": {
      "op": "frame_bury -2",
      "stack_out": [
        "i#0"
      ]
    },
    "1748": {
      "block": "add_xb_for_footer@3",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1750": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1751": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1752": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1754": {
      "op": "b add_xb_for_header@1"
    },
    "1757": {
      "block": "add_xb_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "1759": {
      "op": "swap"
    },
    "1760": {
      "retsub": true,
      "op": "retsub"
    },
    "1761": {
      "subroutine": "test_cases.array.immutable.sum_arr",
      "params": {
        "arr#0": "bytes"
      },
      "block": "sum_arr",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1764": {
      "block": "sum_arr_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0"
      ]
    },
    "1765": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "arr#0 (copy)"
      ]
    },
    "1767": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1768": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0"
      ]
    },
    "1769": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1770": {
      "block": "sum_arr_for_header@1",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1772": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "1774": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1775": {
      "op": "bz sum_arr_after_for@4",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1778": {
      "block": "sum_arr_for_body@2",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "1780": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1783": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1785": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1786": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1787": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "1788": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_index_internal%0#0",
        "value_at_index%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%0#0"
      ]
    },
    "1789": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "1790": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0",
        "total#0"
      ]
    },
    "1792": {
      "op": "+",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1793": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1795": {
      "block": "sum_arr_for_footer@3",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1797": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1798": {
      "op": "+",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1799": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1801": {
      "op": "b sum_arr_for_header@1"
    },
    "1804": {
      "block": "sum_arr_after_for@4",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1805": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "params": {},
      "block": "test_uint64_array_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "1806": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "1807": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1808": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1809": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1810": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1811": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1812": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1813": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1814": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "1817": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "42"
      ]
    },
    "1819": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1"
      ]
    },
    "1820": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "1821": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "1822": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "1823": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "1824": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "1825": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "1826": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "1827": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1828": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1829": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "1830": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1831": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1832": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1835": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1836": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "1837": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1838": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1839": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "1840": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "1841": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%3#0"
      ]
    },
    "1842": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1843": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1844": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1845": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "1846": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "1"
      ]
    },
    "1847": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "1848": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "arr#0 (copy)"
      ]
    },
    "1850": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1853": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%5#0"
      ]
    },
    "1854": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%5#0",
        "8"
      ]
    },
    "1855": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1856": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "1857": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "1858": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "1859": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "42"
      ]
    },
    "1861": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "1862": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1863": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "5"
      ]
    },
    "1865": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1868": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1869": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1870": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0"
      ]
    },
    "1871": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0",
        "6"
      ]
    },
    "1873": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "1874": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1875": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1876": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1877": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "1878": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%10#0",
        "1"
      ]
    },
    "1879": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0"
      ]
    },
    "1880": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "arr#0 (copy)"
      ]
    },
    "1882": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1885": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%11#0"
      ]
    },
    "1886": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%11#0",
        "8"
      ]
    },
    "1887": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "1888": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "8"
      ]
    },
    "1889": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%1#0"
      ]
    },
    "1890": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "1891": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "4"
      ]
    },
    "1893": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "1894": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1895": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0"
      ]
    },
    "1898": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "43"
      ]
    },
    "1900": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%1#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%sub_item%1#1"
      ]
    },
    "1901": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "1902": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "1903": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%encoded%1#1"
      ]
    },
    "1904": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%encoded%1#1",
        "0x"
      ]
    },
    "1905": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "array%encoded%1#1"
      ]
    },
    "1906": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "1907": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0"
      ]
    },
    "1908": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ],
      "stack_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "1909": {
      "op": "len",
      "defined_out": [
        "byte_len%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "1910": {
      "op": "intc_3 // 8",
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0",
        "8"
      ]
    },
    "1911": {
      "op": "/",
      "defined_out": [
        "concatenated%1#0",
        "len_%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "1912": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "1913": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "1916": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "1917": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "1918": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1919": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1920": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "1921": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0",
        "7"
      ]
    },
    "1923": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "1924": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1925": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1926": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1927": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%16#0"
      ]
    },
    "1928": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%16#0",
        "1"
      ]
    },
    "1929": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0"
      ]
    },
    "1930": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "arr#0 (copy)"
      ]
    },
    "1932": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "array_head_and_tail%2#0"
      ]
    },
    "1935": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%17#0"
      ]
    },
    "1936": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%17#0",
        "8"
      ]
    },
    "1937": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "1938": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "8"
      ]
    },
    "1939": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "1940": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0"
      ]
    },
    "1941": {
      "op": "pushint 43 // 43",
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "43"
      ]
    },
    "1943": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "1944": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1945": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1946": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0"
      ]
    },
    "1949": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "0"
      ]
    },
    "1950": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "0",
        "8"
      ]
    },
    "1951": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "1952": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "8"
      ]
    },
    "1953": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "1954": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "1955": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "tmp%20#0",
        "42"
      ]
    },
    "1957": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0"
      ]
    },
    "1958": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1959": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "3"
      ]
    },
    "1961": {
      "callsub": "test_cases.array.immutable.pop_x",
      "op": "callsub pop_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1964": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1965": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1966": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "1967": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "tmp%22#0",
        "4"
      ]
    },
    "1969": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "1970": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1971": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1972": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1973": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "1974": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "1"
      ]
    },
    "1975": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "1976": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "1978": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "array_head_and_tail%4#0"
      ]
    },
    "1981": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%25#0"
      ]
    },
    "1982": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%25#0",
        "8"
      ]
    },
    "1983": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0"
      ]
    },
    "1984": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0",
        "8"
      ]
    },
    "1985": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%4#0"
      ]
    },
    "1986": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0"
      ]
    },
    "1987": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0",
        "2"
      ]
    },
    "1988": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%27#0"
      ]
    },
    "1989": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1990": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "10"
      ]
    },
    "1992": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1995": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1996": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1997": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0"
      ]
    },
    "1998": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0",
        "14"
      ]
    },
    "2000": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%29#0"
      ]
    },
    "2001": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2002": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2003": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2004": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%30#0"
      ]
    },
    "2005": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%30#0",
        "1"
      ]
    },
    "2006": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0"
      ]
    },
    "2007": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2009": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "array_head_and_tail%5#0"
      ]
    },
    "2012": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "tmp%31#0"
      ]
    },
    "2013": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "tmp%31#0",
        "8"
      ]
    },
    "2014": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0"
      ]
    },
    "2015": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0",
        "8"
      ]
    },
    "2016": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%5#0"
      ]
    },
    "2017": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0"
      ]
    },
    "2018": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0",
        "9"
      ]
    },
    "2020": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%33#0"
      ]
    },
    "2021": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2022": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0"
      ]
    },
    "2025": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "44"
      ]
    },
    "2027": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%2#1",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%sub_item%2#1"
      ]
    },
    "2028": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%sub_item%2#1",
        "0x"
      ]
    },
    "2029": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "0x",
        "array%sub_item%2#1"
      ]
    },
    "2030": {
      "op": "concat",
      "defined_out": [
        "array%encoded%2#1",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%encoded%2#1"
      ]
    },
    "2031": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%encoded%2#1",
        "0x"
      ]
    },
    "2032": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "0x",
        "array%encoded%2#1"
      ]
    },
    "2033": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "encoded%2#0"
      ]
    },
    "2034": {
      "op": "concat",
      "defined_out": [
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0"
      ]
    },
    "2035": {
      "op": "dup",
      "defined_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ],
      "stack_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ]
    },
    "2036": {
      "op": "len",
      "defined_out": [
        "byte_len%2#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "byte_len%2#0"
      ]
    },
    "2037": {
      "op": "intc_3 // 8",
      "stack_out": [
        "concatenated%2#0",
        "byte_len%2#0",
        "8"
      ]
    },
    "2038": {
      "op": "/",
      "defined_out": [
        "concatenated%2#0",
        "len_%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "len_%2#0"
      ]
    },
    "2039": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "as_bytes%2#0"
      ]
    },
    "2040": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ]
    },
    "2043": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%2#0",
        "concatenated%2#0"
      ]
    },
    "2044": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "2045": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2046": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2047": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0"
      ]
    },
    "2048": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0",
        "15"
      ]
    },
    "2050": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%35#0"
      ]
    },
    "2051": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2052": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2053": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2054": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%36#0"
      ]
    },
    "2055": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%36#0",
        "1"
      ]
    },
    "2056": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0"
      ]
    },
    "2057": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "arr#0 (copy)"
      ]
    },
    "2059": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "array_head_and_tail%6#0"
      ]
    },
    "2062": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "tmp%37#0"
      ]
    },
    "2063": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "tmp%37#0",
        "8"
      ]
    },
    "2064": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "item_offset%6#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "item_offset%6#0"
      ]
    },
    "2065": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "item_offset%6#0",
        "8"
      ]
    },
    "2066": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%6#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%6#0"
      ]
    },
    "2067": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%38#0"
      ]
    },
    "2068": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "tmp%38#0",
        "44"
      ]
    },
    "2070": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%39#0"
      ]
    },
    "2071": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2072": {
      "op": "pushint 23 // 23",
      "defined_out": [
        "23",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "23"
      ]
    },
    "2074": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "assigned_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "assigned_value%0#0"
      ]
    },
    "2075": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "arr#0 (copy)"
      ]
    },
    "2077": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2078": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "assigned_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "array_length%0#0"
      ]
    },
    "2079": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "array_length%0#0",
        "2"
      ]
    },
    "2080": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "assigned_value%0#0",
        "index_is_in_bounds%0#0"
      ],
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "2081": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "assigned_value%0#0"
      ]
    },
    "2082": {
      "op": "swap",
      "stack_out": [
        "assigned_value%0#0",
        "arr#0"
      ]
    },
    "2083": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr#0",
        "assigned_value%0#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "arr#0",
        "18"
      ]
    },
    "2085": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "18",
        "assigned_value%0#0"
      ]
    },
    "2087": {
      "op": "replace3",
      "stack_out": [
        "arr#0"
      ]
    },
    "2088": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2089": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2090": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0"
      ]
    },
    "2091": {
      "op": "pushint 15 // 15",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "15"
      ]
    },
    "2093": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%41#0"
      ]
    },
    "2094": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2095": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2096": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%7#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0"
      ]
    },
    "2099": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "2"
      ]
    },
    "2100": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "2",
        "8"
      ]
    },
    "2101": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "item_offset%7#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "item_offset%7#0"
      ]
    },
    "2102": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "item_offset%7#0",
        "8"
      ]
    },
    "2103": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%7#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%7#0"
      ]
    },
    "2104": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%42#0"
      ]
    },
    "2105": {
      "op": "pushint 23 // 23",
      "stack_out": [
        "arr#0",
        "tmp%42#0",
        "23"
      ]
    },
    "2107": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%43#0"
      ]
    },
    "2108": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2109": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "\"a\""
      ]
    },
    "2112": {
      "op": "swap",
      "stack_out": [
        "\"a\"",
        "arr#0"
      ]
    },
    "2113": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2114": {
      "retsub": true,
      "op": "retsub"
    },
    "2115": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "params": {},
      "block": "test_biguint_array_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "2116": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "2117": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2118": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2119": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2120": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2121": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2122": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2123": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2124": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "2127": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%2#0"
      ]
    },
    "2129": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "expr_value_trimmed%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%2#0",
        "1"
      ]
    },
    "2130": {
      "op": "-",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%3#0"
      ]
    },
    "2131": {
      "op": "itob",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0"
      ]
    },
    "2132": {
      "op": "dup",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2133": {
      "op": "len",
      "defined_out": [
        "array%value_len%0#1",
        "expr_value_trimmed%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0",
        "array%value_len%0#1"
      ]
    },
    "2134": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "array%value_len%0#1",
        "expr_value_trimmed%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0",
        "array%value_len%0#1",
        "64"
      ]
    },
    "2136": {
      "op": "<=",
      "defined_out": [
        "array%len_ok%0#1",
        "expr_value_trimmed%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0",
        "array%len_ok%0#1"
      ]
    },
    "2137": {
      "error": "value is bigger than 64 bytes",
      "op": "assert // value is bigger than 64 bytes",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0"
      ]
    },
    "2138": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0",
        "64"
      ]
    },
    "2140": {
      "op": "bzero",
      "defined_out": [
        "array%bzero%0#1",
        "expr_value_trimmed%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "tmp%4#0",
        "array%bzero%0#1"
      ]
    },
    "2141": {
      "op": "b|",
      "defined_out": [
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1"
      ]
    },
    "2142": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "2143": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "2144": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "2145": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "2146": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "2147": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "2148": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "2149": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "2150": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "2151": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "64"
      ]
    },
    "2153": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "2154": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "2155": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "2158": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "2159": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "2160": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2162": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "2163": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "1"
      ]
    },
    "2164": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "2165": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2166": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2168": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "2169": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%7#0",
        "1"
      ]
    },
    "2170": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0"
      ]
    },
    "2171": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%8#0",
        "arr#0 (copy)"
      ]
    },
    "2173": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2176": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%8#0"
      ]
    },
    "2177": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%8#0",
        "64"
      ]
    },
    "2179": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2180": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "64"
      ]
    },
    "2182": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "2183": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arc4_item%0#0",
        "0x"
      ]
    },
    "2184": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "2185": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2186": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "5"
      ]
    },
    "2188": {
      "callsub": "test_cases.array.immutable.add_xb",
      "op": "callsub add_xb",
      "stack_out": [
        "arr#0"
      ]
    },
    "2191": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2192": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2193": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "2194": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0",
        "6"
      ]
    },
    "2196": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0"
      ]
    },
    "2197": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2198": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2199": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2200": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "2201": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "1"
      ]
    },
    "2202": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "2203": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%13#0",
        "arr#0 (copy)"
      ]
    },
    "2205": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2208": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%13#0"
      ]
    },
    "2209": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%13#0",
        "64"
      ]
    },
    "2211": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "2212": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "64"
      ]
    },
    "2214": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%1#0"
      ]
    },
    "2215": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04",
        "arc4_item%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%1#0",
        "0x04"
      ]
    },
    "2218": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "2219": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2220": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0"
      ]
    },
    "2223": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%15#0"
      ]
    },
    "2225": {
      "op": "itob",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%16#0"
      ]
    },
    "2226": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "expr_value_trimmed%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2228": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "tmp%16#0"
      ]
    },
    "2229": {
      "op": "b-",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0"
      ]
    },
    "2230": {
      "op": "dup",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "2231": {
      "op": "len",
      "defined_out": [
        "array%value_len%1#1",
        "expr_value_trimmed%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "array%value_len%1#1"
      ]
    },
    "2232": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "array%value_len%1#1",
        "64"
      ]
    },
    "2234": {
      "op": "<=",
      "defined_out": [
        "array%len_ok%1#1",
        "expr_value_trimmed%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "array%len_ok%1#1"
      ]
    },
    "2235": {
      "error": "value is bigger than 64 bytes",
      "op": "assert // value is bigger than 64 bytes",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0"
      ]
    },
    "2236": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "64"
      ]
    },
    "2238": {
      "op": "bzero",
      "defined_out": [
        "array%bzero%1#1",
        "expr_value_trimmed%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "array%bzero%1#1"
      ]
    },
    "2239": {
      "op": "b|",
      "defined_out": [
        "array%sub_item%1#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%sub_item%1#1"
      ]
    },
    "2240": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "2241": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "2242": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%encoded%1#1"
      ]
    },
    "2243": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%encoded%1#1",
        "0x"
      ]
    },
    "2244": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "array%encoded%1#1"
      ]
    },
    "2245": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "2246": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0"
      ]
    },
    "2247": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ],
      "stack_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "2248": {
      "op": "len",
      "defined_out": [
        "byte_len%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "2249": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0",
        "64"
      ]
    },
    "2251": {
      "op": "/",
      "defined_out": [
        "concatenated%1#0",
        "len_%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "2252": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "2253": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "2256": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "2257": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "2258": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2259": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2260": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0"
      ]
    },
    "2261": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "7"
      ]
    },
    "2263": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2264": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2265": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2266": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2267": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "2268": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%20#0",
        "1"
      ]
    },
    "2269": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0"
      ]
    },
    "2270": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%21#0",
        "arr#0 (copy)"
      ]
    },
    "2272": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2275": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%21#0"
      ]
    },
    "2276": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%21#0",
        "64"
      ]
    },
    "2278": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "2279": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "64"
      ]
    },
    "2281": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "2282": {
      "op": "pushbytes 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
      "defined_out": [
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%2#0",
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe"
      ]
    },
    "2348": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "2349": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2350": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2351": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0"
      ]
    },
    "2354": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "0"
      ]
    },
    "2355": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "0",
        "64"
      ]
    },
    "2357": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "2358": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "64"
      ]
    },
    "2360": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "2361": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arc4_item%3#0",
        "0x"
      ]
    },
    "2362": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "2363": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2364": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0"
      ]
    },
    "2367": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2369": {
      "op": "len",
      "defined_out": [
        "array%value_len%2#1",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%value_len%2#1"
      ]
    },
    "2370": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%value_len%2#1",
        "64"
      ]
    },
    "2372": {
      "op": "<=",
      "defined_out": [
        "array%len_ok%2#1",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%len_ok%2#1"
      ]
    },
    "2373": {
      "error": "value is bigger than 64 bytes",
      "op": "assert // value is bigger than 64 bytes",
      "stack_out": [
        "expr_value_trimmed%2#0"
      ]
    },
    "2374": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "64"
      ]
    },
    "2376": {
      "op": "bzero",
      "defined_out": [
        "array%bzero%2#1",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%bzero%2#1"
      ]
    },
    "2377": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%bzero%2#1",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2379": {
      "op": "b|",
      "defined_out": [
        "array%sub_item%2#1",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%sub_item%2#1"
      ]
    },
    "2380": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%sub_item%2#1",
        "0x"
      ]
    },
    "2381": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "0x",
        "array%sub_item%2#1"
      ]
    },
    "2382": {
      "op": "concat",
      "defined_out": [
        "array%encoded%2#1",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%encoded%2#1"
      ]
    },
    "2383": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "array%encoded%2#1",
        "0x"
      ]
    },
    "2384": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "0x",
        "array%encoded%2#1"
      ]
    },
    "2385": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "encoded%2#0"
      ]
    },
    "2386": {
      "op": "concat",
      "defined_out": [
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0"
      ]
    },
    "2387": {
      "op": "dup",
      "defined_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ],
      "stack_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ]
    },
    "2388": {
      "op": "len",
      "defined_out": [
        "byte_len%2#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "byte_len%2#0"
      ]
    },
    "2389": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "concatenated%2#0",
        "byte_len%2#0",
        "64"
      ]
    },
    "2391": {
      "op": "/",
      "defined_out": [
        "concatenated%2#0",
        "len_%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "len_%2#0"
      ]
    },
    "2392": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "as_bytes%2#0"
      ]
    },
    "2393": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ]
    },
    "2396": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%2#0",
        "concatenated%2#0"
      ]
    },
    "2397": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "2398": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2399": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2400": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "2401": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "8"
      ]
    },
    "2402": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "2403": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2404": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2405": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2406": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0"
      ]
    },
    "2407": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%26#0",
        "1"
      ]
    },
    "2408": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%27#0"
      ]
    },
    "2409": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%27#0",
        "arr#0 (copy)"
      ]
    },
    "2411": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%27#0",
        "array_head_and_tail%4#0"
      ]
    },
    "2414": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%27#0"
      ]
    },
    "2415": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%27#0",
        "64"
      ]
    },
    "2417": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0"
      ]
    },
    "2418": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0",
        "64"
      ]
    },
    "2420": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%4#0"
      ]
    },
    "2421": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "arr#0",
        "arc4_item%4#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2423": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0"
      ]
    },
    "2424": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2425": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2426": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%5#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0"
      ]
    },
    "2429": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "0"
      ]
    },
    "2430": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "0",
        "64"
      ]
    },
    "2432": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0"
      ]
    },
    "2433": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0",
        "64"
      ]
    },
    "2435": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%5#0"
      ]
    },
    "2436": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arc4_item%5#0",
        "0x"
      ]
    },
    "2437": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%29#0"
      ]
    },
    "2438": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2439": {
      "op": "bytec 6 // 0x62696775696e74",
      "defined_out": [
        "0x62696775696e74",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "0x62696775696e74"
      ]
    },
    "2441": {
      "op": "box_del",
      "defined_out": [
        "arr#0",
        "{box_del}"
      ],
      "stack_out": [
        "arr#0",
        "{box_del}"
      ]
    },
    "2442": {
      "op": "pop",
      "stack_out": [
        "arr#0"
      ]
    },
    "2443": {
      "op": "bytec 6 // 0x62696775696e74",
      "stack_out": [
        "arr#0",
        "0x62696775696e74"
      ]
    },
    "2445": {
      "op": "swap",
      "stack_out": [
        "0x62696775696e74",
        "arr#0"
      ]
    },
    "2446": {
      "op": "box_put",
      "stack_out": []
    },
    "2447": {
      "retsub": true,
      "op": "retsub"
    },
    "2448": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2451": {
      "block": "test_bool_array_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "2452": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "2453": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2454": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "2455": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "2456": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2457": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2458": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2459": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2460": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "2461": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "2462": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2463": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2465": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2467": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2468": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2471": {
      "block": "test_bool_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2473": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "2475": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2476": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "2477": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "2478": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "2480": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%0#0"
      ]
    },
    "2481": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_bool%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%0#0",
        "0x"
      ]
    },
    "2482": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x",
        "encoded_bool%0#0"
      ]
    },
    "2483": {
      "op": "concat",
      "defined_out": [
        "data%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "data%0#0"
      ]
    },
    "2484": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "data%0#0",
        "arr#0"
      ]
    },
    "2486": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%0#0"
      ]
    },
    "2487": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "data%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%0#0",
        "1"
      ]
    },
    "2488": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "arr#0",
        "data%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%0#0",
        "1",
        "8"
      ]
    },
    "2489": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2492": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2494": {
      "block": "test_bool_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2496": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2497": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2498": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2500": {
      "op": "b test_bool_array_for_header@1"
    },
    "2503": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2505": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2506": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "2507": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0",
        "length#0 (copy)"
      ]
    },
    "2509": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "2510": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2511": {
      "op": "frame_dig -1",
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2513": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "0"
      ]
    },
    "2514": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2515": {
      "op": "bz test_bool_array_after_if_else@6",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2518": {
      "block": "test_bool_array_if_body@5",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2520": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2521": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2524": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "2525": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "arr#0",
        "0"
      ]
    },
    "2526": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ]
    },
    "2527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "0"
      ]
    },
    "2528": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "index_is_in_bounds%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "2529": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2530": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "0"
      ]
    },
    "2531": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%0#0"
      ]
    },
    "2532": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2533": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2534": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2536": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%1#0"
      ]
    },
    "2537": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "2538": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "2539": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "2540": {
      "error": "expected element 0 to be False",
      "op": "assert // expected element 0 to be False",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2541": {
      "block": "test_bool_array_after_if_else@6",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2543": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2544": {
      "op": ">",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "2545": {
      "op": "bz test_bool_array_after_if_else@8",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2548": {
      "block": "test_bool_array_if_body@7",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2550": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2551": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2554": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0"
      ]
    },
    "2555": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_head_and_tail%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0",
        "0"
      ]
    },
    "2556": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ]
    },
    "2557": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "1"
      ]
    },
    "2558": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "index_is_in_bounds%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "index_is_in_bounds%1#0"
      ]
    },
    "2559": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2560": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "1"
      ]
    },
    "2561": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%1#0"
      ]
    },
    "2562": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "2563": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "2564": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "2566": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%2#0"
      ]
    },
    "2567": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "2568": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "2569": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "2570": {
      "error": "expected element 1 to be False",
      "op": "assert // expected element 1 to be False",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2571": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2573": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "2574": {
      "op": ">",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "2575": {
      "op": "bz test_bool_array_after_if_else@10",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2578": {
      "block": "test_bool_array_if_body@9",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2580": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2581": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2584": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "arr#0"
      ]
    },
    "2585": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "arr#0",
        "0"
      ]
    },
    "2586": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ]
    },
    "2587": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "2"
      ]
    },
    "2588": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "index_is_in_bounds%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "index_is_in_bounds%2#0"
      ]
    },
    "2589": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2590": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "2"
      ]
    },
    "2591": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%2#0"
      ]
    },
    "2592": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "2593": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "2594": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "2596": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "encoded_bool%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%3#0"
      ]
    },
    "2597": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%3#0",
        "0"
      ]
    },
    "2598": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "2599": {
      "error": "expected element 2 to be True",
      "op": "assert // expected element 2 to be True",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2600": {
      "block": "test_bool_array_after_if_else@10",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2602": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "3"
      ]
    },
    "2604": {
      "op": ">",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "2605": {
      "op": "bz test_bool_array_after_if_else@12",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2608": {
      "block": "test_bool_array_if_body@11",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2610": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2611": {
      "op": "-",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "2612": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%15#0",
        "arr#0"
      ]
    },
    "2614": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%15#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2615": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%15#0",
        "arr#0",
        "array_head_and_tail%3#0"
      ]
    },
    "2618": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%15#0",
        "arr#0"
      ]
    },
    "2620": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%15#0",
        "arr#0",
        "0"
      ]
    },
    "2621": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%15#0",
        "array_length%3#0"
      ]
    },
    "2622": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%15#0",
        "tmp%15#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%15#0",
        "array_length%3#0",
        "tmp%15#0 (copy)"
      ]
    },
    "2624": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "index_is_in_bounds%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%15#0",
        "index_is_in_bounds%3#0"
      ]
    },
    "2625": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%15#0"
      ]
    },
    "2626": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%3#0"
      ]
    },
    "2627": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "is_true%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%3#0",
        "0x00"
      ]
    },
    "2628": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%3#0",
        "0x00",
        "0"
      ]
    },
    "2629": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "is_true%3#0"
      ]
    },
    "2631": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "encoded_bool%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%4#0"
      ]
    },
    "2632": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%4#0",
        "0"
      ]
    },
    "2633": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%16#0"
      ]
    },
    "2634": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "2635": {
      "error": "expected last element to be False",
      "op": "assert // expected last element to be False",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2636": {
      "block": "test_bool_array_after_if_else@12",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "pushbytes \"g\"",
      "defined_out": [
        "\"g\""
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "\"g\""
      ]
    },
    "2639": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"g\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "\"g\"",
        "arr#0"
      ]
    },
    "2641": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2642": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2644": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "0"
      ]
    },
    "2645": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "2646": {
      "op": "bz test_bool_array_after_if_else@14",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2649": {
      "block": "test_bool_array_if_body@13",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2651": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_bit",
      "op": "callsub dynamic_array_pop_bit",
      "defined_out": [
        "arr#0",
        "data%1#0",
        "popped%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "popped%0#0",
        "data%1#0"
      ]
    },
    "2654": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2656": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2657": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "2658": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%19#0",
        "length#0 (copy)"
      ]
    },
    "2660": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "length#0 (copy)",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%19#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2661": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "2662": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%21#0"
      ]
    },
    "2663": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2664": {
      "block": "test_bool_array_after_if_else@14",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2665": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "params": {},
      "block": "test_fixed_size_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2668": {
      "block": "test_fixed_size_tuple_array_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "2669": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "2670": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2671": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "2672": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "2673": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2674": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2675": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2676": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2677": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "2678": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "2679": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2680": {
      "block": "test_fixed_size_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2682": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2684": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2685": {
      "op": "bz test_fixed_size_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2688": {
      "block": "test_fixed_size_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2690": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "2693": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "2695": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2696": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2697": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2698": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "2699": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%2#0",
        "i#0",
        "2"
      ]
    },
    "2700": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2701": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "2702": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "array%sub_item%0#1"
      ]
    },
    "2703": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "2704": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "2705": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "array%encoded%0#1"
      ]
    },
    "2706": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "tmp%3#0"
      ]
    },
    "2707": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%encoded%0#1",
        "array%sub_item%1#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "array%sub_item%1#1"
      ]
    },
    "2708": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%1#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%1#1"
      ]
    },
    "2709": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%1#1",
        "0x"
      ]
    },
    "2710": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%1#1"
      ]
    },
    "2711": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "2712": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "2713": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "2714": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "2715": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "16"
      ]
    },
    "2717": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "2718": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "2719": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "2722": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "2723": {
      "op": "concat",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2724": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2726": {
      "block": "test_fixed_size_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2728": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2729": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2730": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2732": {
      "op": "b test_fixed_size_tuple_array_for_header@1"
    },
    "2735": {
      "block": "test_fixed_size_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2737": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2738": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2739": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2740": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0",
        "5"
      ]
    },
    "2742": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "2743": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2744": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2745": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2748": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "0"
      ]
    },
    "2749": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "0",
        "16"
      ]
    },
    "2751": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2752": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "16"
      ]
    },
    "2754": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "2755": {
      "op": "dup",
      "defined_out": [
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)"
      ]
    },
    "2756": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "0"
      ]
    },
    "2757": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "2758": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "item0%0#0"
      ]
    },
    "2759": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "item0%1#0"
      ]
    },
    "2760": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0"
      ]
    },
    "2761": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "8"
      ]
    },
    "2762": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "8",
        "8"
      ]
    },
    "2763": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item0%1#0",
        "item1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0"
      ]
    },
    "2764": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item0%1#0",
        "item1%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%1#0"
      ]
    },
    "2765": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%1#0",
        "item0%1#0"
      ]
    },
    "2766": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "item0%1#0",
        "item1%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%1#0",
        "item0%1#0",
        "1"
      ]
    },
    "2767": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%1#0",
        "tmp%6#0"
      ]
    },
    "2768": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%6#0",
        "item1%1#0"
      ]
    },
    "2769": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "item1%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%6#0",
        "item1%1#0",
        "2"
      ]
    },
    "2770": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2771": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "2772": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2773": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2774": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2775": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%9#0"
      ]
    },
    "2776": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%9#0",
        "1"
      ]
    },
    "2777": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "2778": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "arr#0 (copy)"
      ]
    },
    "2780": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2783": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%10#0"
      ]
    },
    "2784": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%10#0",
        "16"
      ]
    },
    "2786": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "2787": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "16"
      ]
    },
    "2789": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0"
      ]
    },
    "2790": {
      "op": "dup",
      "defined_out": [
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "2791": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "0"
      ]
    },
    "2792": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "2793": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "item0%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "item0%2#0"
      ]
    },
    "2794": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "item0%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "item0%3#0"
      ]
    },
    "2795": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3#0",
        "arc4_item%1#0"
      ]
    },
    "2796": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3#0",
        "arc4_item%1#0",
        "8"
      ]
    },
    "2797": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3#0",
        "arc4_item%1#0",
        "8",
        "8"
      ]
    },
    "2798": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item0%3#0",
        "item1%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3#0",
        "item1%2#0"
      ]
    },
    "2799": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item0%3#0",
        "item1%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3#0",
        "item1%3#0"
      ]
    },
    "2800": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3#0",
        "item0%3#0"
      ]
    },
    "2801": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3#0",
        "item0%3#0",
        "5"
      ]
    },
    "2803": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3#0",
        "tmp%11#0"
      ]
    },
    "2804": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "item1%3#0"
      ]
    },
    "2805": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "item1%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "item1%3#0",
        "6"
      ]
    },
    "2807": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2808": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0"
      ]
    },
    "2809": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2810": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "16"
      ]
    },
    "2812": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "popped%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "popped%0#0",
        "data%0#0"
      ]
    },
    "2815": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2817": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2818": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2819": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "2820": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0",
        "4"
      ]
    },
    "2822": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "2823": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2824": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2825": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2828": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0"
      ]
    },
    "2829": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0",
        "16"
      ]
    },
    "2831": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "2832": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "16"
      ]
    },
    "2834": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "2835": {
      "op": "dup",
      "defined_out": [
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "2836": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0"
      ]
    },
    "2837": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "2838": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%4#0"
      ]
    },
    "2839": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%5#0"
      ]
    },
    "2840": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0"
      ]
    },
    "2841": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "8"
      ]
    },
    "2842": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "8",
        "8"
      ]
    },
    "2843": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item0%5#0",
        "item1%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item1%4#0"
      ]
    },
    "2844": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item0%5#0",
        "item1%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item1%5#0"
      ]
    },
    "2845": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "item0%5#0"
      ]
    },
    "2846": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "item0%5#0",
        "1"
      ]
    },
    "2847": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%5#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "tmp%16#0"
      ]
    },
    "2848": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "item1%5#0"
      ]
    },
    "2849": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "item1%5#0",
        "2"
      ]
    },
    "2850": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "2851": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0"
      ]
    },
    "2852": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2853": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2854": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2855": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2856": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0",
        "1"
      ]
    },
    "2857": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0"
      ]
    },
    "2858": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0",
        "arr#0 (copy)"
      ]
    },
    "2860": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0",
        "array_head_and_tail%3#0"
      ]
    },
    "2863": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%20#0"
      ]
    },
    "2864": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%20#0",
        "16"
      ]
    },
    "2866": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "2867": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "16"
      ]
    },
    "2869": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "2870": {
      "op": "dup",
      "defined_out": [
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "2871": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0"
      ]
    },
    "2872": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "2873": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%6#0"
      ]
    },
    "2874": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%7#0"
      ]
    },
    "2875": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0"
      ]
    },
    "2876": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "8"
      ]
    },
    "2877": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "8",
        "8"
      ]
    },
    "2878": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item0%7#0",
        "item1%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item1%6#0"
      ]
    },
    "2879": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item0%7#0",
        "item1%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item1%7#0"
      ]
    },
    "2880": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "item0%7#0"
      ]
    },
    "2881": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "item0%7#0",
        "4"
      ]
    },
    "2883": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%7#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "tmp%21#0"
      ]
    },
    "2884": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "item1%7#0"
      ]
    },
    "2885": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "item1%7#0",
        "5"
      ]
    },
    "2887": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "2888": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0"
      ]
    },
    "2889": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2890": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"c\""
      ]
    },
    "2893": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"c\"",
        "arr#0"
      ]
    },
    "2894": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2895": {
      "retsub": true,
      "op": "retsub"
    },
    "2896": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "params": {},
      "block": "test_fixed_size_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2899": {
      "block": "test_fixed_size_named_tuple_array_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "2900": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "2901": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2902": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "2903": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "2904": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2905": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2906": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2907": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2908": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "2909": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "2910": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2911": {
      "block": "test_fixed_size_named_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2913": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2915": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2916": {
      "op": "bz test_fixed_size_named_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2919": {
      "block": "test_fixed_size_named_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2921": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "2924": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "2926": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2927": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2928": {
      "op": "%",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2929": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "2930": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2931": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2932": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2933": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "2935": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "2936": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0",
        "2"
      ]
    },
    "2937": {
      "op": "%",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "2938": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%5#0",
        "0"
      ]
    },
    "2939": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2940": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "i#0"
      ]
    },
    "2941": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "array%sub_item%0#1"
      ]
    },
    "2942": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "2943": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "2944": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "array%encoded%0#1"
      ]
    },
    "2945": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "array%encoded%0#1",
        "0x00"
      ]
    },
    "2946": {
      "op": "bytec 4 // 0x80",
      "defined_out": [
        "0x00",
        "0x80",
        "arr#0",
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "array%encoded%0#1",
        "0x00",
        "0x80"
      ]
    },
    "2948": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%6#0",
        "array%encoded%0#1",
        "0x00",
        "0x80",
        "tmp%3#0"
      ]
    },
    "2950": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array%encoded%0#1",
        "array%encoded_bit%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%6#0",
        "array%encoded%0#1",
        "array%encoded_bit%0#1"
      ]
    },
    "2951": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%1#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%6#0",
        "array%encoded%1#1"
      ]
    },
    "2952": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "arr#0",
        "array%encoded%1#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%6#0",
        "array%encoded%1#1",
        "65"
      ]
    },
    "2954": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%1#1",
        "65",
        "tmp%6#0"
      ]
    },
    "2956": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "array%sub_item%1#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%sub_item%1#1"
      ]
    },
    "2957": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "2958": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "2959": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "2960": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "2961": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "2962": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "2963": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "9"
      ]
    },
    "2965": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "2966": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "2967": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "2970": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "2971": {
      "op": "concat",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2972": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2974": {
      "block": "test_fixed_size_named_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2976": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2977": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2978": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2980": {
      "op": "b test_fixed_size_named_tuple_array_for_header@1"
    },
    "2983": {
      "block": "test_fixed_size_named_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2985": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2986": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2987": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "2988": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%7#0",
        "5"
      ]
    },
    "2990": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "2991": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2992": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2993": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2996": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "0"
      ]
    },
    "2997": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "9",
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "0",
        "9"
      ]
    },
    "2999": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3000": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "9"
      ]
    },
    "3002": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "3003": {
      "op": "dup",
      "defined_out": [
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)"
      ]
    },
    "3004": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "0"
      ]
    },
    "3005": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "3006": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "item0%0#0"
      ]
    },
    "3007": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "item0%1#0"
      ]
    },
    "3008": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0"
      ]
    },
    "3009": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)"
      ]
    },
    "3010": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "64"
      ]
    },
    "3012": {
      "op": "getbit",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "is_true%0#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "is_true%0#0"
      ]
    },
    "3013": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arc4_item%0#0",
        "arr#0",
        "is_true%0#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "3014": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "3015": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "3017": {
      "op": "setbit",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "encoded_bool%0#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "encoded_bool%0#0"
      ]
    },
    "3018": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3019": {
      "op": "getbit",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "arc4_item%0#0",
        "item1%0#0"
      ]
    },
    "3020": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "arc4_item%0#0"
      ]
    },
    "3021": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "arc4_item%0#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "arc4_item%0#0",
        "65"
      ]
    },
    "3023": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%1#0",
        "item0%1#0",
        "item1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "is_true%1#0"
      ]
    },
    "3024": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "3025": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "3026": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "3028": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "encoded_bool%1#0",
        "item0%1#0",
        "item1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "encoded_bool%1#0"
      ]
    },
    "3029": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "3030": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "item2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "item1%0#0",
        "item2%0#0"
      ]
    },
    "3031": {
      "op": "uncover 2",
      "defined_out": [
        "arr#0",
        "foo#0",
        "item1%0#0",
        "item2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%0#0",
        "item2%0#0",
        "foo#0"
      ]
    },
    "3033": {
      "op": "swap",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "foo#0",
        "baz#0"
      ]
    },
    "3034": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "foo#0"
      ]
    },
    "3036": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "foo#0",
        "0"
      ]
    },
    "3037": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "tmp%9#0"
      ]
    },
    "3038": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0"
      ]
    },
    "3039": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0"
      ]
    },
    "3040": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3041": {
      "op": "pushbytes \"d\"",
      "defined_out": [
        "\"d\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"d\""
      ]
    },
    "3044": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"d\"",
        "arr#0"
      ]
    },
    "3045": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3046": {
      "retsub": true,
      "op": "retsub"
    },
    "3047": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "params": {},
      "block": "test_dynamic_sized_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3050": {
      "block": "test_dynamic_sized_tuple_array_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "3051": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "3052": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "3053": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "3054": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "3055": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "3056": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3057": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3058": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "3059": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "3060": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "3061": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3062": {
      "block": "test_dynamic_sized_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3064": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3066": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3067": {
      "op": "bz test_dynamic_sized_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3070": {
      "block": "test_dynamic_sized_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3072": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3073": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3074": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3075": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3076": {
      "op": "bzero",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3077": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "3078": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "3079": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0"
      ]
    },
    "3080": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3081": {
      "op": "len",
      "defined_out": [
        "i#0",
        "length%0#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "length%0#0"
      ]
    },
    "3082": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "as_bytes%0#0"
      ]
    },
    "3083": {
      "op": "extract 6 2",
      "defined_out": [
        "i#0",
        "length_uint16%0#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "length_uint16%0#0"
      ]
    },
    "3086": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "3087": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "3088": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3089": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_value%0#0",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "3090": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "3091": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3092": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "10"
      ]
    },
    "3094": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "as_bytes%1#0"
      ]
    },
    "3095": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "offset_as_uint16%0#0"
      ]
    },
    "3098": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3099": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ]
    },
    "3100": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0"
      ]
    },
    "3101": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "2"
      ]
    },
    "3102": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "as_bytes%2#0"
      ]
    },
    "3103": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0",
        "next_item_head%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0"
      ]
    },
    "3106": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0",
        "0x"
      ]
    },
    "3107": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "0x",
        "next_item_head%0#0"
      ]
    },
    "3108": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0",
        "result%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "result%0#0"
      ]
    },
    "3109": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%0#0",
        "encoded_tuple%0#0"
      ]
    },
    "3110": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0"
      ]
    },
    "3111": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0"
      ]
    },
    "3113": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3114": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3115": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "l_count%0#0"
      ]
    },
    "3116": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "arr#0"
      ]
    },
    "3117": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "3120": {
      "op": "uncover 2",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ]
    },
    "3122": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "3123": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0",
        "l_count%0#0"
      ]
    },
    "3125": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "3126": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "3127": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "r_head_and_tail%0#0"
      ]
    },
    "3129": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3132": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3134": {
      "block": "test_dynamic_sized_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3136": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3137": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3138": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3140": {
      "op": "b test_dynamic_sized_tuple_array_for_header@1"
    },
    "3143": {
      "block": "test_dynamic_sized_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3145": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "3146": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "3147": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0",
        "5"
      ]
    },
    "3149": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "3150": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3151": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "3152": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3153": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3154": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3156": {
      "block": "test_dynamic_sized_tuple_array_for_header@5",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3158": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3160": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "3161": {
      "op": "bz test_dynamic_sized_tuple_array_after_for@8",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3164": {
      "block": "test_dynamic_sized_tuple_array_for_body@6",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3166": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3167": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3170": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "3172": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "3173": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "3175": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3176": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "3177": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "3179": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "3180": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3181": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3183": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "arr#0 (copy)"
      ]
    },
    "3185": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3186": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ]
    },
    "3187": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "3189": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "i#0 (copy)",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3190": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "next_index%0#0"
      ]
    },
    "3191": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "array_length%0#0"
      ]
    },
    "3192": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_index%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "array_length%0#0",
        "next_index%0#0 (copy)"
      ]
    },
    "3194": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "has_next%0#0"
      ]
    },
    "3195": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "3196": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "3198": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "end_of_array%0#0"
      ]
    },
    "3199": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "3201": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "2"
      ]
    },
    "3202": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "3203": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "3205": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "3206": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset%0#0"
      ]
    },
    "3207": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_item_offset%0#0",
        "end_of_array%0#0"
      ]
    },
    "3209": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "3210": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "3212": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_offset%0#0"
      ]
    },
    "3213": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3214": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3216": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "3218": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "3219": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "0"
      ]
    },
    "3220": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "0",
        "8"
      ]
    },
    "3221": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0#0"
      ]
    },
    "3222": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%1#0"
      ]
    },
    "3223": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "i#0 (copy)"
      ]
    },
    "3225": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3226": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "tmp%6#0"
      ]
    },
    "3227": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "3228": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "3229": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3230": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3233": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "3235": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3236": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0",
        "item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0"
      ]
    },
    "3237": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "i#0",
        "item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "3239": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset_offset%1#0"
      ]
    },
    "3240": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "3241": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3243": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0"
      ]
    },
    "3244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0",
        "0"
      ]
    },
    "3245": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ]
    },
    "3246": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0 (copy)"
      ]
    },
    "3248": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3249": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "next_index%1#0"
      ]
    },
    "3250": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "array_length%1#0"
      ]
    },
    "3251": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0",
        "next_index%1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "array_length%1#0",
        "next_index%1#0 (copy)"
      ]
    },
    "3253": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "has_next%1#0"
      ]
    },
    "3254": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0"
      ]
    },
    "3255": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "3257": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "end_of_array%1#0"
      ]
    },
    "3258": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_index%1#0"
      ]
    },
    "3260": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "2"
      ]
    },
    "3261": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset_offset%1#0"
      ]
    },
    "3262": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "3264": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "array_head_and_tail%1#0 (copy)",
        "next_item_offset_offset%1#0"
      ]
    },
    "3265": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset%1#0"
      ]
    },
    "3266": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_item_offset%1#0",
        "end_of_array%1#0"
      ]
    },
    "3268": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0"
      ]
    },
    "3269": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0",
        "has_next%1#0"
      ]
    },
    "3271": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_offset%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_offset%1#0"
      ]
    },
    "3272": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "end_offset%1#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3273": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "end_offset%1#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "3275": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "end_offset%1#0"
      ]
    },
    "3277": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0"
      ]
    },
    "3278": {
      "op": "dup",
      "defined_out": [
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "3279": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "8"
      ]
    },
    "3280": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0",
        "item_start_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "item_start_offset%1#0"
      ]
    },
    "3281": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0"
      ]
    },
    "3282": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "3283": {
      "op": "len",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0",
        "item_end_offset%1#0"
      ]
    },
    "3284": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "arc4_item%1#0"
      ]
    },
    "3285": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_end_offset%1#0",
        "arc4_item%1#0",
        "item_start_offset%1#0"
      ]
    },
    "3287": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "3289": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item1%2#0"
      ]
    },
    "3290": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item1%3#0"
      ]
    },
    "3293": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "3294": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "3295": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3296": {
      "block": "test_dynamic_sized_tuple_array_for_footer@7",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3298": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3299": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3300": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3302": {
      "op": "b test_dynamic_sized_tuple_array_for_header@5"
    },
    "3305": {
      "block": "test_dynamic_sized_tuple_array_after_for@8",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3307": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "popped%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "popped%0#0",
        "data%0#0"
      ]
    },
    "3310": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3312": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3313": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3314": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "3315": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "4"
      ]
    },
    "3317": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0"
      ]
    },
    "3318": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3319": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3320": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "3323": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0"
      ]
    },
    "3324": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "2",
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0",
        "2"
      ]
    },
    "3325": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0"
      ]
    },
    "3326": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_head_and_tail%2#0 (copy)",
        "item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "3328": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_head_and_tail%2#0 (copy)",
        "item_offset_offset%2#0"
      ]
    },
    "3329": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "3330": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "3332": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "arr#0 (copy)"
      ]
    },
    "3334": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3335": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ]
    },
    "3336": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "0"
      ]
    },
    "3337": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "0",
        "1"
      ]
    },
    "3338": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "next_index%2#0"
      ]
    },
    "3339": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "array_length%2#0"
      ]
    },
    "3340": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0",
        "next_index%2#0",
        "next_index%2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "array_length%2#0",
        "next_index%2#0 (copy)"
      ]
    },
    "3342": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "has_next%2#0"
      ]
    },
    "3343": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0"
      ]
    },
    "3344": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "3346": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "end_of_array%2#0"
      ]
    },
    "3347": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_index%2#0"
      ]
    },
    "3349": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "2"
      ]
    },
    "3350": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset_offset%2#0"
      ]
    },
    "3351": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset_offset%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "3353": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "array_head_and_tail%2#0 (copy)",
        "next_item_offset_offset%2#0"
      ]
    },
    "3354": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset%2#0"
      ]
    },
    "3355": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_item_offset%2#0",
        "end_of_array%2#0"
      ]
    },
    "3357": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "end_of_array%2#0",
        "next_item_offset%2#0"
      ]
    },
    "3358": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "next_item_offset%2#0",
        "has_next%2#0"
      ]
    },
    "3360": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_offset%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_offset%2#0"
      ]
    },
    "3361": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "end_offset%2#0",
        "array_head_and_tail%2#0"
      ]
    },
    "3362": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "end_offset%2#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "3364": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "end_offset%2#0"
      ]
    },
    "3366": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "3367": {
      "op": "dup",
      "defined_out": [
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "3368": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0"
      ]
    },
    "3369": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "3370": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%4#0"
      ]
    },
    "3371": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%5#0"
      ]
    },
    "3372": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0"
      ]
    },
    "3373": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "3374": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "8"
      ]
    },
    "3375": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "item_start_offset%2#0"
      ]
    },
    "3376": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0",
        "arc4_item%2#0"
      ]
    },
    "3377": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "3378": {
      "op": "len",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%5#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0",
        "arc4_item%2#0",
        "item_end_offset%2#0"
      ]
    },
    "3379": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "arc4_item%2#0"
      ]
    },
    "3380": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_end_offset%2#0",
        "arc4_item%2#0",
        "item_start_offset%2#0"
      ]
    },
    "3382": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "3384": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "item0%5#0",
        "item1%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item1%4#0"
      ]
    },
    "3385": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "item0%5#0",
        "item1%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item1%5#0"
      ]
    },
    "3388": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "item0%5#0"
      ]
    },
    "3389": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "item0%5#0",
        "1"
      ]
    },
    "3390": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%5#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "tmp%12#0"
      ]
    },
    "3391": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%5#0"
      ]
    },
    "3392": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%5#0",
        "0"
      ]
    },
    "3393": {
      "op": "bzero",
      "defined_out": [
        "arr#0",
        "item1%5#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%5#0",
        "tmp%13#0"
      ]
    },
    "3394": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "3395": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "3396": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3397": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3398": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3399": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0"
      ]
    },
    "3400": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "1"
      ]
    },
    "3401": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0"
      ]
    },
    "3402": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "arr#0 (copy)"
      ]
    },
    "3404": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "array_head_and_tail%3#0"
      ]
    },
    "3407": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0"
      ]
    },
    "3408": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "3409": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "2"
      ]
    },
    "3410": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset_offset%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "item_offset_offset%3#0"
      ]
    },
    "3411": {
      "op": "dig 2",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "item_offset_offset%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "3413": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%3#0"
      ]
    },
    "3414": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "item_offset%3#0"
      ]
    },
    "3415": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0"
      ]
    },
    "3417": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "arr#0 (copy)"
      ]
    },
    "3419": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3420": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "array_length%3#0"
      ]
    },
    "3421": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%17#0"
      ]
    },
    "3422": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%17#0",
        "1"
      ]
    },
    "3423": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "next_index%3#0"
      ]
    },
    "3424": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "array_length%3#0"
      ]
    },
    "3425": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "next_index%3#0",
        "next_index%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "array_length%3#0",
        "next_index%3#0 (copy)"
      ]
    },
    "3427": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "has_next%3#0"
      ]
    },
    "3428": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0"
      ]
    },
    "3429": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "3431": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "end_of_array%3#0"
      ]
    },
    "3432": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_index%3#0"
      ]
    },
    "3434": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "2"
      ]
    },
    "3435": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_item_offset_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset_offset%3#0"
      ]
    },
    "3436": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset_offset%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "3438": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "array_head_and_tail%3#0 (copy)",
        "next_item_offset_offset%3#0"
      ]
    },
    "3439": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset%3#0"
      ]
    },
    "3440": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_item_offset%3#0",
        "end_of_array%3#0"
      ]
    },
    "3442": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "end_of_array%3#0",
        "next_item_offset%3#0"
      ]
    },
    "3443": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "next_item_offset%3#0",
        "has_next%3#0"
      ]
    },
    "3445": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_offset%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_offset%3#0"
      ]
    },
    "3446": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "end_offset%3#0",
        "array_head_and_tail%3#0"
      ]
    },
    "3447": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "end_offset%3#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "3449": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "end_offset%3#0"
      ]
    },
    "3451": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "3452": {
      "op": "dup",
      "defined_out": [
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "3453": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0"
      ]
    },
    "3454": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "3455": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%6#0"
      ]
    },
    "3456": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%7#0"
      ]
    },
    "3457": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0"
      ]
    },
    "3458": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "3459": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "8"
      ]
    },
    "3460": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "item_start_offset%3#0"
      ]
    },
    "3461": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0",
        "arc4_item%3#0"
      ]
    },
    "3462": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "3463": {
      "op": "len",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%7#0",
        "item_end_offset%3#0",
        "item_start_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0",
        "arc4_item%3#0",
        "item_end_offset%3#0"
      ]
    },
    "3464": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0",
        "arc4_item%3#0"
      ]
    },
    "3465": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_end_offset%3#0",
        "arc4_item%3#0",
        "item_start_offset%3#0"
      ]
    },
    "3467": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0"
      ]
    },
    "3469": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "item0%7#0",
        "item1%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item1%6#0"
      ]
    },
    "3470": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "item0%7#0",
        "item1%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item1%7#0"
      ]
    },
    "3473": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "item0%7#0"
      ]
    },
    "3474": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "item0%7#0",
        "4"
      ]
    },
    "3476": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%7#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "tmp%18#0"
      ]
    },
    "3477": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0",
        "item1%7#0"
      ]
    },
    "3478": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "item1%7#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0",
        "item1%7#0",
        "3"
      ]
    },
    "3480": {
      "op": "bzero",
      "defined_out": [
        "arr#0",
        "item1%7#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0",
        "item1%7#0",
        "tmp%19#0"
      ]
    },
    "3481": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%18#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0",
        "tmp%20#0"
      ]
    },
    "3482": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0"
      ]
    },
    "3483": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3484": {
      "op": "pushbytes \"e\"",
      "defined_out": [
        "\"e\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"e\""
      ]
    },
    "3487": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"e\"",
        "arr#0"
      ]
    },
    "3488": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3489": {
      "retsub": true,
      "op": "retsub"
    },
    "3490": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "params": {},
      "block": "test_dynamic_sized_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3493": {
      "block": "test_dynamic_sized_named_tuple_array_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "3494": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "3495": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "3496": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "3497": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "3498": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "3499": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3500": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3501": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "3502": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "3503": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "3504": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3505": {
      "block": "test_dynamic_sized_named_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3507": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3509": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3510": {
      "op": "bz test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3513": {
      "block": "test_dynamic_sized_named_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3515": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3516": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3517": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3518": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3519": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3522": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "3523": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "3524": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0"
      ]
    },
    "3525": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3526": {
      "op": "len",
      "defined_out": [
        "i#0",
        "length%0#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "length%0#0"
      ]
    },
    "3527": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "as_bytes%0#0"
      ]
    },
    "3528": {
      "op": "extract 6 2",
      "defined_out": [
        "i#0",
        "length_uint16%0#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "length_uint16%0#0"
      ]
    },
    "3531": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "3532": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "3533": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3534": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_value%0#0",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "3535": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "3536": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3537": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "10"
      ]
    },
    "3539": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "as_bytes%1#0"
      ]
    },
    "3540": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "offset_as_uint16%0#0"
      ]
    },
    "3543": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3544": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ]
    },
    "3545": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0"
      ]
    },
    "3546": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "2"
      ]
    },
    "3547": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "as_bytes%2#0"
      ]
    },
    "3548": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0",
        "next_item_head%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0"
      ]
    },
    "3551": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0",
        "0x"
      ]
    },
    "3552": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "0x",
        "next_item_head%0#0"
      ]
    },
    "3553": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0",
        "result%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "result%0#0"
      ]
    },
    "3554": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%0#0",
        "encoded_tuple%0#0"
      ]
    },
    "3555": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0"
      ]
    },
    "3556": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0"
      ]
    },
    "3558": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3559": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3560": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "l_count%0#0"
      ]
    },
    "3561": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "arr#0"
      ]
    },
    "3562": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "3565": {
      "op": "uncover 2",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ]
    },
    "3567": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "3568": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0",
        "l_count%0#0"
      ]
    },
    "3570": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "3571": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "3572": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "r_head_and_tail%0#0"
      ]
    },
    "3574": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3577": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3579": {
      "block": "test_dynamic_sized_named_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3581": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3582": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3583": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3585": {
      "op": "b test_dynamic_sized_named_tuple_array_for_header@1"
    },
    "3588": {
      "block": "test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3590": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "3591": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "3592": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0",
        "5"
      ]
    },
    "3594": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "3595": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3596": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "3597": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3598": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3599": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3601": {
      "block": "test_dynamic_sized_named_tuple_array_for_header@5",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3603": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3605": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "3606": {
      "op": "bz test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3609": {
      "block": "test_dynamic_sized_named_tuple_array_for_body@6",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3611": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3612": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3615": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "3617": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "3618": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "3620": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3621": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "3622": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "3624": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "3625": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3626": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3628": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "arr#0 (copy)"
      ]
    },
    "3630": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3631": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ]
    },
    "3632": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "3634": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "i#0 (copy)",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3635": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "next_index%0#0"
      ]
    },
    "3636": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "array_length%0#0"
      ]
    },
    "3637": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_index%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "array_length%0#0",
        "next_index%0#0 (copy)"
      ]
    },
    "3639": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "has_next%0#0"
      ]
    },
    "3640": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "3641": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "3643": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "end_of_array%0#0"
      ]
    },
    "3644": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "3646": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "2"
      ]
    },
    "3647": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "3648": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "3650": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "3651": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset%0#0"
      ]
    },
    "3652": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_item_offset%0#0",
        "end_of_array%0#0"
      ]
    },
    "3654": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "3655": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "3657": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_offset%0#0"
      ]
    },
    "3658": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3659": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3661": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "3663": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "3664": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "0"
      ]
    },
    "3665": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "0",
        "8"
      ]
    },
    "3666": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0#0"
      ]
    },
    "3667": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%1#0"
      ]
    },
    "3668": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "i#0 (copy)"
      ]
    },
    "3670": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3671": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%1#0",
        "tmp%6#0"
      ]
    },
    "3672": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "3673": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "3674": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3675": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3678": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "3680": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3681": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0",
        "item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0"
      ]
    },
    "3682": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "i#0",
        "item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "3684": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset_offset%1#0"
      ]
    },
    "3685": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "3686": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3688": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0"
      ]
    },
    "3689": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0",
        "0"
      ]
    },
    "3690": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ]
    },
    "3691": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0 (copy)"
      ]
    },
    "3693": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3694": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "next_index%1#0"
      ]
    },
    "3695": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "array_length%1#0"
      ]
    },
    "3696": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0",
        "next_index%1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "array_length%1#0",
        "next_index%1#0 (copy)"
      ]
    },
    "3698": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "has_next%1#0"
      ]
    },
    "3699": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0"
      ]
    },
    "3700": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "3702": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "end_of_array%1#0"
      ]
    },
    "3703": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_index%1#0"
      ]
    },
    "3705": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "2"
      ]
    },
    "3706": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset_offset%1#0"
      ]
    },
    "3707": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "3709": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "array_head_and_tail%1#0 (copy)",
        "next_item_offset_offset%1#0"
      ]
    },
    "3710": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset%1#0"
      ]
    },
    "3711": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_item_offset%1#0",
        "end_of_array%1#0"
      ]
    },
    "3713": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0"
      ]
    },
    "3714": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0",
        "has_next%1#0"
      ]
    },
    "3716": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_offset%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_offset%1#0"
      ]
    },
    "3717": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "end_offset%1#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3718": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "end_offset%1#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "3720": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "end_offset%1#0"
      ]
    },
    "3722": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0"
      ]
    },
    "3723": {
      "op": "dup",
      "defined_out": [
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "3724": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "8"
      ]
    },
    "3725": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0",
        "item_start_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "item_start_offset%1#0"
      ]
    },
    "3726": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0"
      ]
    },
    "3727": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "3728": {
      "op": "len",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0",
        "item_end_offset%1#0"
      ]
    },
    "3729": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "arc4_item%1#0"
      ]
    },
    "3730": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_end_offset%1#0",
        "arc4_item%1#0",
        "item_start_offset%1#0"
      ]
    },
    "3732": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "3734": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item1%2#0"
      ]
    },
    "3735": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item1%3#0"
      ]
    },
    "3738": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item1%3#0",
        "i#0"
      ]
    },
    "3739": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item1%3#0",
        "tmp%8#0"
      ]
    },
    "3742": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "3743": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3744": {
      "block": "test_dynamic_sized_named_tuple_array_for_footer@7",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3746": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3747": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3748": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3750": {
      "op": "b test_dynamic_sized_named_tuple_array_for_header@5"
    },
    "3753": {
      "block": "test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3755": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "popped%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "popped%0#0",
        "data%0#0"
      ]
    },
    "3758": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3760": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3761": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3762": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "3763": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "4"
      ]
    },
    "3765": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0"
      ]
    },
    "3766": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3767": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3768": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "3771": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0"
      ]
    },
    "3772": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "2",
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0",
        "2"
      ]
    },
    "3773": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0"
      ]
    },
    "3774": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_head_and_tail%2#0 (copy)",
        "item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "3776": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_head_and_tail%2#0 (copy)",
        "item_offset_offset%2#0"
      ]
    },
    "3777": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "3778": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "3780": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "arr#0 (copy)"
      ]
    },
    "3782": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3783": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ]
    },
    "3784": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "0"
      ]
    },
    "3785": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "0",
        "1"
      ]
    },
    "3786": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "next_index%2#0"
      ]
    },
    "3787": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "array_length%2#0"
      ]
    },
    "3788": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0",
        "next_index%2#0",
        "next_index%2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "array_length%2#0",
        "next_index%2#0 (copy)"
      ]
    },
    "3790": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "has_next%2#0"
      ]
    },
    "3791": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0"
      ]
    },
    "3792": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "3794": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "end_of_array%2#0"
      ]
    },
    "3795": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_index%2#0"
      ]
    },
    "3797": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "2"
      ]
    },
    "3798": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset_offset%2#0"
      ]
    },
    "3799": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset_offset%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "3801": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "array_head_and_tail%2#0 (copy)",
        "next_item_offset_offset%2#0"
      ]
    },
    "3802": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset%2#0"
      ]
    },
    "3803": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_item_offset%2#0",
        "end_of_array%2#0"
      ]
    },
    "3805": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "end_of_array%2#0",
        "next_item_offset%2#0"
      ]
    },
    "3806": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "next_item_offset%2#0",
        "has_next%2#0"
      ]
    },
    "3808": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_offset%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_offset%2#0"
      ]
    },
    "3809": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "end_offset%2#0",
        "array_head_and_tail%2#0"
      ]
    },
    "3810": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "end_offset%2#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "3812": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "end_offset%2#0"
      ]
    },
    "3814": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "3815": {
      "op": "dup",
      "defined_out": [
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "3816": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0"
      ]
    },
    "3817": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "3818": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%4#0"
      ]
    },
    "3819": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%5#0"
      ]
    },
    "3820": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0"
      ]
    },
    "3821": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "3822": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "8"
      ]
    },
    "3823": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "item_start_offset%2#0"
      ]
    },
    "3824": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0",
        "arc4_item%2#0"
      ]
    },
    "3825": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "3826": {
      "op": "len",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%5#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0",
        "arc4_item%2#0",
        "item_end_offset%2#0"
      ]
    },
    "3827": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "arc4_item%2#0"
      ]
    },
    "3828": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item_end_offset%2#0",
        "arc4_item%2#0",
        "item_start_offset%2#0"
      ]
    },
    "3830": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "arc4_item%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "3832": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "item0%5#0",
        "item1%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item1%4#0"
      ]
    },
    "3833": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "item0%5#0",
        "item1%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%5#0",
        "item1%5#0"
      ]
    },
    "3836": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "item0%5#0"
      ]
    },
    "3837": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "item0%5#0",
        "1"
      ]
    },
    "3838": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%5#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%5#0",
        "tmp%12#0"
      ]
    },
    "3839": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%5#0"
      ]
    },
    "3840": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "arr#0",
        "item1%5#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%5#0",
        "\"\""
      ]
    },
    "3841": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "3842": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "3843": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3844": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3845": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3846": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "3847": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0",
        "1"
      ]
    },
    "3848": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0"
      ]
    },
    "3849": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "arr#0 (copy)"
      ]
    },
    "3851": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "array_head_and_tail%3#0"
      ]
    },
    "3854": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0"
      ]
    },
    "3855": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "3856": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "2"
      ]
    },
    "3857": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset_offset%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "item_offset_offset%3#0"
      ]
    },
    "3858": {
      "op": "dig 2",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "item_offset_offset%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "3860": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%3#0"
      ]
    },
    "3861": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "item_offset%3#0"
      ]
    },
    "3862": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0"
      ]
    },
    "3864": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "arr#0 (copy)"
      ]
    },
    "3866": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3867": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "array_length%3#0"
      ]
    },
    "3868": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%16#0"
      ]
    },
    "3869": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%16#0",
        "1"
      ]
    },
    "3870": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "next_index%3#0"
      ]
    },
    "3871": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "array_length%3#0"
      ]
    },
    "3872": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "next_index%3#0",
        "next_index%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "array_length%3#0",
        "next_index%3#0 (copy)"
      ]
    },
    "3874": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "has_next%3#0"
      ]
    },
    "3875": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0"
      ]
    },
    "3876": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "3878": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "end_of_array%3#0"
      ]
    },
    "3879": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_index%3#0"
      ]
    },
    "3881": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "2"
      ]
    },
    "3882": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_item_offset_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset_offset%3#0"
      ]
    },
    "3883": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset_offset%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "3885": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "array_head_and_tail%3#0 (copy)",
        "next_item_offset_offset%3#0"
      ]
    },
    "3886": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset%3#0"
      ]
    },
    "3887": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_item_offset%3#0",
        "end_of_array%3#0"
      ]
    },
    "3889": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "end_of_array%3#0",
        "next_item_offset%3#0"
      ]
    },
    "3890": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "next_item_offset%3#0",
        "has_next%3#0"
      ]
    },
    "3892": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_offset%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_offset%3#0"
      ]
    },
    "3893": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "end_offset%3#0",
        "array_head_and_tail%3#0"
      ]
    },
    "3894": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "end_offset%3#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "3896": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "end_offset%3#0"
      ]
    },
    "3898": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "3899": {
      "op": "dup",
      "defined_out": [
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "3900": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0"
      ]
    },
    "3901": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "3902": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%6#0"
      ]
    },
    "3903": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%7#0"
      ]
    },
    "3904": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0"
      ]
    },
    "3905": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "3906": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "8"
      ]
    },
    "3907": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "item_start_offset%3#0"
      ]
    },
    "3908": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0",
        "arc4_item%3#0"
      ]
    },
    "3909": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "3910": {
      "op": "len",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%7#0",
        "item_end_offset%3#0",
        "item_start_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0",
        "arc4_item%3#0",
        "item_end_offset%3#0"
      ]
    },
    "3911": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0",
        "arc4_item%3#0"
      ]
    },
    "3912": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item_end_offset%3#0",
        "arc4_item%3#0",
        "item_start_offset%3#0"
      ]
    },
    "3914": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "arc4_item%3#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0"
      ]
    },
    "3916": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "item0%7#0",
        "item1%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item1%6#0"
      ]
    },
    "3917": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "item0%7#0",
        "item1%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%7#0",
        "item1%7#0"
      ]
    },
    "3920": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "item0%7#0"
      ]
    },
    "3921": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "item0%7#0",
        "4"
      ]
    },
    "3923": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%7#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%7#0",
        "tmp%17#0"
      ]
    },
    "3924": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "item1%7#0"
      ]
    },
    "3925": {
      "op": "pushbytes \"   \"",
      "defined_out": [
        "\"   \"",
        "arr#0",
        "item1%7#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "item1%7#0",
        "\"   \""
      ]
    },
    "3930": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "3931": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0"
      ]
    },
    "3932": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3933": {
      "op": "pushbytes \"f\"",
      "defined_out": [
        "\"f\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"f\""
      ]
    },
    "3936": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"f\"",
        "arr#0"
      ]
    },
    "3937": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3938": {
      "retsub": true,
      "op": "retsub"
    },
    "3939": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "params": {
        "arr#0": "bytes"
      },
      "block": "test_implicit_conversion_log",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3942": {
      "block": "test_implicit_conversion_log_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "3944": {
      "op": "log",
      "stack_out": []
    },
    "3945": {
      "retsub": true,
      "op": "retsub"
    },
    "3946": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "params": {
        "arr#0": "bytes"
      },
      "block": "test_implicit_conversion_emit",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3949": {
      "block": "test_implicit_conversion_emit_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "3950": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "3951": {
      "op": "extract 6 2",
      "defined_out": [
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "offset_as_uint16%0#0"
      ]
    },
    "3954": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "offset_as_uint16%0#0",
        "0x"
      ]
    },
    "3955": {
      "op": "swap",
      "stack_out": [
        "0x",
        "offset_as_uint16%0#0"
      ]
    },
    "3956": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3957": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "arr#0 (copy)"
      ]
    },
    "3959": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3960": {
      "op": "pushbytes 0xfa40c053 // method \"emit_test(uint64[])\"",
      "defined_out": [
        "Method(emit_test(uint64[]))",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "Method(emit_test(uint64[]))"
      ]
    },
    "3966": {
      "op": "swap",
      "stack_out": [
        "Method(emit_test(uint64[]))",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3967": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "3968": {
      "op": "log",
      "stack_out": []
    },
    "3969": {
      "retsub": true,
      "op": "retsub"
    },
    "3970": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "params": {
        "arr_to_add#0": "uint64",
        "arr#0": "bytes"
      },
      "block": "test_nested_array",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "3973": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0"
      ]
    },
    "3974": {
      "op": "dup",
      "stack_out": [
        "extra_arr#0",
        "totals#0"
      ]
    },
    "3975": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0"
      ]
    },
    "3976": {
      "op": "dupn 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0"
      ]
    },
    "3978": {
      "block": "test_nested_array_block@0",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "1"
      ]
    },
    "3979": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0"
      ]
    },
    "3980": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "3981": {
      "block": "test_nested_array_for_header@1",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0"
      ]
    },
    "3983": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr_to_add#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0",
        "arr_to_add#0 (copy)"
      ]
    },
    "3985": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3986": {
      "op": "bz test_nested_array_after_for@8",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "3989": {
      "block": "test_nested_array_for_body@2",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0x0000"
      ]
    },
    "3990": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0x0000",
        "0x"
      ]
    },
    "3991": {
      "op": "concat",
      "defined_out": [
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extra_arr#0"
      ]
    },
    "3992": {
      "op": "frame_bury 0",
      "defined_out": [
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "3994": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "1"
      ]
    },
    "3995": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "3996": {
      "op": "intc_0 // 0",
      "defined_out": [
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0"
      ]
    },
    "3997": {
      "op": "frame_bury 4",
      "defined_out": [
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "3999": {
      "block": "test_nested_array_for_header@3",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0"
      ]
    },
    "4001": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0",
        "i#0"
      ]
    },
    "4003": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "4004": {
      "op": "bz test_nested_array_after_for@6",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4007": {
      "block": "test_nested_array_for_body@4",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extra_arr#0"
      ]
    },
    "4009": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "4012": {
      "op": "frame_dig 4",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "j#0"
      ]
    },
    "4014": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1"
      ]
    },
    "4015": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "4016": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "4017": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "4018": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "4019": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "4020": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "4021": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "4022": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "4023": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "4024": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "4025": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "extra_arr#0",
        "j#0",
        "len_%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "4026": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "4027": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "extra_arr#0",
        "j#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "4030": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "4031": {
      "op": "concat",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extra_arr#0"
      ]
    },
    "4032": {
      "op": "frame_bury 0",
      "defined_out": [
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4034": {
      "block": "test_nested_array_for_footer@5",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0"
      ]
    },
    "4036": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0",
        "1"
      ]
    },
    "4037": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0"
      ]
    },
    "4038": {
      "op": "frame_bury 4",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4040": {
      "op": "b test_nested_array_for_header@3"
    },
    "4043": {
      "block": "test_nested_array_after_for@6",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "2"
      ]
    },
    "4044": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "as_bytes%1#0"
      ]
    },
    "4045": {
      "op": "extract 6 2",
      "defined_out": [
        "next_item_head%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "next_item_head%0#0"
      ]
    },
    "4048": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "next_item_head%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "next_item_head%0#0",
        "0x"
      ]
    },
    "4049": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0x",
        "next_item_head%0#0"
      ]
    },
    "4050": {
      "op": "concat",
      "defined_out": [
        "result%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "result%0#0"
      ]
    },
    "4051": {
      "op": "frame_dig 0",
      "defined_out": [
        "extra_arr#0",
        "result%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "result%0#0",
        "extra_arr#0"
      ]
    },
    "4053": {
      "op": "concat",
      "defined_out": [
        "extra_arr#0",
        "result%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "result%1#0"
      ]
    },
    "4054": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)",
        "extra_arr#0",
        "result%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "result%1#0",
        "arr#0 (copy)"
      ]
    },
    "4056": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)",
        "extra_arr#0",
        "result%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "result%1#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4057": {
      "op": "extract_uint16",
      "defined_out": [
        "extra_arr#0",
        "l_count%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "result%1#0",
        "l_count%0#0"
      ]
    },
    "4058": {
      "op": "frame_dig -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "arr#0 (copy)"
      ]
    },
    "4060": {
      "op": "extract 2 0",
      "defined_out": [
        "extra_arr#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "4063": {
      "op": "uncover 2",
      "defined_out": [
        "extra_arr#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ]
    },
    "4065": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "l_count%0#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "4066": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0",
        "l_count%0#0"
      ]
    },
    "4068": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "4069": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "extra_arr#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "4070": {
      "op": "uncover 3",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "r_head_and_tail%0#0"
      ]
    },
    "4072": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "concat_result%1#0",
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat_result%1#0"
      ]
    },
    "4075": {
      "op": "frame_bury -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4077": {
      "block": "test_nested_array_for_footer@7",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0"
      ]
    },
    "4079": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4080": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0"
      ]
    },
    "4081": {
      "op": "frame_bury 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4083": {
      "op": "b test_nested_array_for_header@1"
    },
    "4086": {
      "block": "test_nested_array_after_for@8",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0x0000"
      ]
    },
    "4087": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0x0000",
        "0x"
      ]
    },
    "4088": {
      "op": "concat",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "totals#0"
      ]
    },
    "4089": {
      "op": "frame_bury 1",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4091": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "4093": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4094": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_length%0#0"
      ]
    },
    "4095": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4097": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4098": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4100": {
      "block": "test_nested_array_for_header@9",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4102": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "4104": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "continue_looping%2#0"
      ]
    },
    "4105": {
      "op": "bz test_nested_array_after_for@12",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4108": {
      "block": "test_nested_array_for_body@10",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "4110": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "4113": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4115": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "2"
      ]
    },
    "4116": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "4117": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_index_internal%0#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "4119": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "4120": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "4121": {
      "op": "dup2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_index_internal%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "4122": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0"
      ]
    },
    "4123": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_length%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length%0#0",
        "8"
      ]
    },
    "4124": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_length_in_bytes%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length_in_bytes%0#0"
      ]
    },
    "4125": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_length_in_bytes%0#0",
        "2"
      ]
    },
    "4126": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_head_tail_length%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "4127": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "4129": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_head_tail_length%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "4131": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "item_head_tail_length%0#0"
      ]
    },
    "4133": {
      "op": "extract3",
      "defined_out": [
        "inner_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "inner_arr#0"
      ]
    },
    "4134": {
      "op": "frame_dig 1",
      "defined_out": [
        "inner_arr#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "inner_arr#0",
        "totals#0"
      ]
    },
    "4136": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "inner_arr#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "4139": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "inner_arr#0"
      ]
    },
    "4140": {
      "callsub": "test_cases.array.immutable.sum_arr",
      "op": "callsub sum_arr",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%0#0"
      ]
    },
    "4143": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%1#1",
        "expr_value_trimmed%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%sub_item%1#1"
      ]
    },
    "4144": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array%sub_item%1#1",
        "expr_value_trimmed%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "4145": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "4146": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1",
        "expr_value_trimmed%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%encoded%1#1"
      ]
    },
    "4147": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%encoded%1#1",
        "0x"
      ]
    },
    "4148": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "0x",
        "array%encoded%1#1"
      ]
    },
    "4149": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "expr_value_trimmed%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "4150": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%1#0"
      ]
    },
    "4151": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "4152": {
      "op": "len",
      "defined_out": [
        "byte_len%1#0",
        "concatenated%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "4153": {
      "op": "intc_3 // 8",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%1#0",
        "8"
      ]
    },
    "4154": {
      "op": "/",
      "defined_out": [
        "concatenated%1#0",
        "item_index_internal%0#0",
        "len_%1#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "4155": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concatenated%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%1#0",
        "as_bytes%2#0"
      ]
    },
    "4156": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "item_index_internal%0#0",
        "len_16_bit%1#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "4159": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "4160": {
      "op": "concat",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "totals#0"
      ]
    },
    "4161": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4163": {
      "block": "test_nested_array_for_footer@11",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4165": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4166": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4167": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4169": {
      "op": "b test_nested_array_for_header@9"
    },
    "4172": {
      "block": "test_nested_array_after_for@12",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "totals#0"
      ]
    },
    "4174": {
      "op": "frame_bury 0"
    },
    "4176": {
      "retsub": true,
      "op": "retsub"
    },
    "4177": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "params": {},
      "block": "test_bit_packed_tuples",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4180": {
      "block": "test_bit_packed_tuples_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "4181": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "4182": {
      "op": "concat",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0"
      ]
    },
    "4183": {
      "op": "dup",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0"
      ]
    },
    "4184": {
      "op": "bytec_2 // 0x0000",
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "0x0000"
      ]
    },
    "4185": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "0x0000",
        "0x"
      ]
    },
    "4186": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "4187": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ]
    },
    "4188": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "4190": {
      "op": "cover 2",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "4192": {
      "op": "bytec_2 // 0x0000",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "0x0000"
      ]
    },
    "4193": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "0x0000",
        "0x"
      ]
    },
    "4194": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "arr8#0"
      ]
    },
    "4195": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "arr8#0",
        "arr8#0 (copy)"
      ]
    },
    "4196": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr8#0"
      ]
    },
    "4198": {
      "op": "cover 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "4200": {
      "op": "bytec_2 // 0x0000",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0x0000"
      ]
    },
    "4201": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0x0000",
        "0x"
      ]
    },
    "4202": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0"
      ]
    },
    "4203": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0",
        "arr9#0 (copy)"
      ]
    },
    "4204": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0"
      ]
    },
    "4206": {
      "op": "cover 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "4208": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0"
      ]
    },
    "4209": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%0#0"
      ]
    },
    "4210": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%0#0",
        "0"
      ]
    },
    "4211": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%1#0"
      ]
    },
    "4212": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0"
      ]
    },
    "4213": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "0"
      ]
    },
    "4214": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%2#0"
      ]
    },
    "4215": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%2#0",
        "0"
      ]
    },
    "4216": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%3#0"
      ]
    },
    "4217": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0"
      ]
    },
    "4218": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "0"
      ]
    },
    "4219": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%4#0"
      ]
    },
    "4220": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%4#0",
        "0"
      ]
    },
    "4221": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%5#0"
      ]
    },
    "4222": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0"
      ]
    },
    "4223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "0"
      ]
    },
    "4224": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0"
      ]
    },
    "4225": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0",
        "0"
      ]
    },
    "4226": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%7#0"
      ]
    },
    "4227": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "4228": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "1"
      ]
    },
    "4229": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "4230": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "4231": {
      "block": "test_bit_packed_tuples_for_header@1",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "4233": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "4235": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4236": {
      "op": "bz test_bit_packed_tuples_after_for@4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "4239": {
      "block": "test_bit_packed_tuples_for_body@2",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "4241": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "4244": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "4246": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4247": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "4248": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "4249": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0"
      ]
    },
    "4250": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4251": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4252": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "4253": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0"
      ]
    },
    "4254": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0",
        "0x00"
      ]
    },
    "4255": {
      "op": "bytec 4 // 0x80",
      "defined_out": [
        "0x00",
        "0x80",
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0",
        "0x00",
        "0x80"
      ]
    },
    "4257": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "0x00",
        "0x80",
        "tmp%8#0"
      ]
    },
    "4259": {
      "op": "select",
      "defined_out": [
        "arr2#0",
        "array%encoded_bit%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array%encoded_bit%0#1"
      ]
    },
    "4260": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr2#0",
        "array%encoded_bit%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array%encoded_bit%0#1",
        "0x"
      ]
    },
    "4261": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "0x",
        "array%encoded_bit%0#1"
      ]
    },
    "4262": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array%encoded%0#1"
      ]
    },
    "4263": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array%encoded%0#1",
        "1"
      ]
    },
    "4264": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1",
        "1",
        "tmp%9#0"
      ]
    },
    "4266": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%sub_item%0#1"
      ]
    },
    "4267": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "4268": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "4269": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded%0#0"
      ]
    },
    "4270": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "4272": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "4273": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "4274": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "4275": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "4276": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "4277": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "4280": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "4281": {
      "op": "concat",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0"
      ]
    },
    "4282": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "4284": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr7#0"
      ]
    },
    "4286": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "4289": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ]
    },
    "4290": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4291": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "4292": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "4293": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "4294": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4295": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4296": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%10#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "4297": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "4299": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4300": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4301": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "4302": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "4304": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4305": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "4307": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "4308": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "4310": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4311": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "4313": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "4314": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "4316": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4317": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "4319": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "4320": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "4322": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4323": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "4325": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%16#0"
      ]
    },
    "4326": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "4328": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4329": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4330": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "4331": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "4333": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4334": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%sub_item%1#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "array%sub_item%1#1"
      ]
    },
    "4335": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "4336": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "4337": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%encoded%1#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "array%encoded%1#1"
      ]
    },
    "4338": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "array%encoded%1#1",
        "0x00"
      ]
    },
    "4339": {
      "op": "bytec 4 // 0x80",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "array%encoded%1#1",
        "0x00",
        "0x80"
      ]
    },
    "4341": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "array%encoded%1#1",
        "0x00",
        "0x80",
        "tmp%10#0"
      ]
    },
    "4343": {
      "op": "select",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%encoded%1#1",
        "array%encoded_bit%1#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "array%encoded%1#1",
        "array%encoded_bit%1#1"
      ]
    },
    "4344": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%encoded%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "array%encoded%2#1"
      ]
    },
    "4345": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "arr2#0",
        "arr7#0",
        "array%encoded%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "array%encoded%2#1",
        "65"
      ]
    },
    "4347": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "array%encoded%2#1",
        "65",
        "tmp%11#0"
      ]
    },
    "4349": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%sub_item%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "array%sub_item%2#1"
      ]
    },
    "4350": {
      "op": "pushint 66 // 66",
      "defined_out": [
        "66",
        "arr2#0",
        "arr7#0",
        "array%sub_item%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "array%sub_item%2#1",
        "66"
      ]
    },
    "4352": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "array%sub_item%2#1",
        "66",
        "tmp%12#0"
      ]
    },
    "4354": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%sub_item%3#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "array%sub_item%3#1"
      ]
    },
    "4355": {
      "op": "pushint 67 // 67",
      "defined_out": [
        "67",
        "arr2#0",
        "arr7#0",
        "array%sub_item%3#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "array%sub_item%3#1",
        "67"
      ]
    },
    "4357": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "array%sub_item%3#1",
        "67",
        "tmp%13#0"
      ]
    },
    "4359": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%sub_item%4#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "array%sub_item%4#1"
      ]
    },
    "4360": {
      "op": "pushint 68 // 68",
      "defined_out": [
        "68",
        "arr2#0",
        "arr7#0",
        "array%sub_item%4#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "array%sub_item%4#1",
        "68"
      ]
    },
    "4362": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "i#0",
        "array%sub_item%4#1",
        "68",
        "tmp%14#0"
      ]
    },
    "4364": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%sub_item%5#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "i#0",
        "array%sub_item%5#1"
      ]
    },
    "4365": {
      "op": "pushint 69 // 69",
      "defined_out": [
        "69",
        "arr2#0",
        "arr7#0",
        "array%sub_item%5#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "i#0",
        "array%sub_item%5#1",
        "69"
      ]
    },
    "4367": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0",
        "array%sub_item%5#1",
        "69",
        "tmp%15#0"
      ]
    },
    "4369": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%sub_item%6#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0",
        "array%sub_item%6#1"
      ]
    },
    "4370": {
      "op": "pushint 70 // 70",
      "defined_out": [
        "70",
        "arr2#0",
        "arr7#0",
        "array%sub_item%6#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0",
        "array%sub_item%6#1",
        "70"
      ]
    },
    "4372": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "i#0",
        "array%sub_item%6#1",
        "70",
        "tmp%16#0"
      ]
    },
    "4374": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%sub_item%7#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "i#0",
        "array%sub_item%7#1"
      ]
    },
    "4375": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "array%sub_item%7#1",
        "tmp%17#0"
      ]
    },
    "4377": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%sub_item%7#1",
        "array%sub_item%8#1",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "array%sub_item%7#1",
        "array%sub_item%8#1"
      ]
    },
    "4378": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "array%encoded%3#1",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "array%encoded%3#1"
      ]
    },
    "4379": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "array%encoded%3#1",
        "0x"
      ]
    },
    "4380": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "0x",
        "array%encoded%3#1"
      ]
    },
    "4381": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "encoded%1#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "encoded%1#0"
      ]
    },
    "4382": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "encoded%1#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "4384": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "4385": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0"
      ]
    },
    "4386": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "4387": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "byte_len%0#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%0#0"
      ]
    },
    "4388": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "arr2#0",
        "arr7#0",
        "byte_len%0#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%0#0",
        "17"
      ]
    },
    "4390": {
      "op": "/",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concatenated%1#0",
        "i#0",
        "len_%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "4391": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "as_bytes%1#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "4392": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concatenated%1#0",
        "i#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "4395": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "4396": {
      "op": "concat",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr7#0"
      ]
    },
    "4397": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "4399": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr8#0"
      ]
    },
    "4401": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%2#0"
      ]
    },
    "4404": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0"
      ]
    },
    "4405": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4406": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "4407": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "4408": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4409": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4410": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4411": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%18#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "4412": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4414": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4415": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4416": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%20#0"
      ]
    },
    "4417": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4419": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4420": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "4422": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%21#0"
      ]
    },
    "4423": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4425": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4426": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "4428": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%22#0"
      ]
    },
    "4429": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4431": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4432": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "4434": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%23#0"
      ]
    },
    "4435": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4437": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4438": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "4440": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%24#0"
      ]
    },
    "4441": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4443": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4444": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "4446": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%25#0"
      ]
    },
    "4447": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4449": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4450": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4451": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%26#0"
      ]
    },
    "4452": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "4454": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4455": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%9#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "array%sub_item%9#1"
      ]
    },
    "4456": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "array%sub_item%9#1",
        "0x"
      ]
    },
    "4457": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "0x",
        "array%sub_item%9#1"
      ]
    },
    "4458": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%encoded%4#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "array%encoded%4#1"
      ]
    },
    "4459": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "array%encoded%4#1",
        "0x00"
      ]
    },
    "4460": {
      "op": "bytec 4 // 0x80",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "array%encoded%4#1",
        "0x00",
        "0x80"
      ]
    },
    "4462": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "i#0",
        "array%encoded%4#1",
        "0x00",
        "0x80",
        "tmp%18#0"
      ]
    },
    "4464": {
      "op": "select",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%encoded%4#1",
        "array%encoded_bit%2#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "i#0",
        "array%encoded%4#1",
        "array%encoded_bit%2#1"
      ]
    },
    "4465": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%encoded%5#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "i#0",
        "array%encoded%5#1"
      ]
    },
    "4466": {
      "op": "pushint 65 // 65",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "i#0",
        "array%encoded%5#1",
        "65"
      ]
    },
    "4468": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "array%encoded%5#1",
        "65",
        "tmp%19#0"
      ]
    },
    "4470": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%10#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "array%sub_item%10#1"
      ]
    },
    "4471": {
      "op": "pushint 66 // 66",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "array%sub_item%10#1",
        "66"
      ]
    },
    "4473": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "array%sub_item%10#1",
        "66",
        "tmp%20#0"
      ]
    },
    "4475": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%11#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "array%sub_item%11#1"
      ]
    },
    "4476": {
      "op": "pushint 67 // 67",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "array%sub_item%11#1",
        "67"
      ]
    },
    "4478": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "array%sub_item%11#1",
        "67",
        "tmp%21#0"
      ]
    },
    "4480": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%12#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "array%sub_item%12#1"
      ]
    },
    "4481": {
      "op": "pushint 68 // 68",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "array%sub_item%12#1",
        "68"
      ]
    },
    "4483": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "array%sub_item%12#1",
        "68",
        "tmp%22#0"
      ]
    },
    "4485": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%13#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "array%sub_item%13#1"
      ]
    },
    "4486": {
      "op": "pushint 69 // 69",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "array%sub_item%13#1",
        "69"
      ]
    },
    "4488": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "i#0",
        "array%sub_item%13#1",
        "69",
        "tmp%23#0"
      ]
    },
    "4490": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%14#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "i#0",
        "array%sub_item%14#1"
      ]
    },
    "4491": {
      "op": "pushint 70 // 70",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "i#0",
        "array%sub_item%14#1",
        "70"
      ]
    },
    "4493": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "i#0",
        "array%sub_item%14#1",
        "70",
        "tmp%24#0"
      ]
    },
    "4495": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%15#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "i#0",
        "array%sub_item%15#1"
      ]
    },
    "4496": {
      "op": "pushint 71 // 71",
      "defined_out": [
        "71",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%15#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "i#0",
        "array%sub_item%15#1",
        "71"
      ]
    },
    "4498": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%26#0",
        "i#0",
        "array%sub_item%15#1",
        "71",
        "tmp%25#0"
      ]
    },
    "4500": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%16#1",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%26#0",
        "i#0",
        "array%sub_item%16#1"
      ]
    },
    "4501": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "array%sub_item%16#1",
        "tmp%26#0"
      ]
    },
    "4503": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%sub_item%16#1",
        "array%sub_item%17#1",
        "expr_value_trimmed%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "array%sub_item%16#1",
        "array%sub_item%17#1"
      ]
    },
    "4504": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "array%encoded%6#1",
        "expr_value_trimmed%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "array%encoded%6#1"
      ]
    },
    "4505": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "array%encoded%6#1",
        "0x"
      ]
    },
    "4506": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "0x",
        "array%encoded%6#1"
      ]
    },
    "4507": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "encoded%2#0",
        "expr_value_trimmed%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "encoded%2#0"
      ]
    },
    "4508": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "encoded%2#0",
        "expr_value_trimmed%2#0"
      ]
    },
    "4510": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "encoded%2#0"
      ]
    },
    "4511": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concatenated%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0"
      ]
    },
    "4512": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concatenated%2#0",
        "concatenated%2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ]
    },
    "4513": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "byte_len%1#0",
        "concatenated%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "byte_len%1#0"
      ]
    },
    "4514": {
      "op": "pushint 17 // 17",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "byte_len%1#0",
        "17"
      ]
    },
    "4516": {
      "op": "/",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concatenated%2#0",
        "i#0",
        "len_%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "len_%2#0"
      ]
    },
    "4517": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_bytes%2#0",
        "concatenated%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "as_bytes%2#0"
      ]
    },
    "4518": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concatenated%2#0",
        "i#0",
        "len_16_bit%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "len_16_bit%2#0"
      ]
    },
    "4521": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "len_16_bit%2#0",
        "concatenated%2#0"
      ]
    },
    "4522": {
      "op": "concat",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr8#0"
      ]
    },
    "4523": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "4525": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr9#0"
      ]
    },
    "4527": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%3#0"
      ]
    },
    "4530": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "i#0"
      ]
    },
    "4531": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4532": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "4533": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0"
      ]
    },
    "4534": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4535": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4536": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4537": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%27#0",
        "i#0",
        "tmp%28#0"
      ]
    },
    "4538": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4540": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4541": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4542": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%29#0"
      ]
    },
    "4543": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4545": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4546": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "4548": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%30#0"
      ]
    },
    "4549": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4551": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4552": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "4554": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%31#0"
      ]
    },
    "4555": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4557": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4558": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "4560": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%32#0"
      ]
    },
    "4561": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4563": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4564": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "4566": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%33#0"
      ]
    },
    "4567": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4569": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4570": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "4572": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%34#0"
      ]
    },
    "4573": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4575": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4576": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "8"
      ]
    },
    "4577": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%35#0"
      ]
    },
    "4578": {
      "op": "cover 9",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4580": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4581": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4582": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%36#0"
      ]
    },
    "4583": {
      "op": "cover 10",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "4585": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%18#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "array%sub_item%18#1"
      ]
    },
    "4586": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "array%sub_item%18#1",
        "0x"
      ]
    },
    "4587": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "0x",
        "array%sub_item%18#1"
      ]
    },
    "4588": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%encoded%7#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "array%encoded%7#1"
      ]
    },
    "4589": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "array%encoded%7#1",
        "0x00"
      ]
    },
    "4590": {
      "op": "bytec 4 // 0x80",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "array%encoded%7#1",
        "0x00",
        "0x80"
      ]
    },
    "4592": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "array%encoded%7#1",
        "0x00",
        "0x80",
        "tmp%27#0"
      ]
    },
    "4594": {
      "op": "select",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%encoded%7#1",
        "array%encoded_bit%3#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "array%encoded%7#1",
        "array%encoded_bit%3#1"
      ]
    },
    "4595": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%encoded%8#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "array%encoded%8#1"
      ]
    },
    "4596": {
      "op": "pushint 65 // 65",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "array%encoded%8#1",
        "65"
      ]
    },
    "4598": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "array%encoded%8#1",
        "65",
        "tmp%28#0"
      ]
    },
    "4600": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%19#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "array%sub_item%19#1"
      ]
    },
    "4601": {
      "op": "pushint 66 // 66",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "array%sub_item%19#1",
        "66"
      ]
    },
    "4603": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "array%sub_item%19#1",
        "66",
        "tmp%29#0"
      ]
    },
    "4605": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%20#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "array%sub_item%20#1"
      ]
    },
    "4606": {
      "op": "pushint 67 // 67",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "array%sub_item%20#1",
        "67"
      ]
    },
    "4608": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "array%sub_item%20#1",
        "67",
        "tmp%30#0"
      ]
    },
    "4610": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%21#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "array%sub_item%21#1"
      ]
    },
    "4611": {
      "op": "pushint 68 // 68",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "array%sub_item%21#1",
        "68"
      ]
    },
    "4613": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "array%sub_item%21#1",
        "68",
        "tmp%31#0"
      ]
    },
    "4615": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%22#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "array%sub_item%22#1"
      ]
    },
    "4616": {
      "op": "pushint 69 // 69",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "array%sub_item%22#1",
        "69"
      ]
    },
    "4618": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "array%sub_item%22#1",
        "69",
        "tmp%32#0"
      ]
    },
    "4620": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%23#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "array%sub_item%23#1"
      ]
    },
    "4621": {
      "op": "pushint 70 // 70",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "array%sub_item%23#1",
        "70"
      ]
    },
    "4623": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "array%sub_item%23#1",
        "70",
        "tmp%33#0"
      ]
    },
    "4625": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%24#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "array%sub_item%24#1"
      ]
    },
    "4626": {
      "op": "pushint 71 // 71",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "array%sub_item%24#1",
        "71"
      ]
    },
    "4628": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "array%sub_item%24#1",
        "71",
        "tmp%34#0"
      ]
    },
    "4630": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%25#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "array%sub_item%25#1"
      ]
    },
    "4631": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "array%sub_item%25#1",
        "0x00"
      ]
    },
    "4632": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "array%sub_item%25#1",
        "0x00",
        "0"
      ]
    },
    "4633": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "array%sub_item%25#1",
        "0x00",
        "0",
        "tmp%35#0"
      ]
    },
    "4635": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%sub_item%25#1",
        "array%sub_item%26#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "array%sub_item%25#1",
        "array%sub_item%26#1"
      ]
    },
    "4636": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%encoded%9#1",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "array%encoded%9#1"
      ]
    },
    "4637": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "array%encoded%9#1",
        "tmp%36#0"
      ]
    },
    "4638": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%encoded%9#1",
        "array%sub_item%27#1",
        "expr_value_trimmed%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "array%encoded%9#1",
        "array%sub_item%27#1"
      ]
    },
    "4639": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "array%encoded%10#1",
        "expr_value_trimmed%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "array%encoded%10#1"
      ]
    },
    "4640": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "array%encoded%10#1",
        "0x"
      ]
    },
    "4641": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "0x",
        "array%encoded%10#1"
      ]
    },
    "4642": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "encoded%3#0",
        "expr_value_trimmed%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "encoded%3#0"
      ]
    },
    "4643": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concatenated%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0"
      ]
    },
    "4644": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concatenated%3#0",
        "concatenated%3#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "concatenated%3#0 (copy)"
      ]
    },
    "4645": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "byte_len%2#0",
        "concatenated%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "byte_len%2#0"
      ]
    },
    "4646": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "byte_len%2#0",
        "concatenated%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "byte_len%2#0",
        "18"
      ]
    },
    "4648": {
      "op": "/",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concatenated%3#0",
        "i#0",
        "len_%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "len_%3#0"
      ]
    },
    "4649": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_bytes%3#0",
        "concatenated%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "as_bytes%3#0"
      ]
    },
    "4650": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concatenated%3#0",
        "i#0",
        "len_16_bit%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "len_16_bit%3#0"
      ]
    },
    "4653": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "len_16_bit%3#0",
        "concatenated%3#0"
      ]
    },
    "4654": {
      "op": "concat",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0"
      ]
    },
    "4655": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "4657": {
      "block": "test_bit_packed_tuples_for_footer@3",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "4659": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4660": {
      "op": "+",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "4661": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "4663": {
      "op": "b test_bit_packed_tuples_for_header@1"
    },
    "4666": {
      "block": "test_bit_packed_tuples_after_for@4",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "4668": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "4669": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "4670": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%37#0"
      ]
    },
    "4671": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr2#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%37#0",
        "5"
      ]
    },
    "4673": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%38#0"
      ]
    },
    "4674": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "4675": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "4677": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ]
    },
    "4678": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "0"
      ]
    },
    "4679": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%39#0"
      ]
    },
    "4680": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%39#0",
        "5"
      ]
    },
    "4682": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%40#0"
      ]
    },
    "4683": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "4684": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "4686": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ]
    },
    "4687": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "0"
      ]
    },
    "4688": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%41#0"
      ]
    },
    "4689": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%41#0",
        "5"
      ]
    },
    "4691": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%42#0"
      ]
    },
    "4692": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "4693": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "4695": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ]
    },
    "4696": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "0"
      ]
    },
    "4697": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%43#0"
      ]
    },
    "4698": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%43#0",
        "5"
      ]
    },
    "4700": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%44#0"
      ]
    },
    "4701": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "4702": {
      "op": "pushbytes \"bool2\"",
      "defined_out": [
        "\"bool2\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\""
      ]
    },
    "4709": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\"",
        "arr2#0"
      ]
    },
    "4711": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "4712": {
      "op": "pushbytes \"bool7\"",
      "defined_out": [
        "\"bool7\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\""
      ]
    },
    "4719": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\"",
        "arr7#0"
      ]
    },
    "4721": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "4722": {
      "op": "pushbytes \"bool8\"",
      "defined_out": [
        "\"bool8\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool8\""
      ]
    },
    "4729": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool8\"",
        "arr8#0"
      ]
    },
    "4731": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0"
      ]
    },
    "4732": {
      "op": "pushbytes \"bool9\"",
      "defined_out": [
        "\"bool9\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool9\""
      ]
    },
    "4739": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "\"bool9\"",
        "arr9#0"
      ]
    },
    "4740": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "4741": {
      "retsub": true,
      "op": "retsub"
    },
    "4742": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "params": {
        "arr1#0": "bytes",
        "arr2#0": "bytes",
        "arr3#0": "bytes",
        "arr4#0": "bytes"
      },
      "block": "sum_uints_and_lengths_and_trues",
      "stack_in": [],
      "op": "proto 4 4"
    },
    "4745": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0"
      ]
    },
    "4746": {
      "op": "dupn 8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0"
      ]
    },
    "4748": {
      "block": "sum_uints_and_lengths_and_trues_block@0",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0"
      ]
    },
    "4749": {
      "op": "dupn 3",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0"
      ]
    },
    "4751": {
      "op": "frame_dig -4",
      "defined_out": [
        "arr1#0 (copy)",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "arr1#0 (copy)"
      ]
    },
    "4753": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "arr1#0 (copy)",
        "0"
      ]
    },
    "4754": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0"
      ]
    },
    "4755": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4756": {
      "block": "sum_uints_and_lengths_and_trues_for_header@1",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4758": {
      "op": "frame_dig 13",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "4760": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "4761": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@4",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4764": {
      "block": "sum_uints_and_lengths_and_trues_for_body@2",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr1#0 (copy)"
      ]
    },
    "4766": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "4769": {
      "op": "frame_dig 14",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4771": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "4772": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "4773": {
      "op": "intc_3 // 8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "4774": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_index_internal%0#0",
        "value_at_index%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%0#0"
      ]
    },
    "4775": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "4776": {
      "op": "frame_dig 12",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0",
        "sum1#0"
      ]
    },
    "4778": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ]
    },
    "4779": {
      "op": "frame_bury 12",
      "defined_out": [
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4781": {
      "block": "sum_uints_and_lengths_and_trues_for_footer@3",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4783": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4784": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4785": {
      "op": "frame_bury 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4787": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@1"
    },
    "4790": {
      "block": "sum_uints_and_lengths_and_trues_after_for@4",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)"
      ]
    },
    "4792": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "4793": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_length%1#0"
      ]
    },
    "4794": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_length%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4796": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "4797": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4799": {
      "block": "sum_uints_and_lengths_and_trues_for_header@5",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "4801": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "array_length%1#0"
      ]
    },
    "4803": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "4804": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@10",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4807": {
      "block": "sum_uints_and_lengths_and_trues_for_body@6",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)"
      ]
    },
    "4809": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0"
      ]
    },
    "4812": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_index_internal%1#0"
      ]
    },
    "4814": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "is_true%0#0"
      ]
    },
    "4815": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "4816": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "is_true%0#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "4817": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "4819": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "encoded_bool%0#0"
      ]
    },
    "4820": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "4821": {
      "op": "getbit",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "4822": {
      "op": "frame_dig 11",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0",
        "sum2#10"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0",
        "sum2#10"
      ]
    },
    "4824": {
      "op": "frame_bury 6",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0",
        "sum2#10"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "4826": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4829": {
      "block": "sum_uints_and_lengths_and_trues_if_body@7",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0"
      ]
    },
    "4831": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0",
        "1"
      ]
    },
    "4832": {
      "op": "+",
      "defined_out": [
        "sum2#0",
        "sum2#10"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#10"
      ]
    },
    "4833": {
      "op": "frame_bury 6",
      "defined_out": [
        "sum2#0",
        "sum2#10"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4835": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@8",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0"
      ]
    },
    "4837": {
      "op": "frame_bury 11",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4839": {
      "block": "sum_uints_and_lengths_and_trues_for_footer@9",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "4841": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "4842": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "4843": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4845": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@5"
    },
    "4848": {
      "block": "sum_uints_and_lengths_and_trues_after_for@10",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)"
      ]
    },
    "4850": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)",
        "0"
      ]
    },
    "4851": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_length%2#0"
      ]
    },
    "4852": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4854": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "4855": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4857": {
      "block": "sum_uints_and_lengths_and_trues_for_header@11",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "4859": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0",
        "array_length%2#0"
      ]
    },
    "4861": {
      "op": "<",
      "defined_out": [
        "array_length%2#0",
        "continue_looping%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%2#0"
      ]
    },
    "4862": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@18",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4865": {
      "block": "sum_uints_and_lengths_and_trues_for_body@12",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)"
      ]
    },
    "4867": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%2#0"
      ]
    },
    "4870": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%2#0",
        "item_index_internal%2#0"
      ]
    },
    "4872": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "array_head_and_tail%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%2#0",
        "item_index_internal%2#0",
        "9"
      ]
    },
    "4874": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%2#0",
        "item_index_internal%2#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%2#0",
        "item_offset%1#0"
      ]
    },
    "4875": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%2#0",
        "item_offset%1#0",
        "9"
      ]
    },
    "4877": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_index_internal%2#0",
        "value_at_index%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%1#0"
      ]
    },
    "4878": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%2#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)"
      ]
    },
    "4879": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "item_index_internal%2#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)",
        "0"
      ]
    },
    "4880": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "item_index_internal%2#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "4881": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "item_index_internal%2#0",
        "value_at_index%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%1#0",
        "item0%0#0"
      ]
    },
    "4882": {
      "op": "btoi",
      "defined_out": [
        "item0%1#0",
        "item_index_internal%2#0",
        "value_at_index%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%1#0",
        "item0%1#0"
      ]
    },
    "4883": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0"
      ]
    },
    "4884": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)"
      ]
    },
    "4885": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "item0%1#0",
        "item_index_internal%2#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "value_at_index%1#0 (copy)",
        "64"
      ]
    },
    "4887": {
      "op": "getbit",
      "defined_out": [
        "is_true%1#0",
        "item0%1#0",
        "item_index_internal%2#0",
        "value_at_index%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "is_true%1#0"
      ]
    },
    "4888": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%1#0",
        "item0%1#0",
        "item_index_internal%2#0",
        "value_at_index%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "4889": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "4890": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "4892": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0",
        "item0%1#0",
        "item_index_internal%2#0",
        "value_at_index%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "encoded_bool%1#0"
      ]
    },
    "4893": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "4894": {
      "op": "getbit",
      "defined_out": [
        "item0%1#0",
        "item1%0#0",
        "item_index_internal%2#0",
        "value_at_index%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "value_at_index%1#0",
        "item1%0#0"
      ]
    },
    "4895": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "value_at_index%1#0"
      ]
    },
    "4896": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "item0%1#0",
        "item1%0#0",
        "item_index_internal%2#0",
        "value_at_index%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "value_at_index%1#0",
        "65"
      ]
    },
    "4898": {
      "op": "getbit",
      "defined_out": [
        "is_true%2#0",
        "item0%1#0",
        "item1%0#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "is_true%2#0"
      ]
    },
    "4899": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "4900": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "4901": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "4903": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0",
        "item0%1#0",
        "item1%0#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "encoded_bool%2#0"
      ]
    },
    "4904": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "4905": {
      "op": "getbit",
      "defined_out": [
        "item0%1#0",
        "item1%0#0",
        "item2%0#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item0%1#0",
        "item1%0#0",
        "item2%0#0"
      ]
    },
    "4906": {
      "op": "uncover 2",
      "defined_out": [
        "item1%0#0",
        "item2%0#0",
        "item_index_internal%2#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item1%0#0",
        "item2%0#0",
        "tup.foo#0"
      ]
    },
    "4908": {
      "op": "swap",
      "defined_out": [
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0",
        "tup.baz#0"
      ]
    },
    "4909": {
      "op": "frame_bury 8",
      "defined_out": [
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0"
      ]
    },
    "4911": {
      "op": "frame_dig 10",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0",
        "sum3#0"
      ]
    },
    "4913": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0"
      ]
    },
    "4914": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0",
        "sum3#0"
      ]
    },
    "4915": {
      "op": "frame_bury 10",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "sum3#15",
        "tup.bar#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#15"
      ]
    },
    "4917": {
      "op": "frame_bury 7",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "sum3#15",
        "tup.bar#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0"
      ]
    },
    "4919": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@14",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4922": {
      "block": "sum_uints_and_lengths_and_trues_if_body@13",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "4924": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "1"
      ]
    },
    "4925": {
      "op": "+",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#15"
      ]
    },
    "4926": {
      "op": "frame_bury 7",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4928": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@14",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "4930": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "sum3#0"
      ]
    },
    "4931": {
      "op": "frame_bury 10",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#15"
      ]
    },
    "4933": {
      "op": "frame_bury 7",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4935": {
      "op": "frame_dig 8",
      "defined_out": [
        "sum3#0",
        "sum3#15",
        "tup.baz#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.baz#0"
      ]
    },
    "4937": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@16",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4940": {
      "block": "sum_uints_and_lengths_and_trues_if_body@15",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "4942": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "1"
      ]
    },
    "4943": {
      "op": "+",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#15"
      ]
    },
    "4944": {
      "op": "frame_bury 7",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4946": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@16",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "4948": {
      "op": "frame_bury 10",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4950": {
      "block": "sum_uints_and_lengths_and_trues_for_footer@17",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "4952": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0",
        "1"
      ]
    },
    "4953": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "4954": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4956": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@11"
    },
    "4959": {
      "block": "sum_uints_and_lengths_and_trues_after_for@18",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)"
      ]
    },
    "4961": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)",
        "0"
      ]
    },
    "4962": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_length%3#0"
      ]
    },
    "4963": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4965": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "4966": {
      "op": "frame_bury 5",
      "defined_out": [
        "array_length%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4968": {
      "block": "sum_uints_and_lengths_and_trues_for_header@19",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "4970": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_length%3#0"
      ]
    },
    "4972": {
      "op": "<",
      "defined_out": [
        "array_length%3#0",
        "continue_looping%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%3#0"
      ]
    },
    "4973": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@22",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4976": {
      "block": "sum_uints_and_lengths_and_trues_for_body@20",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)"
      ]
    },
    "4978": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%3#0"
      ]
    },
    "4981": {
      "op": "frame_dig 5",
      "defined_out": [
        "array_head_and_tail%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%3#0",
        "item_index_internal%3#0"
      ]
    },
    "4983": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%3#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%3#0",
        "item_index_internal%3#0 (copy)",
        "item_index_internal%3#0 (copy)"
      ]
    },
    "4984": {
      "op": "cover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "item_index_internal%3#0 (copy)"
      ]
    },
    "4986": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%3#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "item_index_internal%3#0 (copy)",
        "2"
      ]
    },
    "4987": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%3#0",
        "item_index_internal%3#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "item_offset_offset%0#0"
      ]
    },
    "4988": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%3#0",
        "array_head_and_tail%3#0 (copy)",
        "item_index_internal%3#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "4990": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "4991": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%3#0",
        "item_index_internal%3#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "item_offset%2#0"
      ]
    },
    "4992": {
      "op": "cover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0"
      ]
    },
    "4994": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "arr4#0 (copy)"
      ]
    },
    "4996": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr4#0 (copy)",
        "array_head_and_tail%3#0",
        "item_index_internal%3#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "arr4#0 (copy)",
        "0"
      ]
    },
    "4997": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%3#0",
        "array_length%4#0",
        "item_index_internal%3#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "array_length%4#0"
      ]
    },
    "4998": {
      "op": "dig 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "array_length%4#0",
        "item_index_internal%3#0 (copy)"
      ]
    },
    "5000": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%3#0",
        "array_length%4#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)",
        "item_offset%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "array_length%4#0",
        "item_index_internal%3#0 (copy)",
        "1"
      ]
    },
    "5001": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%3#0",
        "array_length%4#0",
        "item_index_internal%3#0",
        "item_offset%2#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "array_length%4#0",
        "next_index%0#0"
      ]
    },
    "5002": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "next_index%0#0",
        "array_length%4#0"
      ]
    },
    "5003": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%3#0",
        "array_length%4#0",
        "item_index_internal%3#0",
        "item_offset%2#0",
        "next_index%0#0",
        "next_index%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "next_index%0#0",
        "array_length%4#0",
        "next_index%0#0 (copy)"
      ]
    },
    "5005": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%3#0",
        "has_next%0#0",
        "item_index_internal%3#0",
        "item_offset%2#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "next_index%0#0",
        "has_next%0#0"
      ]
    },
    "5006": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "5007": {
      "op": "dig 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "has_next%0#0",
        "next_index%0#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "5009": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_index_internal%3#0",
        "item_offset%2#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "has_next%0#0",
        "next_index%0#0",
        "end_of_array%0#0"
      ]
    },
    "5010": {
      "op": "cover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "5012": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "2"
      ]
    },
    "5013": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_index_internal%3#0",
        "item_offset%2#0",
        "next_item_offset_offset%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "5014": {
      "op": "dig 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "5016": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "array_head_and_tail%3#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "5017": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_index_internal%3#0",
        "item_offset%2#0",
        "next_item_offset%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset%0#0"
      ]
    },
    "5018": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "has_next%0#0",
        "next_item_offset%0#0",
        "end_of_array%0#0"
      ]
    },
    "5020": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "5021": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "5023": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%3#0",
        "end_offset%0#0",
        "item_index_internal%3#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "end_offset%0#0"
      ]
    },
    "5024": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%2#0",
        "item_index_internal%3#0",
        "end_offset%0#0",
        "array_head_and_tail%3#0"
      ]
    },
    "5025": {
      "op": "uncover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "end_offset%0#0",
        "array_head_and_tail%3#0",
        "item_offset%2#0"
      ]
    },
    "5027": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_head_and_tail%3#0",
        "item_offset%2#0",
        "end_offset%0#0"
      ]
    },
    "5029": {
      "op": "substring3",
      "defined_out": [
        "item_index_internal%3#0",
        "value_at_index%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "value_at_index%2#0"
      ]
    },
    "5030": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%3#0",
        "value_at_index%2#0",
        "value_at_index%2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "value_at_index%2#0",
        "value_at_index%2#0 (copy)"
      ]
    },
    "5031": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "value_at_index%2#0",
        "value_at_index%2#0 (copy)",
        "0"
      ]
    },
    "5032": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "item_index_internal%3#0",
        "value_at_index%2#0",
        "value_at_index%2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "value_at_index%2#0",
        "value_at_index%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "5033": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%2#0",
        "item_index_internal%3#0",
        "value_at_index%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "value_at_index%2#0",
        "item0%2#0"
      ]
    },
    "5034": {
      "op": "btoi",
      "defined_out": [
        "item0%3#0",
        "item_index_internal%3#0",
        "value_at_index%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "value_at_index%2#0",
        "item0%3#0"
      ]
    },
    "5035": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "value_at_index%2#0"
      ]
    },
    "5036": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "value_at_index%2#0",
        "value_at_index%2#0 (copy)"
      ]
    },
    "5037": {
      "op": "intc_3 // 8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "value_at_index%2#0",
        "value_at_index%2#0 (copy)",
        "8"
      ]
    },
    "5038": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%3#0",
        "item_index_internal%3#0",
        "item_start_offset%0#0",
        "value_at_index%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "value_at_index%2#0",
        "item_start_offset%0#0"
      ]
    },
    "5039": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "item_start_offset%0#0",
        "value_at_index%2#0"
      ]
    },
    "5040": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "item_start_offset%0#0",
        "value_at_index%2#0",
        "value_at_index%2#0 (copy)"
      ]
    },
    "5041": {
      "op": "len",
      "defined_out": [
        "item0%3#0",
        "item_end_offset%0#0",
        "item_index_internal%3#0",
        "item_start_offset%0#0",
        "value_at_index%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "item_start_offset%0#0",
        "value_at_index%2#0",
        "item_end_offset%0#0"
      ]
    },
    "5042": {
      "op": "swap",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "value_at_index%2#0"
      ]
    },
    "5043": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "item_end_offset%0#0",
        "value_at_index%2#0",
        "item_start_offset%0#0"
      ]
    },
    "5045": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "value_at_index%2#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "5047": {
      "op": "substring3",
      "defined_out": [
        "item0%3#0",
        "item1%1#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "item0%3#0",
        "item1%1#0"
      ]
    },
    "5048": {
      "op": "extract 2 0",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "dyn_tup.foo#0",
        "dyn_tup.bar#0"
      ]
    },
    "5051": {
      "op": "swap",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0"
      ]
    },
    "5052": {
      "op": "frame_dig 9",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "sum4#0"
      ]
    },
    "5054": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0"
      ]
    },
    "5055": {
      "op": "dig 1",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.bar#0 (copy)",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0",
        "dyn_tup.bar#0 (copy)"
      ]
    },
    "5057": {
      "op": "len",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0",
        "tmp%0#0"
      ]
    },
    "5058": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0"
      ]
    },
    "5059": {
      "op": "frame_bury 9",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0"
      ]
    },
    "5061": {
      "op": "len",
      "defined_out": [
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "tmp%1#0"
      ]
    },
    "5062": {
      "op": "==",
      "defined_out": [
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "5063": {
      "error": "expected string length to match index",
      "op": "assert // expected string length to match index",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5064": {
      "block": "sum_uints_and_lengths_and_trues_for_footer@21",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5066": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "1"
      ]
    },
    "5067": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5068": {
      "op": "frame_bury 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5070": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@19"
    },
    "5073": {
      "block": "sum_uints_and_lengths_and_trues_after_for@22",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ]
    },
    "5075": {
      "op": "frame_dig 11",
      "defined_out": [
        "sum1#0",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0"
      ]
    },
    "5077": {
      "op": "frame_dig 10",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ]
    },
    "5079": {
      "op": "frame_dig 9",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ]
    },
    "5081": {
      "op": "frame_bury 3"
    },
    "5083": {
      "op": "frame_bury 2"
    },
    "5085": {
      "op": "frame_bury 1"
    },
    "5087": {
      "op": "frame_bury 0"
    },
    "5089": {
      "retsub": true,
      "op": "retsub"
    },
    "5090": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_uint64_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5093": {
      "block": "test_uint64_return_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "5094": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "5095": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "5096": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "5099": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "1"
      ]
    },
    "5100": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1"
      ]
    },
    "5101": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "5102": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "5103": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "5104": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "5105": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "5106": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1"
      ]
    },
    "5107": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array%data%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "2"
      ]
    },
    "5108": {
      "op": "itob",
      "defined_out": [
        "array%data%0#1",
        "array%sub_item%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "array%sub_item%1#1"
      ]
    },
    "5109": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "5110": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "5111": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "array%encoded%1#1"
      ]
    },
    "5112": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%1#1"
      ]
    },
    "5113": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "array%data%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%1#1",
        "3"
      ]
    },
    "5115": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%sub_item%2#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%1#1",
        "array%sub_item%2#1"
      ]
    },
    "5116": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%1#1",
        "array%sub_item%2#1",
        "0x"
      ]
    },
    "5117": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%1#1",
        "0x",
        "array%sub_item%2#1"
      ]
    },
    "5118": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%2#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%1#1",
        "array%encoded%2#1"
      ]
    },
    "5119": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "5120": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "5121": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "5122": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "5123": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "5124": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "5125": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "5126": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "5129": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "5130": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "5131": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "5132": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "5133": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5134": {
      "block": "test_uint64_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5136": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "5138": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "5139": {
      "op": "bz test_uint64_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5142": {
      "block": "test_uint64_return_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5144": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "5147": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ]
    },
    "5149": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%3#1",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%sub_item%3#1"
      ]
    },
    "5150": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "array%sub_item%3#1",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%sub_item%3#1",
        "0x"
      ]
    },
    "5151": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "0x",
        "array%sub_item%3#1"
      ]
    },
    "5152": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%3#1",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%encoded%3#1"
      ]
    },
    "5153": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%encoded%3#1",
        "0x"
      ]
    },
    "5154": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "0x",
        "array%encoded%3#1"
      ]
    },
    "5155": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "5156": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0"
      ]
    },
    "5157": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "5158": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "byte_len%1#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "5159": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "byte_len%1#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%1#0",
        "8"
      ]
    },
    "5160": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concatenated%1#0",
        "i#0",
        "len_%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "5161": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%1#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "5162": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "concatenated%1#0",
        "i#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "5165": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "5166": {
      "op": "concat",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5167": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5169": {
      "block": "test_uint64_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5171": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "5172": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5173": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5175": {
      "op": "b test_uint64_return_for_header@1"
    },
    "5178": {
      "block": "test_uint64_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5179": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_bool_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5182": {
      "block": "test_bool_return_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "5183": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "5184": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "5185": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "0x00"
      ]
    },
    "5186": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "0x00",
        "0"
      ]
    },
    "5187": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1",
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "5188": {
      "op": "setbit",
      "defined_out": [
        "array_data%0#0",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0"
      ]
    },
    "5189": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "5190": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "5191": {
      "op": "dup",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "5192": {
      "op": "setbit",
      "defined_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "5193": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "0x00"
      ]
    },
    "5194": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "0x00",
        "0"
      ]
    },
    "5195": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "5196": {
      "op": "setbit",
      "defined_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0"
      ]
    },
    "5197": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "0x00"
      ]
    },
    "5198": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "0x00",
        "0"
      ]
    },
    "5199": {
      "op": "dup",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "5200": {
      "op": "setbit",
      "defined_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0"
      ]
    },
    "5201": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "0x00"
      ]
    },
    "5202": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "0x00",
        "0"
      ]
    },
    "5203": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "5204": {
      "op": "setbit",
      "defined_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "5205": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x"
      ]
    },
    "5206": {
      "op": "uncover 5",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x",
        "encoded_bool%0#0"
      ]
    },
    "5208": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "data%0#0"
      ]
    },
    "5209": {
      "op": "uncover 4",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "data%0#0",
        "encoded_bool%1#0"
      ]
    },
    "5211": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "data%1#0"
      ]
    },
    "5212": {
      "op": "uncover 3",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "data%1#0",
        "encoded_bool%2#0"
      ]
    },
    "5214": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%2#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "data%2#0"
      ]
    },
    "5215": {
      "op": "uncover 2",
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%4#0",
        "data%2#0",
        "encoded_bool%3#0"
      ]
    },
    "5217": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%3#0",
        "encoded_bool%4#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_bool%4#0",
        "data%3#0"
      ]
    },
    "5218": {
      "op": "swap",
      "stack_out": [
        "array_data%0#0",
        "data%3#0",
        "encoded_bool%4#0"
      ]
    },
    "5219": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%4#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%4#0"
      ]
    },
    "5220": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "array_data%0#0",
        "data%4#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%4#0",
        "5"
      ]
    },
    "5222": {
      "op": "intc_3 // 8",
      "defined_out": [
        "5",
        "8",
        "array_data%0#0",
        "data%4#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%4#0",
        "5",
        "8"
      ]
    },
    "5223": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "5226": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "5227": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "5228": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5229": {
      "block": "test_bool_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5231": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "5233": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "5234": {
      "op": "bz test_bool_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5237": {
      "block": "test_bool_return_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5239": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "5240": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "5241": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "5242": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "5243": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "0x00"
      ]
    },
    "5244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "0x00",
        "0"
      ]
    },
    "5245": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "5247": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%5#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%5#0"
      ]
    },
    "5248": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_bool%5#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_bool%5#0",
        "0x"
      ]
    },
    "5249": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x",
        "encoded_bool%5#0"
      ]
    },
    "5250": {
      "op": "concat",
      "defined_out": [
        "data%5#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "data%5#0"
      ]
    },
    "5251": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "data%5#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "data%5#0",
        "arr#0"
      ]
    },
    "5253": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%5#0"
      ]
    },
    "5254": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "data%5#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%5#0",
        "1"
      ]
    },
    "5255": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "arr#0",
        "data%5#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%5#0",
        "1",
        "8"
      ]
    },
    "5256": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5259": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5261": {
      "block": "test_bool_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5263": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "5264": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5265": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5267": {
      "op": "b test_bool_return_for_header@1"
    },
    "5270": {
      "block": "test_bool_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5271": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_tuple_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5274": {
      "block": "test_tuple_return_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "5275": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "5276": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "5277": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "5280": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0"
      ]
    },
    "5281": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1"
      ]
    },
    "5282": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "5283": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "5284": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "5285": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x00"
      ]
    },
    "5286": {
      "op": "bytec 4 // 0x80",
      "defined_out": [
        "0x00",
        "0x80",
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x00",
        "0x80"
      ]
    },
    "5288": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x00",
        "0x80",
        "1",
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x00",
        "0x80",
        "1"
      ]
    },
    "5289": {
      "op": "select",
      "defined_out": [
        "array%encoded%0#1",
        "array%encoded_bit%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "array%encoded_bit%0#1"
      ]
    },
    "5290": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%1#1"
      ]
    },
    "5291": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "array%encoded%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%1#1",
        "65"
      ]
    },
    "5293": {
      "op": "intc_0 // 0",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%1#1",
        "65",
        "0"
      ]
    },
    "5294": {
      "op": "setbit",
      "defined_out": [
        "array%sub_item%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%1#1"
      ]
    },
    "5295": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "5296": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "5297": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "5298": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "5299": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "5300": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "5301": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "9"
      ]
    },
    "5303": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "5304": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "5305": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "5308": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "5309": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "5310": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "5311": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "5312": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5313": {
      "block": "test_tuple_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5315": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "5317": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "5318": {
      "op": "bz test_tuple_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5321": {
      "block": "test_tuple_return_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5323": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "5326": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ]
    },
    "5328": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5329": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "5330": {
      "op": "%",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "5331": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "5332": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "5333": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "5334": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5335": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "5337": {
      "op": "%",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "5338": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "5339": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "5340": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "5342": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%sub_item%2#1"
      ]
    },
    "5343": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "array%sub_item%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%sub_item%2#1",
        "0x"
      ]
    },
    "5344": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "tmp%1#0",
        "0x",
        "array%sub_item%2#1"
      ]
    },
    "5345": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%encoded%2#1"
      ]
    },
    "5346": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "array%encoded%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%encoded%2#1",
        "0x00"
      ]
    },
    "5347": {
      "op": "bytec 4 // 0x80",
      "defined_out": [
        "0x00",
        "0x80",
        "arr#0",
        "array%encoded%2#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%encoded%2#1",
        "0x00",
        "0x80"
      ]
    },
    "5349": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "array%encoded%2#1",
        "0x00",
        "0x80",
        "tmp%1#0"
      ]
    },
    "5351": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array%encoded%2#1",
        "array%encoded_bit%1#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "array%encoded%2#1",
        "array%encoded_bit%1#1"
      ]
    },
    "5352": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "array%encoded%3#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "array%encoded%3#1"
      ]
    },
    "5353": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "arr#0",
        "array%encoded%3#1",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%3#0",
        "array%encoded%3#1",
        "65"
      ]
    },
    "5355": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%encoded%3#1",
        "65",
        "tmp%3#0"
      ]
    },
    "5357": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "array%sub_item%3#1",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%sub_item%3#1"
      ]
    },
    "5358": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "array%sub_item%3#1",
        "0x"
      ]
    },
    "5359": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "0x",
        "array%sub_item%3#1"
      ]
    },
    "5360": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "5361": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0"
      ]
    },
    "5362": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "5363": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "byte_len%1#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "5364": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "byte_len%1#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%1#0",
        "9"
      ]
    },
    "5366": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concatenated%1#0",
        "i#0",
        "len_%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "5367": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%1#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "5368": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "concatenated%1#0",
        "i#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "5371": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "5372": {
      "op": "concat",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5373": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5375": {
      "block": "test_tuple_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5377": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "5378": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5379": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5381": {
      "op": "b test_tuple_return_for_header@1"
    },
    "5384": {
      "block": "test_tuple_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5385": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_dynamic_tuple_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5388": {
      "block": "test_dynamic_tuple_return_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "5389": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "5390": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "5391": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "0"
      ]
    },
    "5392": {
      "op": "itob",
      "defined_out": [
        "array_data%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "5393": {
      "op": "bytec 7 // \"Hello\"",
      "defined_out": [
        "\"Hello\"",
        "array_data%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "val_as_bytes%0#0",
        "\"Hello\""
      ]
    },
    "5395": {
      "op": "len",
      "defined_out": [
        "array_data%0#0",
        "length%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "val_as_bytes%0#0",
        "length%0#0"
      ]
    },
    "5396": {
      "op": "itob",
      "defined_out": [
        "array_data%0#0",
        "as_bytes%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "val_as_bytes%0#0",
        "as_bytes%0#0"
      ]
    },
    "5397": {
      "op": "extract 6 2",
      "defined_out": [
        "array_data%0#0",
        "length_uint16%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0"
      ]
    },
    "5400": {
      "op": "bytec 7 // \"Hello\"",
      "stack_out": [
        "array_data%0#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "\"Hello\""
      ]
    },
    "5402": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "5403": {
      "op": "swap",
      "stack_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "5404": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "5405": {
      "op": "swap",
      "stack_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "5406": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "5407": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "array_data%0#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "10"
      ]
    },
    "5409": {
      "op": "itob",
      "defined_out": [
        "array_data%0#0",
        "as_bytes%1#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "as_bytes%1#0"
      ]
    },
    "5410": {
      "op": "extract 6 2",
      "defined_out": [
        "array_data%0#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "offset_as_uint16%0#0"
      ]
    },
    "5413": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "5414": {
      "op": "swap",
      "stack_out": [
        "array_data%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ]
    },
    "5415": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "encoded_tuple%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_tuple%0#0"
      ]
    },
    "5416": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_data%0#0",
        "encoded_tuple%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_tuple%0#0",
        "2"
      ]
    },
    "5417": {
      "op": "itob",
      "defined_out": [
        "array_data%0#0",
        "as_bytes%2#0",
        "encoded_tuple%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_tuple%0#0",
        "as_bytes%2#0"
      ]
    },
    "5418": {
      "op": "extract 6 2",
      "defined_out": [
        "array_data%0#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0"
      ]
    },
    "5421": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_data%0#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0",
        "0x"
      ]
    },
    "5422": {
      "op": "swap",
      "stack_out": [
        "array_data%0#0",
        "encoded_tuple%0#0",
        "0x",
        "next_item_head%0#0"
      ]
    },
    "5423": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "encoded_tuple%0#0",
        "result%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "encoded_tuple%0#0",
        "result%0#0"
      ]
    },
    "5424": {
      "op": "swap",
      "stack_out": [
        "array_data%0#0",
        "result%0#0",
        "encoded_tuple%0#0"
      ]
    },
    "5425": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "result%1#0"
      ]
    },
    "5426": {
      "op": "dig 1",
      "defined_out": [
        "array_data%0#0",
        "array_data%0#0 (copy)",
        "result%1#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "result%1#0",
        "array_data%0#0 (copy)"
      ]
    },
    "5428": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_data%0#0",
        "result%1#0",
        "array_data%0#0 (copy)",
        "0"
      ]
    },
    "5429": {
      "op": "extract_uint16",
      "defined_out": [
        "array_data%0#0",
        "l_count%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "result%1#0",
        "l_count%0#0"
      ]
    },
    "5430": {
      "op": "swap",
      "stack_out": [
        "array_data%0#0",
        "l_count%0#0",
        "result%1#0"
      ]
    },
    "5431": {
      "op": "uncover 2",
      "stack_out": [
        "l_count%0#0",
        "result%1#0",
        "array_data%0#0"
      ]
    },
    "5433": {
      "op": "extract 2 0",
      "defined_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "l_count%0#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "5436": {
      "op": "uncover 2",
      "stack_out": [
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0",
        "l_count%0#0"
      ]
    },
    "5438": {
      "op": "swap",
      "stack_out": [
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "5439": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "5440": {
      "op": "uncover 3",
      "stack_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "r_head_and_tail%0#0"
      ]
    },
    "5442": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "5445": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "5446": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "5447": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5448": {
      "block": "test_dynamic_tuple_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5450": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "5452": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "5453": {
      "op": "bz test_dynamic_tuple_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5456": {
      "block": "test_dynamic_tuple_return_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5458": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5459": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "5462": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "5463": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "5464": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%1#0",
        "tmp%0#0"
      ]
    },
    "5465": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "5466": {
      "op": "len",
      "defined_out": [
        "i#0",
        "length%1#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%1#0",
        "tmp%0#0",
        "length%1#0"
      ]
    },
    "5467": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "i#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%1#0",
        "tmp%0#0",
        "as_bytes%3#0"
      ]
    },
    "5468": {
      "op": "extract 6 2",
      "defined_out": [
        "i#0",
        "length_uint16%1#0",
        "tmp%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%1#0",
        "tmp%0#0",
        "length_uint16%1#0"
      ]
    },
    "5471": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%1#0",
        "length_uint16%1#0",
        "tmp%0#0"
      ]
    },
    "5472": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0"
      ]
    },
    "5473": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%1#0",
        "val_as_bytes%1#0"
      ]
    },
    "5474": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_value%1#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%1#0",
        "val_as_bytes%1#0",
        "0x"
      ]
    },
    "5475": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%1#0",
        "0x",
        "val_as_bytes%1#0"
      ]
    },
    "5476": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "5477": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "encoded_tuple_buffer%5#0",
        "encoded_value%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0",
        "10"
      ]
    },
    "5479": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0",
        "as_bytes%4#0"
      ]
    },
    "5480": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%1#0",
        "i#0",
        "offset_as_uint16%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0",
        "offset_as_uint16%1#0"
      ]
    },
    "5483": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "5484": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0"
      ]
    },
    "5485": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%1#0"
      ]
    },
    "5486": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "encoded_tuple%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%1#0",
        "2"
      ]
    },
    "5487": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "encoded_tuple%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%1#0",
        "as_bytes%5#0"
      ]
    },
    "5488": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple%1#0",
        "i#0",
        "next_item_head%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%1#0",
        "next_item_head%1#0"
      ]
    },
    "5491": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%1#0",
        "next_item_head%1#0",
        "0x"
      ]
    },
    "5492": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%1#0",
        "0x",
        "next_item_head%1#0"
      ]
    },
    "5493": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%1#0",
        "i#0",
        "result%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%1#0",
        "result%2#0"
      ]
    },
    "5494": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%2#0",
        "encoded_tuple%1#0"
      ]
    },
    "5495": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "result%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%3#0"
      ]
    },
    "5496": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "result%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%3#0",
        "arr#0"
      ]
    },
    "5498": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "5499": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "5500": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%1#0",
        "result%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%3#0",
        "arr#0",
        "l_count%1#0"
      ]
    },
    "5501": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%3#0",
        "l_count%1#0",
        "arr#0"
      ]
    },
    "5502": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "result%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%3#0",
        "l_count%1#0",
        "l_head_and_tail%1#0"
      ]
    },
    "5505": {
      "op": "uncover 2",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "r_head_and_tail%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "r_head_and_tail%1#0"
      ]
    },
    "5507": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%1#0",
        "r_head_and_tail%1#0",
        "l_head_and_tail%1#0"
      ]
    },
    "5508": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%1#0",
        "l_head_and_tail%1#0",
        "l_count%1#0"
      ]
    },
    "5510": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%1#0",
        "l_count%1#0",
        "l_head_and_tail%1#0"
      ]
    },
    "5511": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "r_head_and_tail%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%1#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "1"
      ]
    },
    "5512": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "1",
        "r_head_and_tail%1#0"
      ]
    },
    "5514": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5517": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5519": {
      "block": "test_dynamic_tuple_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5521": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "5522": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "5523": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "5525": {
      "op": "b test_dynamic_tuple_return_for_header@1"
    },
    "5528": {
      "block": "test_dynamic_tuple_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "5529": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "params": {
        "arr#0": "bytes",
        "append#0": "uint64"
      },
      "block": "test_convert_to_array_and_back",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "5532": {
      "block": "test_convert_to_array_and_back_block@0",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "5535": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "5536": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "5537": {
      "op": "stores",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0"
      ]
    },
    "5538": {
      "op": "dup",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0"
      ]
    },
    "5539": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "arr#0 (copy)"
      ]
    },
    "5541": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "5544": {
      "op": "swap",
      "stack_out": [
        "mutable#0",
        "expr_value_trimmed%0#0",
        "mutable#0"
      ]
    },
    "5545": {
      "op": "dup",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "mutable#0",
        "mutable#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "expr_value_trimmed%0#0",
        "mutable#0",
        "mutable#0 (copy)"
      ]
    },
    "5546": {
      "op": "loads",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "mutable#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "expr_value_trimmed%0#0",
        "mutable#0",
        "slot_contents%0#0"
      ]
    },
    "5547": {
      "op": "uncover 2",
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "5549": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "extended%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "extended%0#0"
      ]
    },
    "5550": {
      "op": "stores",
      "stack_out": [
        "mutable#0"
      ]
    },
    "5551": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "1"
      ]
    },
    "5552": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "mutable#0"
      ]
    },
    "5553": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0"
      ]
    },
    "5554": {
      "block": "test_convert_to_array_and_back_for_header@1",
      "stack_in": [
        "mutable#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0"
      ]
    },
    "5556": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "5558": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "5559": {
      "op": "bz test_convert_to_array_and_back_after_for@4",
      "stack_out": [
        "mutable#0",
        "i#0"
      ]
    },
    "5562": {
      "block": "test_convert_to_array_and_back_for_body@2",
      "stack_in": [
        "mutable#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0"
      ]
    },
    "5564": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5565": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "5566": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "5567": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "5568": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "5569": {
      "op": "swap",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "5570": {
      "op": "dup",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5571": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "5573": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "5574": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "5575": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "5576": {
      "op": "cover 2",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "5578": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%0#1",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%sub_item%0#1"
      ]
    },
    "5579": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array%sub_item%0#1",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "5580": {
      "op": "swap",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "tmp%1#0",
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "5581": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%encoded%0#1"
      ]
    },
    "5582": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "array%encoded%0#1",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%encoded%0#1",
        "0x00"
      ]
    },
    "5583": {
      "op": "bytec 4 // 0x80",
      "defined_out": [
        "0x00",
        "0x80",
        "array%encoded%0#1",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "tmp%1#0",
        "array%encoded%0#1",
        "0x00",
        "0x80"
      ]
    },
    "5585": {
      "op": "uncover 3",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "array%encoded%0#1",
        "0x00",
        "0x80",
        "tmp%1#0"
      ]
    },
    "5587": {
      "op": "select",
      "defined_out": [
        "array%encoded%0#1",
        "array%encoded_bit%0#1",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "array%encoded%0#1",
        "array%encoded_bit%0#1"
      ]
    },
    "5588": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "array%encoded%1#1"
      ]
    },
    "5589": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "array%encoded%1#1",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%3#0",
        "array%encoded%1#1",
        "65"
      ]
    },
    "5591": {
      "op": "uncover 2",
      "stack_out": [
        "mutable#0",
        "i#0",
        "array%encoded%1#1",
        "65",
        "tmp%3#0"
      ]
    },
    "5593": {
      "op": "setbit",
      "defined_out": [
        "array%sub_item%1#1",
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "array%sub_item%1#1"
      ]
    },
    "5594": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "mutable#0",
        "i#0",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "5595": {
      "op": "swap",
      "stack_out": [
        "mutable#0",
        "i#0",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "5596": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "encoded%1#0"
      ]
    },
    "5597": {
      "op": "frame_dig 0",
      "defined_out": [
        "encoded%1#0",
        "i#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "encoded%1#0",
        "mutable#0"
      ]
    },
    "5599": {
      "op": "dup",
      "defined_out": [
        "encoded%1#0",
        "i#0",
        "mutable#0",
        "mutable#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "encoded%1#0",
        "mutable#0 (copy)",
        "mutable#0 (copy)"
      ]
    },
    "5600": {
      "op": "cover 2",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "encoded%1#0",
        "mutable#0 (copy)"
      ]
    },
    "5602": {
      "op": "loads",
      "defined_out": [
        "encoded%1#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "encoded%1#0",
        "slot_contents%1#0"
      ]
    },
    "5603": {
      "op": "swap",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "encoded%1#0"
      ]
    },
    "5604": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "extended%1#0",
        "i#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "extended%1#0"
      ]
    },
    "5605": {
      "op": "stores",
      "stack_out": [
        "mutable#0",
        "i#0"
      ]
    },
    "5606": {
      "block": "test_convert_to_array_and_back_for_footer@3",
      "stack_in": [
        "mutable#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0"
      ]
    },
    "5608": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "5609": {
      "op": "+",
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0"
      ]
    },
    "5610": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0"
      ]
    },
    "5612": {
      "op": "b test_convert_to_array_and_back_for_header@1"
    },
    "5615": {
      "block": "test_convert_to_array_and_back_after_for@4",
      "stack_in": [
        "mutable#0",
        "i#0"
      ],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "0x0000"
      ]
    },
    "5616": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "0x0000",
        "0x"
      ]
    },
    "5617": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "array_data%0#0"
      ]
    },
    "5618": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "5621": {
      "op": "frame_dig 0",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "mutable#0"
      ]
    },
    "5623": {
      "op": "loads",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "slot_contents%2#0"
      ]
    },
    "5624": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "5625": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "5626": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "5627": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "byte_len%0#0",
        "concatenated%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "9"
      ]
    },
    "5629": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "5630": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "5631": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "5634": {
      "op": "swap",
      "stack_out": [
        "mutable#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "5635": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "concat_result%0#0"
      ]
    },
    "5636": {
      "op": "frame_bury 0"
    },
    "5638": {
      "retsub": true,
      "op": "retsub"
    },
    "5639": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "params": {
        "arg#0": "bytes"
      },
      "block": "test_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5642": {
      "block": "test_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "5643": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "5644": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "5645": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "5648": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x"
      ]
    },
    "5649": {
      "op": "bytec 8 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "5651": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "5652": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "5653": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "5654": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1"
      ]
    },
    "5655": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "0x"
      ]
    },
    "5656": {
      "op": "bytec 9 // 0x0000000000000002",
      "defined_out": [
        "0x",
        "0x0000000000000002",
        "array%data%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "0x",
        "0x0000000000000002"
      ]
    },
    "5658": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "array%encoded%1#1"
      ]
    },
    "5659": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "5660": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "5661": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "5662": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "5663": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "5664": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "5665": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "5666": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "5669": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "5670": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "5671": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0"
      ]
    },
    "5674": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x"
      ]
    },
    "5675": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "arg#0 (copy)",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "arg#0 (copy)"
      ]
    },
    "5677": {
      "op": "concat",
      "defined_out": [
        "array%encoded%2#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%encoded%2#1"
      ]
    },
    "5678": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%encoded%2#1",
        "0x"
      ]
    },
    "5679": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "array%encoded%2#1"
      ]
    },
    "5680": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "5681": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0"
      ]
    },
    "5682": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ],
      "stack_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "5683": {
      "op": "len",
      "defined_out": [
        "byte_len%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "5684": {
      "op": "intc_3 // 8",
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0",
        "8"
      ]
    },
    "5685": {
      "op": "/",
      "defined_out": [
        "concatenated%1#0",
        "len_%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "5686": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "5687": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "5690": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "5691": {
      "op": "concat",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5692": {
      "retsub": true,
      "op": "retsub"
    },
    "5693": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "params": {
        "arg.0#0": "bytes",
        "arg.1#0": "bytes"
      },
      "block": "test_concat_with_native_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "5696": {
      "block": "test_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "5697": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "5698": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "5699": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "5702": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x"
      ]
    },
    "5703": {
      "op": "bytec 8 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "5705": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "5706": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "5707": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "5708": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1"
      ]
    },
    "5709": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "0x"
      ]
    },
    "5710": {
      "op": "bytec 9 // 0x0000000000000002",
      "defined_out": [
        "0x",
        "0x0000000000000002",
        "array%data%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "0x",
        "0x0000000000000002"
      ]
    },
    "5712": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%1#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "array%data%0#1",
        "array%encoded%1#1"
      ]
    },
    "5713": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "5714": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "5715": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "5716": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "5717": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "5718": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "5719": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "5720": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "5723": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "5724": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "5725": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0"
      ]
    },
    "5728": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x"
      ]
    },
    "5729": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arg.0#0 (copy)",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "arg.0#0 (copy)"
      ]
    },
    "5731": {
      "op": "concat",
      "defined_out": [
        "array%encoded%2#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%encoded%2#1"
      ]
    },
    "5732": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%encoded%2#1",
        "0x"
      ]
    },
    "5733": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "array%encoded%2#1"
      ]
    },
    "5734": {
      "op": "concat",
      "defined_out": [
        "array%data%2#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%data%2#1"
      ]
    },
    "5735": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%data%2#1",
        "0x"
      ]
    },
    "5736": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "arg.1#0 (copy)",
        "array%data%2#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%data%2#1",
        "0x",
        "arg.1#0 (copy)"
      ]
    },
    "5738": {
      "op": "concat",
      "defined_out": [
        "array%data%2#1",
        "array%encoded%3#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "array%data%2#1",
        "array%encoded%3#1"
      ]
    },
    "5739": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "5740": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0"
      ]
    },
    "5741": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ],
      "stack_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "5742": {
      "op": "len",
      "defined_out": [
        "byte_len%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "5743": {
      "op": "intc_3 // 8",
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0",
        "8"
      ]
    },
    "5744": {
      "op": "/",
      "defined_out": [
        "concatenated%1#0",
        "len_%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "5745": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "5746": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "5749": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "5750": {
      "op": "concat",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5751": {
      "retsub": true,
      "op": "retsub"
    },
    "5752": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "params": {
        "arg#0": "bytes"
      },
      "block": "test_dynamic_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5755": {
      "block": "test_dynamic_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "5756": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "5757": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "5758": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_data%0#0",
        "0x"
      ]
    },
    "5759": {
      "op": "bytec 10 // 0x000161",
      "defined_out": [
        "0x",
        "0x000161",
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "0x",
        "0x000161"
      ]
    },
    "5761": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%0#0"
      ]
    },
    "5762": {
      "op": "bytec 11 // 0x000162",
      "defined_out": [
        "0x000162",
        "array_data%0#0",
        "data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%0#0",
        "0x000162"
      ]
    },
    "5764": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%1#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%1#0"
      ]
    },
    "5765": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_data%0#0",
        "data%1#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%1#0",
        "2"
      ]
    },
    "5766": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "5769": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "2"
      ]
    },
    "5770": {
      "op": "dup",
      "stack_out": [
        "prefix#0",
        "2",
        "2"
      ]
    },
    "5771": {
      "op": "*",
      "defined_out": [
        "prefix#0",
        "start_of_tail%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0"
      ]
    },
    "5772": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg#0 (copy)",
        "prefix#0",
        "start_of_tail%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "arg#0 (copy)"
      ]
    },
    "5774": {
      "op": "len",
      "defined_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0"
      ]
    },
    "5775": {
      "op": "frame_dig -1",
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0",
        "arg#0 (copy)"
      ]
    },
    "5777": {
      "op": "uncover 2",
      "stack_out": [
        "prefix#0",
        "total_length%0#0",
        "arg#0 (copy)",
        "start_of_tail%0#0"
      ]
    },
    "5779": {
      "op": "uncover 2",
      "stack_out": [
        "prefix#0",
        "arg#0 (copy)",
        "start_of_tail%0#0",
        "total_length%0#0"
      ]
    },
    "5781": {
      "op": "substring3",
      "defined_out": [
        "data%2#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "data%2#0"
      ]
    },
    "5782": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "data%2#0",
        "2"
      ]
    },
    "5783": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5786": {
      "retsub": true,
      "op": "retsub"
    },
    "5787": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "params": {
        "arg.0#0": "bytes",
        "arg.1#0": "bytes"
      },
      "block": "test_dynamic_concat_with_native_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "5790": {
      "block": "test_dynamic_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "5791": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "5792": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "5793": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_data%0#0",
        "0x"
      ]
    },
    "5794": {
      "op": "bytec 10 // 0x000161",
      "defined_out": [
        "0x",
        "0x000161",
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "0x",
        "0x000161"
      ]
    },
    "5796": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%0#0"
      ]
    },
    "5797": {
      "op": "bytec 11 // 0x000162",
      "defined_out": [
        "0x000162",
        "array_data%0#0",
        "data%0#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%0#0",
        "0x000162"
      ]
    },
    "5799": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "data%1#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%1#0"
      ]
    },
    "5800": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_data%0#0",
        "data%1#0"
      ],
      "stack_out": [
        "array_data%0#0",
        "data%1#0",
        "2"
      ]
    },
    "5801": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "5804": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "prefix#0",
        "0x"
      ]
    },
    "5805": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arg.0#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x",
        "arg.0#0 (copy)"
      ]
    },
    "5807": {
      "op": "concat",
      "defined_out": [
        "data%2#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "data%2#0"
      ]
    },
    "5808": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg.1#0 (copy)",
        "data%2#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "data%2#0",
        "arg.1#0 (copy)"
      ]
    },
    "5810": {
      "op": "concat",
      "defined_out": [
        "data%3#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "data%3#0"
      ]
    },
    "5811": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "data%3#0",
        "2"
      ]
    },
    "5812": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5815": {
      "retsub": true,
      "op": "retsub"
    },
    "5816": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "params": {
        "imm1#0": "bytes",
        "imm2#0": "bytes"
      },
      "block": "test_concat_immutable_dynamic",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "5819": {
      "block": "test_concat_immutable_dynamic_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "imm1#0 (copy)"
      ]
    },
    "5821": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "imm1#0 (copy)",
        "0"
      ]
    },
    "5822": {
      "op": "extract_uint16",
      "defined_out": [
        "l_count%0#0"
      ],
      "stack_out": [
        "l_count%0#0"
      ]
    },
    "5823": {
      "op": "frame_dig -2",
      "stack_out": [
        "l_count%0#0",
        "imm1#0 (copy)"
      ]
    },
    "5825": {
      "op": "extract 2 0",
      "defined_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ],
      "stack_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "5828": {
      "op": "frame_dig -1",
      "defined_out": [
        "imm2#0 (copy)",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ],
      "stack_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "imm2#0 (copy)"
      ]
    },
    "5830": {
      "op": "intc_0 // 0",
      "stack_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "imm2#0 (copy)",
        "0"
      ]
    },
    "5831": {
      "op": "extract_uint16",
      "defined_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_count%0#0"
      ],
      "stack_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_count%0#0"
      ]
    },
    "5832": {
      "op": "frame_dig -1",
      "stack_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_count%0#0",
        "imm2#0 (copy)"
      ]
    },
    "5834": {
      "op": "extract 2 0",
      "defined_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_count%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_count%0#0",
        "r_head_and_tail%0#0"
      ]
    },
    "5837": {
      "op": "uncover 3",
      "stack_out": [
        "l_head_and_tail%0#0",
        "r_count%0#0",
        "r_head_and_tail%0#0",
        "l_count%0#0"
      ]
    },
    "5839": {
      "op": "uncover 3",
      "stack_out": [
        "r_count%0#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "5841": {
      "op": "uncover 3",
      "stack_out": [
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_count%0#0"
      ]
    },
    "5843": {
      "op": "uncover 3",
      "stack_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_count%0#0",
        "r_head_and_tail%0#0"
      ]
    },
    "5845": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "concat_result%0#0"
      ],
      "stack_out": [
        "concat_result%0#0"
      ]
    },
    "5848": {
      "retsub": true,
      "op": "retsub"
    },
    "5849": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "params": {
        "imm#0": "bytes"
      },
      "block": "test_immutable_arc4",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5852": {
      "block": "test_immutable_arc4_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "5854": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0 (copy)",
        "0"
      ]
    },
    "5855": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5856": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "5857": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "5858": {
      "error": "expected non empty array",
      "op": "assert // expected non empty array",
      "stack_out": []
    },
    "5859": {
      "op": "frame_dig -1",
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "5861": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "array_head_and_tail%0#0"
      ]
    },
    "5864": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_head_and_tail%0#0",
        "0"
      ]
    },
    "5865": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "array_head_and_tail%0#0",
        "0",
        "16"
      ]
    },
    "5867": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "5868": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "16"
      ]
    },
    "5870": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%0#0"
      ],
      "stack_out": [
        "assigned_value%0#0"
      ]
    },
    "5871": {
      "op": "frame_dig -1",
      "stack_out": [
        "assigned_value%0#0",
        "imm#0 (copy)"
      ]
    },
    "5873": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assigned_value%0#0",
        "imm#0 (copy)",
        "0"
      ]
    },
    "5874": {
      "op": "extract_uint16",
      "defined_out": [
        "assigned_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "tmp%2#0"
      ]
    },
    "5875": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "assigned_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "tmp%2#0",
        "1"
      ]
    },
    "5876": {
      "op": "-",
      "defined_out": [
        "assigned_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "tmp%3#0"
      ]
    },
    "5877": {
      "op": "frame_dig -1",
      "stack_out": [
        "assigned_value%0#0",
        "tmp%3#0",
        "imm#0 (copy)"
      ]
    },
    "5879": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assigned_value%0#0",
        "tmp%3#0",
        "imm#0 (copy)",
        "0"
      ]
    },
    "5880": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "assigned_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "tmp%3#0",
        "array_length%0#0"
      ]
    },
    "5881": {
      "op": "dig 1",
      "defined_out": [
        "array_length%0#0",
        "assigned_value%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "tmp%3#0",
        "array_length%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "5883": {
      "op": ">",
      "defined_out": [
        "assigned_value%0#0",
        "index_is_in_bounds%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "tmp%3#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "5884": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "assigned_value%0#0",
        "tmp%3#0"
      ]
    },
    "5885": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "assigned_value%0#0",
        "tmp%3#0",
        "16"
      ]
    },
    "5887": {
      "op": "*",
      "defined_out": [
        "assigned_value%0#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "write_offset%0#0"
      ]
    },
    "5888": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "assigned_value%0#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "write_offset%0#0",
        "2"
      ]
    },
    "5889": {
      "op": "+",
      "stack_out": [
        "assigned_value%0#0",
        "write_offset%0#0"
      ]
    },
    "5890": {
      "op": "frame_dig -1",
      "stack_out": [
        "assigned_value%0#0",
        "write_offset%0#0",
        "imm#0 (copy)"
      ]
    },
    "5892": {
      "op": "swap",
      "stack_out": [
        "assigned_value%0#0",
        "imm#0 (copy)",
        "write_offset%0#0"
      ]
    },
    "5893": {
      "op": "uncover 2",
      "stack_out": [
        "imm#0 (copy)",
        "write_offset%0#0",
        "assigned_value%0#0"
      ]
    },
    "5895": {
      "op": "replace3",
      "defined_out": [
        "updated_target%0#0"
      ],
      "stack_out": [
        "updated_target%0#0"
      ]
    },
    "5896": {
      "op": "dup"
    },
    "5897": {
      "op": "frame_bury -1",
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "5899": {
      "retsub": true,
      "op": "retsub"
    },
    "5900": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot@entry",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "5902": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "5903": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "5905": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "5908": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "5910": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "5911": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "5912": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "5913": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "5915": {
      "retsub": true,
      "op": "retsub"
    }
  }
}