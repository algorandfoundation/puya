{
  "version": 3,
  "sources": [
    "../immutable.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAqWK;;;;;;AANA;;;;;;AANA;;;;;;AARA;;;;;;AARA;;;;;;AARA;;;;;;AARA;;;;;;AAVA;;;;;;AAPA;;;;;;AAPA;;;;;;AAPA;;;;;;AAPA;;;;;;AA3BA;;;;;;AAjEA;;;;;;AAlBA;;;;;;AAJA;;;;;;AAJA;;;;;;AAnBA;;;;;;AAnBA;;;;;;AAfA;;;;;;AAlBA;;;;;;AAxBA;;;;;;AAzBA;;;;;;AApkYA;;;;;;AAEY;;;;;AACZ;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACiB;AAAA;AAAA;AAAA;AAAA;AAAT;;AAAA;AACS;;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;;;;;;;;;;;;;;AACJ;AAGJ;;;;;;AAEa;AACC;AAAd;AAAc;;;;AAAA;;AAAA;;AAAA;AAAd;;;AAAA;;;AACQ;;AAAU;;;AAAV;AAAA;;;;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;AAGJ;;;;;;AAEa;AAAb;AAAa;;;;AAAA;;AAAA;;AAAA;AAAb;;;AAAA;;;AACc;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;;AAAA;;AAAA;AAGJ;;;;;;;AAEc;AAAd;AAAc;;;;AAAA;;AAAA;;AAAA;AAAd;;;AAAA;;;AACc;;AAAA;AAAA;;;AAAA;;AAAA;;AAAN;;;;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;;AAAA;;AAAA;AAGJ;;;;;;AAEa;AAAb;AAAa;;;;AAAA;;AAAA;;AAAA;AAAb;;;AAAA;;;AACyB;;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;;AAAA;;AAAA;AAGJ;;;;;;AAEY;AACZ;;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ;;AAAA;AAAA;;;;;;;;;;;;;;AACJ;;;;AA5aC;;;AAAA;AAAA;;;;AAoCA;;;AAAA;AAAA;;;;AAyBA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAwBA;;;AAAA;AAAA;;;;AAkBA;;;AAAA;AAAA;;;;AAeA;;;AAAA;AAAA;;;;AAmBA;;;AAAA;AAAA;;;;AAmBA;;;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAkBA;;;AAAA;AAAA;;;;AAiEA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA2BA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAUA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAMA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAMA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAlWS;AAAA;AAAA;;;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AAEiB;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEqB;;AAAf;AAAY;AAAZ;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEA;AAAA;;AAAA;;;;;AAIM;AAAA;AAAA;;;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AAEyB;;AAAmB;AAAnB;AAAR;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAX;AAAP;AAEkB;;AAAZ;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;AAAX;AAAP;AAEuC;;AAAtB;AAAA;;AAAA;;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAX;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAU;AAAV;AAAP;AAEiB;;AAAX;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAW;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAU;AAAV;AAAP;AAEiC;;AAAjC;;AAAiC;;AAAjC;;AAAA;;AAER;;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAA;;AAAA;;AAAA;AAAjB;;;AAAA;;;AACkC;;AAAL;;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEG;;AAAS;AAAT;AAAX;;;AAAA;;;AACuB;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;;AAAA;AAAA;AAAJ;AAAP;;;;AACD;;AAAS;AAAT;AAAX;;;AAAA;;;AACuB;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;;AAAA;AAAA;AAAJ;AAAP;;;;AACD;;AAAS;AAAT;AAAX;;;AAAA;;;AACmB;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;;AAAA;AAAA;AAAP;;;;AACD;;AAAS;;AAAT;AAAX;;;AAAA;;;AAC2B;;AAAS;AAAT;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAJ;AAAP;;;;AAEJ;;;AAAA;;AAAA;AACG;;AAAA;AAAA;AAAX;;;AAAA;;;AACkB;;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAc;;AAAS;AAAT;AAAd;AAAP;;;;;AAEZ;;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAA;;AAAO;;AAAP;AAAjB;;;AAAA;;;AAC8B;;AAAA;AAAI;AAAJ;AAAA;;AAAW;AAAJ;AAAA;;AAAnB;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAW;AAAX;AAAA;;AAAsB;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAY;;AAAZ;AAAA;;AAAuB;;AAAvB;AAAA;AAAP;AAEM;;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAW;AAAX;AAAA;;AAAsB;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAY;;AAAZ;AAAA;;AAAuB;;AAAvB;AAAA;AAAP;AACA;;;AAAA;;AAAA;;AAER;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAA;;AAAO;;AAAP;AAAjB;;;AAAA;;;AACgD;;AAAA;AAAI;AAAJ;AAAS;AAAT;AAAA;;AAAgB;AAAI;;AAAJ;AAAQ;AAAR;AAAa;AAAb;AAAA;;AAA9C;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACgB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAhB;;AAAA;;AAAA;;AACc;AAAP;AAAP;AACA;AACA;AACA;;;AAAA;;AAAA;;AAER;;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAA;;AAAO;;AAAP;AAAjB;;;AAAA;;;AAC8B;;AAAA;AAAI;AAAJ;AAAA;;AAAO;AAAA;;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAc;;AAAd;AAAP;AACS;AAAjB;AAAiB;AAAL;;;;;AAAK;;AAAO;;AAAP;AAAjB;;;AAAA;;;AACmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAI;AAAJ;AAAb;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAP;;;;AAFK;;AAAA;AAAA;AAAA;;;;;AAIH;;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAI;AAAJ;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAI;AAAJ;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAW;AAAX;AAAA;;AAA+B;AAAT;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAY;;AAAZ;AAAA;;AAAgC;;AAAT;AAAvB;AAAA;AAAP;AACA;;;AAAA;;AAAA;;AAER;;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAA;;AAAO;;AAAP;AAAjB;;;AAAA;;;AACqD;;AAAA;AAAI;AAAJ;AAAA;;AAAW;;;AAAA;;AAA9C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAc;;AAAd;AAAP;AACS;AAAjB;AAAiB;AAAL;;;;;AAAK;;AAAO;;AAAP;AAAjB;;;AAAA;;;AACmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAI;AAAJ;AAAb;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAa;;AAAA;;;AAAb;AAAP;;;;AAFK;;AAAA;AAAA;AAAA;;;;;AAIH;;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAI;AAAJ;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAI;AAAJ;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAA8B;AAA9B;AAAA;;AAAyC;AAAzC;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAA+B;;AAA/B;AAAA;;AAA0C;;;;;AAA1C;AAAA;AAAP;AACA;;;AAAA;;AAAA;;AAER;;;;;;AAEQ;;AAAA;;AAER;;;;;;AAEQ;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;;AAER;;;;;;;;;;;AAKiB;AAAjB;AAAiB;;;;AAAA;;AAAA;;AAAA;AAAjB;;;AAAA;;;AACwB;AAAA;AAAA;;;AAAZ;;AACS;AAArB;AAAqB;AAAL;;;;;AAAK;;AAAA;;AAAA;AAArB;;;AAAA;;;AAC4B;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAZ;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAEH;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAN;;;;;AAJK;;AAAA;AAAA;AAAA;;;;;AAOA;AAAA;AAAA;;;AAAT;;AACR;;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACmC;;;AAAd;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAT;;;;;;;;;;;;;;AAEJ;;AAAA;;AAAA;AAER;;;;;;AAEe;AAAA;AAAA;;;AAAP;AACO;AAAA;AAAA;;;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAA;;;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAA;;;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AAES;AAAjB;AAAiB;;;;AAAA;;AAAO;;AAAP;AAAjB;;;AAAA;;;AAC8C;;AAAA;AAAK;AAAL;AAAA;;AAAU;AAAK;AAAL;AAAA;;AAArC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAKU;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AAPE;AAAI;AAAJ;AAAA;;AAHL;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAiBU;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AARE;AAAI;AAAJ;AAAA;;AAHL;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAkBU;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AATE;AAAI;AAAJ;AAAA;;AAHL;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;;;;AA7BK;;AAAA;AAAA;AAAA;;;;;AA6CF;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;;AAER;;;;;;;;;;;;;;;AAQoC;AAAA;AAAA;AAAA;AACpC;;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACY;;AAAA;AAAA;;;;;;;;;;;;;;AACZ;;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;;;;AACA;;;AAAA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;;;;;;;;;;;;;AAChB;;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAY;;AAAA;;AAAA;;AACA;;AAAA;AAAA;AAAA;;;;AACZ;;;AAAA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;;;;AAChB;;AAAA;;;AAAA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;;;;;;;;;;;;;AAChB;;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAY;;AACA;;AAAA;AACQ;;AAAA;AAAR;AAAA;;AACO;AAAA;AAAP;;;;;;;;;;;;;AAEJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAER;;;;;;AAEc;;AAAA;AAAA;;;AAAe;AAAf;AAAA;AAA0B;AAA1B;AAAA;AAAqC;;AAArC;AAAA;AACG;AAAjB;AAAiB;;;;AAAA;;AAAA;;AAAA;AAAjB;;;AAAA;;;AACkB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;;;;AAEc;;AAAA;AAAA;;;AAAA;AAAA;AAAe;AAAf;AAAA;AAAqB;AAArB;AAAA;AAA4B;AAA5B;AAAA;;AAAkC;AAAlC;AAAA;;AAAyC;AAAzC;AAAA;AACG;AAAjB;AAAiB;;;;AAAA;;AAAA;;AAAA;AAAjB;;;AAAA;;;AAC6B;;AAAI;AAAJ;AAAS;AAAT;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;;;;AAEc;AAAA;AAAA;;;AAAuB;AAAvB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAiC;AAAjC;AAAA;AAAuC;AAAvC;AAAA;AAAA;AACG;AAAjB;AAAiB;;;;AAAA;;AAAA;;AAAA;AAAjB;;;AAAA;;;AACgD;;AAAA;AAAI;AAAJ;AAAS;AAAT;AAAA;;AAAgB;AAAI;;AAAJ;AAAS;AAAT;AAAA;;AAA9C;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;;;;AAEc;AAAA;AAAA;;;AAAmC;AAAnC;AAAA;AAAA;;AAAA;AAA6C;;AAA7C;AAAA;AAAA;;;AAA6C;;AAA7C;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AACG;AAAjB;AAAiB;;;;AAAA;;AAAA;;AAAA;AAAjB;;;AAAA;;;AACoD;;AAAA;AAAA;;;AAAA;;AAAlC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;;;;AAIkB;;;AAAA;AAAA;AAAA;AAAV;;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACS;AAAjB;AAAiB;;;;AAAA;;AAAA;;AAAA;AAAjB;;;AAAA;;;AAC8C;;AAAA;AAAI;AAAJ;AAAS;AAAT;AAAA;;AAAgB;AAAI;;AAAJ;AAAS;AAAT;AAAA;;AAAlD;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAP;;AAAA;AAER;;;;;;AAIiB;AAAA;AAAA;;;AAAe;;AAAf;AAA+B;;AAA/B;AACA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACT;AAER;;;;;;AAIiB;AAAA;AAAA;;;AAAe;;AAAf;AAA+B;;AAA/B;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACT;AAER;;;;;;AAIgC;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAkB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAjC;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AACT;AAER;;;;;;AAIgC;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAkB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAjC;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AACT;AAER;;;;;;AAIe;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAP;AAER;;;;;;AAEe;;AAAA;AAAA;AAAA;AAAA;AAAP;AACkB;;AAAA;AAAA;AAAa;AAAb;AAAgB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAA5B;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAN;;AACA;AAER;;;;;;;AAEe;;AAAA;AAAP;AACwB;;AAAmB;AAAnB;AAAsB;;AAAmB;AAAnB;AAAA;;AAAnC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAX;AAAA;;AACO;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAAA;;AAAA;;AACO;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAAP;AACO;AAAP;AAES;AAAjB;AAAiB;;;;AAAA;;AAAO;;AAAP;AAAjB;;;AAAA;;;AACmB;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAP;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;;AAAA;AAAP;;;;;;;AAER;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACmB;;AAAA;AAAP;;;;;;;;;;;;;AAEJ;;AAAA;;AAAA;AAAA;;AAAA;AACO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGO;AAAA;;;AAAmC;;AAAnC;AAAP;AAE0B;AAAb;AAAA;AAAA;;AAAA;AAAuB;AAAvB;AAAA;AAAL;AAAR;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACO;;;AAAmC;;AAAnC;AAAP;AAEO;AAAA;;AAAA;AAAA;AAAP;;AAAA;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8"
    },
    "7": {
      "op": "bytecblock 0x 0x151f7c75 0x00 \"a\" 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff \"b\" \"imm_fixed_arr\" 0x62696775696e74 \"Hello\" 0x0000000000000001 0x0000000000000002"
    },
    "132": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "166": {
      "op": "store 0"
    },
    "168": {
      "op": "b main_block@0"
    },
    "171": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "174": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "176": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "177": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "178": {
      "op": "bz main_bare_routing@38",
      "stack_out": []
    },
    "181": {
      "op": "b main_abi_routing@2"
    },
    "184": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "187": {
      "op": "match",
      "stack_out": []
    },
    "189": {
      "op": "b main_route_NoOp@3"
    },
    "192": {
      "block": "main_route_NoOp@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "194": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "195": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "196": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "197": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "200": {
      "op": "match",
      "stack_out": []
    },
    "202": {
      "op": "b main_switch_case_default@4"
    },
    "205": {
      "block": "main_switch_case_default@4",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "207": {
      "op": "bz main_create_NoOp@32",
      "stack_out": []
    },
    "210": {
      "op": "b main_call_NoOp@5"
    },
    "213": {
      "block": "main_call_NoOp@5",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "216": {
      "op": "pushbytes 0x44d42f99 // method \"test_uint64_array()void\"",
      "defined_out": [
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)"
      ]
    },
    "222": {
      "op": "pushbytes 0xb7eaa60b // method \"test_biguint_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)"
      ]
    },
    "228": {
      "op": "pushbytes 0x743d70ed // method \"test_bool_array(uint64)void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)"
      ]
    },
    "234": {
      "op": "pushbytes 0x1c7e0494 // method \"test_fixed_size_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)"
      ]
    },
    "240": {
      "op": "pushbytes 0xa2d5860b // method \"test_fixed_size_named_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)"
      ]
    },
    "246": {
      "op": "pushbytes 0xe05fc564 // method \"test_dynamic_sized_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)"
      ]
    },
    "252": {
      "op": "pushbytes 0x1e092b83 // method \"test_dynamic_sized_named_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)"
      ]
    },
    "258": {
      "op": "pushbytes 0x01310262 // method \"test_implicit_conversion_log(uint64[])void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)"
      ]
    },
    "264": {
      "op": "pushbytes 0xc8654a98 // method \"test_implicit_conversion_emit(uint64[])void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)"
      ]
    },
    "270": {
      "op": "pushbytes 0x89d196f8 // method \"test_nested_array(uint64,uint64[][])uint64[]\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])"
      ]
    },
    "276": {
      "op": "pushbytes 0x6cb7c991 // method \"test_bit_packed_tuples()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)"
      ]
    },
    "282": {
      "op": "pushbytes 0x9898bf02 // method \"sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))"
      ]
    },
    "288": {
      "op": "pushbytes 0xf6b61ee8 // method \"test_uint64_return(uint64)uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])"
      ]
    },
    "294": {
      "op": "pushbytes 0x60b86a7b // method \"test_bool_return(uint64)bool[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])"
      ]
    },
    "300": {
      "op": "pushbytes 0x73ad283f // method \"test_tuple_return(uint64)(uint64,bool,bool)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])"
      ]
    },
    "306": {
      "op": "pushbytes 0x529dfae9 // method \"test_dynamic_tuple_return(uint64)(uint64,string)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])"
      ]
    },
    "312": {
      "op": "pushbytes 0x206d514f // method \"test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])"
      ]
    },
    "318": {
      "op": "pushbytes 0xe06465e2 // method \"test_concat_with_arc4_tuple((uint64,uint64))uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])"
      ]
    },
    "324": {
      "op": "pushbytes 0xec0300a2 // method \"test_concat_with_native_tuple((uint64,uint64))uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])"
      ]
    },
    "330": {
      "op": "pushbytes 0xecdf14af // method \"test_dynamic_concat_with_arc4_tuple((string,string))string[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])"
      ]
    },
    "336": {
      "op": "pushbytes 0x511aca64 // method \"test_dynamic_concat_with_native_tuple((string,string))string[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])"
      ]
    },
    "342": {
      "op": "pushbytes 0x29852e4f // method \"test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])"
      ]
    },
    "348": {
      "op": "pushbytes 0x6d4aa358 // method \"test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])"
      ]
    },
    "354": {
      "op": "pushbytes 0xb7cb96bd // method \"test_imm_fixed_arr()(uint64,uint64)[3]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])"
      ]
    },
    "360": {
      "op": "uncover 24",
      "stack_out": [
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "tmp%7#0"
      ]
    },
    "362": {
      "op": "match main_test_uint64_array_route@6 main_test_biguint_array_route@7 main_test_bool_array_route@8 main_test_fixed_size_tuple_array_route@9 main_test_fixed_size_named_tuple_array_route@10 main_test_dynamic_sized_tuple_array_route@11 main_test_dynamic_sized_named_tuple_array_route@12 main_test_implicit_conversion_log_route@13 main_test_implicit_conversion_emit_route@14 main_test_nested_array_route@15 main_test_bit_packed_tuples_route@16 main_sum_uints_and_lengths_and_trues_route@17 main_test_uint64_return_route@18 main_test_bool_return_route@19 main_test_tuple_return_route@20 main_test_dynamic_tuple_return_route@21 main_test_convert_to_array_and_back_route@22 main_test_concat_with_arc4_tuple_route@23 main_test_concat_with_native_tuple_route@24 main_test_dynamic_concat_with_arc4_tuple_route@25 main_test_dynamic_concat_with_native_tuple_route@26 main_test_concat_immutable_dynamic_route@27 main_test_immutable_arc4_route@28 main_test_imm_fixed_arr_route@29",
      "stack_out": []
    },
    "412": {
      "op": "b main_switch_case_default@30"
    },
    "415": {
      "block": "main_switch_case_default@30",
      "stack_in": [],
      "op": "b main_switch_case_next@31"
    },
    "418": {
      "block": "main_switch_case_next@31",
      "stack_in": [],
      "op": "b main_after_if_else@35"
    },
    "421": {
      "block": "main_after_if_else@35",
      "stack_in": [],
      "op": "b main_switch_case_next@36"
    },
    "424": {
      "block": "main_switch_case_next@36",
      "stack_in": [],
      "op": "b main_switch_case_next@37"
    },
    "427": {
      "block": "main_switch_case_next@37",
      "stack_in": [],
      "op": "b main_after_if_else@42"
    },
    "430": {
      "block": "main_after_if_else@42",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "431": {
      "block": "main_test_imm_fixed_arr_route@29",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr[routing]",
      "op": "callsub test_imm_fixed_arr"
    },
    "434": {
      "op": "b main_switch_case_next@31"
    },
    "437": {
      "block": "main_test_immutable_arc4_route@28",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4[routing]",
      "op": "callsub test_immutable_arc4"
    },
    "440": {
      "op": "b main_switch_case_next@31"
    },
    "443": {
      "block": "main_test_concat_immutable_dynamic_route@27",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic[routing]",
      "op": "callsub test_concat_immutable_dynamic"
    },
    "446": {
      "op": "b main_switch_case_next@31"
    },
    "449": {
      "block": "main_test_dynamic_concat_with_native_tuple_route@26",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple[routing]",
      "op": "callsub test_dynamic_concat_with_native_tuple"
    },
    "452": {
      "op": "b main_switch_case_next@31"
    },
    "455": {
      "block": "main_test_dynamic_concat_with_arc4_tuple_route@25",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple[routing]",
      "op": "callsub test_dynamic_concat_with_arc4_tuple"
    },
    "458": {
      "op": "b main_switch_case_next@31"
    },
    "461": {
      "block": "main_test_concat_with_native_tuple_route@24",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple[routing]",
      "op": "callsub test_concat_with_native_tuple"
    },
    "464": {
      "op": "b main_switch_case_next@31"
    },
    "467": {
      "block": "main_test_concat_with_arc4_tuple_route@23",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple[routing]",
      "op": "callsub test_concat_with_arc4_tuple"
    },
    "470": {
      "op": "b main_switch_case_next@31"
    },
    "473": {
      "block": "main_test_convert_to_array_and_back_route@22",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back[routing]",
      "op": "callsub test_convert_to_array_and_back"
    },
    "476": {
      "op": "b main_switch_case_next@31"
    },
    "479": {
      "block": "main_test_dynamic_tuple_return_route@21",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return[routing]",
      "op": "callsub test_dynamic_tuple_return"
    },
    "482": {
      "op": "b main_switch_case_next@31"
    },
    "485": {
      "block": "main_test_tuple_return_route@20",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return[routing]",
      "op": "callsub test_tuple_return"
    },
    "488": {
      "op": "b main_switch_case_next@31"
    },
    "491": {
      "block": "main_test_bool_return_route@19",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return[routing]",
      "op": "callsub test_bool_return"
    },
    "494": {
      "op": "b main_switch_case_next@31"
    },
    "497": {
      "block": "main_test_uint64_return_route@18",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return[routing]",
      "op": "callsub test_uint64_return"
    },
    "500": {
      "op": "b main_switch_case_next@31"
    },
    "503": {
      "block": "main_sum_uints_and_lengths_and_trues_route@17",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues[routing]",
      "op": "callsub sum_uints_and_lengths_and_trues"
    },
    "506": {
      "op": "b main_switch_case_next@31"
    },
    "509": {
      "block": "main_test_bit_packed_tuples_route@16",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples[routing]",
      "op": "callsub test_bit_packed_tuples"
    },
    "512": {
      "op": "b main_switch_case_next@31"
    },
    "515": {
      "block": "main_test_nested_array_route@15",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array[routing]",
      "op": "callsub test_nested_array"
    },
    "518": {
      "op": "b main_switch_case_next@31"
    },
    "521": {
      "block": "main_test_implicit_conversion_emit_route@14",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit[routing]",
      "op": "callsub test_implicit_conversion_emit"
    },
    "524": {
      "op": "b main_switch_case_next@31"
    },
    "527": {
      "block": "main_test_implicit_conversion_log_route@13",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log[routing]",
      "op": "callsub test_implicit_conversion_log"
    },
    "530": {
      "op": "b main_switch_case_next@31"
    },
    "533": {
      "block": "main_test_dynamic_sized_named_tuple_array_route@12",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array[routing]",
      "op": "callsub test_dynamic_sized_named_tuple_array"
    },
    "536": {
      "op": "b main_switch_case_next@31"
    },
    "539": {
      "block": "main_test_dynamic_sized_tuple_array_route@11",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array[routing]",
      "op": "callsub test_dynamic_sized_tuple_array"
    },
    "542": {
      "op": "b main_switch_case_next@31"
    },
    "545": {
      "block": "main_test_fixed_size_named_tuple_array_route@10",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array[routing]",
      "op": "callsub test_fixed_size_named_tuple_array"
    },
    "548": {
      "op": "b main_switch_case_next@31"
    },
    "551": {
      "block": "main_test_fixed_size_tuple_array_route@9",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array[routing]",
      "op": "callsub test_fixed_size_tuple_array"
    },
    "554": {
      "op": "b main_switch_case_next@31"
    },
    "557": {
      "block": "main_test_bool_array_route@8",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array[routing]",
      "op": "callsub test_bool_array"
    },
    "560": {
      "op": "b main_switch_case_next@31"
    },
    "563": {
      "block": "main_test_biguint_array_route@7",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array[routing]",
      "op": "callsub test_biguint_array"
    },
    "566": {
      "op": "b main_switch_case_next@31"
    },
    "569": {
      "block": "main_test_uint64_array_route@6",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array[routing]",
      "op": "callsub test_uint64_array"
    },
    "572": {
      "op": "b main_switch_case_next@31"
    },
    "575": {
      "block": "main_create_NoOp@32",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "578": {
      "op": "match",
      "stack_out": []
    },
    "580": {
      "op": "b main_switch_case_default@33"
    },
    "583": {
      "block": "main_switch_case_default@33",
      "stack_in": [],
      "op": "b main_switch_case_next@34"
    },
    "586": {
      "block": "main_switch_case_next@34",
      "stack_in": [],
      "op": "b main_after_if_else@35"
    },
    "589": {
      "block": "main_bare_routing@38",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "591": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "592": {
      "op": "uncover 1",
      "stack_out": [
        "0",
        "tmp%9#0"
      ]
    },
    "594": {
      "op": "match main___algopy_default_create@39",
      "stack_out": []
    },
    "598": {
      "op": "b main_switch_case_default@40"
    },
    "601": {
      "block": "main_switch_case_default@40",
      "stack_in": [],
      "op": "b main_switch_case_next@41"
    },
    "604": {
      "block": "main_switch_case_next@41",
      "stack_in": [],
      "op": "b main_after_if_else@42"
    },
    "607": {
      "block": "main___algopy_default_create@39",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "609": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "610": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "611": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "612": {
      "op": "b main_block@44"
    },
    "615": {
      "block": "main_block@44",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@45"
    },
    "618": {
      "block": "main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@45",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "619": {
      "op": "return",
      "stack_out": []
    },
    "620": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_bit",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_bit",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "623": {
      "op": "b dynamic_array_pop_bit_block@0"
    },
    "626": {
      "block": "dynamic_array_pop_bit_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "628": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "629": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "630": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "631": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "632": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "633": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "tmp%2#0"
      ]
    },
    "634": {
      "op": "extract 6 0",
      "defined_out": [
        "length_minus_1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "tmp%3#0"
      ]
    },
    "637": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "tmp%3#0",
        "array#0 (copy)"
      ]
    },
    "639": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "array#0 (copy)",
        "tmp%3#0"
      ]
    },
    "641": {
      "op": "replace2 0",
      "defined_out": [
        "length_minus_1#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0"
      ]
    },
    "643": {
      "op": "dig 1",
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "645": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)",
        "16"
      ]
    },
    "647": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "648": {
      "op": "dup2",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "popped_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "result#0 (copy)",
        "popped_location#0 (copy)"
      ]
    },
    "649": {
      "op": "getbit",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "tmp%6#0"
      ]
    },
    "650": {
      "op": "cover 3",
      "defined_out": [
        "length_minus_1#0",
        "popped#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "652": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "0"
      ]
    },
    "653": {
      "op": "setbit",
      "defined_out": [
        "length_minus_1#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0"
      ]
    },
    "654": {
      "op": "uncover 1",
      "stack_out": [
        "popped#0",
        "result#0",
        "length_minus_1#0"
      ]
    },
    "656": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "length_minus_1#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "length_minus_1#0",
        "7"
      ]
    },
    "658": {
      "op": "+",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%8#0"
      ]
    },
    "659": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "popped#0",
        "result#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%8#0",
        "8"
      ]
    },
    "660": {
      "op": "/",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%9#0"
      ]
    },
    "661": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "popped#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%9#0",
        "2"
      ]
    },
    "662": {
      "op": "+",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%10#0"
      ]
    },
    "663": {
      "op": "uncover 1",
      "stack_out": [
        "popped#0",
        "tmp%10#0",
        "result#0"
      ]
    },
    "665": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "tmp%10#0",
        "result#0",
        "0"
      ]
    },
    "666": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "tmp%10#0"
      ]
    },
    "668": {
      "op": "substring3",
      "defined_out": [
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "669": {
      "retsub": true,
      "op": "retsub"
    },
    "670": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "params": {
        "array#0": "bytes",
        "fixed_byte_size#0": "uint64"
      },
      "block": "dynamic_array_pop_fixed_size",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "673": {
      "op": "b dynamic_array_pop_fixed_size_block@0"
    },
    "676": {
      "block": "dynamic_array_pop_fixed_size_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "678": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "679": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "680": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "681": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "682": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "683": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "686": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%3#0",
        "array#0 (copy)"
      ]
    },
    "688": {
      "op": "uncover 1",
      "stack_out": [
        "array#0 (copy)",
        "tmp%3#0"
      ]
    },
    "690": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "692": {
      "op": "dup",
      "defined_out": [
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "result#0 (copy)"
      ]
    },
    "693": {
      "op": "len",
      "defined_out": [
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0"
      ]
    },
    "694": {
      "op": "frame_dig -1",
      "defined_out": [
        "fixed_byte_size#0 (copy)",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "696": {
      "op": "-",
      "defined_out": [
        "item_location#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0"
      ]
    },
    "697": {
      "op": "dup2",
      "defined_out": [
        "item_location#0",
        "item_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)"
      ]
    },
    "698": {
      "op": "frame_dig -1",
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "700": {
      "op": "extract3",
      "defined_out": [
        "item_location#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "tmp%7#0"
      ]
    },
    "701": {
      "op": "cover 2",
      "defined_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "item_location#0"
      ]
    },
    "703": {
      "op": "uncover 1",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0"
      ]
    },
    "705": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0",
        "0"
      ]
    },
    "706": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "item_location#0"
      ]
    },
    "708": {
      "op": "substring3",
      "defined_out": [
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "709": {
      "retsub": true,
      "op": "retsub"
    },
    "710": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_dynamic_element",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "713": {
      "op": "b dynamic_array_pop_dynamic_element_block@0"
    },
    "716": {
      "block": "dynamic_array_pop_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "718": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "719": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "720": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "721": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "722": {
      "op": "dupn 2",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "724": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "2"
      ]
    },
    "725": {
      "op": "*",
      "defined_out": [
        "length_minus_1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "tmp%2#0"
      ]
    },
    "726": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0 (copy)"
      ]
    },
    "727": {
      "op": "cover 2",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "729": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "array#0 (copy)"
      ]
    },
    "731": {
      "op": "extract 2 0",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%3#0"
      ]
    },
    "734": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "735": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "737": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "738": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "popped_header_offset#0"
      ]
    },
    "740": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "tmp%4#0"
      ]
    },
    "741": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ]
    },
    "742": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "744": {
      "op": "dig 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "746": {
      "op": "len",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%5#0"
      ]
    },
    "747": {
      "op": "cover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "tmp%5#0",
        "popped_offset#0"
      ]
    },
    "749": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%5#0",
        "popped_offset#0",
        "head_and_tail#0"
      ]
    },
    "751": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%5#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "753": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%5#0"
      ]
    },
    "755": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%6#0"
      ]
    },
    "756": {
      "op": "cover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0"
      ]
    },
    "758": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0",
        "0x"
      ]
    },
    "759": {
      "op": "cover 1",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0"
      ]
    },
    "761": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0",
        "2"
      ]
    },
    "762": {
      "op": "*",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "763": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "2"
      ]
    },
    "764": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "765": {
      "op": "intc_0 // 0",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "766": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "769": {
      "block": "dynamic_array_pop_dynamic_element_for_header@1",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "771": {
      "op": "frame_dig 6",
      "defined_out": [
        "head_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "773": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "774": {
      "op": "bz dynamic_array_pop_dynamic_element_after_for@4",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "777": {
      "op": "b dynamic_array_pop_dynamic_element_for_body@2"
    },
    "780": {
      "block": "dynamic_array_pop_dynamic_element_for_body@2",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_and_tail#0"
      ]
    },
    "782": {
      "op": "frame_dig 7",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0"
      ]
    },
    "784": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "785": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "item_offset#0",
        "2"
      ]
    },
    "786": {
      "op": "-",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "787": {
      "op": "itob",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "788": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "791": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%11#0",
        "new_head#0"
      ]
    },
    "793": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head#0",
        "tmp%11#0"
      ]
    },
    "795": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "796": {
      "op": "frame_bury 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "798": {
      "op": "b dynamic_array_pop_dynamic_element_for_footer@3"
    },
    "801": {
      "block": "dynamic_array_pop_dynamic_element_for_footer@3",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "803": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "804": {
      "op": "+",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "805": {
      "op": "frame_bury 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "807": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "810": {
      "block": "dynamic_array_pop_dynamic_element_after_for@4",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "length_minus_1#0"
      ]
    },
    "812": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "813": {
      "op": "extract 6 2",
      "defined_out": [
        "length_minus_1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "816": {
      "op": "frame_dig 5",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%14#0",
        "new_head#0"
      ]
    },
    "818": {
      "op": "concat",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "819": {
      "op": "frame_dig 1",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "popped_header_offset#0"
      ]
    },
    "821": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "popped_header_offset#0",
        "2"
      ]
    },
    "822": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "823": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "head_and_tail#0"
      ]
    },
    "825": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0"
      ]
    },
    "827": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0",
        "popped_offset#0"
      ]
    },
    "829": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "830": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "updated#0"
      ]
    },
    "831": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "updated#0",
        "popped#0"
      ]
    },
    "833": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "popped#0",
        "updated#0"
      ]
    },
    "835": {
      "op": "frame_bury 1"
    },
    "837": {
      "op": "frame_bury 0"
    },
    "839": {
      "retsub": true,
      "op": "retsub"
    },
    "840": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "843": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "844": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0",
        "write_end#0"
      ]
    },
    "845": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "846": {
      "op": "b dynamic_array_concat_bits_block@0"
    },
    "849": {
      "block": "dynamic_array_concat_bits_block@0",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "851": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "852": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "tmp%0#0"
      ]
    },
    "853": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "855": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "857": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "858": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "859": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ]
    },
    "860": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "863": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "865": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "867": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%4#0"
      ]
    },
    "869": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)",
        "result#0 (copy)"
      ]
    },
    "870": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)"
      ]
    },
    "872": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "874": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "876": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "878": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0"
      ]
    },
    "879": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0",
        "8"
      ]
    },
    "880": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%6#0"
      ]
    },
    "881": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "current_bytes#0 (copy)",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0 (copy)"
      ]
    },
    "882": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "884": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "886": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "888": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0"
      ]
    },
    "889": {
      "op": "intc_3 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0",
        "8"
      ]
    },
    "890": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%8#0"
      ]
    },
    "891": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0 (copy)"
      ]
    },
    "892": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "894": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%9#0"
      ]
    },
    "895": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "898": {
      "op": "b dynamic_array_concat_bits_if_body@1"
    },
    "901": {
      "block": "dynamic_array_concat_bits_if_body@1",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0"
      ]
    },
    "903": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "905": {
      "op": "-",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%10#0"
      ]
    },
    "906": {
      "op": "bzero",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%11#0"
      ]
    },
    "907": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%11#0",
        "result#0"
      ]
    },
    "909": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0",
        "tmp%11#0"
      ]
    },
    "911": {
      "op": "concat",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "912": {
      "op": "frame_bury 7",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "914": {
      "op": "b dynamic_array_concat_bits_after_if_else@2"
    },
    "917": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#7"
      ]
    },
    "919": {
      "op": "frame_bury 4",
      "defined_out": [
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "921": {
      "op": "intc_0 // 0",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "0"
      ]
    },
    "922": {
      "op": "frame_bury 0",
      "defined_out": [
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "924": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0"
      ]
    },
    "926": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0",
        "16"
      ]
    },
    "928": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "result#7",
        "tmp%13#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%13#0"
      ]
    },
    "929": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "result#7",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_offset#0 (copy)"
      ]
    },
    "930": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "result#7",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "932": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "result#7",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "934": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "result#7",
        "tmp%14#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%14#0"
      ]
    },
    "935": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "result#7",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "937": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "940": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "942": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "944": {
      "op": "<",
      "defined_out": [
        "tmp%15#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%15#0"
      ]
    },
    "945": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "948": {
      "op": "b dynamic_array_concat_bits_while_body@4"
    },
    "951": {
      "block": "dynamic_array_concat_bits_while_body@4",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)"
      ]
    },
    "953": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "955": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "956": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "958": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0"
      ]
    },
    "959": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0"
      ]
    },
    "961": {
      "op": "frame_dig 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "963": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "964": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "966": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%16#0"
      ]
    },
    "968": {
      "op": "setbit",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%17#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "tmp%17#0"
      ]
    },
    "969": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "971": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "972": {
      "op": "+",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%18#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%18#0"
      ]
    },
    "973": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "975": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "977": {
      "op": "+",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%19#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%19#0"
      ]
    },
    "978": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "980": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "983": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "985": {
      "op": "frame_bury 0"
    },
    "987": {
      "retsub": true,
      "op": "retsub"
    },
    "988": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "991": {
      "op": "b dynamic_array_concat_byte_length_head_block@0"
    },
    "994": {
      "block": "dynamic_array_concat_byte_length_head_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "996": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "997": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "998": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "999": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1001": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length#0",
        "tmp%1#0"
      ]
    },
    "1002": {
      "op": "cover 1",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "1004": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "1005": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%2#0"
      ]
    },
    "1006": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%2#0",
        "2"
      ]
    },
    "1007": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "1008": {
      "op": "dig 1",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "new_length#0 (copy)"
      ]
    },
    "1010": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%4#0"
      ]
    },
    "1011": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%5#0"
      ]
    },
    "1014": {
      "op": "cover 1",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0"
      ]
    },
    "1016": {
      "op": "frame_dig -3",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "array#0 (copy)"
      ]
    },
    "1018": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1019": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "1021": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0"
      ]
    },
    "1022": {
      "op": "frame_dig -1",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1024": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1025": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1026": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1027": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%9#0"
      ]
    },
    "1028": {
      "op": "frame_dig -3",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%9#0",
        "array#0 (copy)"
      ]
    },
    "1030": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%10#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1031": {
      "op": "frame_dig -3",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%9#0",
        "tmp%10#0",
        "array#0 (copy)"
      ]
    },
    "1033": {
      "op": "uncover 3",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%10#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "1035": {
      "op": "uncover 2",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%10#0"
      ]
    },
    "1037": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "1038": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%12#0"
      ]
    },
    "1039": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%12#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "1041": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%13#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%13#0"
      ]
    },
    "1042": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "tmp%13#0",
        "new_length#0"
      ]
    },
    "1044": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "tmp%13#0",
        "new_length#0",
        "0"
      ]
    },
    "1045": {
      "callsub": "_puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head",
      "op": "callsub recalculate_head_for_elements_with_byte_length_head",
      "defined_out": [
        "tmp%14#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%14#0"
      ]
    },
    "1048": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1049": {
      "retsub": true,
      "op": "retsub"
    },
    "1050": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "1053": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1054": {
      "op": "b dynamic_array_concat_dynamic_element_block@0"
    },
    "1057": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "tmp%8#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0"
      ]
    },
    "1058": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1060": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1061": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "1062": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1064": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "1065": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "1066": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "2"
      ]
    },
    "1067": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "1068": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1069": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "1072": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1074": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "1076": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "1077": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1080": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@2"
    },
    "1083": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1085": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1087": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1088": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1090": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "1091": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "1092": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "1095": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "1097": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "1099": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "1100": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1102": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@3"
    },
    "1105": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1107": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1108": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1109": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1111": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "1114": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1116": {
      "op": "len",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "1117": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1119": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1121": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1122": {
      "op": "*",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "1123": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1125": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "2"
      ]
    },
    "1126": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1127": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "0"
      ]
    },
    "1128": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1130": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "1133": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1135": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "1137": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "1138": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1141": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@6"
    },
    "1144": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1146": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1148": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1149": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1151": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "1152": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "1153": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "1156": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "1158": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "1160": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "1161": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1163": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@7"
    },
    "1166": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1168": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1169": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1170": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1172": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "1175": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1177": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1179": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "1180": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "1181": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "1184": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "1186": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "1187": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1189": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "1190": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1191": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1193": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1194": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1196": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0"
      ]
    },
    "1198": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1200": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "1201": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "1202": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1204": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1205": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1206": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1208": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "1209": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1211": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0"
      ]
    },
    "1213": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "1215": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "1216": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "1217": {
      "op": "frame_bury 0"
    },
    "1219": {
      "retsub": true,
      "op": "retsub"
    },
    "1220": {
      "subroutine": "_puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head",
      "params": {
        "array_head_and_tail#0": "bytes",
        "length#0": "uint64",
        "start_at_index#0": "uint64"
      },
      "block": "recalculate_head_for_elements_with_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1223": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_block@0"
    },
    "1226": {
      "block": "recalculate_head_for_elements_with_byte_length_head_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "length#0 (copy)"
      ]
    },
    "1228": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0 (copy)"
      ],
      "stack_out": [
        "length#0 (copy)",
        "2"
      ]
    },
    "1229": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1230": {
      "op": "frame_dig -1",
      "defined_out": [
        "start_at_index#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1232": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%0#0",
        "start_at_index#0 (copy)",
        "2"
      ]
    },
    "1233": {
      "op": "*",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1234": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1236": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1238": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1239": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1241": {
      "op": "select",
      "defined_out": [],
      "stack_out": [
        "tail_offset#0"
      ]
    },
    "1242": {
      "op": "frame_dig -2",
      "stack_out": [
        "tail_offset#0",
        "length#0 (copy)"
      ]
    },
    "1244": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "1245": {
      "op": "*",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0"
      ]
    },
    "1246": {
      "op": "frame_dig -1",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1248": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "start_at_index#0 (copy)",
        "2"
      ]
    },
    "1249": {
      "op": "*",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1250": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "tmp%5#0",
        "2"
      ]
    },
    "1251": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0"
      ]
    },
    "1252": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_header@1"
    },
    "1255": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_header@1",
      "stack_in": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1257": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "1259": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "1260": {
      "op": "bz recalculate_head_for_elements_with_byte_length_head_after_for@4",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0"
      ]
    },
    "1263": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_body@2"
    },
    "1266": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_body@2",
      "stack_in": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tail_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "1268": {
      "op": "dup",
      "defined_out": [
        "tail_offset#0",
        "tail_offset#0 (copy)"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#0 (copy)"
      ]
    },
    "1269": {
      "op": "itob",
      "defined_out": [
        "tail_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%6#0"
      ]
    },
    "1270": {
      "op": "extract 6 2",
      "defined_out": [
        "tail_offset#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "1273": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "tail_offset#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1275": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1277": {
      "op": "uncover 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "1279": {
      "op": "replace3",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%8#0"
      ]
    },
    "1280": {
      "op": "dup"
    },
    "1281": {
      "op": "frame_bury -3",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1283": {
      "op": "dig 1",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)",
        "tail_offset#0 (copy)"
      ]
    },
    "1285": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%9#0"
      ]
    },
    "1286": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "tail_offset#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%9#0",
        "2"
      ]
    },
    "1287": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%10#0"
      ]
    },
    "1288": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "1289": {
      "op": "frame_bury 0",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0"
      ]
    },
    "1291": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_footer@3"
    },
    "1294": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_footer@3",
      "stack_in": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1296": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1297": {
      "op": "+",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1298": {
      "op": "frame_bury 2",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0"
      ]
    },
    "1300": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_header@1"
    },
    "1303": {
      "block": "recalculate_head_for_elements_with_byte_length_head_after_for@4",
      "stack_in": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1305": {
      "op": "frame_bury 0"
    },
    "1307": {
      "retsub": true,
      "op": "retsub"
    },
    "1308": {
      "subroutine": "test_cases.array.immutable.sum_imm_fixed",
      "params": {
        "arr#0": "bytes"
      },
      "block": "sum_imm_fixed",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1311": {
      "op": "b sum_imm_fixed_block@0"
    },
    "1314": {
      "block": "sum_imm_fixed_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0"
      ]
    },
    "1315": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1316": {
      "op": "b sum_imm_fixed_for_header@1"
    },
    "1319": {
      "block": "sum_imm_fixed_for_header@1",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1321": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "3"
      ]
    },
    "1323": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1324": {
      "op": "bz sum_imm_fixed_after_for@4",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1327": {
      "op": "b sum_imm_fixed_for_body@2"
    },
    "1330": {
      "block": "sum_imm_fixed_for_body@2",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1332": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "16"
      ]
    },
    "1334": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1335": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0 (copy)"
      ]
    },
    "1337": {
      "op": "uncover 1",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1339": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "1341": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "1342": {
      "op": "dup",
      "defined_out": [
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)"
      ]
    },
    "1343": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)",
        "0"
      ]
    },
    "1344": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)",
        "0",
        "8"
      ]
    },
    "1345": {
      "op": "extract3",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "tuple_item%0#0"
      ]
    },
    "1346": {
      "op": "btoi",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "values%0#0"
      ]
    },
    "1347": {
      "op": "frame_dig 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "values%0#0",
        "total#0"
      ]
    },
    "1349": {
      "op": "+",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "1350": {
      "op": "uncover 1",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "item#0"
      ]
    },
    "1352": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "item#0",
        "8"
      ]
    },
    "1353": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "item#0",
        "8",
        "8"
      ]
    },
    "1354": {
      "op": "extract3",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "tuple_item%1#0"
      ]
    },
    "1355": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ]
    },
    "1356": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%1#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1357": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1359": {
      "op": "b sum_imm_fixed_for_footer@3"
    },
    "1362": {
      "block": "sum_imm_fixed_for_footer@3",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1364": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1365": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1366": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1368": {
      "op": "b sum_imm_fixed_for_header@1"
    },
    "1371": {
      "block": "sum_imm_fixed_after_for@4",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1372": {
      "subroutine": "test_cases.array.immutable.times",
      "params": {
        "n#0": "uint64"
      },
      "block": "times",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1375": {
      "op": "b times_block@0"
    },
    "1378": {
      "block": "times_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "defined_out": [],
      "stack_out": [
        "result#0"
      ]
    },
    "1379": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "result#0",
        "1"
      ]
    },
    "1380": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "result#0"
      ]
    },
    "1381": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1382": {
      "op": "b times_for_header@1"
    },
    "1385": {
      "block": "times_for_header@1",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1387": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "n#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "n#0 (copy)"
      ]
    },
    "1389": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1390": {
      "op": "bz times_after_for@4",
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1393": {
      "op": "b times_for_body@2"
    },
    "1396": {
      "block": "times_for_body@2",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "1398": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0",
        "\" \""
      ]
    },
    "1401": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "tmp%0#0"
      ]
    },
    "1402": {
      "op": "frame_bury 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1404": {
      "op": "b times_for_footer@3"
    },
    "1407": {
      "block": "times_for_footer@3",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1409": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1410": {
      "op": "+",
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1411": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1413": {
      "op": "b times_for_header@1"
    },
    "1416": {
      "block": "times_after_for@4",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "1417": {
      "subroutine": "test_cases.array.immutable.add_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1420": {
      "op": "b add_x_block@0"
    },
    "1423": {
      "block": "add_x_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1424": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1425": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "1426": {
      "op": "b add_x_for_header@1"
    },
    "1429": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1431": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "1433": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1434": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "1437": {
      "op": "b add_x_for_body@2"
    },
    "1440": {
      "block": "add_x_for_body@2",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1442": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1443": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1444": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1446": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0"
      ]
    },
    "1447": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0",
        "arr#0 (copy)"
      ]
    },
    "1449": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "arr#0 (copy)",
        "tmp%0#0"
      ]
    },
    "1451": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0"
      ]
    },
    "1452": {
      "op": "frame_dig -2",
      "stack_out": [
        "i#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1454": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1455": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1456": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "1457": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "1458": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "1459": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1462": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "1464": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "1465": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "1467": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "1468": {
      "op": "frame_bury -2",
      "stack_out": [
        "i#0"
      ]
    },
    "1470": {
      "op": "b add_x_for_footer@3"
    },
    "1473": {
      "block": "add_x_for_footer@3",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1475": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1476": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1477": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1479": {
      "op": "b add_x_for_header@1"
    },
    "1482": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "1484": {
      "op": "uncover 1"
    },
    "1486": {
      "retsub": true,
      "op": "retsub"
    },
    "1487": {
      "subroutine": "test_cases.array.immutable.pop_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "pop_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1490": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1491": {
      "op": "b pop_x_block@0"
    },
    "1494": {
      "block": "pop_x_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1495": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1496": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "_i#0"
      ]
    },
    "1497": {
      "op": "b pop_x_for_header@1"
    },
    "1500": {
      "block": "pop_x_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1502": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "_i#0",
        "x#0 (copy)"
      ]
    },
    "1504": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1505": {
      "op": "bz pop_x_after_for@4",
      "stack_out": [
        "tmp%0#0",
        "_i#0"
      ]
    },
    "1508": {
      "op": "b pop_x_for_body@2"
    },
    "1511": {
      "block": "pop_x_for_body@2",
      "stack_in": [
        "tmp%0#0",
        "_i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "arr#0 (copy)"
      ]
    },
    "1513": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "arr#0 (copy)",
        "8"
      ]
    },
    "1514": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1517": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1519": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "tmp%1#0"
      ]
    },
    "1521": {
      "op": "frame_bury -2",
      "stack_out": [
        "tmp%0#0",
        "_i#0"
      ]
    },
    "1523": {
      "op": "b pop_x_for_footer@3"
    },
    "1526": {
      "block": "pop_x_for_footer@3",
      "stack_in": [
        "tmp%0#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1528": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1529": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1530": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0"
      ]
    },
    "1532": {
      "op": "b pop_x_for_header@1"
    },
    "1535": {
      "block": "pop_x_after_for@4",
      "stack_in": [
        "tmp%0#0",
        "_i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "_i#0",
        "arr#0 (copy)"
      ]
    },
    "1537": {
      "op": "frame_bury 0"
    },
    "1539": {
      "retsub": true,
      "op": "retsub"
    },
    "1540": {
      "subroutine": "test_cases.array.immutable.add_xb",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_xb",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1543": {
      "op": "b add_xb_block@0"
    },
    "1546": {
      "block": "add_xb_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1547": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1548": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "1549": {
      "op": "b add_xb_for_header@1"
    },
    "1552": {
      "block": "add_xb_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1554": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "1556": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1557": {
      "op": "bz add_xb_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "1560": {
      "op": "b add_xb_for_body@2"
    },
    "1563": {
      "block": "add_xb_for_body@2",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1565": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0"
      ]
    },
    "1566": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1567": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0",
        "aggregate%value_len%0#0"
      ]
    },
    "1568": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "1570": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "1571": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "i#0",
        "tmp%0#0"
      ]
    },
    "1572": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "i#0",
        "tmp%0#0",
        "64"
      ]
    },
    "1574": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1575": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "1576": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint512)%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "aggregate%as_Encoded(uint512)%0#0",
        "0x"
      ]
    },
    "1577": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "1579": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%1#0"
      ]
    },
    "1580": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%1#0",
        "arr#0 (copy)"
      ]
    },
    "1582": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "arr#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1584": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0"
      ]
    },
    "1585": {
      "op": "frame_dig -2",
      "stack_out": [
        "i#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1587": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1588": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1589": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "1590": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "1591": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "1592": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1595": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "1597": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "1598": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "1600": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint512[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "as_Encoded(len+uint512[])%0#0"
      ]
    },
    "1601": {
      "op": "frame_bury -2",
      "stack_out": [
        "i#0"
      ]
    },
    "1603": {
      "op": "b add_xb_for_footer@3"
    },
    "1606": {
      "block": "add_xb_for_footer@3",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1608": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1609": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1610": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1612": {
      "op": "b add_xb_for_header@1"
    },
    "1615": {
      "block": "add_xb_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "1617": {
      "op": "uncover 1"
    },
    "1619": {
      "retsub": true,
      "op": "retsub"
    },
    "1620": {
      "subroutine": "test_cases.array.immutable.sum_arr",
      "params": {
        "arr#0": "bytes"
      },
      "block": "sum_arr",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1623": {
      "op": "b sum_arr_block@0"
    },
    "1626": {
      "block": "sum_arr_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0"
      ]
    },
    "1627": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "arr#0 (copy)"
      ]
    },
    "1629": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1630": {
      "op": "extract_uint16",
      "defined_out": [],
      "stack_out": [
        "total#0",
        "array_length%0#0"
      ]
    },
    "1631": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1632": {
      "op": "b sum_arr_for_header@1"
    },
    "1635": {
      "block": "sum_arr_for_header@1",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1637": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "1639": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1640": {
      "op": "bz sum_arr_after_for@4",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1643": {
      "op": "b sum_arr_for_body@2"
    },
    "1646": {
      "block": "sum_arr_for_body@2",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "1648": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0"
      ]
    },
    "1649": {
      "op": "frame_dig -1",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0 (copy)"
      ]
    },
    "1651": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "1652": {
      "op": "uncover 2",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "1654": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "1655": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1657": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1658": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1659": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "1660": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%0#0"
      ]
    },
    "1661": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "1662": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0",
        "total#0"
      ]
    },
    "1664": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1665": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1667": {
      "op": "b sum_arr_for_footer@3"
    },
    "1670": {
      "block": "sum_arr_for_footer@3",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1672": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1673": {
      "op": "+",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1674": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1676": {
      "op": "b sum_arr_for_header@1"
    },
    "1679": {
      "block": "sum_arr_after_for@4",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1680": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array[routing]",
      "params": {},
      "block": "test_uint64_array",
      "stack_in": [],
      "op": "b test_uint64_array_block@0"
    },
    "1683": {
      "block": "test_uint64_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_uint64_array"
    },
    "1686": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1687": {
      "op": "return",
      "stack_out": []
    },
    "1688": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array[routing]",
      "params": {},
      "block": "test_biguint_array",
      "stack_in": [],
      "op": "b test_biguint_array_block@0"
    },
    "1691": {
      "block": "test_biguint_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_biguint_array"
    },
    "1694": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1695": {
      "op": "return",
      "stack_out": []
    },
    "1696": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array[routing]",
      "params": {},
      "block": "test_bool_array",
      "stack_in": [],
      "op": "b test_bool_array_block@0"
    },
    "1699": {
      "block": "test_bool_array_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1702": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1703": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "stack_out": []
    },
    "1706": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1707": {
      "op": "return",
      "stack_out": []
    },
    "1708": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array[routing]",
      "params": {},
      "block": "test_fixed_size_tuple_array",
      "stack_in": [],
      "op": "b test_fixed_size_tuple_array_block@0"
    },
    "1711": {
      "block": "test_fixed_size_tuple_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array"
    },
    "1714": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1715": {
      "op": "return",
      "stack_out": []
    },
    "1716": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array[routing]",
      "params": {},
      "block": "test_fixed_size_named_tuple_array",
      "stack_in": [],
      "op": "b test_fixed_size_named_tuple_array_block@0"
    },
    "1719": {
      "block": "test_fixed_size_named_tuple_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array"
    },
    "1722": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1723": {
      "op": "return",
      "stack_out": []
    },
    "1724": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array[routing]",
      "params": {},
      "block": "test_dynamic_sized_tuple_array",
      "stack_in": [],
      "op": "b test_dynamic_sized_tuple_array_block@0"
    },
    "1727": {
      "block": "test_dynamic_sized_tuple_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array"
    },
    "1730": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1731": {
      "op": "return",
      "stack_out": []
    },
    "1732": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array[routing]",
      "params": {},
      "block": "test_dynamic_sized_named_tuple_array",
      "stack_in": [],
      "op": "b test_dynamic_sized_named_tuple_array_block@0"
    },
    "1735": {
      "block": "test_dynamic_sized_named_tuple_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array"
    },
    "1738": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1739": {
      "op": "return",
      "stack_out": []
    },
    "1740": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log[routing]",
      "params": {},
      "block": "test_implicit_conversion_log",
      "stack_in": [],
      "op": "b test_implicit_conversion_log_block@0"
    },
    "1743": {
      "block": "test_implicit_conversion_log_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1746": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "stack_out": []
    },
    "1749": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1750": {
      "op": "return",
      "stack_out": []
    },
    "1751": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit[routing]",
      "params": {},
      "block": "test_implicit_conversion_emit",
      "stack_in": [],
      "op": "b test_implicit_conversion_emit_block@0"
    },
    "1754": {
      "block": "test_implicit_conversion_emit_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1757": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "stack_out": []
    },
    "1760": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1761": {
      "op": "return",
      "stack_out": []
    },
    "1762": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array[routing]",
      "params": {},
      "block": "test_nested_array",
      "stack_in": [],
      "op": "b test_nested_array_block@0"
    },
    "1765": {
      "block": "test_nested_array_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1768": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1769": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(len+uint64[])[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+(len+uint64[])[])%0#0"
      ]
    },
    "1772": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1775": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1776": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1778": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1779": {
      "op": "log",
      "stack_out": []
    },
    "1780": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1781": {
      "op": "return",
      "stack_out": []
    },
    "1782": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples[routing]",
      "params": {},
      "block": "test_bit_packed_tuples",
      "stack_in": [],
      "op": "b test_bit_packed_tuples_block@0"
    },
    "1785": {
      "block": "test_bit_packed_tuples_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples"
    },
    "1788": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1789": {
      "op": "return",
      "stack_out": []
    },
    "1790": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues[routing]",
      "params": {},
      "block": "sum_uints_and_lengths_and_trues",
      "stack_in": [],
      "op": "b sum_uints_and_lengths_and_trues_block@0"
    },
    "1793": {
      "block": "sum_uints_and_lengths_and_trues_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1796": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0"
      ]
    },
    "1799": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "1802": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "1805": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1807": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0"
      ]
    },
    "1809": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "1811": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "1813": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1816": {
      "op": "cover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1818": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1820": {
      "op": "cover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1822": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1823": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1824": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1826": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%0#0"
      ]
    },
    "1827": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "tmp%1#0"
      ]
    },
    "1829": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1830": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%1#0"
      ]
    },
    "1831": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0"
      ]
    },
    "1833": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1834": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%2#0"
      ]
    },
    "1835": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "tmp%3#0"
      ]
    },
    "1837": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1838": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1839": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "1840": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "1842": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1843": {
      "op": "log",
      "stack_out": []
    },
    "1844": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1845": {
      "op": "return",
      "stack_out": []
    },
    "1846": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return[routing]",
      "params": {},
      "block": "test_uint64_return",
      "stack_in": [],
      "op": "b test_uint64_return_block@0"
    },
    "1849": {
      "block": "test_uint64_return_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1852": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1853": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1856": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1857": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1859": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1860": {
      "op": "log",
      "stack_out": []
    },
    "1861": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1862": {
      "op": "return",
      "stack_out": []
    },
    "1863": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return[routing]",
      "params": {},
      "block": "test_bool_return",
      "stack_in": [],
      "op": "b test_bool_return_block@0"
    },
    "1866": {
      "block": "test_bool_return_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1869": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1870": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1873": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1874": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1876": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1877": {
      "op": "log",
      "stack_out": []
    },
    "1878": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1879": {
      "op": "return",
      "stack_out": []
    },
    "1880": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return[routing]",
      "params": {},
      "block": "test_tuple_return",
      "stack_in": [],
      "op": "b test_tuple_return_block@0"
    },
    "1883": {
      "block": "test_tuple_return_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1886": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1887": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1890": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1891": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1893": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1894": {
      "op": "log",
      "stack_out": []
    },
    "1895": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1896": {
      "op": "return",
      "stack_out": []
    },
    "1897": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return[routing]",
      "params": {},
      "block": "test_dynamic_tuple_return",
      "stack_in": [],
      "op": "b test_dynamic_tuple_return_block@0"
    },
    "1900": {
      "block": "test_dynamic_tuple_return_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1903": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1904": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1907": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1908": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1910": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1911": {
      "op": "log",
      "stack_out": []
    },
    "1912": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1913": {
      "op": "return",
      "stack_out": []
    },
    "1914": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back[routing]",
      "params": {},
      "block": "test_convert_to_array_and_back",
      "stack_in": [],
      "op": "b test_convert_to_array_and_back_block@0"
    },
    "1917": {
      "block": "test_convert_to_array_and_back_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "1920": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1923": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "tmp%0#0"
      ]
    },
    "1924": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1927": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1928": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1930": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1931": {
      "op": "log",
      "stack_out": []
    },
    "1932": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1933": {
      "op": "return",
      "stack_out": []
    },
    "1934": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple[routing]",
      "params": {},
      "block": "test_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "b test_concat_with_arc4_tuple_block@0"
    },
    "1937": {
      "block": "test_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1940": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1943": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "1944": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "1946": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1947": {
      "op": "log",
      "stack_out": []
    },
    "1948": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1949": {
      "op": "return",
      "stack_out": []
    },
    "1950": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple[routing]",
      "params": {},
      "block": "test_concat_with_native_tuple",
      "stack_in": [],
      "op": "b test_concat_with_native_tuple_block@0"
    },
    "1953": {
      "block": "test_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1956": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "1957": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "1958": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1959": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1960": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1962": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8"
      ]
    },
    "1963": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8",
        "8"
      ]
    },
    "1964": {
      "op": "extract3",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1965": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1968": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "1969": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "1971": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1972": {
      "op": "log",
      "stack_out": []
    },
    "1973": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1974": {
      "op": "return",
      "stack_out": []
    },
    "1975": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple[routing]",
      "params": {},
      "block": "test_dynamic_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "b test_dynamic_concat_with_arc4_tuple_block@0"
    },
    "1978": {
      "block": "test_dynamic_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "1981": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1984": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "1985": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "1987": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1988": {
      "op": "log",
      "stack_out": []
    },
    "1989": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1990": {
      "op": "return",
      "stack_out": []
    },
    "1991": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple[routing]",
      "params": {},
      "block": "test_dynamic_concat_with_native_tuple",
      "stack_in": [],
      "op": "b test_dynamic_concat_with_native_tuple_block@0"
    },
    "1994": {
      "block": "test_dynamic_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "1997": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1998": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "0"
      ]
    },
    "1999": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2000": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "2002": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "2003": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "2"
      ]
    },
    "2004": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2005": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "2007": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2009": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2011": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2012": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "2014": {
      "op": "dup",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "2015": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "2"
      ]
    },
    "2016": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2017": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "2019": {
      "op": "dup",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "2020": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2021": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "2023": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2025": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "2027": {
      "op": "substring3",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2028": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2031": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "2032": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "2034": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2035": {
      "op": "log",
      "stack_out": []
    },
    "2036": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2037": {
      "op": "return",
      "stack_out": []
    },
    "2038": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic[routing]",
      "params": {},
      "block": "test_concat_immutable_dynamic",
      "stack_in": [],
      "op": "b test_concat_immutable_dynamic_block@0"
    },
    "2041": {
      "block": "test_concat_immutable_dynamic_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "2044": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ]
    },
    "2047": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2050": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "2051": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "2053": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2054": {
      "op": "log",
      "stack_out": []
    },
    "2055": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2056": {
      "op": "return",
      "stack_out": []
    },
    "2057": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4[routing]",
      "params": {},
      "block": "test_immutable_arc4",
      "stack_in": [],
      "op": "b test_immutable_arc4_block@0"
    },
    "2060": {
      "block": "test_immutable_arc4_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint64)[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,uint64)[])%0#0"
      ]
    },
    "2063": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2066": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "2067": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "2069": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2070": {
      "op": "log",
      "stack_out": []
    },
    "2071": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2072": {
      "op": "return",
      "stack_out": []
    },
    "2073": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr[routing]",
      "params": {},
      "block": "test_imm_fixed_arr",
      "stack_in": [],
      "op": "b test_imm_fixed_arr_block@0"
    },
    "2076": {
      "block": "test_imm_fixed_arr_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2079": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "2080": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "2082": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2083": {
      "op": "log",
      "stack_out": []
    },
    "2084": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2085": {
      "op": "return",
      "stack_out": []
    },
    "2086": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "stack_in": [],
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_array_block@0"
    },
    "2089": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2090": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "2091": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2094": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2095": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2096": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2097": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2098": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2099": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2100": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "42"
      ]
    },
    "2102": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2103": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2104": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2106": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "2107": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "arr#0 (copy)"
      ]
    },
    "2109": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%2#0"
      ]
    },
    "2111": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "2112": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "arr#0"
      ]
    },
    "2114": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "2115": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2116": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2117": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2118": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2119": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2122": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "2124": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "2125": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "2127": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2128": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2130": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%3#0"
      ]
    },
    "2131": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%3#0",
        "1"
      ]
    },
    "2132": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2133": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2134": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2136": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "2137": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "1"
      ]
    },
    "2138": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "2139": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "arr#0 (copy)"
      ]
    },
    "2141": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "aggregate%total_length%0#0"
      ]
    },
    "2142": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%6#0"
      ]
    },
    "2144": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%6#0",
        "arr#0 (copy)"
      ]
    },
    "2146": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%6#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2147": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "2149": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "2150": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0"
      ]
    },
    "2152": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0",
        "8"
      ]
    },
    "2153": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "2154": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "2155": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%0#0"
      ]
    },
    "2156": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "arr#0",
        "values%0#0"
      ]
    },
    "2157": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "values%0#0",
        "42"
      ]
    },
    "2159": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "2160": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2161": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "5"
      ]
    },
    "2163": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2166": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2168": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "2169": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "6"
      ]
    },
    "2171": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "2172": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2173": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2174": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2175": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0"
      ]
    },
    "2176": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "1"
      ]
    },
    "2177": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "2178": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "arr#0 (copy)"
      ]
    },
    "2180": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "aggregate%total_length%1#0"
      ]
    },
    "2181": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%12#0"
      ]
    },
    "2183": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%12#0",
        "arr#0 (copy)"
      ]
    },
    "2185": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%12#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2186": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "2188": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "2189": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%12#0"
      ]
    },
    "2191": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%12#0",
        "8"
      ]
    },
    "2192": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "2193": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "8"
      ]
    },
    "2194": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%1#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%1#0"
      ]
    },
    "2195": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "values%1#0"
      ]
    },
    "2196": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "values%1#0",
        "4"
      ]
    },
    "2198": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "2199": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2200": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "43"
      ]
    },
    "2202": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2203": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "2204": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2206": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "2207": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%14#0",
        "arr#0 (copy)"
      ]
    },
    "2209": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%14#0"
      ]
    },
    "2211": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%1#0"
      ]
    },
    "2212": {
      "op": "cover 1",
      "stack_out": [
        "concat%1#0",
        "arr#0"
      ]
    },
    "2214": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%1#0",
        "arr#0",
        "0"
      ]
    },
    "2215": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "2216": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "2217": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "add%1#0"
      ]
    },
    "2218": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "2219": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "2222": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "2224": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "2225": {
      "op": "uncover 2",
      "stack_out": [
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "2227": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2228": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2229": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2230": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "2231": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "7"
      ]
    },
    "2233": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%16#0"
      ]
    },
    "2234": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2235": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2236": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2237": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0"
      ]
    },
    "2238": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "1"
      ]
    },
    "2239": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0"
      ]
    },
    "2240": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "arr#0 (copy)"
      ]
    },
    "2242": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "aggregate%total_length%2#0"
      ]
    },
    "2243": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%18#0"
      ]
    },
    "2245": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%18#0",
        "arr#0 (copy)"
      ]
    },
    "2247": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%18#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2248": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "2250": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "2251": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%18#0"
      ]
    },
    "2253": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%18#0",
        "8"
      ]
    },
    "2254": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "2255": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "8"
      ]
    },
    "2256": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%2#0"
      ]
    },
    "2257": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "values%2#0"
      ]
    },
    "2258": {
      "op": "pushint 43 // 43",
      "stack_out": [
        "arr#0",
        "values%2#0",
        "43"
      ]
    },
    "2260": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2261": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2262": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2263": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%3#0"
      ]
    },
    "2264": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0"
      ]
    },
    "2266": {
      "op": "dup",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2267": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2268": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "2270": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "2271": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "0"
      ]
    },
    "2272": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "0",
        "8"
      ]
    },
    "2273": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "2274": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "8"
      ]
    },
    "2275": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%3#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%3#0"
      ]
    },
    "2276": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%3#0"
      ],
      "stack_out": [
        "arr#0",
        "values%3#0"
      ]
    },
    "2277": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "values%3#0",
        "42"
      ]
    },
    "2279": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "2280": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2281": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "3"
      ]
    },
    "2283": {
      "callsub": "test_cases.array.immutable.pop_x",
      "op": "callsub pop_x",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2286": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2287": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2288": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "2289": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "tmp%22#0",
        "4"
      ]
    },
    "2291": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "2292": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2293": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2294": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2295": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "2296": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "1"
      ]
    },
    "2297": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "2298": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "2300": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%4#0",
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "aggregate%total_length%4#0"
      ]
    },
    "2301": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%25#0"
      ]
    },
    "2303": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "2305": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%25#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2306": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%4#0"
      ]
    },
    "2308": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "2309": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "tmp%25#0"
      ]
    },
    "2311": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "tmp%25#0",
        "8"
      ]
    },
    "2312": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "2313": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "8"
      ]
    },
    "2314": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%4#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%4#0"
      ]
    },
    "2315": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%4#0"
      ],
      "stack_out": [
        "arr#0",
        "values%4#0"
      ]
    },
    "2316": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "values%4#0",
        "2"
      ]
    },
    "2317": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0"
      ]
    },
    "2318": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2319": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "10"
      ]
    },
    "2321": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2324": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2325": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2326": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0"
      ]
    },
    "2327": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0",
        "14"
      ]
    },
    "2329": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%29#0"
      ]
    },
    "2330": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2331": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2332": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2333": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%30#0"
      ]
    },
    "2334": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%30#0",
        "1"
      ]
    },
    "2335": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0"
      ]
    },
    "2336": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2338": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%5#0",
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "aggregate%total_length%5#0"
      ]
    },
    "2339": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%5#0",
        "tmp%31#0"
      ]
    },
    "2341": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%5#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2343": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%5#0",
        "tmp%31#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2344": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%5#0"
      ]
    },
    "2346": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%5#0",
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "aggregate%array_trimmed%5#0"
      ]
    },
    "2347": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "tmp%31#0"
      ]
    },
    "2349": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "tmp%31#0",
        "8"
      ]
    },
    "2350": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "2351": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "8"
      ]
    },
    "2352": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%5#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%5#0"
      ]
    },
    "2353": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%5#0"
      ],
      "stack_out": [
        "arr#0",
        "values%5#0"
      ]
    },
    "2354": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "values%5#0"
      ],
      "stack_out": [
        "arr#0",
        "values%5#0",
        "9"
      ]
    },
    "2356": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0"
      ]
    },
    "2357": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2358": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "44"
      ]
    },
    "2360": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2361": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "2362": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2364": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%33#0"
      ]
    },
    "2365": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%33#0",
        "arr#0 (copy)"
      ]
    },
    "2367": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%33#0"
      ]
    },
    "2369": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%2#0"
      ]
    },
    "2370": {
      "op": "cover 1",
      "stack_out": [
        "concat%2#0",
        "arr#0"
      ]
    },
    "2372": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%2#0",
        "arr#0",
        "0"
      ]
    },
    "2373": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "2374": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "2375": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "add%2#0"
      ]
    },
    "2376": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "2377": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "2380": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ]
    },
    "2382": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0",
        "0"
      ]
    },
    "2383": {
      "op": "uncover 2",
      "stack_out": [
        "concat%2#0",
        "0",
        "as_u16_bytes%2#0"
      ]
    },
    "2385": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2386": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2387": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2388": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0"
      ]
    },
    "2389": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0",
        "15"
      ]
    },
    "2391": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%35#0"
      ]
    },
    "2392": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2393": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2394": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2395": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%36#0"
      ]
    },
    "2396": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%36#0",
        "1"
      ]
    },
    "2397": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0"
      ]
    },
    "2398": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "arr#0 (copy)"
      ]
    },
    "2400": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%6#0",
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "aggregate%total_length%6#0"
      ]
    },
    "2401": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%6#0",
        "tmp%37#0"
      ]
    },
    "2403": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%6#0",
        "tmp%37#0",
        "arr#0 (copy)"
      ]
    },
    "2405": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%6#0",
        "tmp%37#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2406": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%6#0"
      ]
    },
    "2408": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%6#0",
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "aggregate%array_trimmed%6#0"
      ]
    },
    "2409": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%6#0",
        "tmp%37#0"
      ]
    },
    "2411": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%6#0",
        "tmp%37#0",
        "8"
      ]
    },
    "2412": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "2413": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0",
        "8"
      ]
    },
    "2414": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%6#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%6#0"
      ]
    },
    "2415": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%6#0"
      ],
      "stack_out": [
        "arr#0",
        "values%6#0"
      ]
    },
    "2416": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "values%6#0",
        "44"
      ]
    },
    "2418": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%38#0"
      ]
    },
    "2419": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2420": {
      "op": "pushint 23 // 23",
      "defined_out": [
        "23",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "23"
      ]
    },
    "2422": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_value%0#0"
      ]
    },
    "2423": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "2"
      ]
    },
    "2424": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "2",
        "8"
      ]
    },
    "2425": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "2426": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "2427": {
      "op": "+",
      "defined_out": [
        "aggregate%write_offset_with_length_header%0#0",
        "arr#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "2428": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "arr#0"
      ]
    },
    "2430": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%0#0",
        "arr#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "2432": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "aggregate%write_offset_with_length_header%0#0",
        "encoded_value%0#0"
      ]
    },
    "2434": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2435": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2436": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2437": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%39#0"
      ]
    },
    "2438": {
      "op": "pushint 15 // 15",
      "stack_out": [
        "arr#0",
        "tmp%39#0",
        "15"
      ]
    },
    "2440": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0"
      ]
    },
    "2441": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2442": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2443": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%8#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%8#0"
      ]
    },
    "2444": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%total_length%8#0",
        "arr#0"
      ]
    },
    "2446": {
      "op": "dup",
      "stack_out": [
        "aggregate%total_length%8#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2447": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%total_length%8#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2448": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%8#0"
      ]
    },
    "2450": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%8#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0"
      ]
    },
    "2451": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0",
        "2"
      ]
    },
    "2452": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0",
        "2",
        "8"
      ]
    },
    "2453": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0"
      ]
    },
    "2454": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0",
        "8"
      ]
    },
    "2455": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%7#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%7#0"
      ]
    },
    "2456": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%7#0"
      ],
      "stack_out": [
        "arr#0",
        "values%7#0"
      ]
    },
    "2457": {
      "op": "pushint 23 // 23",
      "stack_out": [
        "arr#0",
        "values%7#0",
        "23"
      ]
    },
    "2459": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%41#0"
      ]
    },
    "2460": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2461": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "\"a\""
      ]
    },
    "2462": {
      "op": "uncover 1",
      "stack_out": [
        "\"a\"",
        "arr#0"
      ]
    },
    "2464": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2465": {
      "retsub": true,
      "op": "retsub"
    },
    "2466": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "stack_in": [],
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_biguint_array_block@0"
    },
    "2469": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2470": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "2471": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2474": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2475": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2476": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2477": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2478": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2479": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2480": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "2482": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "2483": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%3#0"
      ]
    },
    "2484": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2485": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2486": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "aggregate%value_len%0#0"
      ]
    },
    "2487": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#0",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "2489": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "2490": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2491": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "64"
      ]
    },
    "2493": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "aggregate%bzero%0#0"
      ]
    },
    "2494": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "2495": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint512)%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%0#0",
        "0x"
      ]
    },
    "2496": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "2498": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "2499": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "arr#0 (copy)"
      ]
    },
    "2501": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%5#0"
      ]
    },
    "2503": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "2504": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "arr#0"
      ]
    },
    "2506": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "2507": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2508": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2509": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2510": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2511": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2514": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "2516": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "2517": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "2519": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2520": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2521": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2522": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "2523": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "1"
      ]
    },
    "2524": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "2525": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2526": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2528": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0"
      ]
    },
    "2529": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%8#0",
        "1"
      ]
    },
    "2530": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "2531": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "arr#0 (copy)"
      ]
    },
    "2533": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "aggregate%total_length%0#0"
      ]
    },
    "2534": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%9#0"
      ]
    },
    "2536": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%9#0",
        "arr#0 (copy)"
      ]
    },
    "2538": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%9#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2539": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "2541": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "2542": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0"
      ]
    },
    "2544": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0",
        "64"
      ]
    },
    "2546": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "2547": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "64"
      ]
    },
    "2549": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "arr#0",
        "values%0#0"
      ]
    },
    "2550": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "values%0#0",
        "0x"
      ]
    },
    "2551": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "2552": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2553": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "5"
      ]
    },
    "2555": {
      "callsub": "test_cases.array.immutable.add_xb",
      "op": "callsub add_xb",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2558": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2559": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2560": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "2561": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "6"
      ]
    },
    "2563": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "2564": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2565": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2566": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2567": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "2568": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%14#0",
        "1"
      ]
    },
    "2569": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "2570": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "arr#0 (copy)"
      ]
    },
    "2572": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "aggregate%total_length%1#0"
      ]
    },
    "2573": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%15#0"
      ]
    },
    "2575": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%15#0",
        "arr#0 (copy)"
      ]
    },
    "2577": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%15#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2578": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "2580": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "2581": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%15#0"
      ]
    },
    "2583": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%15#0",
        "64"
      ]
    },
    "2585": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "2586": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "64"
      ]
    },
    "2588": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "values%1#0"
      ]
    },
    "2589": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04",
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "values%1#0",
        "0x04"
      ]
    },
    "2592": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%16#0"
      ]
    },
    "2593": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2594": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0"
      ]
    },
    "2596": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0"
      ]
    },
    "2597": {
      "op": "bytec 4 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2599": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "tmp%18#0"
      ]
    },
    "2601": {
      "op": "b-",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2602": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ]
    },
    "2603": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%1#0",
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "aggregate%value_len%1#0"
      ]
    },
    "2604": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "aggregate%value_len%1#0",
        "64"
      ]
    },
    "2606": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%1#0",
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "aggregate%len_ok%1#0"
      ]
    },
    "2607": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2608": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "64"
      ]
    },
    "2610": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%1#0",
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "aggregate%bzero%1#0"
      ]
    },
    "2611": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%1#0"
      ]
    },
    "2612": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%1#0",
        "0x"
      ]
    },
    "2613": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint512)%1#0"
      ]
    },
    "2615": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "2616": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%20#0",
        "arr#0 (copy)"
      ]
    },
    "2618": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%20#0"
      ]
    },
    "2620": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%1#0"
      ]
    },
    "2621": {
      "op": "cover 1",
      "stack_out": [
        "concat%1#0",
        "arr#0"
      ]
    },
    "2623": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%1#0",
        "arr#0",
        "0"
      ]
    },
    "2624": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "2625": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "2626": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "add%1#0"
      ]
    },
    "2627": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "2628": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "2631": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "2633": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "2634": {
      "op": "uncover 2",
      "stack_out": [
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "2636": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2637": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2638": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2639": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0"
      ]
    },
    "2640": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0",
        "7"
      ]
    },
    "2642": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "2643": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2644": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2645": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2646": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "2647": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%23#0",
        "1"
      ]
    },
    "2648": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "2649": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "arr#0 (copy)"
      ]
    },
    "2651": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "aggregate%total_length%2#0"
      ]
    },
    "2652": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%24#0"
      ]
    },
    "2654": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%24#0",
        "arr#0 (copy)"
      ]
    },
    "2656": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%24#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2657": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "2659": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "2660": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%24#0"
      ]
    },
    "2662": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%24#0",
        "64"
      ]
    },
    "2664": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "2665": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "64"
      ]
    },
    "2667": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "values%2#0"
      ]
    },
    "2668": {
      "op": "pushbytes 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
      "defined_out": [
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "values%2#0",
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe"
      ]
    },
    "2734": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "2735": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2736": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2737": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%3#0"
      ]
    },
    "2738": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0"
      ]
    },
    "2740": {
      "op": "dup",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2741": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2742": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "2744": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "2745": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "0"
      ]
    },
    "2746": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "0",
        "64"
      ]
    },
    "2748": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "2749": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "64"
      ]
    },
    "2751": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%3#0"
      ],
      "stack_out": [
        "arr#0",
        "values%3#0"
      ]
    },
    "2752": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "values%3#0",
        "0x"
      ]
    },
    "2753": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0"
      ]
    },
    "2754": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2755": {
      "op": "bytec 4 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "arr#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2757": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%value_len%2#0"
      ]
    },
    "2758": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%value_len%2#0",
        "64"
      ]
    },
    "2760": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%len_ok%2#0"
      ]
    },
    "2761": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr#0"
      ]
    },
    "2762": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "64"
      ]
    },
    "2764": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%bzero%2#0"
      ]
    },
    "2765": {
      "op": "bytec 4 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "arr#0",
        "aggregate%bzero%2#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2767": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%2#0"
      ]
    },
    "2768": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%2#0",
        "0x"
      ]
    },
    "2769": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint512)%2#0"
      ]
    },
    "2771": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%27#0"
      ]
    },
    "2772": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%27#0",
        "arr#0 (copy)"
      ]
    },
    "2774": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%27#0"
      ]
    },
    "2776": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%2#0"
      ]
    },
    "2777": {
      "op": "cover 1",
      "stack_out": [
        "concat%2#0",
        "arr#0"
      ]
    },
    "2779": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%2#0",
        "arr#0",
        "0"
      ]
    },
    "2780": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "2781": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "2782": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "add%2#0"
      ]
    },
    "2783": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "2784": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "2787": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ]
    },
    "2789": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0",
        "0"
      ]
    },
    "2790": {
      "op": "uncover 2",
      "stack_out": [
        "concat%2#0",
        "0",
        "as_u16_bytes%2#0"
      ]
    },
    "2792": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2793": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2794": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2795": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0"
      ]
    },
    "2796": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0",
        "8"
      ]
    },
    "2797": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%29#0"
      ]
    },
    "2798": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2799": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2800": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2801": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%30#0"
      ]
    },
    "2802": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%30#0",
        "1"
      ]
    },
    "2803": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0"
      ]
    },
    "2804": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2806": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%4#0",
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "aggregate%total_length%4#0"
      ]
    },
    "2807": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%31#0"
      ]
    },
    "2809": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2811": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%31#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2812": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%4#0"
      ]
    },
    "2814": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "2815": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "tmp%31#0"
      ]
    },
    "2817": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "tmp%31#0",
        "64"
      ]
    },
    "2819": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "2820": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "64"
      ]
    },
    "2822": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%4#0"
      ],
      "stack_out": [
        "arr#0",
        "values%4#0"
      ]
    },
    "2823": {
      "op": "bytec 4 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "arr#0",
        "values%4#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2825": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0"
      ]
    },
    "2826": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2827": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2828": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%5#0"
      ]
    },
    "2829": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%total_length%5#0",
        "arr#0"
      ]
    },
    "2831": {
      "op": "dup",
      "stack_out": [
        "aggregate%total_length%5#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2832": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%total_length%5#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2833": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%5#0"
      ]
    },
    "2835": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0"
      ]
    },
    "2836": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "0"
      ]
    },
    "2837": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "0",
        "64"
      ]
    },
    "2839": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "2840": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "64"
      ]
    },
    "2842": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%5#0"
      ],
      "stack_out": [
        "arr#0",
        "values%5#0"
      ]
    },
    "2843": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "values%5#0",
        "0x"
      ]
    },
    "2844": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%33#0"
      ]
    },
    "2845": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2846": {
      "op": "bytec 7 // 0x62696775696e74",
      "defined_out": [
        "0x62696775696e74",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "0x62696775696e74"
      ]
    },
    "2848": {
      "op": "box_del",
      "defined_out": [
        "arr#0",
        "{box_del}"
      ],
      "stack_out": [
        "arr#0",
        "{box_del}"
      ]
    },
    "2849": {
      "op": "pop",
      "stack_out": [
        "arr#0"
      ]
    },
    "2850": {
      "op": "bytec 7 // 0x62696775696e74",
      "stack_out": [
        "arr#0",
        "0x62696775696e74"
      ]
    },
    "2852": {
      "op": "uncover 1",
      "stack_out": [
        "0x62696775696e74",
        "arr#0"
      ]
    },
    "2854": {
      "op": "box_put",
      "stack_out": []
    },
    "2855": {
      "retsub": true,
      "op": "retsub"
    },
    "2856": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2859": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2860": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_block@0"
    },
    "2863": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_block@0",
      "stack_in": [
        "tmp%16#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%16#0",
        "0"
      ]
    },
    "2864": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2865": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "encoded_array%0#0"
      ]
    },
    "2868": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "arr#0"
      ]
    },
    "2869": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "2870": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2871": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2872": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2873": {
      "op": "assert",
      "stack_out": [
        "tmp%16#0",
        "arr#0"
      ]
    },
    "2874": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "1"
      ]
    },
    "2875": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%16#0",
        "arr#0"
      ]
    },
    "2876": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2877": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_header@1"
    },
    "2880": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_header@1",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2882": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2884": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2885": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_for@4",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2888": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_body@2"
    },
    "2891": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_body@2",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2893": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "2895": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2896": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "2897": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "2898": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "2900": {
      "op": "setbit",
      "defined_out": [
        "aggregate%as_Encoded(bool8)%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "2901": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(bool8)%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(bool8)%0#0",
        "0x"
      ]
    },
    "2902": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "2904": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "2905": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%4#0",
        "arr#0"
      ]
    },
    "2907": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2909": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0",
        "1"
      ]
    },
    "2910": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "arr#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0",
        "1",
        "8"
      ]
    },
    "2911": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+bool1[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "as_Encoded(len+bool1[])%0#0"
      ]
    },
    "2914": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2916": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_footer@3"
    },
    "2919": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_footer@3",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2921": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2922": {
      "op": "+",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2923": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2925": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_header@1"
    },
    "2928": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_for@4",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2930": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2931": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "2932": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%5#0",
        "length#0 (copy)"
      ]
    },
    "2934": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2935": {
      "op": "assert",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2936": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2938": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "0"
      ]
    },
    "2939": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "2940": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@6",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2943": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@5"
    },
    "2946": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@5",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2948": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2949": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2950": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%2#0"
      ]
    },
    "2951": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%2#0",
        "0"
      ]
    },
    "2952": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%lt%0#0"
      ]
    },
    "2953": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2954": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2955": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0",
        "16"
      ]
    },
    "2957": {
      "op": "+",
      "defined_out": [
        "aggregate%add%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%add%0#0"
      ]
    },
    "2958": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "values%0#0"
      ]
    },
    "2959": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "2960": {
      "error": "expected element 0 to be False",
      "op": "assert // expected element 0 to be False",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2961": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@6"
    },
    "2964": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@6",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2966": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2967": {
      "op": ">",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "2968": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@8",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2971": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@7"
    },
    "2974": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@7",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2976": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2977": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2978": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2979": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "1"
      ]
    },
    "2980": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%1#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%lt%1#0"
      ]
    },
    "2981": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2982": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "1"
      ]
    },
    "2983": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "1",
        "16",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "1",
        "16"
      ]
    },
    "2985": {
      "op": "+",
      "defined_out": [
        "aggregate%add%1#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%add%1#0"
      ]
    },
    "2986": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "values%1#0"
      ]
    },
    "2987": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "2988": {
      "error": "expected element 1 to be False",
      "op": "assert // expected element 1 to be False",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2989": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@8"
    },
    "2992": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@8",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2994": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "2995": {
      "op": ">",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "2996": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@10",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "2999": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@9"
    },
    "3002": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@9",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3004": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3005": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3006": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%4#0"
      ]
    },
    "3007": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%4#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%4#0",
        "2"
      ]
    },
    "3008": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%2#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%lt%2#0"
      ]
    },
    "3009": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3010": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "2"
      ]
    },
    "3011": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "2",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "2",
        "16"
      ]
    },
    "3013": {
      "op": "+",
      "defined_out": [
        "aggregate%add%2#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%add%2#0"
      ]
    },
    "3014": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "values%2#0"
      ]
    },
    "3015": {
      "error": "expected element 2 to be True",
      "op": "assert // expected element 2 to be True",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "3016": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@10"
    },
    "3019": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@10",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "3021": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "3"
      ]
    },
    "3023": {
      "op": ">",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "3024": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@12",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "3027": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@11"
    },
    "3030": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@11",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "3032": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "3033": {
      "op": "-",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "3034": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "arr#0"
      ]
    },
    "3036": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "3037": {
      "op": "cover 2",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0",
        "arr#0 (copy)"
      ]
    },
    "3039": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3040": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3041": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0",
        "aggregate%array_length%5#0",
        "tmp%13#0 (copy)"
      ]
    },
    "3043": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%3#0",
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0",
        "aggregate%lt%3#0"
      ]
    },
    "3044": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0"
      ]
    },
    "3045": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0",
        "16"
      ]
    },
    "3047": {
      "op": "+",
      "defined_out": [
        "aggregate%add%3#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%add%3#0"
      ]
    },
    "3048": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "values%3#0"
      ]
    },
    "3049": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "3050": {
      "error": "expected last element to be False",
      "op": "assert // expected last element to be False",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "3051": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@12"
    },
    "3054": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@12",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "pushbytes \"g\"",
      "defined_out": [
        "\"g\""
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "\"g\""
      ]
    },
    "3057": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"g\"",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "\"g\"",
        "arr#0"
      ]
    },
    "3059": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "3060": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "3062": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "0"
      ]
    },
    "3063": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "3064": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@14",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "3067": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@13"
    },
    "3070": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@13",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3072": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_bit",
      "op": "callsub dynamic_array_pop_bit",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3075": {
      "op": "cover 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%17#0",
        "tmp%16#0"
      ]
    },
    "3077": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3079": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "3080": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "3081": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%16#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%19#0",
        "length#0 (copy)"
      ]
    },
    "3083": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%19#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "3084": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "3085": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0",
        "tmp%21#0"
      ]
    },
    "3086": {
      "op": "assert",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ]
    },
    "3087": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@14"
    },
    "3090": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@14",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "3091": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3094": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "3095": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_block@0"
    },
    "3098": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_block@0",
      "stack_in": [
        "tmp%15#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0"
      ]
    },
    "3099": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "3100": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "encoded_array%0#0"
      ]
    },
    "3103": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "arr#0"
      ]
    },
    "3104": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "3105": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "3106": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3107": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3108": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0"
      ]
    },
    "3109": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "1"
      ]
    },
    "3110": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%15#0",
        "arr#0"
      ]
    },
    "3111": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ]
    },
    "3112": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_header@1"
    },
    "3115": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_header@1",
      "stack_in": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3117": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3119": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3120": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_after_for@4",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ]
    },
    "3123": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_body@2"
    },
    "3126": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_body@2",
      "stack_in": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3128": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3129": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3130": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3131": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3133": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0",
        "2"
      ]
    },
    "3134": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3135": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "3137": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3138": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "3139": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3141": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "3142": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "3144": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "3145": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64)%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(uint64,uint64)%0#0"
      ]
    },
    "3146": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(uint64,uint64)%0#0",
        "0x"
      ]
    },
    "3147": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64,uint64)%0#0"
      ]
    },
    "3149": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "3150": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%4#0",
        "arr#0"
      ]
    },
    "3152": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%4#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "3153": {
      "op": "cover 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0",
        "arr#0 (copy)"
      ]
    },
    "3155": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%4#0"
      ]
    },
    "3157": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "3158": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "3160": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "3161": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3162": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3163": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3164": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3165": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3168": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "3170": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "3171": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "3173": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,uint64)[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "as_Encoded(len+(uint64,uint64)[])%0#0"
      ]
    },
    "3174": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ]
    },
    "3176": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_footer@3"
    },
    "3179": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_footer@3",
      "stack_in": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3181": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3182": {
      "op": "+",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3183": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ]
    },
    "3185": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_header@1"
    },
    "3188": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_after_for@4",
      "stack_in": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3190": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3191": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3192": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "3193": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%5#0",
        "5"
      ]
    },
    "3195": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%6#0"
      ]
    },
    "3196": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3197": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3198": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "3199": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0"
      ]
    },
    "3201": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3202": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3203": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "3205": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "3206": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "0"
      ]
    },
    "3207": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "0",
        "16"
      ]
    },
    "3209": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "3210": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "3212": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0"
      ]
    },
    "3213": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "3214": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0"
      ]
    },
    "3215": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "3216": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "3217": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "3218": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0"
      ]
    },
    "3220": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "8"
      ]
    },
    "3221": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "8",
        "8"
      ]
    },
    "3222": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "3223": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%0#0",
        "arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "3224": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%1#0",
        "values%0#0"
      ]
    },
    "3226": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%1#0",
        "values%0#0",
        "1"
      ]
    },
    "3227": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%1#0",
        "tmp%7#0"
      ]
    },
    "3228": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%7#0",
        "values%1#0"
      ]
    },
    "3230": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%7#0",
        "values%1#0",
        "2"
      ]
    },
    "3231": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3232": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%9#0"
      ]
    },
    "3233": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3234": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3235": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3236": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "3237": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "1"
      ]
    },
    "3238": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0"
      ]
    },
    "3239": {
      "op": "dig 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "arr#0 (copy)"
      ]
    },
    "3241": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "aggregate%total_length%1#0"
      ]
    },
    "3242": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%11#0"
      ]
    },
    "3244": {
      "op": "dig 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%11#0",
        "arr#0 (copy)"
      ]
    },
    "3246": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%11#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3247": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "3249": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "3250": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%11#0"
      ]
    },
    "3252": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%11#0",
        "16"
      ]
    },
    "3254": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "3255": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "3257": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%1#0"
      ]
    },
    "3258": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "3259": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "0"
      ]
    },
    "3260": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "3261": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "arr#0",
        "array_item%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "3262": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "arr#0",
        "array_item%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "3263": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "array_item%1#0"
      ]
    },
    "3265": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "array_item%1#0",
        "8"
      ]
    },
    "3266": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "array_item%1#0",
        "8",
        "8"
      ]
    },
    "3267": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%1#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "aggregate%extract%3#0"
      ]
    },
    "3268": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%1#0",
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%2#0",
        "aggregate%item1%1#0"
      ]
    },
    "3269": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%3#0",
        "values%2#0"
      ]
    },
    "3271": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%3#0",
        "values%2#0",
        "5"
      ]
    },
    "3273": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%3#0",
        "tmp%12#0"
      ]
    },
    "3274": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "values%3#0"
      ]
    },
    "3276": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%12#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "values%3#0",
        "6"
      ]
    },
    "3278": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "3279": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "3280": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3281": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "16"
      ]
    },
    "3283": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "3286": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "tmp%16#0",
        "tmp%15#0"
      ]
    },
    "3288": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3290": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3291": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3292": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0"
      ]
    },
    "3293": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%15#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0",
        "4"
      ]
    },
    "3295": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0"
      ]
    },
    "3296": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3297": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3298": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%2#0"
      ]
    },
    "3299": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0"
      ]
    },
    "3301": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3302": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3303": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "3305": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "3306": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "0"
      ]
    },
    "3307": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "0",
        "16"
      ]
    },
    "3309": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "3310": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "16"
      ]
    },
    "3312": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0"
      ]
    },
    "3313": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3314": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0"
      ]
    },
    "3315": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "3316": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#0",
        "arr#0",
        "array_item%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%extract%4#0"
      ]
    },
    "3317": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "3318": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0"
      ]
    },
    "3320": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "8"
      ]
    },
    "3321": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "8",
        "8"
      ]
    },
    "3322": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%2#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract%5#0"
      ]
    },
    "3323": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%15#0",
        "values%4#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%4#0",
        "aggregate%item1%2#0"
      ]
    },
    "3324": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "values%4#0"
      ]
    },
    "3326": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "values%4#0",
        "1"
      ]
    },
    "3327": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%21#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "tmp%21#0"
      ]
    },
    "3328": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "values%5#0"
      ]
    },
    "3330": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "values%5#0",
        "2"
      ]
    },
    "3331": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "3332": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0"
      ]
    },
    "3333": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3334": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3335": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3336": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%24#0"
      ]
    },
    "3337": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%24#0",
        "1"
      ]
    },
    "3338": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%25#0"
      ]
    },
    "3339": {
      "op": "dig 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "3341": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "tmp%15#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%25#0",
        "aggregate%total_length%3#0"
      ]
    },
    "3342": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%3#0",
        "tmp%25#0"
      ]
    },
    "3344": {
      "op": "dig 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%3#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "3346": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%3#0",
        "tmp%25#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3347": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "3349": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "arr#0",
        "tmp%15#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%25#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "3350": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "tmp%25#0"
      ]
    },
    "3352": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "tmp%25#0",
        "16"
      ]
    },
    "3354": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "3355": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "16"
      ]
    },
    "3357": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0"
      ]
    },
    "3358": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "3359": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0"
      ]
    },
    "3360": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "3361": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%6#0",
        "arr#0",
        "array_item%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%extract%6#0"
      ]
    },
    "3362": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "3363": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0"
      ]
    },
    "3365": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "8"
      ]
    },
    "3366": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "8",
        "8"
      ]
    },
    "3367": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%7#0",
        "aggregate%item0%3#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract%7#0"
      ]
    },
    "3368": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%15#0",
        "values%6#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%6#0",
        "aggregate%item1%3#0"
      ]
    },
    "3369": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "values%6#0"
      ]
    },
    "3371": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "values%6#0",
        "4"
      ]
    },
    "3373": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%26#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "tmp%26#0"
      ]
    },
    "3374": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "values%7#0"
      ]
    },
    "3376": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "values%7#0",
        "5"
      ]
    },
    "3378": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "3379": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%28#0"
      ]
    },
    "3380": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3381": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "arr#0",
        "\"c\""
      ]
    },
    "3384": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0",
        "\"c\"",
        "arr#0"
      ]
    },
    "3386": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "i#0"
      ]
    },
    "3387": {
      "retsub": true,
      "op": "retsub"
    },
    "3388": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3391": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_block@0"
    },
    "3394": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3395": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "3396": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "3399": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "3400": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "3401": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "3402": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3403": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3404": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "3405": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "3406": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "3407": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3408": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_header@1"
    },
    "3411": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3413": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3415": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3416": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3419": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_body@2"
    },
    "3422": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3424": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3425": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3426": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3427": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3428": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "3429": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "3431": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3432": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "3434": {
      "op": "*",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "3435": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0",
        "2"
      ]
    },
    "3436": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "3437": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "i#0",
        "tmp%5#0",
        "0"
      ]
    },
    "3438": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "3439": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "i#0"
      ]
    },
    "3441": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3442": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "3443": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3445": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%head%0#0"
      ]
    },
    "3446": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "0x00"
      ]
    },
    "3447": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "0x00",
        "0"
      ]
    },
    "3448": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "3450": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "3451": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "3452": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%6#0"
      ]
    },
    "3454": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "3455": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "3456": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "0x"
      ]
    },
    "3457": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "3459": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "3460": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%7#0",
        "arr#0"
      ]
    },
    "3462": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%7#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "3463": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%7#0",
        "arr#0 (copy)"
      ]
    },
    "3465": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%7#0"
      ]
    },
    "3467": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "3468": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "3470": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "3471": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3472": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3473": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3474": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3475": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3478": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "3480": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "3481": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "3483": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "as_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "3484": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3486": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_footer@3"
    },
    "3489": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3491": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3492": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3493": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3495": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_header@1"
    },
    "3498": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3500": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3501": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3502": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "3503": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%8#0",
        "5"
      ]
    },
    "3505": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%9#0"
      ]
    },
    "3506": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3507": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3508": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "3509": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0"
      ]
    },
    "3511": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3512": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3513": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "3515": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "3516": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "0"
      ]
    },
    "3517": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "9",
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "0",
        "9"
      ]
    },
    "3519": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "3520": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "9"
      ]
    },
    "3522": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0"
      ]
    },
    "3523": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "3524": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0"
      ]
    },
    "3525": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "3526": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "3527": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "3528": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0"
      ]
    },
    "3530": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "3531": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "64"
      ]
    },
    "3533": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "3534": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%0#0",
        "array_item%0#0"
      ]
    },
    "3536": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "aggregate%get_bit%0#0",
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%0#0",
        "array_item%0#0",
        "65"
      ]
    },
    "3538": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "aggregate%get_bit%1#0",
        "aggregate%item0%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "3539": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%get_bit%0#0",
        "aggregate%get_bit%1#0",
        "aggregate%item0%0#0"
      ]
    },
    "3541": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "arr#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "values%1#0",
        "values%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "3543": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "values%2#0",
        "values%1#0",
        "values%0#0"
      ]
    },
    "3545": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "foo#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "foo#0",
        "values%2#0",
        "values%1#0"
      ]
    },
    "3547": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "bar#0",
        "foo#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "foo#0",
        "values%2#0"
      ]
    },
    "3549": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "foo#0"
      ]
    },
    "3551": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "foo#0",
        "0"
      ]
    },
    "3552": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "tmp%10#0"
      ]
    },
    "3553": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0"
      ]
    },
    "3554": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0"
      ]
    },
    "3555": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3556": {
      "op": "pushbytes \"d\"",
      "defined_out": [
        "\"d\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"d\""
      ]
    },
    "3559": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"d\"",
        "arr#0"
      ]
    },
    "3561": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3562": {
      "retsub": true,
      "op": "retsub"
    },
    "3563": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3566": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3567": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_block@0"
    },
    "3570": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_block@0",
      "stack_in": [
        "tmp%11#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "3571": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "3572": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "encoded_array%0#0"
      ]
    },
    "3575": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "arr#0"
      ]
    },
    "3576": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "3577": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "3578": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3579": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3580": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "arr#0"
      ]
    },
    "3581": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "1"
      ]
    },
    "3582": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%11#0",
        "arr#0"
      ]
    },
    "3583": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3584": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@1"
    },
    "3587": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@1",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3589": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3591": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3592": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_after_for@4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3595": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_body@2"
    },
    "3598": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_body@2",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3600": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3601": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3602": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3603": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3605": {
      "op": "bzero",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3606": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "3608": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "3610": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3611": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3612": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "3613": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "3615": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3616": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "total_length%0#0"
      ]
    },
    "3617": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "total_length%0#0",
        "arr#0"
      ]
    },
    "3619": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "total_length%0#0",
        "arr#0",
        "2"
      ]
    },
    "3620": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "3622": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "extract_to_end%0#0"
      ]
    },
    "3623": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "3625": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3626": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "3627": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3629": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "3630": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "3632": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3633": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%length%0#0"
      ]
    },
    "3634": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "3635": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "3638": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "3640": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "3641": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "10"
      ]
    },
    "3643": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "3644": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "3647": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "3649": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "3651": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "3652": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "3654": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0"
      ]
    },
    "3655": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "2"
      ]
    },
    "3656": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%as_bytes%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "3657": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "3660": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "3661": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "3663": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%head%2#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%head%2#0"
      ]
    },
    "3664": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0"
      ]
    },
    "3666": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%4#0"
      ]
    },
    "3667": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_to_end%0#0",
        "tmp%4#0",
        "extract_uint16%0#0"
      ]
    },
    "3669": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%4#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "3671": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%4#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "3672": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%4#0"
      ]
    },
    "3674": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,(len+uint8[]))[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "as_Encoded(len+(uint64,(len+uint8[]))[])%0#0"
      ]
    },
    "3677": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3679": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_footer@3"
    },
    "3682": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_footer@3",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3684": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3685": {
      "op": "+",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3686": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3688": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@1"
    },
    "3691": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_after_for@4",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3693": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "3694": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "3695": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%5#0",
        "5"
      ]
    },
    "3697": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "3698": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3699": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "3700": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3701": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "0"
      ]
    },
    "3702": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3704": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@5"
    },
    "3707": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@5",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3709": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3711": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "3712": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_after_for@8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3715": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_body@6"
    },
    "3718": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_body@6",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3720": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3721": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "3722": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0"
      ]
    },
    "3724": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3725": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3726": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "3728": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3729": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "3731": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3732": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3733": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3734": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0"
      ]
    },
    "3736": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0"
      ]
    },
    "3738": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3739": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3740": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3741": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3743": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3745": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3746": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0"
      ]
    },
    "3748": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3749": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3750": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3751": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3753": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "3755": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3756": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3758": {
      "op": "dig 5",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3760": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3761": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3763": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "3764": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3765": {
      "op": "dig 6",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3767": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3769": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3770": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3772": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3774": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3776": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3777": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3779": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3781": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3783": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "array_item%0#0"
      ]
    },
    "3784": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "array_item%0#0",
        "0"
      ]
    },
    "3785": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "array_item%0#0",
        "0",
        "8"
      ]
    },
    "3786": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%extract%0#0"
      ]
    },
    "3787": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "i#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "values%0#0"
      ]
    },
    "3788": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "values%0#0",
        "i#0 (copy)"
      ]
    },
    "3790": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "values%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3791": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "values%0#0",
        "tmp%7#0"
      ]
    },
    "3792": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "3793": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0"
      ]
    },
    "3794": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "3796": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%1#0"
      ]
    },
    "3797": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "i#0"
      ]
    },
    "3799": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "3801": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "i#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3802": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "3804": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3805": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0"
      ]
    },
    "3807": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "3809": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "3810": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3811": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0"
      ]
    },
    "3813": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3814": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3815": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "3816": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3818": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "3820": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3821": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0"
      ]
    },
    "3823": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3824": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3825": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%next_index%1#0"
      ]
    },
    "3826": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3828": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "aggregate%next_index%1#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%1#0 (copy)"
      ]
    },
    "3830": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "3831": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%next_index%1#0"
      ]
    },
    "3833": {
      "op": "dig 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3835": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "3836": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_index%1#0"
      ]
    },
    "3838": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "2"
      ]
    },
    "3839": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "3840": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3842": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "3844": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "3845": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "3847": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "3849": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "3851": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "3852": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3854": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3856": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "3858": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0"
      ]
    },
    "3859": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "3860": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "8"
      ]
    },
    "3861": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "arr#0",
        "array_item%1#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3862": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0"
      ]
    },
    "3864": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "3865": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "arr#0",
        "array_item%1#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0",
        "aggregate%len%1#0"
      ]
    },
    "3866": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "array_item%1#0"
      ]
    },
    "3868": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%len%1#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3870": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "3872": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%3#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%substring3%3#0"
      ]
    },
    "3873": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "values%3#0"
      ]
    },
    "3876": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "3877": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "3878": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3879": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_footer@7"
    },
    "3882": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_footer@7",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3884": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3885": {
      "op": "+",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3886": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "3888": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@5"
    },
    "3891": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_after_for@8",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3893": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3896": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "3898": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3900": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3901": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3902": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "3903": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0",
        "4"
      ]
    },
    "3905": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0"
      ]
    },
    "3906": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3907": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3908": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%2#0"
      ]
    },
    "3909": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0"
      ]
    },
    "3911": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3912": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3913": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "3915": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3916": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0"
      ]
    },
    "3918": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3919": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3920": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3921": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0"
      ]
    },
    "3923": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0"
      ]
    },
    "3924": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0",
        "2"
      ]
    },
    "3925": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3926": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%5#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3928": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3930": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "3931": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0"
      ]
    },
    "3933": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0"
      ]
    },
    "3934": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0",
        "1"
      ]
    },
    "3935": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "3936": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3938": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%5#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "3940": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "3941": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "3943": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3945": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "3946": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "3948": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "3949": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "3950": {
      "op": "dig 5",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3952": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "3954": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "3955": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "3957": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "3959": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "3961": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "3962": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3964": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "3966": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "3968": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0"
      ]
    },
    "3969": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3970": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0"
      ]
    },
    "3971": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "3972": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%extract%2#0"
      ]
    },
    "3973": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "3974": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0"
      ]
    },
    "3976": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3977": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "8"
      ]
    },
    "3978": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3979": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0"
      ]
    },
    "3981": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3982": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0",
        "aggregate%len%2#0"
      ]
    },
    "3983": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "array_item%2#0"
      ]
    },
    "3985": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3987": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "3989": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0"
      ]
    },
    "3990": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%11#0",
        "values%4#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%4#0",
        "aggregate%item1%2#0"
      ]
    },
    "3993": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "values%4#0"
      ]
    },
    "3995": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "values%4#0",
        "1"
      ]
    },
    "3996": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "tmp%17#0"
      ]
    },
    "3997": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0"
      ]
    },
    "3999": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0",
        "0"
      ]
    },
    "4000": {
      "op": "bzero",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%18#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0",
        "tmp%18#0"
      ]
    },
    "4001": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "4002": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0"
      ]
    },
    "4003": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4004": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4005": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4006": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0"
      ]
    },
    "4007": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "1"
      ]
    },
    "4008": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0"
      ]
    },
    "4009": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "arr#0"
      ]
    },
    "4011": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4012": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "arr#0",
        "aggregate%total_length%3#0"
      ]
    },
    "4013": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "arr#0"
      ]
    },
    "4015": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4016": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4017": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "4019": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "4020": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4022": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4023": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4024": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%array_length%7#0"
      ]
    },
    "4025": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4027": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0",
        "tmp%22#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%22#0 (copy)"
      ]
    },
    "4029": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%22#0 (copy)",
        "2"
      ]
    },
    "4030": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "4031": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%array_length%7#0",
        "aggregate%item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4033": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "4035": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "4036": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%22#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4038": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%22#0"
      ]
    },
    "4040": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%22#0",
        "1"
      ]
    },
    "4041": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4042": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%7#0"
      ]
    },
    "4044": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "aggregate%next_index%3#0 (copy)",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%7#0",
        "aggregate%next_index%3#0 (copy)"
      ]
    },
    "4046": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "4047": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4049": {
      "op": "dig 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4051": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "4052": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4054": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "2"
      ]
    },
    "4055": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "4056": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4058": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "4060": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "4061": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "4063": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "4065": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "4067": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_offset%3#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "4068": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "4070": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "4072": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "4074": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0"
      ]
    },
    "4075": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4076": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0"
      ]
    },
    "4077": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "4078": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%extract%3#0"
      ]
    },
    "4079": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "4080": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0"
      ]
    },
    "4082": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4083": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "8"
      ]
    },
    "4084": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4085": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0"
      ]
    },
    "4087": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4088": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0",
        "aggregate%len%3#0"
      ]
    },
    "4089": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0",
        "array_item%3#0"
      ]
    },
    "4091": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4093": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0"
      ]
    },
    "4095": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0"
      ]
    },
    "4096": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%11#0",
        "values%6#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%6#0",
        "aggregate%item1%3#0"
      ]
    },
    "4099": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "values%6#0"
      ]
    },
    "4101": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "values%6#0",
        "4"
      ]
    },
    "4103": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%23#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "tmp%23#0"
      ]
    },
    "4104": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0",
        "values%7#0"
      ]
    },
    "4106": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "tmp%11#0",
        "tmp%23#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0",
        "values%7#0",
        "3"
      ]
    },
    "4108": {
      "op": "bzero",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%24#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0",
        "values%7#0",
        "tmp%24#0"
      ]
    },
    "4109": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "4110": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0"
      ]
    },
    "4111": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4112": {
      "op": "pushbytes \"e\"",
      "defined_out": [
        "\"e\"",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "\"e\""
      ]
    },
    "4115": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "\"e\"",
        "arr#0"
      ]
    },
    "4117": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4118": {
      "retsub": true,
      "op": "retsub"
    },
    "4119": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4122": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "4123": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_block@0"
    },
    "4126": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_block@0",
      "stack_in": [
        "tmp%11#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "4127": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "4128": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "encoded_array%0#0"
      ]
    },
    "4131": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "arr#0"
      ]
    },
    "4132": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "4133": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "4134": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "4135": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "4136": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "arr#0"
      ]
    },
    "4137": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "1"
      ]
    },
    "4138": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%11#0",
        "arr#0"
      ]
    },
    "4139": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4140": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@1"
    },
    "4143": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@1",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4145": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "4147": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4148": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4151": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_body@2"
    },
    "4154": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_body@2",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4156": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4157": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4158": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "4159": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "4161": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "4164": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "4166": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "4168": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4169": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4170": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "4171": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "4173": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4174": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "total_length%0#0"
      ]
    },
    "4175": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "total_length%0#0",
        "arr#0"
      ]
    },
    "4177": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "total_length%0#0",
        "arr#0",
        "2"
      ]
    },
    "4178": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "4180": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "extract_to_end%0#0"
      ]
    },
    "4181": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "4183": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4184": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "4185": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4187": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "4188": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "4190": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "4191": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%length%0#0"
      ]
    },
    "4192": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "4193": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "4196": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "4198": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "4199": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "10"
      ]
    },
    "4201": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "4202": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4205": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "4207": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4209": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "4210": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "4212": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0"
      ]
    },
    "4213": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "2"
      ]
    },
    "4214": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%as_bytes%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "4215": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "4218": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "4219": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "4221": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%head%2#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%head%2#0"
      ]
    },
    "4222": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0"
      ]
    },
    "4224": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%4#0"
      ]
    },
    "4225": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_to_end%0#0",
        "tmp%4#0",
        "extract_uint16%0#0"
      ]
    },
    "4227": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%4#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "4229": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%4#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "4230": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%4#0"
      ]
    },
    "4232": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "4235": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4237": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_footer@3"
    },
    "4240": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_footer@3",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4242": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4243": {
      "op": "+",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4244": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4246": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@1"
    },
    "4249": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4251": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "4252": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "4253": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%5#0",
        "5"
      ]
    },
    "4255": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "4256": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4257": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "4258": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4259": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "0"
      ]
    },
    "4260": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4262": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@5"
    },
    "4265": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@5",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4267": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "4269": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "4270": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4273": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_body@6"
    },
    "4276": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_body@6",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4278": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4279": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "4280": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0"
      ]
    },
    "4282": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4283": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4284": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "4286": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "4287": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "4289": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4290": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4291": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%array_length%2#0"
      ]
    },
    "4292": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0"
      ]
    },
    "4294": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0"
      ]
    },
    "4296": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4297": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4298": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "4299": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "4301": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "4303": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4304": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0"
      ]
    },
    "4306": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4307": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4308": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0"
      ]
    },
    "4309": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "4311": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "4313": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "4314": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%next_index%0#0"
      ]
    },
    "4316": {
      "op": "dig 5",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "4318": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "4319": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_index%0#0"
      ]
    },
    "4321": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "4322": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "4323": {
      "op": "dig 6",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "4325": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "4327": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "4328": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "4330": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%has_next%0#0",
        "i#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "4332": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "4334": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "4335": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "4337": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4339": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "4341": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "array_item%0#0"
      ]
    },
    "4342": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "array_item%0#0",
        "0"
      ]
    },
    "4343": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%0#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "array_item%0#0",
        "0",
        "8"
      ]
    },
    "4344": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%extract%0#0"
      ]
    },
    "4345": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "i#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "values%0#0"
      ]
    },
    "4346": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "values%0#0",
        "i#0 (copy)"
      ]
    },
    "4348": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "values%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4349": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "values%0#0",
        "tmp%7#0"
      ]
    },
    "4350": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "4351": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0"
      ]
    },
    "4352": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "4354": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%1#0"
      ]
    },
    "4355": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "i#0"
      ]
    },
    "4357": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "4359": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "i#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4360": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "4362": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "4363": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0"
      ]
    },
    "4365": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "arr#0"
      ]
    },
    "4367": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "4368": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%array_length%3#0"
      ]
    },
    "4369": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0"
      ]
    },
    "4371": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4372": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4373": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "4374": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "4376": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "4378": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "4379": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0"
      ]
    },
    "4381": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4382": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4383": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "i#0",
        "aggregate%next_index%1#0"
      ]
    },
    "4384": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "4386": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "aggregate%next_index%1#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%1#0 (copy)"
      ]
    },
    "4388": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "4389": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%next_index%1#0"
      ]
    },
    "4391": {
      "op": "dig 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "4393": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "4394": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_index%1#0"
      ]
    },
    "4396": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_index%1#0",
        "2"
      ]
    },
    "4397": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "4398": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "4400": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "4402": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "i#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "4403": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "4405": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "i#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "4407": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "4409": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "4410": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "4412": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "4414": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "4416": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0"
      ]
    },
    "4417": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "4418": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "8"
      ]
    },
    "4419": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "arr#0",
        "array_item%1#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4420": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0"
      ]
    },
    "4422": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "4423": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "arr#0",
        "array_item%1#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0",
        "aggregate%len%1#0"
      ]
    },
    "4424": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "array_item%1#0"
      ]
    },
    "4426": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%len%1#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4428": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "4430": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%3#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4431": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "values%3#0"
      ]
    },
    "4434": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "values%3#0",
        "i#0"
      ]
    },
    "4436": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%9#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "values%3#0",
        "tmp%9#0"
      ]
    },
    "4439": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "4440": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4441": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_footer@7"
    },
    "4444": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_footer@7",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4446": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4447": {
      "op": "+",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4448": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4450": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@5"
    },
    "4453": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_in": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4455": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "4458": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "4460": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4462": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4463": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4464": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "4465": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0",
        "4"
      ]
    },
    "4467": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0"
      ]
    },
    "4468": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4469": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4470": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%2#0"
      ]
    },
    "4471": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0"
      ]
    },
    "4473": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4474": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4475": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "4477": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "4478": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0"
      ]
    },
    "4480": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4481": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4482": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "aggregate%array_length%5#0"
      ]
    },
    "4483": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0"
      ]
    },
    "4485": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0"
      ]
    },
    "4486": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0",
        "2"
      ]
    },
    "4487": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "4488": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%5#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "4490": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "4492": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "4493": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0"
      ]
    },
    "4495": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0"
      ]
    },
    "4496": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0",
        "1"
      ]
    },
    "4497": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "4498": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%5#0"
      ]
    },
    "4500": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%5#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "4502": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "4503": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "4505": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "4507": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "4508": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "4510": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "4511": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "4512": {
      "op": "dig 5",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "4514": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "4516": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "4517": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "4519": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "4521": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "4523": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "4524": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "4526": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "4528": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "4530": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0"
      ]
    },
    "4531": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "4532": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0"
      ]
    },
    "4533": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "4534": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%extract%2#0"
      ]
    },
    "4535": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "4536": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0"
      ]
    },
    "4538": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "4539": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "8"
      ]
    },
    "4540": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "4541": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0"
      ]
    },
    "4543": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "4544": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0",
        "aggregate%len%2#0"
      ]
    },
    "4545": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "array_item%2#0"
      ]
    },
    "4547": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "4549": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "4551": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4552": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%11#0",
        "values%4#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%4#0",
        "aggregate%item1%2#0"
      ]
    },
    "4555": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "values%4#0"
      ]
    },
    "4557": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "values%4#0",
        "1"
      ]
    },
    "4558": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%5#0",
        "tmp%17#0"
      ]
    },
    "4559": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0"
      ]
    },
    "4561": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0",
        "\"\""
      ]
    },
    "4562": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "4563": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0"
      ]
    },
    "4564": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4565": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4566": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4567": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0"
      ]
    },
    "4568": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0",
        "1"
      ]
    },
    "4569": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0"
      ]
    },
    "4570": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "arr#0"
      ]
    },
    "4572": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4573": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "arr#0",
        "aggregate%total_length%3#0"
      ]
    },
    "4574": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%total_length%3#0",
        "arr#0"
      ]
    },
    "4576": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4577": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4578": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "4580": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "4581": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4583": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4584": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4585": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%array_length%7#0"
      ]
    },
    "4586": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4588": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%21#0 (copy)"
      ]
    },
    "4590": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%21#0 (copy)",
        "2"
      ]
    },
    "4591": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "4592": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%array_length%7#0",
        "aggregate%item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4594": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "4596": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "4597": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "tmp%21#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4599": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%21#0"
      ]
    },
    "4601": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%21#0",
        "1"
      ]
    },
    "4602": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4603": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%7#0"
      ]
    },
    "4605": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "aggregate%next_index%3#0 (copy)",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%7#0",
        "aggregate%next_index%3#0 (copy)"
      ]
    },
    "4607": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "4608": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4610": {
      "op": "dig 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4612": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "4613": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4615": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "2"
      ]
    },
    "4616": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "4617": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4619": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "4621": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "4622": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "4624": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "4626": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "4628": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_offset%3#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "4629": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "4631": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "4633": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "4635": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0"
      ]
    },
    "4636": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4637": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0"
      ]
    },
    "4638": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "4639": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%extract%3#0"
      ]
    },
    "4640": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "4641": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0"
      ]
    },
    "4643": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4644": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "8"
      ]
    },
    "4645": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4646": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0"
      ]
    },
    "4648": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4649": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0",
        "aggregate%len%3#0"
      ]
    },
    "4650": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0",
        "array_item%3#0"
      ]
    },
    "4652": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4654": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0"
      ]
    },
    "4656": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0"
      ]
    },
    "4657": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%11#0",
        "values%6#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%6#0",
        "aggregate%item1%3#0"
      ]
    },
    "4660": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "values%6#0"
      ]
    },
    "4662": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "values%6#0",
        "4"
      ]
    },
    "4664": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%22#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "values%7#0",
        "tmp%22#0"
      ]
    },
    "4665": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "values%7#0"
      ]
    },
    "4667": {
      "op": "pushbytes \"   \"",
      "defined_out": [
        "\"   \"",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "values%7#0",
        "\"   \""
      ]
    },
    "4672": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "4673": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%24#0"
      ]
    },
    "4674": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4675": {
      "op": "pushbytes \"f\"",
      "defined_out": [
        "\"f\"",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "arr#0",
        "\"f\""
      ]
    },
    "4678": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0",
        "\"f\"",
        "arr#0"
      ]
    },
    "4680": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%11#0",
        "arr#0",
        "i#0"
      ]
    },
    "4681": {
      "retsub": true,
      "op": "retsub"
    },
    "4682": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "params": {
        "arr#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4685": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log_block@0"
    },
    "4688": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "4690": {
      "op": "log",
      "stack_out": []
    },
    "4691": {
      "retsub": true,
      "op": "retsub"
    },
    "4692": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "params": {
        "arr#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4695": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit_block@0"
    },
    "4698": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "4699": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "4700": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4703": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "4704": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4706": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "4707": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "arr#0 (copy)"
      ]
    },
    "4709": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4710": {
      "op": "pushbytes 0xfa40c053 // method \"emit_test(uint64[])\"",
      "defined_out": [
        "Method(emit_test(uint64[]))",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "Method(emit_test(uint64[]))"
      ]
    },
    "4716": {
      "op": "uncover 1",
      "stack_out": [
        "Method(emit_test(uint64[]))",
        "tmp%0#0"
      ]
    },
    "4718": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "4719": {
      "op": "log",
      "stack_out": []
    },
    "4720": {
      "retsub": true,
      "op": "retsub"
    },
    "4721": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "params": {
        "arr_to_add#0": "uint64",
        "arr#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "4724": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0"
      ]
    },
    "4725": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0"
      ]
    },
    "4726": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0"
      ]
    },
    "4727": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4728": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0"
      ]
    },
    "4729": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_block@0"
    },
    "4732": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_block@0",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "1"
      ]
    },
    "4733": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0"
      ]
    },
    "4734": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4735": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@1"
    },
    "4738": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@1",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0"
      ]
    },
    "4740": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr_to_add#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0",
        "arr_to_add#0 (copy)"
      ]
    },
    "4742": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4743": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@8",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4746": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@2"
    },
    "4749": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@2",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0"
      ]
    },
    "4750": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "4751": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "encoded_array%0#0"
      ]
    },
    "4754": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4756": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "1"
      ]
    },
    "4757": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4758": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0"
      ]
    },
    "4759": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4761": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@3"
    },
    "4764": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@3",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0"
      ]
    },
    "4766": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0",
        "i#0"
      ]
    },
    "4768": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "4769": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@6",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4772": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@4"
    },
    "4775": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@4",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0"
      ]
    },
    "4777": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4778": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "4779": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4781": {
      "op": "concat",
      "defined_out": [
        "j#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "4782": {
      "op": "frame_dig 0",
      "defined_out": [
        "extra_arr#0",
        "j#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%0#0",
        "extra_arr#0"
      ]
    },
    "4784": {
      "op": "dup",
      "defined_out": [
        "extra_arr#0",
        "extra_arr#0 (copy)",
        "j#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%0#0",
        "extra_arr#0 (copy)",
        "extra_arr#0 (copy)"
      ]
    },
    "4785": {
      "op": "cover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extra_arr#0",
        "tmp%0#0",
        "extra_arr#0 (copy)"
      ]
    },
    "4787": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extra_arr#0",
        "extra_arr#0 (copy)",
        "tmp%0#0"
      ]
    },
    "4789": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extra_arr#0",
        "concat%0#0"
      ]
    },
    "4790": {
      "op": "cover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%0#0",
        "extra_arr#0"
      ]
    },
    "4792": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%0#0",
        "extra_arr#0",
        "0"
      ]
    },
    "4793": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extra_arr#0",
        "extract_uint16%0#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "4794": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extra_arr#0",
        "extract_uint16%0#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "4795": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "4796": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "4797": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "4800": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "4802": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "4803": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "4805": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%0#0",
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "4806": {
      "op": "frame_bury 0",
      "defined_out": [
        "extra_arr#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4808": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@5"
    },
    "4811": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@5",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0"
      ]
    },
    "4813": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0",
        "1"
      ]
    },
    "4814": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "j#0"
      ]
    },
    "4815": {
      "op": "frame_bury 4",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4817": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@3"
    },
    "4820": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@6",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "4822": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4823": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0"
      ]
    },
    "4824": {
      "op": "frame_dig -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "arr#0 (copy)"
      ]
    },
    "4826": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "total_length%0#0"
      ]
    },
    "4827": {
      "op": "frame_dig -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "total_length%0#0",
        "arr#0 (copy)"
      ]
    },
    "4829": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0 (copy)",
        "extract_uint16%1#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "total_length%0#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4830": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "arr#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "4832": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0"
      ]
    },
    "4833": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "4834": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "4835": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4838": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "4839": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4841": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0"
      ]
    },
    "4842": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%head%1#0",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "extra_arr#0"
      ]
    },
    "4844": {
      "op": "concat",
      "defined_out": [
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "tmp%1#0"
      ]
    },
    "4845": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_to_end%0#0",
        "tmp%1#0",
        "extract_uint16%1#0"
      ]
    },
    "4847": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%1#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0"
      ]
    },
    "4849": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%1#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "4850": {
      "op": "uncover 3",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "1",
        "tmp%1#0"
      ]
    },
    "4852": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(len+uint64[])[])%0#0",
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "as_Encoded(len+(len+uint64[])[])%0#0"
      ]
    },
    "4855": {
      "op": "frame_bury -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4857": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@7"
    },
    "4860": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@7",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0"
      ]
    },
    "4862": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4863": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "i#0"
      ]
    },
    "4864": {
      "op": "frame_bury 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4866": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@1"
    },
    "4869": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@8",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0"
      ]
    },
    "4870": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "4871": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "encoded_array%1#0"
      ]
    },
    "4874": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4876": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "4878": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4879": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4880": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4882": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0"
      ]
    },
    "4883": {
      "op": "frame_bury 3",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4885": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@9"
    },
    "4888": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@9",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4890": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "4892": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "continue_looping%2#0"
      ]
    },
    "4893": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@12",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4896": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@10"
    },
    "4899": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@10",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "4901": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%total_length%0#0"
      ]
    },
    "4902": {
      "op": "frame_dig -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0 (copy)"
      ]
    },
    "4904": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4905": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "4907": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "4908": {
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4910": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "2"
      ]
    },
    "4911": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "4912": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "4914": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "4916": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4917": {
      "op": "dup2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%0#0",
        "aggregate%item_offset%0#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%0#0 (copy)"
      ]
    },
    "4918": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length%0#0"
      ]
    },
    "4919": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length%0#0",
        "8"
      ]
    },
    "4920": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0"
      ]
    },
    "4921": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "2"
      ]
    },
    "4922": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "4923": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "4925": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4927": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "4929": {
      "op": "extract3",
      "defined_out": [
        "inner_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "inner_arr#0"
      ]
    },
    "4930": {
      "callsub": "test_cases.array.immutable.sum_arr",
      "op": "callsub sum_arr",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "4933": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "4934": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "4935": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "4937": {
      "op": "concat",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "4938": {
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%3#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%3#0",
        "totals#0"
      ]
    },
    "4940": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%3#0",
        "totals#0",
        "totals#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "tmp%3#0",
        "totals#0 (copy)",
        "totals#0 (copy)"
      ]
    },
    "4941": {
      "op": "cover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "totals#0",
        "tmp%3#0",
        "totals#0 (copy)"
      ]
    },
    "4943": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "totals#0",
        "totals#0 (copy)",
        "tmp%3#0"
      ]
    },
    "4945": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "totals#0",
        "concat%1#0"
      ]
    },
    "4946": {
      "op": "cover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%1#0",
        "totals#0"
      ]
    },
    "4948": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%1#0",
        "totals#0",
        "0"
      ]
    },
    "4949": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%2#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%1#0",
        "extract_uint16%2#0"
      ]
    },
    "4950": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%1#0",
        "extract_uint16%2#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%1#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "4951": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "4952": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "4953": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "4956": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "4958": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "4959": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "4961": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "as_Encoded(len+uint64[])%1#0"
      ]
    },
    "4962": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4964": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@11"
    },
    "4967": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@11",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4969": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4970": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4971": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ]
    },
    "4973": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@9"
    },
    "4976": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@12",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "j#0",
        "i#0",
        "totals#0"
      ]
    },
    "4978": {
      "op": "frame_bury 0"
    },
    "4980": {
      "retsub": true,
      "op": "retsub"
    },
    "4981": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4984": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_block@0"
    },
    "4987": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4988": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "4989": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "4992": {
      "op": "dup",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0"
      ]
    },
    "4993": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "0"
      ]
    },
    "4994": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "4995": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "encoded_array%1#0"
      ]
    },
    "4998": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "arr7#0 (copy)",
        "arr7#0 (copy)"
      ]
    },
    "4999": {
      "op": "cover 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr2#0",
        "arr7#0 (copy)"
      ]
    },
    "5001": {
      "op": "cover 2",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "5003": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "0"
      ]
    },
    "5004": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "5005": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "encoded_array%2#0"
      ]
    },
    "5008": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "arr8#0 (copy)",
        "arr8#0 (copy)"
      ]
    },
    "5009": {
      "op": "cover 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr8#0 (copy)"
      ]
    },
    "5011": {
      "op": "cover 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "5013": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0"
      ]
    },
    "5014": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "5015": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "encoded_array%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "encoded_array%3#0"
      ]
    },
    "5018": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0 (copy)",
        "arr9#0 (copy)"
      ]
    },
    "5019": {
      "op": "cover 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0 (copy)"
      ]
    },
    "5021": {
      "op": "cover 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "5023": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0"
      ]
    },
    "5024": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%0#0"
      ]
    },
    "5025": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%0#0",
        "0"
      ]
    },
    "5026": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%1#0"
      ]
    },
    "5027": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0"
      ]
    },
    "5028": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "0"
      ]
    },
    "5029": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%2#0"
      ]
    },
    "5030": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%2#0",
        "0"
      ]
    },
    "5031": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%3#0"
      ]
    },
    "5032": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0"
      ]
    },
    "5033": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "0"
      ]
    },
    "5034": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%4#0"
      ]
    },
    "5035": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%4#0",
        "0"
      ]
    },
    "5036": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%5#0"
      ]
    },
    "5037": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0"
      ]
    },
    "5038": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "0"
      ]
    },
    "5039": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0"
      ]
    },
    "5040": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0",
        "0"
      ]
    },
    "5041": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%7#0"
      ]
    },
    "5042": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5043": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "1"
      ]
    },
    "5044": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5045": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "5046": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_header@1"
    },
    "5049": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_header@1",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "5051": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "5053": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "5054": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_after_for@4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "5057": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_body@2"
    },
    "5060": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_body@2",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "5062": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5063": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "5064": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "5065": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%8#0",
        "i#0"
      ]
    },
    "5067": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%8#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5068": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%8#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5069": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%8#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "5070": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0"
      ]
    },
    "5072": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0",
        "0x00"
      ]
    },
    "5073": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0",
        "0x00",
        "0"
      ]
    },
    "5074": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%9#0",
        "i#0",
        "0x00",
        "0",
        "tmp%8#0"
      ]
    },
    "5076": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%9#0",
        "i#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "5077": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%9#0",
        "i#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "5078": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%9#0"
      ]
    },
    "5080": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "5081": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%set_bit%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "0x"
      ]
    },
    "5082": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "0x",
        "aggregate%set_bit%0#0"
      ]
    },
    "5084": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(bool1,bool1)%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%as_Encoded(bool1,bool1)%0#0"
      ]
    },
    "5085": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%as_Encoded(bool1,bool1)%0#0",
        "0x"
      ]
    },
    "5086": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(bool1,bool1)%0#0"
      ]
    },
    "5088": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "5089": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%10#0",
        "arr2#0"
      ]
    },
    "5091": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)",
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%10#0",
        "arr2#0 (copy)",
        "arr2#0 (copy)"
      ]
    },
    "5092": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "tmp%10#0",
        "arr2#0 (copy)"
      ]
    },
    "5094": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)",
        "tmp%10#0"
      ]
    },
    "5096": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "concat%0#0"
      ]
    },
    "5097": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr2#0"
      ]
    },
    "5099": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr2#0",
        "0"
      ]
    },
    "5100": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "5101": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "5102": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr2#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "5103": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "5104": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "5107": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "5109": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "5110": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "5112": {
      "op": "replace3",
      "defined_out": [
        "arr2#0",
        "as_Encoded(len+(bool1,bool1)[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_Encoded(len+(bool1,bool1)[])%0#0"
      ]
    },
    "5113": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "5115": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5116": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "5117": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "5118": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5120": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5121": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5122": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "5123": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5125": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5126": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "5127": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "5128": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5130": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5131": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "5133": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "5134": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5136": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5137": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "5139": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "5140": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5142": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5143": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "5145": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%16#0"
      ]
    },
    "5146": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5148": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5149": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "5151": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "5152": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5154": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5155": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5156": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "5157": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5159": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5160": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "5161": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "5162": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "5164": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%head%2#0"
      ]
    },
    "5165": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%head%2#0",
        "0x00"
      ]
    },
    "5166": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%head%2#0",
        "0x00",
        "0"
      ]
    },
    "5167": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "aggregate%head%2#0",
        "0x00",
        "0",
        "tmp%11#0"
      ]
    },
    "5169": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "arr2#0",
        "i#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "5170": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%encoded_bool%1#0",
        "1"
      ]
    },
    "5171": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%encoded_bool%1#0",
        "1",
        "tmp%12#0"
      ]
    },
    "5173": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%1#0",
        "arr2#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "5174": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%1#0",
        "2"
      ]
    },
    "5175": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%1#0",
        "2",
        "tmp%13#0"
      ]
    },
    "5177": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%2#0",
        "arr2#0",
        "i#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%2#0"
      ]
    },
    "5178": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%2#0",
        "3"
      ]
    },
    "5180": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%2#0",
        "3",
        "tmp%14#0"
      ]
    },
    "5182": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%3#0",
        "arr2#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%3#0"
      ]
    },
    "5183": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%3#0",
        "4"
      ]
    },
    "5185": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%3#0",
        "4",
        "tmp%15#0"
      ]
    },
    "5187": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%4#0",
        "arr2#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%4#0"
      ]
    },
    "5188": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%4#0",
        "5"
      ]
    },
    "5190": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%4#0",
        "5",
        "tmp%16#0"
      ]
    },
    "5192": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%5#0",
        "arr2#0",
        "i#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%5#0"
      ]
    },
    "5193": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "tmp%17#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%5#0",
        "6"
      ]
    },
    "5195": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%5#0",
        "6",
        "tmp%17#0"
      ]
    },
    "5197": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%6#0",
        "arr2#0",
        "i#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%6#0"
      ]
    },
    "5198": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "arr2#0",
        "i#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%18#0",
        "i#0",
        "aggregate%head%3#0"
      ]
    },
    "5199": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%head%3#0",
        "tmp%18#0"
      ]
    },
    "5201": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%3#0",
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "5202": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5203": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "0x"
      ]
    },
    "5204": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5206": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "5207": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%19#0",
        "arr7#0"
      ]
    },
    "5209": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "i#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%19#0",
        "arr7#0 (copy)",
        "arr7#0 (copy)"
      ]
    },
    "5210": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr7#0",
        "tmp%19#0",
        "arr7#0 (copy)"
      ]
    },
    "5212": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr7#0",
        "arr7#0 (copy)",
        "tmp%19#0"
      ]
    },
    "5214": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr7#0",
        "concat%1#0"
      ]
    },
    "5215": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%1#0",
        "arr7#0"
      ]
    },
    "5217": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%1#0",
        "arr7#0",
        "0"
      ]
    },
    "5218": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "5219": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "5220": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "5221": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "as_bytes%1#0",
        "concat%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "5222": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "5225": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "5227": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "5228": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "5230": {
      "op": "replace3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0"
      ]
    },
    "5231": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "5233": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5234": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "5235": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%20#0"
      ]
    },
    "5236": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5238": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5239": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5240": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%20#0",
        "i#0",
        "tmp%21#0"
      ]
    },
    "5241": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5243": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5244": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "5245": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%22#0"
      ]
    },
    "5246": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5248": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5249": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "5251": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%23#0"
      ]
    },
    "5252": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5254": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5255": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "5257": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%24#0"
      ]
    },
    "5258": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5260": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5261": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "5263": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%25#0"
      ]
    },
    "5264": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5266": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5267": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "5269": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%26#0"
      ]
    },
    "5270": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5272": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5273": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "5275": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%27#0"
      ]
    },
    "5276": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5278": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5279": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5280": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%28#0"
      ]
    },
    "5281": {
      "op": "cover 9",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5283": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5284": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "5285": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "5286": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "5288": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%head%6#0"
      ]
    },
    "5289": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%head%6#0",
        "0x00"
      ]
    },
    "5290": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%head%6#0",
        "0x00",
        "0"
      ]
    },
    "5291": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "aggregate%head%6#0",
        "0x00",
        "0",
        "tmp%20#0"
      ]
    },
    "5293": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%2#0",
        "aggregate%head%6#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%encoded_bool%2#0"
      ]
    },
    "5294": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%encoded_bool%2#0",
        "1"
      ]
    },
    "5295": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%encoded_bool%2#0",
        "1",
        "tmp%21#0"
      ]
    },
    "5297": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%7#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%7#0"
      ]
    },
    "5298": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%7#0",
        "2"
      ]
    },
    "5299": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%7#0",
        "2",
        "tmp%22#0"
      ]
    },
    "5301": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%8#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%8#0"
      ]
    },
    "5302": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%8#0",
        "3"
      ]
    },
    "5304": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%8#0",
        "3",
        "tmp%23#0"
      ]
    },
    "5306": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%9#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%9#0"
      ]
    },
    "5307": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%9#0",
        "4"
      ]
    },
    "5309": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%9#0",
        "4",
        "tmp%24#0"
      ]
    },
    "5311": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%10#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%10#0"
      ]
    },
    "5312": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%10#0",
        "5"
      ]
    },
    "5314": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%10#0",
        "5",
        "tmp%25#0"
      ]
    },
    "5316": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%11#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%11#0"
      ]
    },
    "5317": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%11#0",
        "6"
      ]
    },
    "5319": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%11#0",
        "6",
        "tmp%26#0"
      ]
    },
    "5321": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%12#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%12#0"
      ]
    },
    "5322": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%12#0",
        "7"
      ]
    },
    "5324": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%12#0",
        "7",
        "tmp%27#0"
      ]
    },
    "5326": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%13#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%13#0"
      ]
    },
    "5327": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%28#0",
        "i#0",
        "aggregate%head%7#0"
      ]
    },
    "5328": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%head%7#0",
        "tmp%28#0"
      ]
    },
    "5330": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%7#0",
        "arr2#0",
        "arr7#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "5331": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "arr2#0",
        "arr7#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5332": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "0x"
      ]
    },
    "5333": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5335": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%29#0"
      ]
    },
    "5336": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%29#0",
        "arr8#0"
      ]
    },
    "5338": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "i#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%29#0",
        "arr8#0 (copy)",
        "arr8#0 (copy)"
      ]
    },
    "5339": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr8#0",
        "tmp%29#0",
        "arr8#0 (copy)"
      ]
    },
    "5341": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr8#0",
        "arr8#0 (copy)",
        "tmp%29#0"
      ]
    },
    "5343": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr8#0",
        "concat%2#0"
      ]
    },
    "5344": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%2#0",
        "arr8#0"
      ]
    },
    "5346": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%2#0",
        "arr8#0",
        "0"
      ]
    },
    "5347": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "5348": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "5349": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "5350": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_bytes%2#0",
        "concat%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "5351": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_u16_bytes%2#0",
        "concat%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "5354": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_u16_bytes%2#0",
        "concat%2#0"
      ]
    },
    "5356": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_u16_bytes%2#0",
        "concat%2#0",
        "0"
      ]
    },
    "5357": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concat%2#0",
        "0",
        "as_u16_bytes%2#0"
      ]
    },
    "5359": {
      "op": "replace3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0"
      ]
    },
    "5360": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "5362": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5363": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "5364": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%30#0"
      ]
    },
    "5365": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5367": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5368": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5369": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%30#0",
        "i#0",
        "tmp%31#0"
      ]
    },
    "5370": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5372": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5373": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "5374": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%32#0"
      ]
    },
    "5375": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5377": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5378": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "5380": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%33#0"
      ]
    },
    "5381": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5383": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5384": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "5386": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%34#0"
      ]
    },
    "5387": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5389": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5390": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "5392": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%35#0"
      ]
    },
    "5393": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5395": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5396": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "5398": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%36#0"
      ]
    },
    "5399": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5401": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5402": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "5404": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%37#0"
      ]
    },
    "5405": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5407": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5408": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "8"
      ]
    },
    "5409": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%38#0"
      ]
    },
    "5410": {
      "op": "cover 9",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5412": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5413": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5414": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%39#0"
      ]
    },
    "5415": {
      "op": "cover 10",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5417": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "5418": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%as_Encoded(uint64)%4#0",
        "0x"
      ]
    },
    "5419": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "0x",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "5421": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%head%10#0"
      ]
    },
    "5422": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%head%10#0",
        "0x00"
      ]
    },
    "5423": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%head%10#0",
        "0x00",
        "0"
      ]
    },
    "5424": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "aggregate%head%10#0",
        "0x00",
        "0",
        "tmp%30#0"
      ]
    },
    "5426": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%3#0",
        "aggregate%head%10#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "aggregate%head%10#0",
        "aggregate%encoded_bool%3#0"
      ]
    },
    "5427": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "aggregate%head%10#0",
        "aggregate%encoded_bool%3#0",
        "1"
      ]
    },
    "5428": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "aggregate%head%10#0",
        "aggregate%encoded_bool%3#0",
        "1",
        "tmp%31#0"
      ]
    },
    "5430": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%14#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%14#0"
      ]
    },
    "5431": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%14#0",
        "2"
      ]
    },
    "5432": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%14#0",
        "2",
        "tmp%32#0"
      ]
    },
    "5434": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%15#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%15#0"
      ]
    },
    "5435": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%15#0",
        "3"
      ]
    },
    "5437": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%15#0",
        "3",
        "tmp%33#0"
      ]
    },
    "5439": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%16#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%16#0"
      ]
    },
    "5440": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%16#0",
        "4"
      ]
    },
    "5442": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%16#0",
        "4",
        "tmp%34#0"
      ]
    },
    "5444": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%17#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%17#0"
      ]
    },
    "5445": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%17#0",
        "5"
      ]
    },
    "5447": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%17#0",
        "5",
        "tmp%35#0"
      ]
    },
    "5449": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%18#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%18#0"
      ]
    },
    "5450": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%18#0",
        "6"
      ]
    },
    "5452": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%18#0",
        "6",
        "tmp%36#0"
      ]
    },
    "5454": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%19#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%19#0"
      ]
    },
    "5455": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%19#0",
        "7"
      ]
    },
    "5457": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%19#0",
        "7",
        "tmp%37#0"
      ]
    },
    "5459": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%20#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%20#0"
      ]
    },
    "5460": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%11#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%11#0"
      ]
    },
    "5461": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%11#0",
        "0x00"
      ]
    },
    "5462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%11#0",
        "0x00",
        "0"
      ]
    },
    "5463": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "aggregate%head%11#0",
        "0x00",
        "0",
        "tmp%38#0"
      ]
    },
    "5465": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%4#0",
        "aggregate%head%11#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "aggregate%head%11#0",
        "aggregate%encoded_bool%4#0"
      ]
    },
    "5466": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%12#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%39#0",
        "aggregate%head%12#0"
      ]
    },
    "5467": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "aggregate%head%12#0",
        "tmp%39#0"
      ]
    },
    "5469": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%12#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "aggregate%head%12#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "5470": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5471": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "0x"
      ]
    },
    "5472": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5474": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%40#0"
      ]
    },
    "5475": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%40#0",
        "arr9#0"
      ]
    },
    "5477": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "i#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%40#0",
        "arr9#0 (copy)",
        "arr9#0 (copy)"
      ]
    },
    "5478": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "tmp%40#0",
        "arr9#0 (copy)"
      ]
    },
    "5480": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "arr9#0 (copy)",
        "tmp%40#0"
      ]
    },
    "5482": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "concat%3#0"
      ]
    },
    "5483": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concat%3#0",
        "arr9#0"
      ]
    },
    "5485": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concat%3#0",
        "arr9#0",
        "0"
      ]
    },
    "5486": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concat%3#0",
        "extract_uint16%3#0"
      ]
    },
    "5487": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "1"
      ]
    },
    "5488": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concat%3#0",
        "add%3#0"
      ]
    },
    "5489": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_bytes%3#0",
        "concat%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concat%3#0",
        "as_bytes%3#0"
      ]
    },
    "5490": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_u16_bytes%3#0",
        "concat%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concat%3#0",
        "as_u16_bytes%3#0"
      ]
    },
    "5493": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "as_u16_bytes%3#0",
        "concat%3#0"
      ]
    },
    "5495": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "as_u16_bytes%3#0",
        "concat%3#0",
        "0"
      ]
    },
    "5496": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concat%3#0",
        "0",
        "as_u16_bytes%3#0"
      ]
    },
    "5498": {
      "op": "replace3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0"
      ]
    },
    "5499": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "5501": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_footer@3"
    },
    "5504": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_footer@3",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "5506": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "5507": {
      "op": "+",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "5508": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "5510": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_header@1"
    },
    "5513": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_after_for@4",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "5515": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "5516": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "5517": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%41#0"
      ]
    },
    "5518": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr2#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%41#0",
        "5"
      ]
    },
    "5520": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%42#0"
      ]
    },
    "5521": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "5522": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "5524": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ]
    },
    "5525": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "0"
      ]
    },
    "5526": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%43#0"
      ]
    },
    "5527": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%43#0",
        "5"
      ]
    },
    "5529": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%44#0"
      ]
    },
    "5530": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "5531": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "5533": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ]
    },
    "5534": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "0"
      ]
    },
    "5535": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%45#0"
      ]
    },
    "5536": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%45#0",
        "5"
      ]
    },
    "5538": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%46#0"
      ]
    },
    "5539": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "5540": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5542": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ]
    },
    "5543": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "0"
      ]
    },
    "5544": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%47#0"
      ]
    },
    "5545": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%47#0",
        "5"
      ]
    },
    "5547": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%48#0"
      ]
    },
    "5548": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5549": {
      "op": "pushbytes \"bool2\"",
      "defined_out": [
        "\"bool2\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\""
      ]
    },
    "5556": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\"",
        "arr2#0"
      ]
    },
    "5558": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5559": {
      "op": "pushbytes \"bool7\"",
      "defined_out": [
        "\"bool7\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\""
      ]
    },
    "5566": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\"",
        "arr7#0"
      ]
    },
    "5568": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5569": {
      "op": "pushbytes \"bool8\"",
      "defined_out": [
        "\"bool8\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool8\""
      ]
    },
    "5576": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool8\"",
        "arr8#0"
      ]
    },
    "5578": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0"
      ]
    },
    "5579": {
      "op": "pushbytes \"bool9\"",
      "defined_out": [
        "\"bool9\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool9\""
      ]
    },
    "5586": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "\"bool9\"",
        "arr9#0"
      ]
    },
    "5588": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "5589": {
      "retsub": true,
      "op": "retsub"
    },
    "5590": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "params": {
        "arr1#0": "bytes",
        "arr2#0": "bytes",
        "arr3#0": "bytes",
        "arr4#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "stack_in": [],
      "op": "proto 4 4"
    },
    "5593": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0"
      ]
    },
    "5594": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0"
      ]
    },
    "5595": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0"
      ]
    },
    "5596": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0"
      ]
    },
    "5597": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0"
      ]
    },
    "5598": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0"
      ]
    },
    "5599": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10"
      ]
    },
    "5600": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15"
      ]
    },
    "5601": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0"
      ]
    },
    "5602": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_block@0"
    },
    "5605": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_block@0",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0"
      ]
    },
    "5606": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0"
      ]
    },
    "5607": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0"
      ]
    },
    "5608": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0"
      ]
    },
    "5609": {
      "op": "frame_dig -4",
      "defined_out": [
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "arr1#0 (copy)"
      ]
    },
    "5611": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "arr1#0 (copy)",
        "0"
      ]
    },
    "5612": {
      "op": "extract_uint16",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0"
      ]
    },
    "5613": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5614": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@1"
    },
    "5617": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@1",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5619": {
      "op": "frame_dig 13",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "5621": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "5622": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@4",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5625": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@2"
    },
    "5628": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@2",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr1#0 (copy)"
      ]
    },
    "5630": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0"
      ]
    },
    "5631": {
      "op": "frame_dig -4",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "arr1#0 (copy)"
      ]
    },
    "5633": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "arr1#0 (copy)",
        "2"
      ]
    },
    "5634": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr1#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "5636": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "5637": {
      "op": "frame_dig 14",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5639": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "5640": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "5641": {
      "op": "intc_3 // 8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "5642": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%0#0"
      ]
    },
    "5643": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "5644": {
      "op": "frame_dig 12",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0",
        "sum1#0"
      ]
    },
    "5646": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "sum1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "5647": {
      "op": "frame_bury 12",
      "defined_out": [
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5649": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@3"
    },
    "5652": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@3",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5654": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "5655": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5656": {
      "op": "frame_bury 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5658": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@1"
    },
    "5661": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@4",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)"
      ]
    },
    "5663": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "5664": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "5665": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5667": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "5668": {
      "op": "frame_bury 3",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5670": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@5"
    },
    "5673": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@5",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "5675": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "array_length%1#0"
      ]
    },
    "5677": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "5678": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@10",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5681": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@6"
    },
    "5684": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@6",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "5686": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "16"
      ]
    },
    "5688": {
      "op": "+",
      "defined_out": [
        "aggregate%add%0#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%add%0#0"
      ]
    },
    "5689": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%add%0#0",
        "arr2#0 (copy)",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%add%0#0",
        "arr2#0 (copy)"
      ]
    },
    "5691": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)",
        "aggregate%add%0#0"
      ]
    },
    "5693": {
      "op": "getbit",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "5694": {
      "op": "frame_dig 11",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0",
        "sum2#0"
      ]
    },
    "5696": {
      "op": "frame_bury 6",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "5698": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5701": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@7"
    },
    "5704": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@7",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0"
      ]
    },
    "5706": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0",
        "1"
      ]
    },
    "5707": {
      "op": "+",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0"
      ]
    },
    "5708": {
      "op": "frame_bury 6",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5710": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@8"
    },
    "5713": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@8",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "sum2#10"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#10"
      ]
    },
    "5715": {
      "op": "frame_bury 11",
      "defined_out": [
        "sum2#10"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5717": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@9"
    },
    "5720": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@9",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "5722": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "5723": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "5724": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5726": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@5"
    },
    "5729": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@10",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)"
      ]
    },
    "5731": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)",
        "0"
      ]
    },
    "5732": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "5733": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5735": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "5736": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5738": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@11"
    },
    "5741": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@11",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "5743": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0",
        "array_length%2#0"
      ]
    },
    "5745": {
      "op": "<",
      "defined_out": [
        "array_length%2#0",
        "continue_looping%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%2#0"
      ]
    },
    "5746": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@18",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5749": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@12"
    },
    "5752": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@12",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)"
      ]
    },
    "5754": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%1#0"
      ]
    },
    "5755": {
      "op": "frame_dig -2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%1#0",
        "arr3#0 (copy)"
      ]
    },
    "5757": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%1#0",
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%1#0",
        "arr3#0 (copy)",
        "2"
      ]
    },
    "5758": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "5760": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "5761": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ]
    },
    "5763": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0",
        "9"
      ]
    },
    "5765": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "5766": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "9"
      ]
    },
    "5768": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0"
      ]
    },
    "5769": {
      "op": "dup",
      "defined_out": [
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "5770": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0"
      ]
    },
    "5771": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "5772": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "aggregate%extract%0#0"
      ]
    },
    "5773": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "aggregate%item0%0#0"
      ]
    },
    "5774": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "array_item%2#0"
      ]
    },
    "5776": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "5777": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "64"
      ]
    },
    "5779": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "5780": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%1#0",
        "array_item%2#0"
      ]
    },
    "5782": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "aggregate%get_bit%1#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%1#0",
        "array_item%2#0",
        "65"
      ]
    },
    "5784": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "aggregate%get_bit%2#0",
        "aggregate%item0%0#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%1#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "5785": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%get_bit%1#0",
        "aggregate%get_bit%2#0",
        "aggregate%item0%0#0"
      ]
    },
    "5787": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%get_bit%2#0",
        "item_index_internal%2#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "values%3#0",
        "values%2#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "5789": {
      "op": "cover 2",
      "defined_out": [
        "item_index_internal%2#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "values%4#0",
        "values%3#0",
        "values%2#0"
      ]
    },
    "5791": {
      "op": "cover 2",
      "defined_out": [
        "item_index_internal%2#0",
        "tup.foo#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.foo#0",
        "values%4#0",
        "values%3#0"
      ]
    },
    "5793": {
      "op": "cover 2",
      "defined_out": [
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.foo#0",
        "values%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0",
        "values%4#0"
      ]
    },
    "5795": {
      "op": "frame_bury 8",
      "defined_out": [
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0"
      ]
    },
    "5797": {
      "op": "frame_dig 10",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0",
        "sum3#0"
      ]
    },
    "5799": {
      "op": "+",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tmp%2#0",
        "tup.bar#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tmp%2#0"
      ]
    },
    "5800": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "sum3#0 (copy)",
        "tup.bar#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0",
        "sum3#0 (copy)"
      ]
    },
    "5801": {
      "op": "frame_bury 10",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0"
      ]
    },
    "5803": {
      "op": "frame_bury 7",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0"
      ]
    },
    "5805": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@14",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5808": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@13"
    },
    "5811": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@13",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "5813": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "1"
      ]
    },
    "5814": {
      "op": "+",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "5815": {
      "op": "frame_bury 7",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5817": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@14"
    },
    "5820": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@14",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#15"
      ]
    },
    "5822": {
      "op": "dup",
      "defined_out": [
        "sum3#0",
        "sum3#0 (copy)",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "sum3#0 (copy)"
      ]
    },
    "5823": {
      "op": "frame_bury 10",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "5825": {
      "op": "frame_bury 7",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5827": {
      "op": "frame_dig 8",
      "defined_out": [
        "sum3#0",
        "sum3#15",
        "tup.baz#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.baz#0"
      ]
    },
    "5829": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@16",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5832": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@15"
    },
    "5835": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@15",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "5837": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "1"
      ]
    },
    "5838": {
      "op": "+",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "5839": {
      "op": "frame_bury 7",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5841": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@16"
    },
    "5844": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@16",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#15"
      ]
    },
    "5846": {
      "op": "frame_bury 10",
      "defined_out": [
        "sum3#15"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5848": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@17"
    },
    "5851": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@17",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "5853": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0",
        "1"
      ]
    },
    "5854": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "5855": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5857": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@11"
    },
    "5860": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@18",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)"
      ]
    },
    "5862": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)",
        "0"
      ]
    },
    "5863": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%3#0"
      ]
    },
    "5864": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5866": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "5867": {
      "op": "frame_bury 5",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5869": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@19"
    },
    "5872": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@19",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5874": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_length%3#0"
      ]
    },
    "5876": {
      "op": "<",
      "defined_out": [
        "array_length%3#0",
        "continue_looping%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%3#0"
      ]
    },
    "5877": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@22",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5880": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@20"
    },
    "5883": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@20",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)"
      ]
    },
    "5885": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%2#0"
      ]
    },
    "5886": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%2#0",
        "arr4#0 (copy)"
      ]
    },
    "5888": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%2#0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%2#0",
        "arr4#0 (copy)",
        "2"
      ]
    },
    "5889": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "5891": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "5892": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr4#0 (copy)"
      ]
    },
    "5894": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_head_and_tail%0#0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr4#0 (copy)",
        "0"
      ]
    },
    "5895": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0"
      ]
    },
    "5896": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "5898": {
      "op": "frame_dig 5",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5900": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ]
    },
    "5901": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)",
        "2"
      ]
    },
    "5902": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "5903": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%4#0",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "5905": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "5907": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "5908": {
      "op": "cover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5910": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ]
    },
    "5911": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)",
        "1"
      ]
    },
    "5912": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0"
      ]
    },
    "5913": {
      "op": "uncover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%4#0"
      ]
    },
    "5915": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%4#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "5917": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "5918": {
      "op": "cover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0"
      ]
    },
    "5920": {
      "op": "dig 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "5922": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "5923": {
      "op": "cover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0"
      ]
    },
    "5925": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "5926": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "5927": {
      "op": "dig 4",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "5929": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "5931": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "5932": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "5934": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "5936": {
      "op": "uncover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "5938": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "5939": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%3#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "5941": {
      "op": "uncover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "5943": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "5945": {
      "op": "substring3",
      "defined_out": [
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0"
      ]
    },
    "5946": {
      "op": "dup",
      "defined_out": [
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "5947": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0"
      ]
    },
    "5948": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "5949": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "aggregate%extract%1#0"
      ]
    },
    "5950": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "aggregate%item0%1#0"
      ]
    },
    "5951": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0"
      ]
    },
    "5953": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "5954": {
      "op": "intc_3 // 8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "8"
      ]
    },
    "5955": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "5956": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%0#0",
        "array_item%3#0"
      ]
    },
    "5958": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%0#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "5959": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%1#0",
        "aggregate%len%0#0",
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%0#0",
        "array_item%3#0",
        "aggregate%len%0#0"
      ]
    },
    "5960": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "array_item%3#0"
      ]
    },
    "5962": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%len%0#0",
        "array_item%3#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "5964": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "5966": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "5967": {
      "op": "extract 2 0",
      "defined_out": [
        "dyn_tup.foo#0",
        "item_index_internal%3#0",
        "values%6#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "dyn_tup.foo#0",
        "values%6#0"
      ]
    },
    "5970": {
      "op": "cover 1",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0"
      ]
    },
    "5972": {
      "op": "frame_dig 9",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "sum4#0"
      ]
    },
    "5974": {
      "op": "+",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0"
      ]
    },
    "5975": {
      "op": "dig 1",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.bar#0 (copy)",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0",
        "dyn_tup.bar#0 (copy)"
      ]
    },
    "5977": {
      "op": "len",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0",
        "tmp%6#0"
      ]
    },
    "5978": {
      "op": "+",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "tmp%7#0"
      ]
    },
    "5979": {
      "op": "frame_bury 9",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0"
      ]
    },
    "5981": {
      "op": "len",
      "defined_out": [
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "tmp%8#0"
      ]
    },
    "5982": {
      "op": "==",
      "defined_out": [
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%9#0"
      ]
    },
    "5983": {
      "error": "expected string length to match index",
      "op": "assert // expected string length to match index",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5984": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@21"
    },
    "5987": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@21",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5989": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "1"
      ]
    },
    "5990": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5991": {
      "op": "frame_bury 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5993": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@19"
    },
    "5996": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@22",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ]
    },
    "5998": {
      "op": "frame_dig 11",
      "defined_out": [
        "sum1#0",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0"
      ]
    },
    "6000": {
      "op": "frame_dig 10",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ]
    },
    "6002": {
      "op": "frame_dig 9",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ]
    },
    "6004": {
      "op": "frame_bury 3"
    },
    "6006": {
      "op": "frame_bury 2"
    },
    "6008": {
      "op": "frame_bury 1"
    },
    "6010": {
      "op": "frame_bury 0"
    },
    "6012": {
      "retsub": true,
      "op": "retsub"
    },
    "6013": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6016": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_block@0"
    },
    "6019": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_block@0",
      "stack_in": [],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "6021": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6022": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6025": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "1"
      ]
    },
    "6026": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6027": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "6028": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "2"
      ]
    },
    "6029": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6030": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "6031": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "aggregate%head%1#0",
        "3"
      ]
    },
    "6033": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "6034": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "arr#0"
      ]
    },
    "6035": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "6036": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "6037": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6038": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_header@1"
    },
    "6041": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6043": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "6045": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "6046": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6049": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_body@2"
    },
    "6052": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6054": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "6055": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%3#0",
        "0x"
      ]
    },
    "6056": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "6058": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "6059": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "arr#0"
      ]
    },
    "6061": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "6062": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%0#0",
        "arr#0 (copy)"
      ]
    },
    "6064": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%0#0"
      ]
    },
    "6066": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "6067": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "6069": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "6070": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "6071": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "6072": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "6073": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "6074": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6077": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "6079": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "6080": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "6082": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+uint64[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "6083": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6085": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_footer@3"
    },
    "6088": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6090": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "6091": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6092": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6094": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_header@1"
    },
    "6097": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "6098": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6101": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_block@0"
    },
    "6104": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_block@0",
      "stack_in": [],
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "5"
      ]
    },
    "6106": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6107": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6110": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x00"
      ]
    },
    "6111": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x00",
        "0"
      ]
    },
    "6112": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "6113": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "6114": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "6115": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "0"
      ]
    },
    "6116": {
      "op": "setbit",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "6117": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0",
        "2"
      ]
    },
    "6118": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0",
        "2",
        "1"
      ]
    },
    "6119": {
      "op": "setbit",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "6120": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0",
        "3"
      ]
    },
    "6122": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0",
        "3",
        "0"
      ]
    },
    "6123": {
      "op": "setbit",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0"
      ]
    },
    "6124": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0",
        "4"
      ]
    },
    "6126": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0",
        "4",
        "1"
      ]
    },
    "6127": {
      "op": "setbit",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%3#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%3#0"
      ]
    },
    "6128": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "arr#0"
      ]
    },
    "6129": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "6130": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "6131": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6132": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_header@1"
    },
    "6135": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6137": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "6139": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "6140": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6143": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_body@2"
    },
    "6146": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6148": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "6149": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "6150": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "6151": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "6152": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "0x00"
      ]
    },
    "6153": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "0x00",
        "0"
      ]
    },
    "6154": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "6156": {
      "op": "setbit",
      "defined_out": [
        "aggregate%as_Encoded(bool8)%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "6157": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(bool8)%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(bool8)%0#0",
        "0x"
      ]
    },
    "6158": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "6160": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "6161": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "6163": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "6165": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "6166": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "arr#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%2#0",
        "1",
        "8"
      ]
    },
    "6167": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+bool1[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "as_Encoded(len+bool1[])%0#0"
      ]
    },
    "6170": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6172": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_footer@3"
    },
    "6175": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6177": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "6178": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6179": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6181": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_header@1"
    },
    "6184": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "6185": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6188": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_block@0"
    },
    "6191": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "6192": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6193": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6196": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0"
      ]
    },
    "6197": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6198": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "6199": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6201": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6202": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "0x00"
      ]
    },
    "6203": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "0x00",
        "0"
      ]
    },
    "6204": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "6205": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "6206": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "6207": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "0"
      ]
    },
    "6208": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "6209": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "6210": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "arr#0"
      ]
    },
    "6211": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "6212": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "6213": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6214": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_header@1"
    },
    "6217": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6219": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "6221": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "6222": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6225": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_body@2"
    },
    "6228": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6230": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6231": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "6232": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "6233": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "6234": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "6235": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "6237": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6238": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "6240": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "6241": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "6242": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "6243": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "6245": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6246": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "6247": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6249": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%3#0"
      ]
    },
    "6250": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%3#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "0x00"
      ]
    },
    "6251": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "0x00",
        "0"
      ]
    },
    "6252": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "6254": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "aggregate%head%3#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "6255": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%3#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%encoded_bool%1#0",
        "1"
      ]
    },
    "6256": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%head%3#0",
        "aggregate%encoded_bool%1#0",
        "1",
        "tmp%3#0"
      ]
    },
    "6258": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%head%3#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "6259": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1)%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%1#0"
      ]
    },
    "6260": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%1#0",
        "0x"
      ]
    },
    "6261": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1)%1#0"
      ]
    },
    "6263": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "6264": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0",
        "arr#0"
      ]
    },
    "6266": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "6267": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0",
        "arr#0 (copy)"
      ]
    },
    "6269": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%4#0"
      ]
    },
    "6271": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "6272": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "6274": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "6275": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "6276": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "6277": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "6278": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "6279": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6282": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "6284": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "6285": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "6287": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "as_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "6288": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6290": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_footer@3"
    },
    "6293": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6295": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "6296": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6297": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6299": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_header@1"
    },
    "6302": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "6303": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6306": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_block@0"
    },
    "6309": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "6310": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6311": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6314": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0"
      ]
    },
    "6315": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6316": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "6317": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6319": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6320": {
      "op": "bytec 8 // \"Hello\"",
      "defined_out": [
        "\"Hello\"",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "\"Hello\""
      ]
    },
    "6322": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%length%0#0"
      ]
    },
    "6323": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "6324": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "6327": {
      "op": "bytec 8 // \"Hello\"",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "\"Hello\""
      ]
    },
    "6329": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "6330": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "10"
      ]
    },
    "6332": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "6333": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "6336": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6338": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "6340": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "6341": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "6343": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0"
      ]
    },
    "6344": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "2"
      ]
    },
    "6345": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "6346": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "6349": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "6351": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "6353": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%head%2#0"
      ]
    },
    "6354": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0"
      ]
    },
    "6356": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "arr#0"
      ]
    },
    "6357": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "6358": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "6359": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6360": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_header@1"
    },
    "6363": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6365": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "6367": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "6368": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6371": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_body@2"
    },
    "6374": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6376": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6377": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "6380": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "6382": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "i#0",
        "arr#0"
      ]
    },
    "6384": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "6385": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "6386": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "6387": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0"
      ]
    },
    "6389": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "6390": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "total_length%0#0"
      ]
    },
    "6391": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "total_length%0#0",
        "arr#0"
      ]
    },
    "6393": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "total_length%0#0",
        "arr#0",
        "2"
      ]
    },
    "6394": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "6396": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "extract_to_end%0#0"
      ]
    },
    "6397": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "6399": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6400": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "6401": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6403": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "aggregate%head%3#0"
      ]
    },
    "6404": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0"
      ]
    },
    "6406": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "6407": {
      "op": "len",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%length%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "6408": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "6409": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "6412": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ]
    },
    "6414": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "6415": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "10"
      ]
    },
    "6417": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%5#0",
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "6418": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%2#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "6421": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%3#0"
      ]
    },
    "6423": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "6425": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%4#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%4#0"
      ]
    },
    "6426": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "6428": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0"
      ]
    },
    "6429": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "2"
      ]
    },
    "6430": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%as_bytes%6#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "6431": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "6434": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%3#0",
        "0x"
      ]
    },
    "6435": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "0x",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "6437": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%head%5#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%head%5#0"
      ]
    },
    "6438": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0"
      ]
    },
    "6440": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%1#0"
      ]
    },
    "6441": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_to_end%0#0",
        "tmp%1#0",
        "extract_uint16%0#0"
      ]
    },
    "6443": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6445": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "6446": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%1#0"
      ]
    },
    "6448": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "6451": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6453": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_footer@3"
    },
    "6456": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6458": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "6459": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "6460": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "6462": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_header@1"
    },
    "6465": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "6466": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "params": {
        "arr#0": "bytes",
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "6469": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_block@0"
    },
    "6472": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_block@0",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "6475": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "6476": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "6477": {
      "op": "stores",
      "stack_out": [
        "slot%0#0"
      ]
    },
    "6478": {
      "op": "dupn 2",
      "defined_out": [
        "mutable#0",
        "mutable#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "mutable#0 (copy)"
      ]
    },
    "6480": {
      "op": "loads",
      "defined_out": [
        "mutable#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0"
      ]
    },
    "6481": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "mutable#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "arr#0 (copy)"
      ]
    },
    "6483": {
      "op": "len",
      "defined_out": [
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ]
    },
    "6484": {
      "op": "frame_dig -2",
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0",
        "arr#0 (copy)"
      ]
    },
    "6486": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0 (copy)",
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "6487": {
      "op": "uncover 2",
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "arr#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "6489": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "mutable#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6490": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "concat%0#0"
      ]
    },
    "6491": {
      "op": "stores",
      "stack_out": [
        "mutable#0"
      ]
    },
    "6492": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "1"
      ]
    },
    "6493": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "mutable#0"
      ]
    },
    "6494": {
      "op": "intc_0 // 0",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0"
      ]
    },
    "6495": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_header@1"
    },
    "6498": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_header@1",
      "stack_in": [
        "mutable#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0"
      ]
    },
    "6500": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "6502": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "6503": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_after_for@4",
      "stack_out": [
        "mutable#0",
        "i#0"
      ]
    },
    "6506": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_body@2"
    },
    "6509": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_body@2",
      "stack_in": [
        "mutable#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0"
      ]
    },
    "6511": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6512": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "6513": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "6514": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "6515": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "6516": {
      "op": "cover 1",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "6518": {
      "op": "dup",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6519": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "6521": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "6522": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "6523": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "6524": {
      "op": "cover 1",
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "6526": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "mutable#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0",
        "mutable#0"
      ]
    },
    "6528": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "mutable#0",
        "mutable#0 (copy)",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0",
        "mutable#0 (copy)",
        "mutable#0 (copy)"
      ]
    },
    "6529": {
      "op": "cover 4",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0",
        "mutable#0 (copy)"
      ]
    },
    "6531": {
      "op": "loads",
      "defined_out": [
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "6532": {
      "op": "cover 3",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "6534": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6535": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "6536": {
      "op": "uncover 1",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6538": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "6539": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%0#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "0x00"
      ]
    },
    "6540": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "0x00",
        "0"
      ]
    },
    "6541": {
      "op": "uncover 4",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "6543": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "6544": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "6545": {
      "op": "uncover 3",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%3#0"
      ]
    },
    "6547": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "6548": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "6549": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "0x"
      ]
    },
    "6550": {
      "op": "uncover 1",
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "6552": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%4#0"
      ]
    },
    "6553": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "i#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0",
        "concat%1#0"
      ]
    },
    "6554": {
      "op": "stores",
      "stack_out": [
        "mutable#0",
        "i#0"
      ]
    },
    "6555": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_footer@3"
    },
    "6558": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_footer@3",
      "stack_in": [
        "mutable#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0"
      ]
    },
    "6560": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "6561": {
      "op": "+",
      "stack_out": [
        "mutable#0",
        "i#0",
        "i#0"
      ]
    },
    "6562": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0"
      ]
    },
    "6564": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_header@1"
    },
    "6567": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_after_for@4",
      "stack_in": [
        "mutable#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "mutable#0"
      ]
    },
    "6569": {
      "op": "loads",
      "defined_out": [
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "6570": {
      "op": "dup",
      "defined_out": [
        "mutable#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ]
    },
    "6571": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "6572": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%bytes_len%0#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0",
        "9"
      ]
    },
    "6574": {
      "op": "/",
      "defined_out": [
        "mutable#0",
        "slot_contents%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "slot_contents%2#0",
        "tmp%5#0"
      ]
    },
    "6575": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "slot_contents%2#0",
        "as_bytes%0#0"
      ]
    },
    "6576": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "slot_contents%2#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6579": {
      "op": "uncover 1",
      "stack_out": [
        "mutable#0",
        "i#0",
        "as_u16_bytes%0#0",
        "slot_contents%2#0"
      ]
    },
    "6581": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "i#0",
        "converted_array%0#0"
      ]
    },
    "6582": {
      "op": "frame_bury 0"
    },
    "6584": {
      "retsub": true,
      "op": "retsub"
    },
    "6585": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "params": {
        "arg#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6588": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple_block@0"
    },
    "6591": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "6592": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6593": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6596": {
      "op": "bytec 9 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0000000000000001"
      ]
    },
    "6598": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "6599": {
      "op": "bytec 10 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "0x0000000000000002"
      ]
    },
    "6601": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "6602": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "arg#0 (copy)"
      ]
    },
    "6604": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "6605": {
      "op": "dup",
      "defined_out": [
        "concat%0#0",
        "concat%0#0 (copy)"
      ],
      "stack_out": [
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "6606": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "total_length%0#0"
      ]
    },
    "6607": {
      "op": "cover 1",
      "stack_out": [
        "total_length%0#0",
        "concat%0#0"
      ]
    },
    "6609": {
      "op": "dup",
      "stack_out": [
        "total_length%0#0",
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "6610": {
      "op": "intc_2 // 2",
      "stack_out": [
        "total_length%0#0",
        "concat%0#0",
        "concat%0#0 (copy)",
        "2"
      ]
    },
    "6611": {
      "op": "uncover 3",
      "stack_out": [
        "concat%0#0",
        "concat%0#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "6613": {
      "op": "substring3",
      "defined_out": [
        "concat%0#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6614": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "len%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "len%0#0"
      ]
    },
    "6615": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "concat%0#0",
        "len%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "len%0#0",
        "8"
      ]
    },
    "6616": {
      "op": "/",
      "defined_out": [
        "concat%0#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "div_floor%0#0"
      ]
    },
    "6617": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "6618": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6621": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "6623": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "6624": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "6626": {
      "op": "replace3",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "6627": {
      "retsub": true,
      "op": "retsub"
    },
    "6628": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "params": {
        "arg.0#0": "bytes",
        "arg.1#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "6631": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple_block@0"
    },
    "6634": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "6635": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6636": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6639": {
      "op": "bytec 9 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0000000000000001"
      ]
    },
    "6641": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "6642": {
      "op": "bytec 10 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "0x0000000000000002"
      ]
    },
    "6644": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "6645": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x"
      ]
    },
    "6646": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arg.0#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x",
        "arg.0#0 (copy)"
      ]
    },
    "6648": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "aggregate%head%2#0"
      ]
    },
    "6649": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%2#0",
        "arg.1#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "aggregate%head%2#0",
        "arg.1#0 (copy)"
      ]
    },
    "6651": {
      "op": "concat",
      "defined_out": [
        "prefix#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "tmp%0#0"
      ]
    },
    "6652": {
      "op": "dig 1",
      "defined_out": [
        "prefix#0",
        "prefix#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "tmp%0#0",
        "prefix#0 (copy)"
      ]
    },
    "6654": {
      "op": "uncover 1",
      "stack_out": [
        "prefix#0",
        "prefix#0 (copy)",
        "tmp%0#0"
      ]
    },
    "6656": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "concat%0#0"
      ]
    },
    "6657": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "prefix#0"
      ]
    },
    "6659": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "concat%0#0",
        "prefix#0",
        "0"
      ]
    },
    "6660": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "6661": {
      "op": "intc_2 // 2",
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "2"
      ]
    },
    "6662": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "6663": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "6664": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6667": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "6669": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "6670": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "6672": {
      "op": "replace3",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "6673": {
      "retsub": true,
      "op": "retsub"
    },
    "6674": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "params": {
        "arg#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6677": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple_block@0"
    },
    "6680": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\""
      ],
      "stack_out": [
        "\"a\""
      ]
    },
    "6681": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "6682": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6683": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "6686": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"a\""
      ]
    },
    "6687": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6688": {
      "op": "bytec 5 // \"b\"",
      "defined_out": [
        "\"b\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"b\""
      ]
    },
    "6690": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "6691": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "6692": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "6695": {
      "op": "bytec 5 // \"b\"",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0",
        "\"b\""
      ]
    },
    "6697": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "6698": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "6700": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "2"
      ]
    },
    "6701": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "6702": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "6705": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "4"
      ]
    },
    "6707": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "6708": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "6711": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6712": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "6714": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "6715": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "6717": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "6718": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "6719": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "6722": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "6723": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%1#0",
        "tmp%0#0"
      ]
    },
    "6725": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%concat%0#0"
      ]
    },
    "6726": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ]
    },
    "6728": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "6729": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "2"
      ]
    },
    "6730": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "2",
        "2"
      ]
    },
    "6731": {
      "op": "*",
      "defined_out": [
        "prefix#0",
        "start_of_tail%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0"
      ]
    },
    "6732": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg#0 (copy)",
        "prefix#0",
        "start_of_tail%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "arg#0 (copy)"
      ]
    },
    "6734": {
      "op": "len",
      "defined_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0"
      ]
    },
    "6735": {
      "op": "frame_dig -1",
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0",
        "arg#0 (copy)"
      ]
    },
    "6737": {
      "op": "uncover 2",
      "stack_out": [
        "prefix#0",
        "total_length%0#0",
        "arg#0 (copy)",
        "start_of_tail%0#0"
      ]
    },
    "6739": {
      "op": "uncover 2",
      "stack_out": [
        "prefix#0",
        "arg#0 (copy)",
        "start_of_tail%0#0",
        "total_length%0#0"
      ]
    },
    "6741": {
      "op": "substring3",
      "defined_out": [
        "data%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "data%0#0"
      ]
    },
    "6742": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "data%0#0",
        "2"
      ]
    },
    "6743": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "6746": {
      "retsub": true,
      "op": "retsub"
    },
    "6747": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "params": {
        "arg.0#0": "bytes",
        "arg.1#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "6750": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple_block@0"
    },
    "6753": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\""
      ],
      "stack_out": [
        "\"a\""
      ]
    },
    "6754": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "6755": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6756": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "6759": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"a\""
      ]
    },
    "6760": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6761": {
      "op": "bytec 5 // \"b\"",
      "defined_out": [
        "\"b\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"b\""
      ]
    },
    "6763": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "6764": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "6765": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "6768": {
      "op": "bytec 5 // \"b\"",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0",
        "\"b\""
      ]
    },
    "6770": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "6771": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "6773": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "2"
      ]
    },
    "6774": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "6775": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "6778": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "4"
      ]
    },
    "6780": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "6781": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "6784": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6785": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "6787": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "6788": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "6790": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "6791": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "6792": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "6795": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "6796": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%1#0",
        "tmp%0#0"
      ]
    },
    "6798": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%concat%0#0"
      ]
    },
    "6799": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ]
    },
    "6801": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "6802": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x"
      ]
    },
    "6803": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arg.0#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x",
        "arg.0#0 (copy)"
      ]
    },
    "6805": {
      "op": "concat",
      "defined_out": [
        "concat%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "concat%0#0"
      ]
    },
    "6806": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg.1#0 (copy)",
        "concat%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "concat%0#0",
        "arg.1#0 (copy)"
      ]
    },
    "6808": {
      "op": "concat",
      "defined_out": [
        "concat%1#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "concat%1#0"
      ]
    },
    "6809": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "concat%1#0",
        "2"
      ]
    },
    "6810": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "6813": {
      "retsub": true,
      "op": "retsub"
    },
    "6814": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "params": {
        "imm1#0": "bytes",
        "imm2#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "6817": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic_block@0"
    },
    "6820": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "imm1#0 (copy)"
      ]
    },
    "6822": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "imm1#0 (copy)",
        "0"
      ]
    },
    "6823": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0"
      ]
    },
    "6824": {
      "op": "frame_dig -2",
      "stack_out": [
        "extract_uint16%0#0",
        "imm1#0 (copy)"
      ]
    },
    "6826": {
      "op": "len",
      "defined_out": [
        "extract_uint16%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "total_length%0#0"
      ]
    },
    "6827": {
      "op": "frame_dig -2",
      "stack_out": [
        "extract_uint16%0#0",
        "total_length%0#0",
        "imm1#0 (copy)"
      ]
    },
    "6829": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "imm1#0 (copy)",
        "total_length%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "total_length%0#0",
        "imm1#0 (copy)",
        "2"
      ]
    },
    "6830": {
      "op": "uncover 2",
      "stack_out": [
        "extract_uint16%0#0",
        "imm1#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "6832": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6833": {
      "op": "frame_dig -1",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "imm2#0 (copy)"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "imm2#0 (copy)"
      ]
    },
    "6835": {
      "op": "len",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "total_length%1#0"
      ]
    },
    "6836": {
      "op": "frame_dig -1",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "total_length%1#0",
        "imm2#0 (copy)"
      ]
    },
    "6838": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "total_length%1#0",
        "imm2#0 (copy)",
        "2"
      ]
    },
    "6839": {
      "op": "uncover 2",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "imm2#0 (copy)",
        "2",
        "total_length%1#0"
      ]
    },
    "6841": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0"
      ]
    },
    "6842": {
      "op": "frame_dig -1",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "imm2#0 (copy)"
      ]
    },
    "6844": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "imm2#0 (copy)",
        "0"
      ]
    },
    "6845": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "tmp%0#0"
      ]
    },
    "6846": {
      "op": "uncover 3",
      "stack_out": [
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "tmp%0#0",
        "extract_uint16%0#0"
      ]
    },
    "6848": {
      "op": "uncover 3",
      "stack_out": [
        "extract_to_end%1#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6850": {
      "op": "uncover 2",
      "stack_out": [
        "extract_to_end%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0"
      ]
    },
    "6852": {
      "op": "uncover 3",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "extract_to_end%1#0"
      ]
    },
    "6854": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "6857": {
      "retsub": true,
      "op": "retsub"
    },
    "6858": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "params": {
        "imm#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6861": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4_block@0"
    },
    "6864": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "6866": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0 (copy)",
        "0"
      ]
    },
    "6867": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6868": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "6869": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6870": {
      "error": "expected non empty array",
      "op": "assert // expected non empty array",
      "stack_out": []
    },
    "6871": {
      "op": "frame_dig -1",
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "6873": {
      "op": "intc_0 // 0",
      "stack_out": [
        "imm#0 (copy)",
        "0"
      ]
    },
    "6874": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "6875": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "1"
      ]
    },
    "6876": {
      "op": "-",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "6877": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "imm#0 (copy)"
      ]
    },
    "6879": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%0#0"
      ]
    },
    "6880": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%0#0",
        "imm#0 (copy)"
      ]
    },
    "6882": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "imm#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%0#0",
        "imm#0 (copy)",
        "2"
      ]
    },
    "6883": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "imm#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "6885": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "6886": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0",
        "0"
      ]
    },
    "6887": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "aggregate%array_trimmed%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0",
        "0",
        "16"
      ]
    },
    "6889": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "6890": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "6892": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "array_item%0#0"
      ]
    },
    "6893": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%0#0",
        "tmp%3#0"
      ]
    },
    "6895": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "array_item%0#0",
        "tmp%3#0",
        "16"
      ]
    },
    "6897": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "6898": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_item%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "6899": {
      "op": "+",
      "defined_out": [
        "aggregate%write_offset_with_length_header%0#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "6900": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_item%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "imm#0 (copy)"
      ]
    },
    "6902": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%0#0",
        "imm#0 (copy)",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "6904": {
      "op": "uncover 2",
      "stack_out": [
        "imm#0 (copy)",
        "aggregate%write_offset_with_length_header%0#0",
        "array_item%0#0"
      ]
    },
    "6906": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "6907": {
      "op": "dup"
    },
    "6908": {
      "op": "frame_bury -1",
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "6910": {
      "retsub": true,
      "op": "retsub"
    },
    "6911": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "6914": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "item_index_internal%0#0"
      ]
    },
    "6915": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_block@0"
    },
    "6918": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_block@0",
      "stack_in": [
        "item_index_internal%0#0"
      ],
      "op": "pushint 48 // 48",
      "defined_out": [
        "48"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "48"
      ]
    },
    "6920": {
      "op": "bzero",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "6921": {
      "op": "dup",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0"
      ]
    },
    "6922": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%1#0"
      ]
    },
    "6924": {
      "op": "intc_1 // 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%1#0",
        "1"
      ]
    },
    "6925": {
      "op": "+",
      "defined_out": [
        "arr1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0"
      ]
    },
    "6926": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "6928": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0",
        "2"
      ]
    },
    "6929": {
      "op": "+",
      "defined_out": [
        "arr1#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "6930": {
      "op": "cover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "tmp%2#0"
      ]
    },
    "6932": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6933": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "arr1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "6934": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6936": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "arr1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "aggregate%head%0#0"
      ]
    },
    "6937": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "aggregate%head%0#0",
        "tmp%4#0"
      ]
    },
    "6939": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6940": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%5#0"
      ]
    },
    "6941": {
      "op": "dup",
      "defined_out": [
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)"
      ]
    },
    "6942": {
      "op": "cover 2",
      "defined_out": [
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0"
      ]
    },
    "6944": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "0x"
      ]
    },
    "6945": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "0x",
        "struct12#0 (copy)"
      ]
    },
    "6947": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%2#0"
      ]
    },
    "6948": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%2#0",
        "struct12#0 (copy)"
      ]
    },
    "6950": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%3#0"
      ]
    },
    "6951": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%3#0",
        "struct12#0 (copy)"
      ]
    },
    "6953": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "encoded_array%0#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "encoded_array%0#0"
      ]
    },
    "6954": {
      "op": "dup",
      "defined_out": [
        "arr1#0",
        "arr2#0 (copy)",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "arr2#0 (copy)",
        "arr2#0 (copy)"
      ]
    },
    "6955": {
      "op": "cover 2",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "arr2#0 (copy)",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "arr2#0 (copy)"
      ]
    },
    "6957": {
      "op": "cover 3",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ]
    },
    "6959": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "0x"
      ]
    },
    "6960": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "0x",
        "struct12#0 (copy)"
      ]
    },
    "6962": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "aggregate%head%5#0"
      ]
    },
    "6963": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "aggregate%head%5#0",
        "struct12#0 (copy)"
      ]
    },
    "6965": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "aggregate%head%6#0"
      ]
    },
    "6966": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "aggregate%head%6#0",
        "struct12#0"
      ]
    },
    "6968": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0"
      ]
    },
    "6969": {
      "op": "uncover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr2#0",
        "arr3#0",
        "arr1#0"
      ]
    },
    "6971": {
      "op": "dig 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr2#0",
        "arr3#0",
        "arr1#0",
        "arr2#0 (copy)"
      ]
    },
    "6973": {
      "op": "!=",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "struct12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr2#0",
        "arr3#0",
        "tmp%6#0"
      ]
    },
    "6974": {
      "error": "expected arrays to be different",
      "op": "assert // expected arrays to be different",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr2#0",
        "arr3#0"
      ]
    },
    "6975": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "tmp%7#0"
      ]
    },
    "6976": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0"
      ]
    },
    "6977": {
      "op": "intc_1 // 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "1"
      ]
    },
    "6978": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0"
      ]
    },
    "6979": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "6980": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@1"
    },
    "6983": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@1",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "6985": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "6987": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "6988": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_after_for@4",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "6991": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_body@2"
    },
    "6994": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_body@2",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "6996": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "16"
      ]
    },
    "6998": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "6999": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr1#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "aggregate%write_offset%0#0",
        "arr1#0"
      ]
    },
    "7001": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "7003": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr1#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "aggregate%write_offset%0#0",
        "struct12#0"
      ]
    },
    "7005": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "i#0",
        "struct12#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "updated_array%0#0"
      ]
    },
    "7006": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr1#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "7008": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_footer@3"
    },
    "7011": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_footer@3",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "7013": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "7014": {
      "op": "+",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "7015": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "7017": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@1"
    },
    "7020": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_after_for@4",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0"
      ]
    },
    "7022": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "arr2#0"
      ]
    },
    "7024": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "7025": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "7026": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "0"
      ]
    },
    "7027": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "7029": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@5"
    },
    "7032": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@5",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "7034": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "3"
      ]
    },
    "7036": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "7037": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_after_for@8",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "7040": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_body@6"
    },
    "7043": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_body@6",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "7045": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "16"
      ]
    },
    "7047": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "7048": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "arr1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "aggregate%bytes_offset%1#0",
        "arr1#0"
      ]
    },
    "7050": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "7052": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "7054": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct_it#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "struct_it#0"
      ]
    },
    "7055": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0",
        "struct_it#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "struct_it#0",
        "struct12#0"
      ]
    },
    "7057": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "7058": {
      "error": "expected items on iteration to be the same",
      "op": "assert // expected items on iteration to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "7059": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_footer@7"
    },
    "7062": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_footer@7",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "7064": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "7065": {
      "op": "+",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "7066": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "7068": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@5"
    },
    "7071": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_after_for@8",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "bytec 6 // \"imm_fixed_arr\"",
      "defined_out": [
        "\"imm_fixed_arr\""
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\""
      ]
    },
    "7073": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"imm_fixed_arr\"",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\"",
        "arr1#0"
      ]
    },
    "7075": {
      "op": "dup",
      "defined_out": [
        "\"imm_fixed_arr\"",
        "arr1#0",
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\"",
        "arr1#0 (copy)",
        "arr1#0 (copy)"
      ]
    },
    "7076": {
      "op": "cover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "\"imm_fixed_arr\"",
        "arr1#0 (copy)"
      ]
    },
    "7078": {
      "op": "app_global_put",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0"
      ]
    },
    "7079": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "0"
      ]
    },
    "7080": {
      "op": "bytec 6 // \"imm_fixed_arr\"",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "0",
        "\"imm_fixed_arr\""
      ]
    },
    "7082": {
      "op": "app_global_get_ex",
      "defined_out": [
        "arr1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "7083": {
      "error": "check self.imm_fixed_arr exists",
      "op": "assert // check self.imm_fixed_arr exists",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "maybe_value%0#0"
      ]
    },
    "7084": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "maybe_value%0#0",
        "arr2#0"
      ]
    },
    "7086": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "tmp%10#0"
      ]
    },
    "7087": {
      "error": "expected array in storage to be the same",
      "op": "assert // expected array in storage to be the same",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0"
      ]
    },
    "7088": {
      "op": "dup",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "mut_arr#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "mut_arr#0 (copy)"
      ]
    },
    "7089": {
      "callsub": "test_cases.array.immutable.sum_imm_fixed",
      "op": "callsub sum_imm_fixed",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "tmp%13#0"
      ]
    },
    "7092": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "tmp%13#0",
        "15"
      ]
    },
    "7094": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "tmp%14#0"
      ]
    },
    "7095": {
      "error": "expected sum to be 15",
      "op": "assert // expected sum to be 15",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0"
      ]
    },
    "7096": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "0"
      ]
    },
    "7097": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "7098": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "7099": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "7101": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "aggregate%head%8#0"
      ]
    },
    "7102": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "aggregate%head%8#0",
        "0"
      ]
    },
    "7103": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%8#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "aggregate%head%8#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "7104": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "tmp%15#0"
      ]
    },
    "7105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "tmp%15#0",
        "0"
      ]
    },
    "7106": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "tmp%15#0",
        "0",
        "16"
      ]
    },
    "7108": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%1#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "tmp%15#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "7109": {
      "op": "uncover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%15#0",
        "aggregate%write_offset%1#0",
        "mut_arr#0"
      ]
    },
    "7111": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%15#0",
        "mut_arr#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "7113": {
      "op": "uncover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0",
        "aggregate%write_offset%1#0",
        "tmp%15#0"
      ]
    },
    "7115": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#0"
      ]
    },
    "7116": {
      "callsub": "test_cases.array.immutable.sum_imm_fixed",
      "op": "callsub sum_imm_fixed",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "7119": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr1#0",
        "arr2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%17#0",
        "10"
      ]
    },
    "7121": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "7122": {
      "error": "expected sum to be 10",
      "op": "assert // expected sum to be 10",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "7123": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "0"
      ]
    },
    "7124": {
      "op": "bytec 6 // \"imm_fixed_arr\"",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "0",
        "\"imm_fixed_arr\""
      ]
    },
    "7126": {
      "op": "app_global_get_ex",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "7127": {
      "error": "check self.imm_fixed_arr exists",
      "op": "assert // check self.imm_fixed_arr exists",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "7128": {
      "op": "frame_bury 0"
    },
    "7130": {
      "retsub": true,
      "op": "retsub"
    },
    "7131": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "b _puya_lib.mem.new_slot@entry"
    },
    "7134": {
      "block": "_puya_lib.mem.new_slot@entry",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "7136": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "7137": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "7139": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "7142": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "7144": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "7145": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "7146": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "7147": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "7149": {
      "retsub": true,
      "op": "retsub"
    }
  }
}