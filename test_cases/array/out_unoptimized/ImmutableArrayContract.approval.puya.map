{
  "version": 3,
  "sources": [
    "../immutable.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AA4DA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;AAAA;;AAoIK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAnBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAnBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAfA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAlBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAxBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AArCL;;;AAAA;AAqCK;;;AAAA;;;;AApCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AADL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;;;AAEa;AACC;AAAd;AAAc;AAAA;;AAAA;;AAAA;AAAd;;;AACQ;;AAAU;;;AAAV;AAAA;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;AAGJ;;;AAEa;AAAb;AAAa;AAAA;;AAAA;;AAAA;AAAb;;;AACc;;AAAA;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;;AAAA;AAAA;AAGJ;;;AAEc;AAAd;AAAc;AAAA;;AAAA;;AAAA;AAAd;;;AACc;;AAAA;AAAA;;;AAAA;;AAAN;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;;AAAA;AAAA;AAxNU;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AAEM;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEM;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;;;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEM;;;AAAW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEqB;;AAAf;AAAA;;AAAA;AAAA;AAAY;AAAZ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEA;;;AAAA;AAAA;;AAER;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAA;;AAAA;AAAjB;;;AACkC;;AAAL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEG;;AAAS;AAAT;AAAX;;;AACuB;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AACD;;AAAS;AAAT;AAAX;;;AACuB;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AACD;;AAAS;AAAT;AAAX;;;AACmB;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACD;;AAAS;;AAAT;AAAX;;;AAC2B;;AAAS;AAAT;AAAJ;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AAEJ;;;AAAA;;AAAA;AACG;;AAAA;AAAA;AAAX;;;AACkB;;AAAA;;;AAAA;;AACC;AAAA;AAAc;;AAAS;AAAT;AAAd;AAAP;;AAEZ;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACkB;;AAAA;;;AAAY;;AAAA;AAAI;AAAJ;AAAA;AAAW;AAAJ;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAD;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAsB;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAA;AAAuB;;AAAvB;AAAA;AAAP;AAEM;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAsB;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAA;AAAuB;;AAAvB;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACkB;;AAAA;;;AAA8B;;AAAA;AAAI;AAAJ;AAAS;AAAT;AAAA;AAAgB;AAAI;;AAAJ;AAAQ;AAAR;AAAa;AAAb;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAZ;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACgB;AAAA;;;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AACc;AAAP;AAAP;AACA;AACA;AACA;;;AAAA;AAAA;;AAER;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AAC8B;;AAAA;AAAI;AAAJ;AAAA;AAAO;AAAA;AAAP;AAAA;AAAO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAc;;AAAd;AAAP;AACS;AAAjB;AAAiB;AAAL;;AAAK;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAI;AAAJ;AAAb;AAAP;AACO;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAP;AAFK;;AAAA;AAAA;AAAA;;;;;AAIH;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAW;AAAX;AAAA;AAA+B;AAAT;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAY;;AAAZ;AAAA;AAAgC;;AAAT;AAAvB;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;AAEc;AAAA;AAAA;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACqD;;AAAA;AAAI;AAAJ;AAAA;AAAW;;;AAAA;AAAX;AAAA;AAAW;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAN;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAc;;AAAd;AAAP;AACS;AAAjB;AAAiB;AAAL;;AAAK;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAI;AAAJ;AAAb;AAAP;AACO;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAa;AAAA;;;AAAb;AAAP;AAFK;;AAAA;AAAA;AAAA;;;;;AAIH;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;;AAAI;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAA8B;AAA9B;AAAA;AAAyC;AAAzC;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAA+B;;AAA/B;AAAA;AAA0C;;;;;AAA1C;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;AAEe;AAAA;AAAA;AAAP;AACO;AAAA;AAAA;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAA;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAA;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AAES;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;;;AAA2B;;AAAA;AAAK;AAAL;AAAA;AAAU;AAAK;AAAL;AAAA;AAAV;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAf;AAAA;AAAA;AAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AACO;;AAAA;;;AAAA;AAIG;AAAK;AAAL;AAAA;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AAPE;AAAI;AAAJ;AAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AADR;AAAA;AAAA;AADG;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AAaO;;AAAA;;;AAAA;AAIG;AAAK;AAAL;AAAA;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AARE;AAAI;AAAJ;AAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AADR;AAAA;AAAA;AADG;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AAcO;;AAAA;;;AAAA;AAIG;AAAK;AAAL;AAAA;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AATE;AAAI;AAAJ;AAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AA7BK;;AAAA;AAAA;AAAA;;;;;AA6CF;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8"
    },
    "7": {
      "op": "bytecblock 0x 0x00 0x0000 0x80"
    },
    "17": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "19": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "20": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "21": {
      "op": "bz main_bare_routing@12",
      "stack_out": []
    },
    "24": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "27": {
      "op": "pushbytes 0x44d42f99 // method \"test_uint64_array()void\"",
      "defined_out": [
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)"
      ]
    },
    "33": {
      "op": "pushbytes 0x743d70ed // method \"test_bool_array(uint64)void\"",
      "defined_out": [
        "Method(test_bool_array(uint64)void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_bool_array(uint64)void)"
      ]
    },
    "39": {
      "op": "pushbytes 0x1c7e0494 // method \"test_fixed_size_tuple_array()void\"",
      "defined_out": [
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)"
      ]
    },
    "45": {
      "op": "pushbytes 0xa2d5860b // method \"test_fixed_size_named_tuple_array()void\"",
      "defined_out": [
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)"
      ]
    },
    "51": {
      "op": "pushbytes 0xe05fc564 // method \"test_dynamic_sized_tuple_array()void\"",
      "defined_out": [
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)"
      ]
    },
    "57": {
      "op": "pushbytes 0x1e092b83 // method \"test_dynamic_sized_named_tuple_array()void\"",
      "defined_out": [
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)"
      ]
    },
    "63": {
      "op": "pushbytes 0x6cb7c991 // method \"test_bit_packed_tuples()void\"",
      "defined_out": [
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_uint64_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_bit_packed_tuples()void)"
      ]
    },
    "69": {
      "op": "uncover 7",
      "stack_out": [
        "Method(test_uint64_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "tmp%2#0"
      ]
    },
    "71": {
      "op": "match main_test_uint64_array_route@3 main_test_bool_array_route@4 main_test_fixed_size_tuple_array_route@5 main_test_fixed_size_named_tuple_array_route@6 main_test_dynamic_sized_tuple_array_route@7 main_test_dynamic_sized_named_tuple_array_route@8 main_test_bit_packed_tuples_route@9",
      "stack_out": []
    },
    "87": {
      "block": "main_after_if_else@16",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "88": {
      "block": "main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "89": {
      "block": "main_test_bit_packed_tuples_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "91": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "NoOp"
      ]
    },
    "92": {
      "op": "==",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "93": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "94": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "96": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "0"
      ]
    },
    "97": {
      "op": "!=",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "98": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "99": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "op": "callsub test_bit_packed_tuples"
    },
    "102": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "103": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17"
    },
    "106": {
      "block": "main_test_dynamic_sized_named_tuple_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "108": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "NoOp"
      ]
    },
    "109": {
      "op": "==",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "110": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "111": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "113": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "0"
      ]
    },
    "114": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "115": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "116": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "op": "callsub test_dynamic_sized_named_tuple_array"
    },
    "119": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "120": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17"
    },
    "123": {
      "block": "main_test_dynamic_sized_tuple_array_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "125": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "NoOp"
      ]
    },
    "126": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "127": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "128": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "130": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "131": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "132": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "133": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "op": "callsub test_dynamic_sized_tuple_array"
    },
    "136": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "137": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17"
    },
    "140": {
      "block": "main_test_fixed_size_named_tuple_array_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "142": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "NoOp"
      ]
    },
    "143": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "144": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "145": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "147": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0"
      ]
    },
    "148": {
      "op": "!=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "149": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "150": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "op": "callsub test_fixed_size_named_tuple_array"
    },
    "153": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "154": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17"
    },
    "157": {
      "block": "main_test_fixed_size_tuple_array_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "159": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "NoOp"
      ]
    },
    "160": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "161": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "162": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "164": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "165": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "166": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "167": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "op": "callsub test_fixed_size_tuple_array"
    },
    "170": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "171": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17"
    },
    "174": {
      "block": "main_test_bool_array_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "176": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "177": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "178": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "179": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "181": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "182": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "183": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "184": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "187": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "188": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "op": "callsub test_bool_array",
      "stack_out": []
    },
    "191": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "192": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17"
    },
    "195": {
      "block": "main_test_uint64_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "197": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "198": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "199": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "200": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "202": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "203": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "204": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "205": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "op": "callsub test_uint64_array"
    },
    "208": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "209": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17"
    },
    "212": {
      "block": "main_bare_routing@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "214": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "0"
      ]
    },
    "215": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%32#0"
      ]
    },
    "216": {
      "op": "match main___algopy_default_create@13",
      "stack_out": []
    },
    "220": {
      "block": "main_switch_case_next@15",
      "stack_in": [],
      "op": "b main_after_if_else@16"
    },
    "223": {
      "block": "main___algopy_default_create@13",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "225": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "0"
      ]
    },
    "226": {
      "op": "==",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "227": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "228": {
      "block": "main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@19",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "229": {
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@17"
    },
    "232": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_bit",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_bit",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "235": {
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "237": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "238": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "239": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "240": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "241": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "242": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "tmp%0#0"
      ]
    },
    "243": {
      "op": "extract 6 0",
      "defined_out": [
        "length_minus_1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "tmp%1#0"
      ]
    },
    "246": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "tmp%1#0",
        "array#0 (copy)"
      ]
    },
    "248": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "array#0 (copy)",
        "tmp%1#0"
      ]
    },
    "249": {
      "op": "replace2 0",
      "defined_out": [
        "length_minus_1#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0"
      ]
    },
    "251": {
      "op": "dig 1",
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "253": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)",
        "16"
      ]
    },
    "255": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "256": {
      "op": "dup2",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "popped_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "result#0 (copy)",
        "popped_location#0 (copy)"
      ]
    },
    "257": {
      "op": "getbit",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "tmp%2#0"
      ]
    },
    "258": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "length_minus_1#0",
        "popped_location#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "tmp%2#0",
        "0x00"
      ]
    },
    "259": {
      "op": "intc_0 // 0",
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "260": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "262": {
      "op": "setbit",
      "defined_out": [
        "length_minus_1#0",
        "popped#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "popped#0"
      ]
    },
    "263": {
      "op": "cover 3",
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "265": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "0"
      ]
    },
    "266": {
      "op": "setbit",
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0"
      ]
    },
    "267": {
      "op": "swap",
      "stack_out": [
        "popped#0",
        "result#0",
        "length_minus_1#0"
      ]
    },
    "268": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "length_minus_1#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "length_minus_1#0",
        "7"
      ]
    },
    "270": {
      "op": "+",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%3#0"
      ]
    },
    "271": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "popped#0",
        "result#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%3#0",
        "8"
      ]
    },
    "272": {
      "op": "/",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%4#0"
      ]
    },
    "273": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "popped#0",
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%4#0",
        "2"
      ]
    },
    "274": {
      "op": "+",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%5#0"
      ]
    },
    "275": {
      "op": "swap",
      "stack_out": [
        "popped#0",
        "tmp%5#0",
        "result#0"
      ]
    },
    "276": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "tmp%5#0",
        "result#0",
        "0"
      ]
    },
    "277": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "tmp%5#0"
      ]
    },
    "279": {
      "op": "substring3",
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "280": {
      "retsub": true,
      "op": "retsub"
    },
    "281": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "params": {
        "array#0": "bytes",
        "fixed_byte_size#0": "uint64"
      },
      "block": "dynamic_array_pop_fixed_size",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "284": {
      "op": "frame_dig -2",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "286": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "287": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "288": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "289": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "290": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "291": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "294": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%1#0",
        "array#0 (copy)"
      ]
    },
    "296": {
      "op": "swap",
      "stack_out": [
        "array#0 (copy)",
        "tmp%1#0"
      ]
    },
    "297": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "299": {
      "op": "dup",
      "defined_out": [
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "result#0 (copy)"
      ]
    },
    "300": {
      "op": "len",
      "defined_out": [
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%2#0"
      ]
    },
    "301": {
      "op": "frame_dig -1",
      "defined_out": [
        "fixed_byte_size#0 (copy)",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%2#0",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "303": {
      "op": "-",
      "defined_out": [
        "item_location#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0"
      ]
    },
    "304": {
      "op": "dup2",
      "defined_out": [
        "item_location#0",
        "item_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)"
      ]
    },
    "305": {
      "op": "frame_dig -1",
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "307": {
      "op": "extract3",
      "defined_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "popped#0"
      ]
    },
    "308": {
      "op": "cover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "item_location#0"
      ]
    },
    "310": {
      "op": "swap",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0"
      ]
    },
    "311": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0",
        "0"
      ]
    },
    "312": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "item_location#0"
      ]
    },
    "314": {
      "op": "substring3",
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "315": {
      "retsub": true,
      "op": "retsub"
    },
    "316": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_dynamic_element",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "319": {
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "321": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "322": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "323": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "324": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "325": {
      "op": "dupn 2",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "327": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "2"
      ]
    },
    "328": {
      "op": "*",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "329": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0"
      ]
    },
    "330": {
      "op": "cover 2",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "332": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "array#0 (copy)"
      ]
    },
    "334": {
      "op": "extract 2 0",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "337": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0"
      ]
    },
    "338": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "340": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "341": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "popped_header_offset#0"
      ]
    },
    "343": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "344": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ]
    },
    "345": {
      "op": "cover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_offset#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "347": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped_offset#0",
        "head_and_tail#0"
      ]
    },
    "349": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "350": {
      "op": "len",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped_offset#0",
        "head_and_tail#0",
        "tmp%0#0"
      ]
    },
    "351": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped_offset#0",
        "tmp%0#0",
        "head_and_tail#0"
      ]
    },
    "352": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%0#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "354": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%0#0"
      ]
    },
    "356": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "popped#0"
      ]
    },
    "357": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0"
      ]
    },
    "358": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0",
        "new_head#0"
      ]
    },
    "359": {
      "op": "swap",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0"
      ]
    },
    "360": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0",
        "2"
      ]
    },
    "361": {
      "op": "*",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0"
      ]
    },
    "362": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "2"
      ]
    },
    "363": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0"
      ]
    },
    "364": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "365": {
      "block": "dynamic_array_pop_dynamic_element_for_header@1",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "367": {
      "op": "frame_dig 6",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "369": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "370": {
      "op": "bz dynamic_array_pop_dynamic_element_after_for@4",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "373": {
      "block": "dynamic_array_pop_dynamic_element_for_body@2",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_and_tail#0"
      ]
    },
    "375": {
      "op": "frame_dig 7",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0"
      ]
    },
    "377": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "378": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "2"
      ]
    },
    "379": {
      "op": "-",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "380": {
      "op": "itob",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%2#0"
      ]
    },
    "381": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "384": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0",
        "new_head#0"
      ]
    },
    "386": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ]
    },
    "387": {
      "op": "concat",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "388": {
      "op": "frame_bury 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "390": {
      "block": "dynamic_array_pop_dynamic_element_for_footer@3",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "392": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "393": {
      "op": "+",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "394": {
      "op": "frame_bury 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "396": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "399": {
      "block": "dynamic_array_pop_dynamic_element_after_for@4",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "length_minus_1#0"
      ]
    },
    "401": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "402": {
      "op": "extract 6 2",
      "defined_out": [
        "length_minus_1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "405": {
      "op": "frame_dig 5",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "407": {
      "op": "concat",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "408": {
      "op": "frame_dig 1",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "popped_header_offset#0"
      ]
    },
    "410": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "popped_header_offset#0",
        "2"
      ]
    },
    "411": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "412": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "tmp%7#0",
        "head_and_tail#0"
      ]
    },
    "414": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "head_and_tail#0",
        "tmp%7#0"
      ]
    },
    "415": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "head_and_tail#0",
        "tmp%7#0",
        "popped_offset#0"
      ]
    },
    "417": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "418": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "updated#0"
      ]
    },
    "419": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "updated#0",
        "popped#0"
      ]
    },
    "421": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%1#0",
        "head_offset#0",
        "popped#0",
        "updated#0"
      ]
    },
    "422": {
      "op": "frame_bury 1"
    },
    "424": {
      "op": "frame_bury 0"
    },
    "426": {
      "retsub": true,
      "op": "retsub"
    },
    "427": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "is_packed#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "430": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "431": {
      "op": "dupn 2",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0"
      ]
    },
    "433": {
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "435": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "436": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0"
      ]
    },
    "437": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "439": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "441": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "442": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "443": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%0#0"
      ]
    },
    "444": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "447": {
      "op": "frame_dig -4",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "449": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "450": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "452": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "453": {
      "op": "cover 3",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "455": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "457": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "458": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "460": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%1#0"
      ]
    },
    "461": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%1#0",
        "8"
      ]
    },
    "462": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "463": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0"
      ]
    },
    "464": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "466": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "467": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "469": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%2#0"
      ]
    },
    "470": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%2#0",
        "8"
      ]
    },
    "471": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "472": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "473": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "475": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%3#0"
      ]
    },
    "476": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "479": {
      "block": "dynamic_array_concat_bits_if_body@1",
      "stack_in": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "required_bytes#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0"
      ]
    },
    "481": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "483": {
      "op": "-",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%4#0"
      ]
    },
    "484": {
      "op": "bzero",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%5#0"
      ]
    },
    "485": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%5#0",
        "result#0"
      ]
    },
    "487": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0",
        "tmp%5#0"
      ]
    },
    "488": {
      "op": "concat",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#7"
      ]
    },
    "489": {
      "op": "frame_bury 7",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "491": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "493": {
      "op": "frame_bury 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "495": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0"
      ]
    },
    "497": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0",
        "16"
      ]
    },
    "499": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "500": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "502": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "8"
      ]
    },
    "503": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "8",
        "array_length#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "8",
        "1"
      ]
    },
    "504": {
      "op": "frame_dig -1",
      "defined_out": [
        "1",
        "8",
        "array_length#0",
        "is_packed#0 (copy)",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "8",
        "1",
        "is_packed#0 (copy)"
      ]
    },
    "506": {
      "op": "select",
      "defined_out": [
        "array_length#0",
        "result#0",
        "select%0#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "select%0#0"
      ]
    },
    "507": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "select%0#0",
        "select%0#0"
      ]
    },
    "508": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "result#0",
        "select%0#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "select%0#0"
      ]
    },
    "510": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "511": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length#0",
        "i#0",
        "result#0",
        "select%0#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "i#0"
      ]
    },
    "512": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "514": {
      "block": "dynamic_array_concat_bits_for_header@3",
      "stack_in": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "i#0"
      ]
    },
    "516": {
      "op": "frame_dig -2",
      "defined_out": [
        "i#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "i#0",
        "new_items_count#0 (copy)"
      ]
    },
    "518": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "continue_looping%0#0"
      ]
    },
    "519": {
      "op": "bz dynamic_array_concat_bits_after_for@6",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "522": {
      "block": "dynamic_array_concat_bits_for_body@4",
      "stack_in": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)"
      ]
    },
    "524": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "new_items_bytes#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "i#0"
      ]
    },
    "526": {
      "op": "getbit",
      "defined_out": [
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%6#0"
      ]
    },
    "527": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%6#0",
        "result#0"
      ]
    },
    "529": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "result#0",
        "tmp%6#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%6#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "531": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "result#0",
        "tmp%6#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%6#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "532": {
      "op": "cover 3",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "tmp%6#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "534": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%6#0"
      ]
    },
    "536": {
      "op": "setbit",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "result#0"
      ]
    },
    "537": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "539": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "1"
      ]
    },
    "540": {
      "op": "+",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "541": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "543": {
      "block": "dynamic_array_concat_bits_for_footer@5",
      "stack_in": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "i#0"
      ]
    },
    "545": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "select%0#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "i#0",
        "select%0#0"
      ]
    },
    "547": {
      "op": "+",
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "i#0"
      ]
    },
    "548": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "select%0#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "550": {
      "op": "b dynamic_array_concat_bits_for_header@3"
    },
    "553": {
      "block": "dynamic_array_concat_bits_after_for@6",
      "stack_in": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "select%0#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "555": {
      "op": "frame_bury 0"
    },
    "557": {
      "retsub": true,
      "op": "retsub"
    },
    "558": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "561": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "562": {
      "op": "dup",
      "defined_out": [
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0"
      ]
    },
    "563": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "565": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "566": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "567": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "569": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "570": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ]
    },
    "571": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "2"
      ]
    },
    "572": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ]
    },
    "573": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "574": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "576": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%0#0"
      ]
    },
    "578": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "579": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "582": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "584": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "586": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "587": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "589": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "590": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%2#0"
      ]
    },
    "591": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "594": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%3#0",
        "new_head#0"
      ]
    },
    "596": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ]
    },
    "597": {
      "op": "concat",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "598": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "600": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "602": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "603": {
      "op": "+",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "604": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "606": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "609": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "611": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "612": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "614": {
      "op": "frame_dig -2",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "616": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "item_offset_adjustment#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "617": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "618": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "620": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "2"
      ]
    },
    "621": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "622": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "623": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "625": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "627": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "629": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "630": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "633": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "635": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "637": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "638": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "640": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "641": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "642": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "645": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%7#0",
        "new_head#0"
      ]
    },
    "647": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "648": {
      "op": "concat",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "649": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "651": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "653": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "654": {
      "op": "+",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "655": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "657": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "660": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "662": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "664": {
      "op": "+",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "665": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%9#0"
      ]
    },
    "666": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "669": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0",
        "new_head#0"
      ]
    },
    "671": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "672": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_items_count#0 (copy)"
      ]
    },
    "674": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "675": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "676": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "678": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "679": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "681": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%13#0",
        "array_head_and_tail#0 (copy)",
        "tmp%12#0"
      ]
    },
    "683": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "685": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "686": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "687": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_items_count#0 (copy)"
      ]
    },
    "689": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "690": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "691": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "693": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "694": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "696": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)",
        "tmp%16#0"
      ]
    },
    "698": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "700": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%15#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%18#0"
      ]
    },
    "701": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%19#0"
      ]
    },
    "702": {
      "op": "frame_bury 0"
    },
    "704": {
      "retsub": true,
      "op": "retsub"
    },
    "705": {
      "subroutine": "test_cases.array.immutable.times",
      "params": {
        "n#0": "uint64"
      },
      "block": "times",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "708": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "709": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "1"
      ]
    },
    "710": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "result#0"
      ]
    },
    "711": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "712": {
      "block": "times_for_header@1",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "714": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "n#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "n#0 (copy)"
      ]
    },
    "716": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "717": {
      "op": "bz times_after_for@4",
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "720": {
      "block": "times_for_body@2",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "722": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0",
        "\" \""
      ]
    },
    "725": {
      "op": "concat",
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "726": {
      "op": "frame_bury 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "728": {
      "block": "times_for_footer@3",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "730": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "731": {
      "op": "+",
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "732": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "734": {
      "op": "b times_for_header@1"
    },
    "737": {
      "block": "times_after_for@4",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "738": {
      "subroutine": "test_cases.array.immutable.add_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "741": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "742": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "743": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "744": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "746": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "748": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "749": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "752": {
      "block": "add_x_for_body@2",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "754": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "757": {
      "op": "frame_dig 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "759": {
      "op": "itob",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "sub_item%0#0"
      ]
    },
    "760": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "sub_item%0#0",
        "0x"
      ]
    },
    "761": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "sub_item%0#0"
      ]
    },
    "762": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "763": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0",
        "0x"
      ]
    },
    "764": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "encoded%0#0"
      ]
    },
    "765": {
      "op": "concat",
      "defined_out": [
        "data%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "expr_value_trimmed%0#0",
        "data%0#0"
      ]
    },
    "766": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0"
      ]
    },
    "767": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "768": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "769": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "770": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "771": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "772": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "775": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "776": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat_result%0#0"
      ]
    },
    "777": {
      "op": "frame_bury -2",
      "stack_out": [
        "i#0"
      ]
    },
    "779": {
      "block": "add_x_for_footer@3",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "781": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "782": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "783": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "785": {
      "op": "b add_x_for_header@1"
    },
    "788": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "790": {
      "op": "swap"
    },
    "791": {
      "retsub": true,
      "op": "retsub"
    },
    "792": {
      "subroutine": "test_cases.array.immutable.pop_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "pop_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "795": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "796": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "797": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "798": {
      "block": "pop_x_for_header@1",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "800": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "x#0 (copy)"
      ]
    },
    "802": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "803": {
      "op": "bz pop_x_after_for@4",
      "stack_out": [
        "_i#0"
      ]
    },
    "806": {
      "block": "pop_x_for_body@2",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "arr#0 (copy)"
      ]
    },
    "808": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "arr#0 (copy)",
        "8"
      ]
    },
    "809": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "data%0#0",
        "popped%0#0"
      ],
      "stack_out": [
        "_i#0",
        "popped%0#0",
        "data%0#0"
      ]
    },
    "812": {
      "op": "bury 1",
      "stack_out": [
        "_i#0",
        "data%0#0"
      ]
    },
    "814": {
      "op": "frame_bury -2",
      "stack_out": [
        "_i#0"
      ]
    },
    "816": {
      "block": "pop_x_for_footer@3",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "818": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "819": {
      "op": "+",
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "820": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "822": {
      "op": "b pop_x_for_header@1"
    },
    "825": {
      "block": "pop_x_after_for@4",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "arr#0 (copy)"
      ]
    },
    "827": {
      "op": "swap"
    },
    "828": {
      "retsub": true,
      "op": "retsub"
    },
    "829": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "params": {},
      "block": "test_uint64_array",
      "stack_in": [],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "830": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "831": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "832": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "833": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "834": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "835": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "836": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "837": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "838": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "841": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "42"
      ]
    },
    "843": {
      "op": "itob",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "sub_item%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "sub_item%0#0"
      ]
    },
    "844": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "sub_item%0#0",
        "0x"
      ]
    },
    "845": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "sub_item%0#0"
      ]
    },
    "846": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "847": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "encoded%0#0",
        "0x"
      ]
    },
    "848": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "encoded%0#0"
      ]
    },
    "849": {
      "op": "concat",
      "defined_out": [
        "data%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "data%0#0"
      ]
    },
    "850": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "851": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "852": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "853": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "854": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "855": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "856": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "859": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "860": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "861": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "862": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "863": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "864": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "865": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%3#0"
      ]
    },
    "866": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "867": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "868": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "869": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "870": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "1"
      ]
    },
    "871": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "872": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "arr#0 (copy)"
      ]
    },
    "874": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "array_head_and_tail%0#0"
      ]
    },
    "877": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%5#0"
      ]
    },
    "878": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "tmp%5#0",
        "8"
      ]
    },
    "879": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "880": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "881": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "882": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "883": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "42"
      ]
    },
    "885": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "886": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "887": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "5"
      ]
    },
    "889": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "892": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "893": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "894": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0"
      ]
    },
    "895": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0",
        "6"
      ]
    },
    "897": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "898": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "899": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "900": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "901": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "902": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%10#0",
        "1"
      ]
    },
    "903": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0"
      ]
    },
    "904": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "arr#0 (copy)"
      ]
    },
    "906": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "array_head_and_tail%1#0"
      ]
    },
    "909": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%11#0"
      ]
    },
    "910": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%11#0",
        "8"
      ]
    },
    "911": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "912": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "8"
      ]
    },
    "913": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%1#0"
      ]
    },
    "914": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "915": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "4"
      ]
    },
    "917": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "918": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "919": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0"
      ]
    },
    "922": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "43"
      ]
    },
    "924": {
      "op": "itob",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "sub_item%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "sub_item%1#0"
      ]
    },
    "925": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "sub_item%1#0",
        "0x"
      ]
    },
    "926": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "sub_item%1#0"
      ]
    },
    "927": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "928": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "929": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%1#0",
        "0x",
        "encoded%1#0"
      ]
    },
    "930": {
      "op": "concat",
      "defined_out": [
        "data%1#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%1#0",
        "data%1#0"
      ]
    },
    "931": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0"
      ]
    },
    "932": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ],
      "stack_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "933": {
      "op": "len",
      "defined_out": [
        "byte_len%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "934": {
      "op": "intc_3 // 8",
      "stack_out": [
        "concatenated%1#0",
        "byte_len%1#0",
        "8"
      ]
    },
    "935": {
      "op": "/",
      "defined_out": [
        "concatenated%1#0",
        "len_%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "936": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "937": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "940": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "941": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "942": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "943": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "944": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "945": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0",
        "7"
      ]
    },
    "947": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "948": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "949": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "950": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "951": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%16#0"
      ]
    },
    "952": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%16#0",
        "1"
      ]
    },
    "953": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0"
      ]
    },
    "954": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "arr#0 (copy)"
      ]
    },
    "956": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "array_head_and_tail%2#0"
      ]
    },
    "959": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%17#0"
      ]
    },
    "960": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "tmp%17#0",
        "8"
      ]
    },
    "961": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "962": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "8"
      ]
    },
    "963": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "964": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0"
      ]
    },
    "965": {
      "op": "pushint 43 // 43",
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "43"
      ]
    },
    "967": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "968": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "969": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "970": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0"
      ]
    },
    "973": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "0"
      ]
    },
    "974": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "0",
        "8"
      ]
    },
    "975": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "976": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "8"
      ]
    },
    "977": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "978": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "979": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "tmp%20#0",
        "42"
      ]
    },
    "981": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0"
      ]
    },
    "982": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "983": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "3"
      ]
    },
    "985": {
      "callsub": "test_cases.array.immutable.pop_x",
      "op": "callsub pop_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "988": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "989": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "990": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "991": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "tmp%22#0",
        "4"
      ]
    },
    "993": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "994": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "995": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "996": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "997": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "998": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "1"
      ]
    },
    "999": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "1000": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "1002": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "array_head_and_tail%4#0"
      ]
    },
    "1005": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%25#0"
      ]
    },
    "1006": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "tmp%25#0",
        "8"
      ]
    },
    "1007": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0"
      ]
    },
    "1008": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%4#0",
        "item_offset%4#0",
        "8"
      ]
    },
    "1009": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%4#0"
      ]
    },
    "1010": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0"
      ]
    },
    "1011": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0",
        "2"
      ]
    },
    "1012": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%27#0"
      ]
    },
    "1013": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1014": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "10"
      ]
    },
    "1016": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1019": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1020": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1021": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0"
      ]
    },
    "1022": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0",
        "14"
      ]
    },
    "1024": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%29#0"
      ]
    },
    "1025": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1026": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1027": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1028": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%30#0"
      ]
    },
    "1029": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%30#0",
        "1"
      ]
    },
    "1030": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0"
      ]
    },
    "1031": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "1033": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "array_head_and_tail%5#0"
      ]
    },
    "1036": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "tmp%31#0"
      ]
    },
    "1037": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "tmp%31#0",
        "8"
      ]
    },
    "1038": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0"
      ]
    },
    "1039": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%5#0",
        "item_offset%5#0",
        "8"
      ]
    },
    "1040": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%5#0"
      ]
    },
    "1041": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0"
      ]
    },
    "1042": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0",
        "9"
      ]
    },
    "1044": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%33#0"
      ]
    },
    "1045": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1046": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0"
      ]
    },
    "1049": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "44"
      ]
    },
    "1051": {
      "op": "itob",
      "defined_out": [
        "expr_value_trimmed%2#0",
        "sub_item%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "sub_item%2#0"
      ]
    },
    "1052": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "sub_item%2#0",
        "0x"
      ]
    },
    "1053": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "0x",
        "sub_item%2#0"
      ]
    },
    "1054": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "encoded%2#0"
      ]
    },
    "1055": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "encoded%2#0",
        "0x"
      ]
    },
    "1056": {
      "op": "swap",
      "stack_out": [
        "expr_value_trimmed%2#0",
        "0x",
        "encoded%2#0"
      ]
    },
    "1057": {
      "op": "concat",
      "defined_out": [
        "data%2#0",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "data%2#0"
      ]
    },
    "1058": {
      "op": "concat",
      "defined_out": [
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0"
      ]
    },
    "1059": {
      "op": "dup",
      "defined_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ],
      "stack_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ]
    },
    "1060": {
      "op": "len",
      "defined_out": [
        "byte_len%2#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "byte_len%2#0"
      ]
    },
    "1061": {
      "op": "intc_3 // 8",
      "stack_out": [
        "concatenated%2#0",
        "byte_len%2#0",
        "8"
      ]
    },
    "1062": {
      "op": "/",
      "defined_out": [
        "concatenated%2#0",
        "len_%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "len_%2#0"
      ]
    },
    "1063": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "as_bytes%2#0"
      ]
    },
    "1064": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ]
    },
    "1067": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%2#0",
        "concatenated%2#0"
      ]
    },
    "1068": {
      "op": "concat",
      "stack_out": [
        "arr#0"
      ]
    },
    "1069": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1070": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1071": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0"
      ]
    },
    "1072": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0",
        "15"
      ]
    },
    "1074": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%35#0"
      ]
    },
    "1075": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1076": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1077": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1078": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%36#0"
      ]
    },
    "1079": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%36#0",
        "1"
      ]
    },
    "1080": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0"
      ]
    },
    "1081": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "arr#0 (copy)"
      ]
    },
    "1083": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "array_head_and_tail%6#0"
      ]
    },
    "1086": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "tmp%37#0"
      ]
    },
    "1087": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "tmp%37#0",
        "8"
      ]
    },
    "1088": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "item_offset%6#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "item_offset%6#0"
      ]
    },
    "1089": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%6#0",
        "item_offset%6#0",
        "8"
      ]
    },
    "1090": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%6#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%6#0"
      ]
    },
    "1091": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%38#0"
      ]
    },
    "1092": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "tmp%38#0",
        "44"
      ]
    },
    "1094": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%39#0"
      ]
    },
    "1095": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1096": {
      "op": "pushint 23 // 23",
      "defined_out": [
        "23",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "23"
      ]
    },
    "1098": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "assigned_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "assigned_value%0#0"
      ]
    },
    "1099": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "arr#0 (copy)"
      ]
    },
    "1101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1102": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "assigned_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "array_length%0#0"
      ]
    },
    "1103": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "array_length%0#0",
        "2"
      ]
    },
    "1104": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "assigned_value%0#0",
        "index_is_in_bounds%0#0"
      ],
      "stack_out": [
        "arr#0",
        "assigned_value%0#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "1105": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "assigned_value%0#0"
      ]
    },
    "1106": {
      "op": "swap",
      "stack_out": [
        "assigned_value%0#0",
        "arr#0"
      ]
    },
    "1107": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr#0",
        "assigned_value%0#0"
      ],
      "stack_out": [
        "assigned_value%0#0",
        "arr#0",
        "18"
      ]
    },
    "1109": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "18",
        "assigned_value%0#0"
      ]
    },
    "1111": {
      "op": "replace3",
      "stack_out": [
        "arr#0"
      ]
    },
    "1112": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1113": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1114": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0"
      ]
    },
    "1115": {
      "op": "pushint 15 // 15",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "15"
      ]
    },
    "1117": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%41#0"
      ]
    },
    "1118": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1119": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1120": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%7#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0"
      ]
    },
    "1123": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "2"
      ]
    },
    "1124": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "2",
        "8"
      ]
    },
    "1125": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "item_offset%7#0"
      ],
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "item_offset%7#0"
      ]
    },
    "1126": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "array_head_and_tail%7#0",
        "item_offset%7#0",
        "8"
      ]
    },
    "1127": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%7#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arc4_item%7#0"
      ]
    },
    "1128": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%42#0"
      ]
    },
    "1129": {
      "op": "pushint 23 // 23",
      "stack_out": [
        "arr#0",
        "tmp%42#0",
        "23"
      ]
    },
    "1131": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%43#0"
      ]
    },
    "1132": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1133": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "\"a\""
      ]
    },
    "1136": {
      "op": "swap",
      "stack_out": [
        "\"a\"",
        "arr#0"
      ]
    },
    "1137": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1138": {
      "retsub": true,
      "op": "retsub"
    },
    "1139": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1142": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "1143": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "1144": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1145": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1146": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "1147": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1148": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1149": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1150": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1151": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "1152": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "1153": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1154": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1156": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "1158": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1159": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1162": {
      "block": "test_bool_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1164": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1166": {
      "op": "==",
      "defined_out": [
        "i#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "to_encode%0#0"
      ]
    },
    "1167": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "to_encode%0#0",
        "0x00"
      ]
    },
    "1168": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "1169": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "1171": {
      "op": "setbit",
      "defined_out": [
        "encoded_item%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_item%0#0"
      ]
    },
    "1172": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_item%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_item%0#0",
        "0x"
      ]
    },
    "1173": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x",
        "encoded_item%0#0"
      ]
    },
    "1174": {
      "op": "concat",
      "defined_out": [
        "data%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "data%0#0"
      ]
    },
    "1175": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "data%0#0",
        "arr#0"
      ]
    },
    "1177": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%0#0"
      ]
    },
    "1178": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "data%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%0#0",
        "1"
      ]
    },
    "1179": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "data%0#0",
        "1",
        "0"
      ]
    },
    "1180": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1183": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1185": {
      "block": "test_bool_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1187": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1188": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1189": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1191": {
      "op": "b test_bool_array_for_header@1"
    },
    "1194": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1196": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "1197": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1198": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "length#0 (copy)"
      ]
    },
    "1200": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "1201": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1202": {
      "op": "frame_dig -1",
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "1204": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "0"
      ]
    },
    "1205": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1206": {
      "op": "bz test_bool_array_after_if_else@6",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1209": {
      "block": "test_bool_array_if_body@5",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1211": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1212": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1215": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "1216": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "arr#0",
        "0"
      ]
    },
    "1217": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ]
    },
    "1218": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "0"
      ]
    },
    "1219": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "index_is_in_bounds%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "1220": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1221": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%0#0",
        "0"
      ]
    },
    "1222": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%0#0"
      ]
    },
    "1223": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1224": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1225": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1227": {
      "op": "setbit",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arc4_item%0#0"
      ]
    },
    "1228": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arc4_item%0#0",
        "0"
      ]
    },
    "1229": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "1230": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "1231": {
      "error": "expected element 0 to be False",
      "op": "assert // expected element 0 to be False",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1232": {
      "block": "test_bool_array_after_if_else@6",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "1234": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "1235": {
      "op": ">",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "1236": {
      "op": "bz test_bool_array_after_if_else@8",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1239": {
      "block": "test_bool_array_if_body@7",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1241": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1242": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1245": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0"
      ]
    },
    "1246": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_head_and_tail%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0",
        "0"
      ]
    },
    "1247": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ]
    },
    "1248": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "1"
      ]
    },
    "1249": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "index_is_in_bounds%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "index_is_in_bounds%1#0"
      ]
    },
    "1250": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1251": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%1#0",
        "1"
      ]
    },
    "1252": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%1#0"
      ]
    },
    "1253": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "1254": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "1255": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "1257": {
      "op": "setbit",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arc4_item%1#0"
      ]
    },
    "1258": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arc4_item%1#0",
        "0"
      ]
    },
    "1259": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "1260": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "1261": {
      "error": "expected element 1 to be False",
      "op": "assert // expected element 1 to be False",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1262": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "1264": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "1265": {
      "op": ">",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "1266": {
      "op": "bz test_bool_array_after_if_else@10",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1269": {
      "block": "test_bool_array_if_body@9",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1271": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1272": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "1275": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "arr#0"
      ]
    },
    "1276": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "arr#0",
        "0"
      ]
    },
    "1277": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ]
    },
    "1278": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "2"
      ]
    },
    "1279": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "index_is_in_bounds%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "index_is_in_bounds%2#0"
      ]
    },
    "1280": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0"
      ]
    },
    "1281": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%2#0",
        "2"
      ]
    },
    "1282": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%2#0"
      ]
    },
    "1283": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "1284": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "1285": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "1287": {
      "op": "setbit",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arc4_item%2#0"
      ]
    },
    "1288": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arc4_item%2#0",
        "0"
      ]
    },
    "1289": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "1290": {
      "error": "expected element 2 to be True",
      "op": "assert // expected element 2 to be True",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1291": {
      "block": "test_bool_array_after_if_else@10",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "1293": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "3"
      ]
    },
    "1295": {
      "op": ">",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "1296": {
      "op": "bz test_bool_array_after_if_else@12",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1299": {
      "block": "test_bool_array_if_body@11",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "1301": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "1302": {
      "op": "-",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "1303": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%14#0",
        "arr#0"
      ]
    },
    "1305": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%14#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1306": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%14#0",
        "arr#0",
        "array_head_and_tail%3#0"
      ]
    },
    "1309": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%14#0",
        "arr#0"
      ]
    },
    "1311": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%14#0",
        "arr#0",
        "0"
      ]
    },
    "1312": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%14#0",
        "array_length%3#0"
      ]
    },
    "1313": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%14#0",
        "array_length%3#0",
        "tmp%14#0 (copy)"
      ]
    },
    "1315": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "index_is_in_bounds%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%14#0",
        "index_is_in_bounds%3#0"
      ]
    },
    "1316": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "arr#0",
        "i#0",
        "array_head_and_tail%3#0",
        "tmp%14#0"
      ]
    },
    "1317": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%3#0"
      ]
    },
    "1318": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "is_true%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%3#0",
        "0x00"
      ]
    },
    "1319": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "is_true%3#0",
        "0x00",
        "0"
      ]
    },
    "1320": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "0x00",
        "0",
        "is_true%3#0"
      ]
    },
    "1322": {
      "op": "setbit",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arc4_item%3#0"
      ]
    },
    "1323": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arc4_item%3#0",
        "0"
      ]
    },
    "1324": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "1325": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%16#0"
      ]
    },
    "1326": {
      "error": "expected last element to be False",
      "op": "assert // expected last element to be False",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1327": {
      "block": "test_bool_array_after_if_else@12",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "pushbytes \"g\"",
      "defined_out": [
        "\"g\""
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "\"g\""
      ]
    },
    "1330": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"g\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "\"g\"",
        "arr#0"
      ]
    },
    "1332": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1333": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "1335": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "0"
      ]
    },
    "1336": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "1337": {
      "op": "bz test_bool_array_after_if_else@14",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1340": {
      "block": "test_bool_array_if_body@13",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1342": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_bit",
      "op": "callsub dynamic_array_pop_bit",
      "defined_out": [
        "arr#0",
        "data%1#0",
        "popped%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "popped%0#0",
        "data%1#0"
      ]
    },
    "1345": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1347": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "1348": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "1349": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%18#0",
        "length#0 (copy)"
      ]
    },
    "1351": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "length#0 (copy)",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%18#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "1352": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1353": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%20#0"
      ]
    },
    "1354": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1355": {
      "block": "test_bool_array_after_if_else@14",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1356": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "params": {},
      "block": "test_fixed_size_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1359": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "1360": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "1361": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1362": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1363": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "1364": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1365": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1366": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1367": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1368": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "1369": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "1370": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1371": {
      "block": "test_fixed_size_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1373": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1375": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1376": {
      "op": "bz test_fixed_size_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1379": {
      "block": "test_fixed_size_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1381": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1384": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "1386": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1387": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "1388": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1389": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1390": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%2#0",
        "i#0",
        "2"
      ]
    },
    "1391": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1392": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "1393": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "sub_item%0#0"
      ]
    },
    "1394": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "sub_item%0#0",
        "0x"
      ]
    },
    "1395": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "0x",
        "sub_item%0#0"
      ]
    },
    "1396": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "encoded%0#0"
      ]
    },
    "1397": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0",
        "tmp%3#0"
      ]
    },
    "1398": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0",
        "sub_item%1#0"
      ]
    },
    "1399": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%1#0"
      ]
    },
    "1400": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "1401": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "encoded%1#0"
      ]
    },
    "1402": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "data%0#0"
      ]
    },
    "1403": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "1404": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1405": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1406": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "16"
      ]
    },
    "1408": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1409": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1410": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1413": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1414": {
      "op": "concat",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1415": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1417": {
      "block": "test_fixed_size_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1419": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1420": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1421": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1423": {
      "op": "b test_fixed_size_tuple_array_for_header@1"
    },
    "1426": {
      "block": "test_fixed_size_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1428": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1429": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1430": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0"
      ]
    },
    "1431": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%4#0",
        "5"
      ]
    },
    "1433": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "1434": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1435": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1436": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1439": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "0"
      ]
    },
    "1440": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "0",
        "16"
      ]
    },
    "1442": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1443": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "16"
      ]
    },
    "1445": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "1446": {
      "op": "dup",
      "defined_out": [
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)"
      ]
    },
    "1447": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "0"
      ]
    },
    "1448": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1449": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "item0%0#0"
      ]
    },
    "1450": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "item0%0%0#0"
      ]
    },
    "1451": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0"
      ]
    },
    "1452": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "8"
      ]
    },
    "1453": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "8",
        "8"
      ]
    },
    "1454": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item0%0%0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0#0"
      ]
    },
    "1455": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ]
    },
    "1456": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%0%0#0",
        "item0%0%0#0"
      ]
    },
    "1457": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%0%0#0",
        "item0%0%0#0",
        "1"
      ]
    },
    "1458": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%0%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%0%0#0",
        "tmp%6#0"
      ]
    },
    "1459": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%6#0",
        "item1%0%0#0"
      ]
    },
    "1460": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "item1%0%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%6#0",
        "item1%0%0#0",
        "2"
      ]
    },
    "1461": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1462": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "1463": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1464": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1465": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1466": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%9#0"
      ]
    },
    "1467": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%9#0",
        "1"
      ]
    },
    "1468": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "1469": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "arr#0 (copy)"
      ]
    },
    "1471": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1474": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%10#0"
      ]
    },
    "1475": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "tmp%10#0",
        "16"
      ]
    },
    "1477": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "1478": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "16"
      ]
    },
    "1480": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0"
      ]
    },
    "1481": {
      "op": "dup",
      "defined_out": [
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "1482": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "0"
      ]
    },
    "1483": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "1484": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "item0%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "item0%1#0"
      ]
    },
    "1485": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "item0%1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%1#0",
        "item0%1%0#0"
      ]
    },
    "1486": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1%0#0",
        "arc4_item%1#0"
      ]
    },
    "1487": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1%0#0",
        "arc4_item%1#0",
        "8"
      ]
    },
    "1488": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1%0#0",
        "arc4_item%1#0",
        "8",
        "8"
      ]
    },
    "1489": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item0%1%0#0",
        "item1%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1%0#0",
        "item1%1#0"
      ]
    },
    "1490": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item0%1%0#0",
        "item1%1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%1%0#0",
        "item1%1%0#0"
      ]
    },
    "1491": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%1%0#0",
        "item0%1%0#0"
      ]
    },
    "1492": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%1%0#0",
        "item0%1%0#0",
        "5"
      ]
    },
    "1494": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%1%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%1%0#0",
        "tmp%11#0"
      ]
    },
    "1495": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "item1%1%0#0"
      ]
    },
    "1496": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "item1%1%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "item1%1%0#0",
        "6"
      ]
    },
    "1498": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1499": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%13#0"
      ]
    },
    "1500": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1501": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "16"
      ]
    },
    "1503": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "arr#0",
        "data%1#0",
        "popped%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "popped%0#0",
        "data%1#0"
      ]
    },
    "1506": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1508": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1509": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1510": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "1511": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0",
        "4"
      ]
    },
    "1513": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "1514": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1515": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1516": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "1519": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0"
      ]
    },
    "1520": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0",
        "16"
      ]
    },
    "1522": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "1523": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "16"
      ]
    },
    "1525": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "1526": {
      "op": "dup",
      "defined_out": [
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "1527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0"
      ]
    },
    "1528": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "1529": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%2#0"
      ]
    },
    "1530": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%2%0#0"
      ]
    },
    "1531": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0"
      ]
    },
    "1532": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "8"
      ]
    },
    "1533": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "8",
        "8"
      ]
    },
    "1534": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item0%2%0#0",
        "item1%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item1%2#0"
      ]
    },
    "1535": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item0%2%0#0",
        "item1%2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item1%2%0#0"
      ]
    },
    "1536": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "item0%2%0#0"
      ]
    },
    "1537": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "item0%2%0#0",
        "1"
      ]
    },
    "1538": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%2%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "tmp%16#0"
      ]
    },
    "1539": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "item1%2%0#0"
      ]
    },
    "1540": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "item1%2%0#0",
        "2"
      ]
    },
    "1541": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1542": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0"
      ]
    },
    "1543": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1544": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1545": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1546": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0"
      ]
    },
    "1547": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0",
        "1"
      ]
    },
    "1548": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0"
      ]
    },
    "1549": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0",
        "arr#0 (copy)"
      ]
    },
    "1551": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%20#0",
        "array_head_and_tail%3#0"
      ]
    },
    "1554": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%20#0"
      ]
    },
    "1555": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%20#0",
        "16"
      ]
    },
    "1557": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "1558": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "16"
      ]
    },
    "1560": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "1561": {
      "op": "dup",
      "defined_out": [
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "1562": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0"
      ]
    },
    "1563": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "1564": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%3#0"
      ]
    },
    "1565": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%3%0#0"
      ]
    },
    "1566": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0"
      ]
    },
    "1567": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "8"
      ]
    },
    "1568": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "8",
        "8"
      ]
    },
    "1569": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "item0%3%0#0",
        "item1%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item1%3#0"
      ]
    },
    "1570": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item0%3%0#0",
        "item1%3%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item1%3%0#0"
      ]
    },
    "1571": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "item0%3%0#0"
      ]
    },
    "1572": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "item0%3%0#0",
        "4"
      ]
    },
    "1574": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%3%0#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "tmp%21#0"
      ]
    },
    "1575": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "item1%3%0#0"
      ]
    },
    "1576": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "item1%3%0#0",
        "5"
      ]
    },
    "1578": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1579": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0"
      ]
    },
    "1580": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1581": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"c\""
      ]
    },
    "1584": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"c\"",
        "arr#0"
      ]
    },
    "1585": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1586": {
      "retsub": true,
      "op": "retsub"
    },
    "1587": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "params": {},
      "block": "test_fixed_size_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1590": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "1591": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "1592": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1593": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1594": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "1595": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1596": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1597": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1598": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1599": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "1600": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "1601": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1602": {
      "block": "test_fixed_size_named_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1604": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1606": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1607": {
      "op": "bz test_fixed_size_named_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1610": {
      "block": "test_fixed_size_named_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1612": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1615": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "1617": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1618": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "1619": {
      "op": "%",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1620": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "1621": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1622": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "1623": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1624": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "1626": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "1627": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0",
        "2"
      ]
    },
    "1628": {
      "op": "%",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1629": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%5#0",
        "0"
      ]
    },
    "1630": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "1631": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "i#0"
      ]
    },
    "1632": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "sub_item%0#0"
      ]
    },
    "1633": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "sub_item%0#0",
        "0x"
      ]
    },
    "1634": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "0x",
        "sub_item%0#0"
      ]
    },
    "1635": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "encoded%0#0"
      ]
    },
    "1636": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "encoded%0#0",
        "0x00"
      ]
    },
    "1637": {
      "op": "bytec_3 // 0x80",
      "defined_out": [
        "0x00",
        "0x80",
        "arr#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "encoded%0#0",
        "0x00",
        "0x80"
      ]
    },
    "1638": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%6#0",
        "encoded%0#0",
        "0x00",
        "0x80",
        "tmp%3#0"
      ]
    },
    "1640": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "encoded%0#0",
        "encoded_bit%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%6#0",
        "encoded%0#0",
        "encoded_bit%0#0"
      ]
    },
    "1641": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%6#0",
        "encoded%1#0"
      ]
    },
    "1642": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "arr#0",
        "encoded%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%6#0",
        "encoded%1#0",
        "65"
      ]
    },
    "1644": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%1#0",
        "65",
        "tmp%6#0"
      ]
    },
    "1646": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "sub_item%1#0"
      ]
    },
    "1647": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "sub_item%1#0",
        "0x"
      ]
    },
    "1648": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "0x",
        "sub_item%1#0"
      ]
    },
    "1649": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "data%0#0"
      ]
    },
    "1650": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "1651": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1652": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1653": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "9"
      ]
    },
    "1655": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1656": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1657": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1660": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1661": {
      "op": "concat",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1662": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1664": {
      "block": "test_fixed_size_named_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1666": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1667": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1668": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1670": {
      "op": "b test_fixed_size_named_tuple_array_for_header@1"
    },
    "1673": {
      "block": "test_fixed_size_named_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1675": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1676": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1677": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "1678": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%7#0",
        "5"
      ]
    },
    "1680": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "1681": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1682": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1683": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1686": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "0"
      ]
    },
    "1687": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "9",
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "0",
        "9"
      ]
    },
    "1689": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1690": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "9"
      ]
    },
    "1692": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "1693": {
      "op": "dup",
      "defined_out": [
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)"
      ]
    },
    "1694": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "0"
      ]
    },
    "1695": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1696": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "item0%0#0"
      ]
    },
    "1697": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "item0%0%0#0"
      ]
    },
    "1698": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0"
      ]
    },
    "1699": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)"
      ]
    },
    "1700": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "arr#0",
        "item0%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "arc4_item%0#0 (copy)",
        "64"
      ]
    },
    "1702": {
      "op": "getbit",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "is_true%0#0",
        "item0%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "is_true%0#0"
      ]
    },
    "1703": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arc4_item%0#0",
        "arr#0",
        "is_true%0#0",
        "item0%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1704": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1705": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1707": {
      "op": "setbit",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "item1%0#0"
      ]
    },
    "1708": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "item1%0#0",
        "0"
      ]
    },
    "1709": {
      "op": "getbit",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "arc4_item%0#0",
        "item1%0%0#0"
      ]
    },
    "1710": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "arc4_item%0#0"
      ]
    },
    "1711": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "arc4_item%0#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "arc4_item%0#0",
        "65"
      ]
    },
    "1713": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "is_true%1#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "is_true%1#0"
      ]
    },
    "1714": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "1715": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "1716": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "1718": {
      "op": "setbit",
      "defined_out": [
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0#0"
      ]
    },
    "1719": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0#0",
        "0"
      ]
    },
    "1720": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ]
    },
    "1721": {
      "op": "uncover 2",
      "defined_out": [
        "arr#0",
        "foo#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%0%0#0",
        "item2%0%0#0",
        "foo#0"
      ]
    },
    "1723": {
      "op": "swap",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "foo#0",
        "baz#0"
      ]
    },
    "1724": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "foo#0"
      ]
    },
    "1726": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "foo#0",
        "0"
      ]
    },
    "1727": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "tmp%9#0"
      ]
    },
    "1728": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0"
      ]
    },
    "1729": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0"
      ]
    },
    "1730": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1731": {
      "op": "pushbytes \"d\"",
      "defined_out": [
        "\"d\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"d\""
      ]
    },
    "1734": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"d\"",
        "arr#0"
      ]
    },
    "1735": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1736": {
      "retsub": true,
      "op": "retsub"
    },
    "1737": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "params": {},
      "block": "test_dynamic_sized_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1740": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "1741": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "1742": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1743": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "1744": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "1745": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1746": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1747": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1748": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1749": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "1750": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "1751": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1752": {
      "block": "test_dynamic_sized_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1754": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1756": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1757": {
      "op": "bz test_dynamic_sized_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1760": {
      "block": "test_dynamic_sized_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1762": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1763": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "1764": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1765": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1766": {
      "op": "bzero",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1767": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "1768": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "1769": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0"
      ]
    },
    "1770": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1771": {
      "op": "len",
      "defined_out": [
        "i#0",
        "length%0#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "length%0#0"
      ]
    },
    "1772": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "as_bytes%0#0"
      ]
    },
    "1773": {
      "op": "extract 6 2",
      "defined_out": [
        "i#0",
        "length_uint16%0#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "length_uint16%0#0"
      ]
    },
    "1776": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "1777": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "1778": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1779": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_value%0#0",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "1780": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "1781": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "1782": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "10"
      ]
    },
    "1784": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "as_bytes%1#0"
      ]
    },
    "1785": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "offset_as_uint16%0#0"
      ]
    },
    "1788": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1789": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ]
    },
    "1790": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0"
      ]
    },
    "1791": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "2"
      ]
    },
    "1792": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "as_bytes%2#0"
      ]
    },
    "1793": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0",
        "next_item_head%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0"
      ]
    },
    "1796": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0",
        "0x"
      ]
    },
    "1797": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "0x",
        "next_item_head%0#0"
      ]
    },
    "1798": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0",
        "result%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "result%0#0"
      ]
    },
    "1799": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%0#0",
        "encoded_tuple%0#0"
      ]
    },
    "1800": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0"
      ]
    },
    "1801": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0"
      ]
    },
    "1803": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1804": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1805": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "l_count%0#0"
      ]
    },
    "1806": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "arr#0"
      ]
    },
    "1807": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "1810": {
      "op": "uncover 2",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ]
    },
    "1812": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "1813": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0",
        "l_count%0#0"
      ]
    },
    "1815": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "1816": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "1817": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "r_head_and_tail%0#0"
      ]
    },
    "1819": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1822": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1824": {
      "block": "test_dynamic_sized_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1826": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1827": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1828": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1830": {
      "op": "b test_dynamic_sized_tuple_array_for_header@1"
    },
    "1833": {
      "block": "test_dynamic_sized_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1835": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "1836": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "1837": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0",
        "5"
      ]
    },
    "1839": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1840": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1841": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "1842": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1843": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1844": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1846": {
      "block": "test_dynamic_sized_tuple_array_for_header@5",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1848": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1850": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "1851": {
      "op": "bz test_dynamic_sized_tuple_array_after_for@8",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1854": {
      "block": "test_dynamic_sized_tuple_array_for_body@6",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1856": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1857": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1860": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "1862": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "1863": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "1865": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "1866": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1867": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1869": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1870": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1871": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1873": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "arr#0 (copy)"
      ]
    },
    "1875": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1876": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ]
    },
    "1877": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "1879": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "i#0 (copy)",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "1880": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "next_index%0#0"
      ]
    },
    "1881": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "array_length%0#0"
      ]
    },
    "1882": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_index%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "array_length%0#0",
        "next_index%0#0 (copy)"
      ]
    },
    "1884": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "has_next%0#0"
      ]
    },
    "1885": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "1886": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1888": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "end_of_array%0#0"
      ]
    },
    "1889": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "1891": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "2"
      ]
    },
    "1892": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "1893": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1895": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "1896": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset%0#0"
      ]
    },
    "1897": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_item_offset%0#0",
        "end_of_array%0#0"
      ]
    },
    "1899": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "1900": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "1902": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_offset%0#0"
      ]
    },
    "1903": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1904": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1906": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "1908": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "1909": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "0"
      ]
    },
    "1910": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "0",
        "8"
      ]
    },
    "1911": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0#0"
      ]
    },
    "1912": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0%0#0"
      ]
    },
    "1913": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "i#0 (copy)"
      ]
    },
    "1915": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "1916": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%0%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "tmp%6#0"
      ]
    },
    "1917": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "1918": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "1919": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1920": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1923": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "1925": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "1926": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0",
        "item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0"
      ]
    },
    "1927": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "i#0",
        "item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "1929": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset_offset%1#0"
      ]
    },
    "1930": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "1931": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1933": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0"
      ]
    },
    "1934": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0",
        "0"
      ]
    },
    "1935": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ]
    },
    "1936": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0 (copy)"
      ]
    },
    "1938": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "1939": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "next_index%1#0"
      ]
    },
    "1940": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "array_length%1#0"
      ]
    },
    "1941": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0",
        "next_index%1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "array_length%1#0",
        "next_index%1#0 (copy)"
      ]
    },
    "1943": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "has_next%1#0"
      ]
    },
    "1944": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0"
      ]
    },
    "1945": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "1947": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "end_of_array%1#0"
      ]
    },
    "1948": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_index%1#0"
      ]
    },
    "1950": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "2"
      ]
    },
    "1951": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset_offset%1#0"
      ]
    },
    "1952": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "1954": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "array_head_and_tail%1#0 (copy)",
        "next_item_offset_offset%1#0"
      ]
    },
    "1955": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset%1#0"
      ]
    },
    "1956": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_item_offset%1#0",
        "end_of_array%1#0"
      ]
    },
    "1958": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0"
      ]
    },
    "1959": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0",
        "has_next%1#0"
      ]
    },
    "1961": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_offset%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_offset%1#0"
      ]
    },
    "1962": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "end_offset%1#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1963": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "end_offset%1#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "1965": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "end_offset%1#0"
      ]
    },
    "1967": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0"
      ]
    },
    "1968": {
      "op": "dup",
      "defined_out": [
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "1969": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "8"
      ]
    },
    "1970": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0",
        "item_start_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "item_start_offset%1#0"
      ]
    },
    "1971": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0"
      ]
    },
    "1972": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "1973": {
      "op": "len",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1974": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "arc4_item%1#0"
      ]
    },
    "1975": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_end_offset%1#0",
        "arc4_item%1#0",
        "item_start_offset%1#0"
      ]
    },
    "1977": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1979": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item1%1#0"
      ]
    },
    "1980": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item1%1%0#0"
      ]
    },
    "1983": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "1984": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "1985": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1986": {
      "block": "test_dynamic_sized_tuple_array_for_footer@7",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1988": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1989": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1990": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1992": {
      "op": "b test_dynamic_sized_tuple_array_for_header@5"
    },
    "1995": {
      "block": "test_dynamic_sized_tuple_array_after_for@8",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1997": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "popped%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "popped%0#0",
        "data%0#0"
      ]
    },
    "2000": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2002": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2003": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2004": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "2005": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "4"
      ]
    },
    "2007": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0"
      ]
    },
    "2008": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2009": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2010": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2013": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0"
      ]
    },
    "2014": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "2",
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0",
        "2"
      ]
    },
    "2015": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0"
      ]
    },
    "2016": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_head_and_tail%2#0 (copy)",
        "item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "2018": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_head_and_tail%2#0 (copy)",
        "item_offset_offset%2#0"
      ]
    },
    "2019": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "2020": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2022": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "arr#0 (copy)"
      ]
    },
    "2024": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2025": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ]
    },
    "2026": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "0"
      ]
    },
    "2027": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "0",
        "1"
      ]
    },
    "2028": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "next_index%2#0"
      ]
    },
    "2029": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "array_length%2#0"
      ]
    },
    "2030": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0",
        "next_index%2#0",
        "next_index%2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "array_length%2#0",
        "next_index%2#0 (copy)"
      ]
    },
    "2032": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "has_next%2#0"
      ]
    },
    "2033": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0"
      ]
    },
    "2034": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "2036": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "end_of_array%2#0"
      ]
    },
    "2037": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_index%2#0"
      ]
    },
    "2039": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "2"
      ]
    },
    "2040": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset_offset%2#0"
      ]
    },
    "2041": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset_offset%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "2043": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "array_head_and_tail%2#0 (copy)",
        "next_item_offset_offset%2#0"
      ]
    },
    "2044": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset%2#0"
      ]
    },
    "2045": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_item_offset%2#0",
        "end_of_array%2#0"
      ]
    },
    "2047": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "end_of_array%2#0",
        "next_item_offset%2#0"
      ]
    },
    "2048": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "next_item_offset%2#0",
        "has_next%2#0"
      ]
    },
    "2050": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_offset%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_offset%2#0"
      ]
    },
    "2051": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "end_offset%2#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2052": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "end_offset%2#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "2054": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "end_offset%2#0"
      ]
    },
    "2056": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "2057": {
      "op": "dup",
      "defined_out": [
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "2058": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0"
      ]
    },
    "2059": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "2060": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%2#0"
      ]
    },
    "2061": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%2%0#0"
      ]
    },
    "2062": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0"
      ]
    },
    "2063": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "2064": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "8"
      ]
    },
    "2065": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "item_start_offset%2#0"
      ]
    },
    "2066": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0",
        "arc4_item%2#0"
      ]
    },
    "2067": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "2068": {
      "op": "len",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2%0#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0",
        "arc4_item%2#0",
        "item_end_offset%2#0"
      ]
    },
    "2069": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "arc4_item%2#0"
      ]
    },
    "2070": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_end_offset%2#0",
        "arc4_item%2#0",
        "item_start_offset%2#0"
      ]
    },
    "2072": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "2074": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "item0%2%0#0",
        "item1%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item1%2#0"
      ]
    },
    "2075": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "item0%2%0#0",
        "item1%2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item1%2%0#0"
      ]
    },
    "2078": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "item0%2%0#0"
      ]
    },
    "2079": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "item0%2%0#0",
        "1"
      ]
    },
    "2080": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%2%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "tmp%12#0"
      ]
    },
    "2081": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%2%0#0"
      ]
    },
    "2082": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%2%0#0",
        "0"
      ]
    },
    "2083": {
      "op": "bzero",
      "defined_out": [
        "arr#0",
        "item1%2%0#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%2%0#0",
        "tmp%13#0"
      ]
    },
    "2084": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "2085": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "2086": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2087": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2088": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2089": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0"
      ]
    },
    "2090": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "1"
      ]
    },
    "2091": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0"
      ]
    },
    "2092": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "arr#0 (copy)"
      ]
    },
    "2094": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "array_head_and_tail%3#0"
      ]
    },
    "2097": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0"
      ]
    },
    "2098": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "2099": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "2"
      ]
    },
    "2100": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset_offset%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "item_offset_offset%3#0"
      ]
    },
    "2101": {
      "op": "dig 2",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "item_offset_offset%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "2103": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%3#0"
      ]
    },
    "2104": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "item_offset%3#0"
      ]
    },
    "2105": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0"
      ]
    },
    "2107": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "arr#0 (copy)"
      ]
    },
    "2109": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2110": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%17#0",
        "array_length%3#0"
      ]
    },
    "2111": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%17#0"
      ]
    },
    "2112": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%17#0",
        "1"
      ]
    },
    "2113": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "next_index%3#0"
      ]
    },
    "2114": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "array_length%3#0"
      ]
    },
    "2115": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "next_index%3#0",
        "next_index%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "array_length%3#0",
        "next_index%3#0 (copy)"
      ]
    },
    "2117": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "has_next%3#0"
      ]
    },
    "2118": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0"
      ]
    },
    "2119": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "2121": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "end_of_array%3#0"
      ]
    },
    "2122": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_index%3#0"
      ]
    },
    "2124": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "2"
      ]
    },
    "2125": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_item_offset_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset_offset%3#0"
      ]
    },
    "2126": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset_offset%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "2128": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "array_head_and_tail%3#0 (copy)",
        "next_item_offset_offset%3#0"
      ]
    },
    "2129": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset%3#0"
      ]
    },
    "2130": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_item_offset%3#0",
        "end_of_array%3#0"
      ]
    },
    "2132": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "end_of_array%3#0",
        "next_item_offset%3#0"
      ]
    },
    "2133": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "next_item_offset%3#0",
        "has_next%3#0"
      ]
    },
    "2135": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_offset%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_offset%3#0"
      ]
    },
    "2136": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "end_offset%3#0",
        "array_head_and_tail%3#0"
      ]
    },
    "2137": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "end_offset%3#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "2139": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "end_offset%3#0"
      ]
    },
    "2141": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "2142": {
      "op": "dup",
      "defined_out": [
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "2143": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0"
      ]
    },
    "2144": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "2145": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%3#0"
      ]
    },
    "2146": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%3%0#0"
      ]
    },
    "2147": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0"
      ]
    },
    "2148": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "2149": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "8"
      ]
    },
    "2150": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "item_start_offset%3#0"
      ]
    },
    "2151": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0",
        "arc4_item%3#0"
      ]
    },
    "2152": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "2153": {
      "op": "len",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3%0#0",
        "item_end_offset%3#0",
        "item_start_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0",
        "arc4_item%3#0",
        "item_end_offset%3#0"
      ]
    },
    "2154": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0",
        "arc4_item%3#0"
      ]
    },
    "2155": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_end_offset%3#0",
        "arc4_item%3#0",
        "item_start_offset%3#0"
      ]
    },
    "2157": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0"
      ]
    },
    "2159": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "item0%3%0#0",
        "item1%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item1%3#0"
      ]
    },
    "2160": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "item0%3%0#0",
        "item1%3%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item1%3%0#0"
      ]
    },
    "2163": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "item0%3%0#0"
      ]
    },
    "2164": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "item0%3%0#0",
        "4"
      ]
    },
    "2166": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%3%0#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "tmp%18#0"
      ]
    },
    "2167": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0",
        "item1%3%0#0"
      ]
    },
    "2168": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "item1%3%0#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0",
        "item1%3%0#0",
        "3"
      ]
    },
    "2170": {
      "op": "bzero",
      "defined_out": [
        "arr#0",
        "item1%3%0#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0",
        "item1%3%0#0",
        "tmp%19#0"
      ]
    },
    "2171": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%18#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%18#0",
        "tmp%20#0"
      ]
    },
    "2172": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%21#0"
      ]
    },
    "2173": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2174": {
      "op": "pushbytes \"e\"",
      "defined_out": [
        "\"e\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"e\""
      ]
    },
    "2177": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"e\"",
        "arr#0"
      ]
    },
    "2178": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2179": {
      "retsub": true,
      "op": "retsub"
    },
    "2180": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "params": {},
      "block": "test_dynamic_sized_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2183": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "2184": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "2185": {
      "op": "concat",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2186": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "2187": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "2188": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2189": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2190": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2191": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2192": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "2193": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "2194": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2195": {
      "block": "test_dynamic_sized_named_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2197": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2199": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2200": {
      "op": "bz test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2203": {
      "block": "test_dynamic_sized_named_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2205": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2206": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2207": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2208": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "2209": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2212": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "2213": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "2214": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0"
      ]
    },
    "2215": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "2216": {
      "op": "len",
      "defined_out": [
        "i#0",
        "length%0#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "length%0#0"
      ]
    },
    "2217": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "as_bytes%0#0"
      ]
    },
    "2218": {
      "op": "extract 6 2",
      "defined_out": [
        "i#0",
        "length_uint16%0#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "length_uint16%0#0"
      ]
    },
    "2221": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "2222": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "2223": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2224": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_value%0#0",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "2225": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "2226": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "2227": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "10"
      ]
    },
    "2229": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "as_bytes%1#0"
      ]
    },
    "2230": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "i#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "offset_as_uint16%0#0"
      ]
    },
    "2233": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2234": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ]
    },
    "2235": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0"
      ]
    },
    "2236": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "2"
      ]
    },
    "2237": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_tuple%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "as_bytes%2#0"
      ]
    },
    "2238": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0",
        "next_item_head%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0"
      ]
    },
    "2241": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "next_item_head%0#0",
        "0x"
      ]
    },
    "2242": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "0x",
        "next_item_head%0#0"
      ]
    },
    "2243": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple%0#0",
        "i#0",
        "result%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "encoded_tuple%0#0",
        "result%0#0"
      ]
    },
    "2244": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%0#0",
        "encoded_tuple%0#0"
      ]
    },
    "2245": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0"
      ]
    },
    "2246": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0"
      ]
    },
    "2248": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2249": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2250": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "arr#0",
        "l_count%0#0"
      ]
    },
    "2251": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "arr#0"
      ]
    },
    "2252": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "2255": {
      "op": "uncover 2",
      "defined_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "r_head_and_tail%0#0"
      ]
    },
    "2257": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "2258": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_head_and_tail%0#0",
        "l_count%0#0"
      ]
    },
    "2260": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "2261": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "r_head_and_tail%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "2262": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "r_head_and_tail%0#0"
      ]
    },
    "2264": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2267": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2269": {
      "block": "test_dynamic_sized_named_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2271": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2272": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2273": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2275": {
      "op": "b test_dynamic_sized_named_tuple_array_for_header@1"
    },
    "2278": {
      "block": "test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2280": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2281": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "2282": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%4#0",
        "5"
      ]
    },
    "2284": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "2285": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2286": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "2287": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2288": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2289": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2291": {
      "block": "test_dynamic_sized_named_tuple_array_for_header@5",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2293": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2295": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "2296": {
      "op": "bz test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2299": {
      "block": "test_dynamic_sized_named_tuple_array_for_body@6",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2301": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2302": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2305": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "2307": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "2308": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "2310": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2311": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "2312": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "2314": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "2315": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2316": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2318": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "arr#0 (copy)"
      ]
    },
    "2320": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2321": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0"
      ]
    },
    "2322": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "2324": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "i#0 (copy)",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2325": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "next_index%0#0"
      ]
    },
    "2326": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "array_length%0#0"
      ]
    },
    "2327": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_index%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "array_length%0#0",
        "next_index%0#0 (copy)"
      ]
    },
    "2329": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "next_index%0#0",
        "has_next%0#0"
      ]
    },
    "2330": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "2331": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "2333": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_index%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "end_of_array%0#0"
      ]
    },
    "2334": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0"
      ]
    },
    "2336": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_index%0#0",
        "2"
      ]
    },
    "2337": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "2338": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "2340": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "2341": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "next_item_offset%0#0"
      ]
    },
    "2342": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "next_item_offset%0#0",
        "end_of_array%0#0"
      ]
    },
    "2344": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "2345": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "2347": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "end_offset%0#0"
      ]
    },
    "2348": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%0#0",
        "i#0",
        "arr#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2349": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2351": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "2353": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0"
      ]
    },
    "2354": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "0"
      ]
    },
    "2355": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arc4_item%0#0",
        "0",
        "8"
      ]
    },
    "2356": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0#0"
      ]
    },
    "2357": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%0%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0%0#0"
      ]
    },
    "2358": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "i#0 (copy)"
      ]
    },
    "2360": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2361": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "i#0",
        "item0%0%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "item0%0%0#0",
        "tmp%6#0"
      ]
    },
    "2362": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "tmp%7#0"
      ]
    },
    "2363": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "2364": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2365": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2368": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "2370": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2371": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0",
        "item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0"
      ]
    },
    "2372": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "i#0",
        "item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "2374": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset_offset%1#0"
      ]
    },
    "2375": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "2376": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2378": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0"
      ]
    },
    "2379": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "arr#0",
        "0"
      ]
    },
    "2380": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0"
      ]
    },
    "2381": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0 (copy)"
      ]
    },
    "2383": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2384": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "next_index%1#0"
      ]
    },
    "2385": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "array_length%1#0"
      ]
    },
    "2386": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0",
        "next_index%1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "array_length%1#0",
        "next_index%1#0 (copy)"
      ]
    },
    "2388": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "next_index%1#0",
        "has_next%1#0"
      ]
    },
    "2389": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0"
      ]
    },
    "2390": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "2392": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "end_of_array%1#0"
      ]
    },
    "2393": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_index%1#0"
      ]
    },
    "2395": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_index%1#0",
        "2"
      ]
    },
    "2396": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_item_offset_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset_offset%1#0"
      ]
    },
    "2397": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "2399": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "array_head_and_tail%1#0 (copy)",
        "next_item_offset_offset%1#0"
      ]
    },
    "2400": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "i#0",
        "item_offset%1#0",
        "next_item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "next_item_offset%1#0"
      ]
    },
    "2401": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "next_item_offset%1#0",
        "end_of_array%1#0"
      ]
    },
    "2403": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0"
      ]
    },
    "2404": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0",
        "has_next%1#0"
      ]
    },
    "2406": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%1#0",
        "end_offset%1#0",
        "i#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "array_head_and_tail%1#0",
        "end_offset%1#0"
      ]
    },
    "2407": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%1#0",
        "i#0",
        "end_offset%1#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2408": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "end_offset%1#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "2410": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "end_offset%1#0"
      ]
    },
    "2412": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0"
      ]
    },
    "2413": {
      "op": "dup",
      "defined_out": [
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "2414": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)",
        "8"
      ]
    },
    "2415": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0",
        "item_start_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "item_start_offset%1#0"
      ]
    },
    "2416": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0"
      ]
    },
    "2417": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0",
        "arc4_item%1#0 (copy)"
      ]
    },
    "2418": {
      "op": "len",
      "defined_out": [
        "arc4_item%1#0",
        "arr#0",
        "i#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "arc4_item%1#0",
        "item_end_offset%1#0"
      ]
    },
    "2419": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "arc4_item%1#0"
      ]
    },
    "2420": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item_end_offset%1#0",
        "arc4_item%1#0",
        "item_start_offset%1#0"
      ]
    },
    "2422": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arc4_item%1#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "2424": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item1%1#0"
      ]
    },
    "2425": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%1%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "item1%1%0#0"
      ]
    },
    "2428": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item1%1%0#0",
        "i#0"
      ]
    },
    "2429": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "arr#0",
        "i#0",
        "item1%1%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item1%1%0#0",
        "tmp%8#0"
      ]
    },
    "2432": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "2433": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2434": {
      "block": "test_dynamic_sized_named_tuple_array_for_footer@7",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2436": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2437": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2438": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2440": {
      "op": "b test_dynamic_sized_named_tuple_array_for_header@5"
    },
    "2443": {
      "block": "test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2445": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "data%0#0",
        "popped%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "popped%0#0",
        "data%0#0"
      ]
    },
    "2448": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2450": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2451": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2452": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "2453": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%10#0",
        "4"
      ]
    },
    "2455": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%11#0"
      ]
    },
    "2456": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2457": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2458": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2461": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0"
      ]
    },
    "2462": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "2",
        "arr#0",
        "array_head_and_tail%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "0",
        "2"
      ]
    },
    "2463": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0"
      ]
    },
    "2464": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_head_and_tail%2#0 (copy)",
        "item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset_offset%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "2466": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_head_and_tail%2#0 (copy)",
        "item_offset_offset%2#0"
      ]
    },
    "2467": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "2468": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2470": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "arr#0 (copy)"
      ]
    },
    "2472": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2473": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0"
      ]
    },
    "2474": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "0"
      ]
    },
    "2475": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "0",
        "1"
      ]
    },
    "2476": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "next_index%2#0"
      ]
    },
    "2477": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "array_length%2#0"
      ]
    },
    "2478": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "array_length%2#0",
        "item_offset%2#0",
        "next_index%2#0",
        "next_index%2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "array_length%2#0",
        "next_index%2#0 (copy)"
      ]
    },
    "2480": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "next_index%2#0",
        "has_next%2#0"
      ]
    },
    "2481": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0"
      ]
    },
    "2482": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "2484": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_index%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "end_of_array%2#0"
      ]
    },
    "2485": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_index%2#0"
      ]
    },
    "2487": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_index%2#0",
        "2"
      ]
    },
    "2488": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_item_offset_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset_offset%2#0"
      ]
    },
    "2489": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset_offset%2#0",
        "array_head_and_tail%2#0 (copy)"
      ]
    },
    "2491": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "array_head_and_tail%2#0 (copy)",
        "next_item_offset_offset%2#0"
      ]
    },
    "2492": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "item_offset%2#0",
        "next_item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "has_next%2#0",
        "next_item_offset%2#0"
      ]
    },
    "2493": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "next_item_offset%2#0",
        "end_of_array%2#0"
      ]
    },
    "2495": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "has_next%2#0",
        "end_of_array%2#0",
        "next_item_offset%2#0"
      ]
    },
    "2496": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_of_array%2#0",
        "next_item_offset%2#0",
        "has_next%2#0"
      ]
    },
    "2498": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%2#0",
        "end_offset%2#0",
        "item_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "end_offset%2#0"
      ]
    },
    "2499": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%2#0",
        "arr#0",
        "end_offset%2#0",
        "array_head_and_tail%2#0"
      ]
    },
    "2500": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "end_offset%2#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0"
      ]
    },
    "2502": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%2#0",
        "item_offset%2#0",
        "end_offset%2#0"
      ]
    },
    "2504": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0"
      ]
    },
    "2505": {
      "op": "dup",
      "defined_out": [
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "2506": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0"
      ]
    },
    "2507": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "2508": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%2#0"
      ]
    },
    "2509": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%2#0",
        "item0%2%0#0"
      ]
    },
    "2510": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0"
      ]
    },
    "2511": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "2512": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)",
        "8"
      ]
    },
    "2513": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "item_start_offset%2#0"
      ]
    },
    "2514": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0",
        "arc4_item%2#0"
      ]
    },
    "2515": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0",
        "arc4_item%2#0",
        "arc4_item%2#0 (copy)"
      ]
    },
    "2516": {
      "op": "len",
      "defined_out": [
        "arc4_item%2#0",
        "arr#0",
        "item0%2%0#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0",
        "arc4_item%2#0",
        "item_end_offset%2#0"
      ]
    },
    "2517": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "arc4_item%2#0"
      ]
    },
    "2518": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item_end_offset%2#0",
        "arc4_item%2#0",
        "item_start_offset%2#0"
      ]
    },
    "2520": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "arc4_item%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "2522": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "item0%2%0#0",
        "item1%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item1%2#0"
      ]
    },
    "2523": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "item0%2%0#0",
        "item1%2%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%2%0#0",
        "item1%2%0#0"
      ]
    },
    "2526": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "item0%2%0#0"
      ]
    },
    "2527": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "item0%2%0#0",
        "1"
      ]
    },
    "2528": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%2%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%2%0#0",
        "tmp%12#0"
      ]
    },
    "2529": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%2%0#0"
      ]
    },
    "2530": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "arr#0",
        "item1%2%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "item1%2%0#0",
        "\"\""
      ]
    },
    "2531": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2532": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "2533": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2534": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2535": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2536": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "2537": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%15#0",
        "1"
      ]
    },
    "2538": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0"
      ]
    },
    "2539": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "arr#0 (copy)"
      ]
    },
    "2541": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%16#0",
        "array_head_and_tail%3#0"
      ]
    },
    "2544": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0"
      ]
    },
    "2545": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "2546": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "2"
      ]
    },
    "2547": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset_offset%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "item_offset_offset%3#0"
      ]
    },
    "2548": {
      "op": "dig 2",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "item_offset_offset%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "2550": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "array_head_and_tail%3#0 (copy)",
        "item_offset_offset%3#0"
      ]
    },
    "2551": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "item_offset%3#0"
      ]
    },
    "2552": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0"
      ]
    },
    "2554": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "arr#0 (copy)"
      ]
    },
    "2556": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2557": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "tmp%16#0",
        "array_length%3#0"
      ]
    },
    "2558": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%16#0"
      ]
    },
    "2559": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "tmp%16#0",
        "1"
      ]
    },
    "2560": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "next_index%3#0"
      ]
    },
    "2561": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "array_length%3#0"
      ]
    },
    "2562": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "array_length%3#0",
        "item_offset%3#0",
        "next_index%3#0",
        "next_index%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "array_length%3#0",
        "next_index%3#0 (copy)"
      ]
    },
    "2564": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "next_index%3#0",
        "has_next%3#0"
      ]
    },
    "2565": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0"
      ]
    },
    "2566": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "2568": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_index%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "end_of_array%3#0"
      ]
    },
    "2569": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_index%3#0"
      ]
    },
    "2571": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_index%3#0",
        "2"
      ]
    },
    "2572": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_item_offset_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset_offset%3#0"
      ]
    },
    "2573": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset_offset%3#0",
        "array_head_and_tail%3#0 (copy)"
      ]
    },
    "2575": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "array_head_and_tail%3#0 (copy)",
        "next_item_offset_offset%3#0"
      ]
    },
    "2576": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "item_offset%3#0",
        "next_item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "has_next%3#0",
        "next_item_offset%3#0"
      ]
    },
    "2577": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "next_item_offset%3#0",
        "end_of_array%3#0"
      ]
    },
    "2579": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "has_next%3#0",
        "end_of_array%3#0",
        "next_item_offset%3#0"
      ]
    },
    "2580": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_of_array%3#0",
        "next_item_offset%3#0",
        "has_next%3#0"
      ]
    },
    "2582": {
      "op": "select",
      "defined_out": [
        "arr#0",
        "array_head_and_tail%3#0",
        "end_offset%3#0",
        "item_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "end_offset%3#0"
      ]
    },
    "2583": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "item_offset%3#0",
        "arr#0",
        "end_offset%3#0",
        "array_head_and_tail%3#0"
      ]
    },
    "2584": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "end_offset%3#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0"
      ]
    },
    "2586": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "array_head_and_tail%3#0",
        "item_offset%3#0",
        "end_offset%3#0"
      ]
    },
    "2588": {
      "op": "substring3",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0"
      ]
    },
    "2589": {
      "op": "dup",
      "defined_out": [
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "2590": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0"
      ]
    },
    "2591": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "2592": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%3#0"
      ]
    },
    "2593": {
      "op": "btoi",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arc4_item%3#0",
        "item0%3%0#0"
      ]
    },
    "2594": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0"
      ]
    },
    "2595": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "2596": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)",
        "8"
      ]
    },
    "2597": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "item_start_offset%3#0"
      ]
    },
    "2598": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0",
        "arc4_item%3#0"
      ]
    },
    "2599": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0",
        "arc4_item%3#0",
        "arc4_item%3#0 (copy)"
      ]
    },
    "2600": {
      "op": "len",
      "defined_out": [
        "arc4_item%3#0",
        "arr#0",
        "item0%3%0#0",
        "item_end_offset%3#0",
        "item_start_offset%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0",
        "arc4_item%3#0",
        "item_end_offset%3#0"
      ]
    },
    "2601": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0",
        "arc4_item%3#0"
      ]
    },
    "2602": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item_end_offset%3#0",
        "arc4_item%3#0",
        "item_start_offset%3#0"
      ]
    },
    "2604": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "arc4_item%3#0",
        "item_start_offset%3#0",
        "item_end_offset%3#0"
      ]
    },
    "2606": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "item0%3%0#0",
        "item1%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item1%3#0"
      ]
    },
    "2607": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "item0%3%0#0",
        "item1%3%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item0%3%0#0",
        "item1%3%0#0"
      ]
    },
    "2610": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "item0%3%0#0"
      ]
    },
    "2611": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "item0%3%0#0",
        "4"
      ]
    },
    "2613": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item1%3%0#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "item1%3%0#0",
        "tmp%17#0"
      ]
    },
    "2614": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "item1%3%0#0"
      ]
    },
    "2615": {
      "op": "pushbytes \"   \"",
      "defined_out": [
        "\"   \"",
        "arr#0",
        "item1%3%0#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "item1%3%0#0",
        "\"   \""
      ]
    },
    "2620": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2621": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2622": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2623": {
      "op": "pushbytes \"f\"",
      "defined_out": [
        "\"f\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"f\""
      ]
    },
    "2626": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"f\"",
        "arr#0"
      ]
    },
    "2627": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2628": {
      "retsub": true,
      "op": "retsub"
    },
    "2629": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "params": {},
      "block": "test_bit_packed_tuples",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2632": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "2633": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "2634": {
      "op": "concat",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0"
      ]
    },
    "2635": {
      "op": "dup",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0"
      ]
    },
    "2636": {
      "op": "bytec_2 // 0x0000",
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "0x0000"
      ]
    },
    "2637": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "0x0000",
        "0x"
      ]
    },
    "2638": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "2639": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ]
    },
    "2640": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "2642": {
      "op": "cover 2",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "2644": {
      "op": "bytec_2 // 0x0000",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "0x0000"
      ]
    },
    "2645": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "0x0000",
        "0x"
      ]
    },
    "2646": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "arr8#0"
      ]
    },
    "2647": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "arr8#0",
        "arr8#0 (copy)"
      ]
    },
    "2648": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr8#0"
      ]
    },
    "2650": {
      "op": "cover 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "2652": {
      "op": "bytec_2 // 0x0000",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0x0000"
      ]
    },
    "2653": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0x0000",
        "0x"
      ]
    },
    "2654": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0"
      ]
    },
    "2655": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0",
        "arr9#0 (copy)"
      ]
    },
    "2656": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0"
      ]
    },
    "2658": {
      "op": "cover 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "2660": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0"
      ]
    },
    "2661": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%0#0"
      ]
    },
    "2662": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2663": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%1#0"
      ]
    },
    "2664": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0"
      ]
    },
    "2665": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "0"
      ]
    },
    "2666": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%2#0"
      ]
    },
    "2667": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%2#0",
        "0"
      ]
    },
    "2668": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%3#0"
      ]
    },
    "2669": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0"
      ]
    },
    "2670": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "0"
      ]
    },
    "2671": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%4#0"
      ]
    },
    "2672": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%4#0",
        "0"
      ]
    },
    "2673": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%5#0"
      ]
    },
    "2674": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0"
      ]
    },
    "2675": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "0"
      ]
    },
    "2676": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0"
      ]
    },
    "2677": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0",
        "0"
      ]
    },
    "2678": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%7#0"
      ]
    },
    "2679": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "2680": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "1"
      ]
    },
    "2681": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "2682": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "2683": {
      "block": "test_bit_packed_tuples_for_header@1",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "2685": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2687": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2688": {
      "op": "bz test_bit_packed_tuples_after_for@4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "2691": {
      "block": "test_bit_packed_tuples_for_body@2",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "2693": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "2696": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ]
    },
    "2698": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2699": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "2700": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "2701": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0"
      ]
    },
    "2702": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2703": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2704": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "2705": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0"
      ]
    },
    "2706": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0",
        "0x00"
      ]
    },
    "2707": {
      "op": "bytec_3 // 0x80",
      "defined_out": [
        "0x00",
        "0x80",
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0",
        "0x00",
        "0x80"
      ]
    },
    "2708": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "0x00",
        "0x80",
        "tmp%8#0"
      ]
    },
    "2710": {
      "op": "select",
      "defined_out": [
        "arr2#0",
        "encoded_bit%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "encoded_bit%0#0"
      ]
    },
    "2711": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr2#0",
        "encoded_bit%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "encoded_bit%0#0",
        "0x"
      ]
    },
    "2712": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "0x",
        "encoded_bit%0#0"
      ]
    },
    "2713": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "encoded%0#0"
      ]
    },
    "2714": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "encoded%0#0",
        "1"
      ]
    },
    "2715": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded%0#0",
        "1",
        "tmp%9#0"
      ]
    },
    "2717": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0"
      ]
    },
    "2718": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "sub_item%0#0",
        "0x"
      ]
    },
    "2719": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "sub_item%0#0"
      ]
    },
    "2720": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "data%0#0",
        "expr_value_trimmed%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "data%0#0"
      ]
    },
    "2721": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "data%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "2723": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "data%0#0"
      ]
    },
    "2724": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "2725": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "2726": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "concatenated%0#0",
        "i#0",
        "len_%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "2727": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "2728": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "2731": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "2732": {
      "op": "concat",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0"
      ]
    },
    "2733": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "2735": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr7#0"
      ]
    },
    "2737": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "2740": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ]
    },
    "2741": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2742": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "2743": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "2744": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "2745": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2746": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2747": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%10#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "2748": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "2750": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2751": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2752": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "2753": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "2755": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2756": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "2758": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "2759": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "2761": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2762": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "2764": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "2765": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "2767": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2768": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "2770": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "2771": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "2773": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2774": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "i#0 (copy)",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "2776": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%16#0"
      ]
    },
    "2777": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "2779": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2780": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2781": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "2782": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "2784": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2785": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "sub_item%1#0"
      ]
    },
    "2786": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "sub_item%1#0",
        "0x"
      ]
    },
    "2787": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "0x",
        "sub_item%1#0"
      ]
    },
    "2788": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "encoded%1#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "encoded%1#0"
      ]
    },
    "2789": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "encoded%1#0",
        "0x00"
      ]
    },
    "2790": {
      "op": "bytec_3 // 0x80",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%10#0",
        "i#0",
        "encoded%1#0",
        "0x00",
        "0x80"
      ]
    },
    "2791": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "encoded%1#0",
        "0x00",
        "0x80",
        "tmp%10#0"
      ]
    },
    "2793": {
      "op": "select",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "encoded%1#0",
        "encoded_bit%1#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "encoded%1#0",
        "encoded_bit%1#0"
      ]
    },
    "2794": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "encoded%2#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "encoded%2#0"
      ]
    },
    "2795": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "arr2#0",
        "arr7#0",
        "encoded%2#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "encoded%2#0",
        "65"
      ]
    },
    "2797": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "encoded%2#0",
        "65",
        "tmp%11#0"
      ]
    },
    "2799": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "sub_item%2#0"
      ]
    },
    "2800": {
      "op": "pushint 66 // 66",
      "defined_out": [
        "66",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "sub_item%2#0",
        "66"
      ]
    },
    "2802": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "sub_item%2#0",
        "66",
        "tmp%12#0"
      ]
    },
    "2804": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "sub_item%3#0"
      ]
    },
    "2805": {
      "op": "pushint 67 // 67",
      "defined_out": [
        "67",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "sub_item%3#0",
        "67"
      ]
    },
    "2807": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "sub_item%3#0",
        "67",
        "tmp%13#0"
      ]
    },
    "2809": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%4#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "sub_item%4#0"
      ]
    },
    "2810": {
      "op": "pushint 68 // 68",
      "defined_out": [
        "68",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%4#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "sub_item%4#0",
        "68"
      ]
    },
    "2812": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "i#0",
        "sub_item%4#0",
        "68",
        "tmp%14#0"
      ]
    },
    "2814": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%5#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "i#0",
        "sub_item%5#0"
      ]
    },
    "2815": {
      "op": "pushint 69 // 69",
      "defined_out": [
        "69",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%5#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%15#0",
        "i#0",
        "sub_item%5#0",
        "69"
      ]
    },
    "2817": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0",
        "sub_item%5#0",
        "69",
        "tmp%15#0"
      ]
    },
    "2819": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%6#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0",
        "sub_item%6#0"
      ]
    },
    "2820": {
      "op": "pushint 70 // 70",
      "defined_out": [
        "70",
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%6#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0",
        "sub_item%6#0",
        "70"
      ]
    },
    "2822": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "i#0",
        "sub_item%6#0",
        "70",
        "tmp%16#0"
      ]
    },
    "2824": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%7#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "tmp%17#0",
        "i#0",
        "sub_item%7#0"
      ]
    },
    "2825": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%7#0",
        "tmp%17#0"
      ]
    },
    "2827": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%7#0",
        "sub_item%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "sub_item%7#0",
        "sub_item%8#0"
      ]
    },
    "2828": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "encoded%3#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "encoded%3#0"
      ]
    },
    "2829": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "encoded%3#0",
        "0x"
      ]
    },
    "2830": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "0x",
        "encoded%3#0"
      ]
    },
    "2831": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "data%1#0",
        "expr_value_trimmed%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "i#0",
        "data%1#0"
      ]
    },
    "2832": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "data%1#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "2834": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%1#0",
        "data%1#0"
      ]
    },
    "2835": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0"
      ]
    },
    "2836": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "2837": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "byte_len%0#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%0#0"
      ]
    },
    "2838": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "arr2#0",
        "arr7#0",
        "byte_len%0#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "byte_len%0#0",
        "17"
      ]
    },
    "2840": {
      "op": "/",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concatenated%1#0",
        "i#0",
        "len_%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "2841": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "as_bytes%1#0",
        "concatenated%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "2842": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concatenated%1#0",
        "i#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "2845": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "2846": {
      "op": "concat",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr7#0"
      ]
    },
    "2847": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "2849": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr8#0"
      ]
    },
    "2851": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%2#0"
      ]
    },
    "2854": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0"
      ]
    },
    "2855": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2856": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "2857": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "2858": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2859": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2860": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2861": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%18#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "2862": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2864": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2865": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2866": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%20#0"
      ]
    },
    "2867": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2869": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2870": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "2872": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%21#0"
      ]
    },
    "2873": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2875": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2876": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "2878": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%22#0"
      ]
    },
    "2879": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2881": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2882": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "2884": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%23#0"
      ]
    },
    "2885": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2887": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2888": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "2890": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%24#0"
      ]
    },
    "2891": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2893": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2894": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "2896": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%25#0"
      ]
    },
    "2897": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2899": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2900": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2901": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "tmp%26#0"
      ]
    },
    "2902": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0"
      ]
    },
    "2904": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2905": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%9#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "sub_item%9#0"
      ]
    },
    "2906": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "sub_item%9#0",
        "0x"
      ]
    },
    "2907": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "0x",
        "sub_item%9#0"
      ]
    },
    "2908": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "encoded%4#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "encoded%4#0"
      ]
    },
    "2909": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "encoded%4#0",
        "0x00"
      ]
    },
    "2910": {
      "op": "bytec_3 // 0x80",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "i#0",
        "encoded%4#0",
        "0x00",
        "0x80"
      ]
    },
    "2911": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "i#0",
        "encoded%4#0",
        "0x00",
        "0x80",
        "tmp%18#0"
      ]
    },
    "2913": {
      "op": "select",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "encoded%4#0",
        "encoded_bit%2#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "i#0",
        "encoded%4#0",
        "encoded_bit%2#0"
      ]
    },
    "2914": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "encoded%5#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "i#0",
        "encoded%5#0"
      ]
    },
    "2915": {
      "op": "pushint 65 // 65",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "i#0",
        "encoded%5#0",
        "65"
      ]
    },
    "2917": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "encoded%5#0",
        "65",
        "tmp%19#0"
      ]
    },
    "2919": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%10#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "sub_item%10#0"
      ]
    },
    "2920": {
      "op": "pushint 66 // 66",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "sub_item%10#0",
        "66"
      ]
    },
    "2922": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "sub_item%10#0",
        "66",
        "tmp%20#0"
      ]
    },
    "2924": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%11#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "sub_item%11#0"
      ]
    },
    "2925": {
      "op": "pushint 67 // 67",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "sub_item%11#0",
        "67"
      ]
    },
    "2927": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "sub_item%11#0",
        "67",
        "tmp%21#0"
      ]
    },
    "2929": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%12#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "sub_item%12#0"
      ]
    },
    "2930": {
      "op": "pushint 68 // 68",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "sub_item%12#0",
        "68"
      ]
    },
    "2932": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "sub_item%12#0",
        "68",
        "tmp%22#0"
      ]
    },
    "2934": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%13#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "sub_item%13#0"
      ]
    },
    "2935": {
      "op": "pushint 69 // 69",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "sub_item%13#0",
        "69"
      ]
    },
    "2937": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "i#0",
        "sub_item%13#0",
        "69",
        "tmp%23#0"
      ]
    },
    "2939": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%14#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "i#0",
        "sub_item%14#0"
      ]
    },
    "2940": {
      "op": "pushint 70 // 70",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%24#0",
        "i#0",
        "sub_item%14#0",
        "70"
      ]
    },
    "2942": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "i#0",
        "sub_item%14#0",
        "70",
        "tmp%24#0"
      ]
    },
    "2944": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%15#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "i#0",
        "sub_item%15#0"
      ]
    },
    "2945": {
      "op": "pushint 71 // 71",
      "defined_out": [
        "71",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%15#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%25#0",
        "tmp%26#0",
        "i#0",
        "sub_item%15#0",
        "71"
      ]
    },
    "2947": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%26#0",
        "i#0",
        "sub_item%15#0",
        "71",
        "tmp%25#0"
      ]
    },
    "2949": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%16#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "tmp%26#0",
        "i#0",
        "sub_item%16#0"
      ]
    },
    "2950": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%16#0",
        "tmp%26#0"
      ]
    },
    "2952": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%16#0",
        "sub_item%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "sub_item%16#0",
        "sub_item%17#0"
      ]
    },
    "2953": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "encoded%6#0",
        "expr_value_trimmed%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "encoded%6#0"
      ]
    },
    "2954": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "encoded%6#0",
        "0x"
      ]
    },
    "2955": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "0x",
        "encoded%6#0"
      ]
    },
    "2956": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "data%2#0",
        "expr_value_trimmed%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "i#0",
        "data%2#0"
      ]
    },
    "2957": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "data%2#0",
        "expr_value_trimmed%2#0"
      ]
    },
    "2959": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%2#0",
        "data%2#0"
      ]
    },
    "2960": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concatenated%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0"
      ]
    },
    "2961": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concatenated%2#0",
        "concatenated%2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ]
    },
    "2962": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "byte_len%1#0",
        "concatenated%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "byte_len%1#0"
      ]
    },
    "2963": {
      "op": "pushint 17 // 17",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "byte_len%1#0",
        "17"
      ]
    },
    "2965": {
      "op": "/",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concatenated%2#0",
        "i#0",
        "len_%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "len_%2#0"
      ]
    },
    "2966": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_bytes%2#0",
        "concatenated%2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "as_bytes%2#0"
      ]
    },
    "2967": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concatenated%2#0",
        "i#0",
        "len_16_bit%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "concatenated%2#0",
        "len_16_bit%2#0"
      ]
    },
    "2970": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "len_16_bit%2#0",
        "concatenated%2#0"
      ]
    },
    "2971": {
      "op": "concat",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr8#0"
      ]
    },
    "2972": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "2974": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr9#0"
      ]
    },
    "2976": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%3#0"
      ]
    },
    "2979": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "i#0"
      ]
    },
    "2980": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2981": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "2982": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0"
      ]
    },
    "2983": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "2984": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2985": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2986": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%27#0",
        "i#0",
        "tmp%28#0"
      ]
    },
    "2987": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "2989": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2990": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2991": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%29#0"
      ]
    },
    "2992": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "2994": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2995": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "2997": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%30#0"
      ]
    },
    "2998": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "3000": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3001": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "3003": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%31#0"
      ]
    },
    "3004": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "3006": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3007": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "3009": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%32#0"
      ]
    },
    "3010": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "3012": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3013": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "3015": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%33#0"
      ]
    },
    "3016": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "3018": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3019": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "3021": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%34#0"
      ]
    },
    "3022": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "3024": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3025": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "8"
      ]
    },
    "3026": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%35#0"
      ]
    },
    "3027": {
      "op": "cover 9",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "3029": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3030": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3031": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "tmp%36#0"
      ]
    },
    "3032": {
      "op": "cover 10",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0"
      ]
    },
    "3034": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%18#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "sub_item%18#0"
      ]
    },
    "3035": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "sub_item%18#0",
        "0x"
      ]
    },
    "3036": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "0x",
        "sub_item%18#0"
      ]
    },
    "3037": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "encoded%7#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "encoded%7#0"
      ]
    },
    "3038": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "encoded%7#0",
        "0x00"
      ]
    },
    "3039": {
      "op": "bytec_3 // 0x80",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "tmp%27#0",
        "encoded%7#0",
        "0x00",
        "0x80"
      ]
    },
    "3040": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "encoded%7#0",
        "0x00",
        "0x80",
        "tmp%27#0"
      ]
    },
    "3042": {
      "op": "select",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "encoded%7#0",
        "encoded_bit%3#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "encoded%7#0",
        "encoded_bit%3#0"
      ]
    },
    "3043": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "encoded%8#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "encoded%8#0"
      ]
    },
    "3044": {
      "op": "pushint 65 // 65",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "tmp%28#0",
        "encoded%8#0",
        "65"
      ]
    },
    "3046": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "encoded%8#0",
        "65",
        "tmp%28#0"
      ]
    },
    "3048": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%19#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "sub_item%19#0"
      ]
    },
    "3049": {
      "op": "pushint 66 // 66",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "tmp%29#0",
        "sub_item%19#0",
        "66"
      ]
    },
    "3051": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "sub_item%19#0",
        "66",
        "tmp%29#0"
      ]
    },
    "3053": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%20#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "sub_item%20#0"
      ]
    },
    "3054": {
      "op": "pushint 67 // 67",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "sub_item%20#0",
        "67"
      ]
    },
    "3056": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "sub_item%20#0",
        "67",
        "tmp%30#0"
      ]
    },
    "3058": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%21#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "sub_item%21#0"
      ]
    },
    "3059": {
      "op": "pushint 68 // 68",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "sub_item%21#0",
        "68"
      ]
    },
    "3061": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "sub_item%21#0",
        "68",
        "tmp%31#0"
      ]
    },
    "3063": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%22#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "sub_item%22#0"
      ]
    },
    "3064": {
      "op": "pushint 69 // 69",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "sub_item%22#0",
        "69"
      ]
    },
    "3066": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "sub_item%22#0",
        "69",
        "tmp%32#0"
      ]
    },
    "3068": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%23#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "sub_item%23#0"
      ]
    },
    "3069": {
      "op": "pushint 70 // 70",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "sub_item%23#0",
        "70"
      ]
    },
    "3071": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "sub_item%23#0",
        "70",
        "tmp%33#0"
      ]
    },
    "3073": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%24#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "sub_item%24#0"
      ]
    },
    "3074": {
      "op": "pushint 71 // 71",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "sub_item%24#0",
        "71"
      ]
    },
    "3076": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "sub_item%24#0",
        "71",
        "tmp%34#0"
      ]
    },
    "3078": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%25#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "sub_item%25#0"
      ]
    },
    "3079": {
      "op": "bytec_1 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "sub_item%25#0",
        "0x00"
      ]
    },
    "3080": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "tmp%35#0",
        "sub_item%25#0",
        "0x00",
        "0"
      ]
    },
    "3081": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "sub_item%25#0",
        "0x00",
        "0",
        "tmp%35#0"
      ]
    },
    "3083": {
      "op": "setbit",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%25#0",
        "sub_item%26#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "sub_item%25#0",
        "sub_item%26#0"
      ]
    },
    "3084": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "encoded%9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "tmp%36#0",
        "encoded%9#0"
      ]
    },
    "3085": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "encoded%9#0",
        "tmp%36#0"
      ]
    },
    "3086": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "encoded%9#0",
        "expr_value_trimmed%3#0",
        "i#0",
        "sub_item%27#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "encoded%9#0",
        "sub_item%27#0"
      ]
    },
    "3087": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "encoded%10#0",
        "expr_value_trimmed%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "encoded%10#0"
      ]
    },
    "3088": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "encoded%10#0",
        "0x"
      ]
    },
    "3089": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "0x",
        "encoded%10#0"
      ]
    },
    "3090": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "data%3#0",
        "expr_value_trimmed%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "expr_value_trimmed%3#0",
        "data%3#0"
      ]
    },
    "3091": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concatenated%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0"
      ]
    },
    "3092": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concatenated%3#0",
        "concatenated%3#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "concatenated%3#0 (copy)"
      ]
    },
    "3093": {
      "op": "len",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "byte_len%2#0",
        "concatenated%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "byte_len%2#0"
      ]
    },
    "3094": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "byte_len%2#0",
        "concatenated%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "byte_len%2#0",
        "18"
      ]
    },
    "3096": {
      "op": "/",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concatenated%3#0",
        "i#0",
        "len_%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "len_%3#0"
      ]
    },
    "3097": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_bytes%3#0",
        "concatenated%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "as_bytes%3#0"
      ]
    },
    "3098": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concatenated%3#0",
        "i#0",
        "len_16_bit%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "concatenated%3#0",
        "len_16_bit%3#0"
      ]
    },
    "3101": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "len_16_bit%3#0",
        "concatenated%3#0"
      ]
    },
    "3102": {
      "op": "concat",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0"
      ]
    },
    "3103": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3105": {
      "block": "test_bit_packed_tuples_for_footer@3",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "3107": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3108": {
      "op": "+",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "3109": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3111": {
      "op": "b test_bit_packed_tuples_for_header@1"
    },
    "3114": {
      "block": "test_bit_packed_tuples_after_for@4",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "3116": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "3117": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "3118": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%37#0"
      ]
    },
    "3119": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr2#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%37#0",
        "5"
      ]
    },
    "3121": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%38#0"
      ]
    },
    "3122": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "3123": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "3125": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ]
    },
    "3126": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "0"
      ]
    },
    "3127": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%39#0"
      ]
    },
    "3128": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%39#0",
        "5"
      ]
    },
    "3130": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%40#0"
      ]
    },
    "3131": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "3132": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "3134": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ]
    },
    "3135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "0"
      ]
    },
    "3136": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%41#0"
      ]
    },
    "3137": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%41#0",
        "5"
      ]
    },
    "3139": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%42#0"
      ]
    },
    "3140": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "3141": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3143": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ]
    },
    "3144": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "0"
      ]
    },
    "3145": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%43#0"
      ]
    },
    "3146": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%43#0",
        "5"
      ]
    },
    "3148": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%44#0"
      ]
    },
    "3149": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3150": {
      "op": "pushbytes \"bool2\"",
      "defined_out": [
        "\"bool2\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\""
      ]
    },
    "3157": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\"",
        "arr2#0"
      ]
    },
    "3159": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3160": {
      "op": "pushbytes \"bool7\"",
      "defined_out": [
        "\"bool7\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\""
      ]
    },
    "3167": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\"",
        "arr7#0"
      ]
    },
    "3169": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3170": {
      "op": "pushbytes \"bool8\"",
      "defined_out": [
        "\"bool8\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool8\""
      ]
    },
    "3177": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool8\"",
        "arr8#0"
      ]
    },
    "3179": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0"
      ]
    },
    "3180": {
      "op": "pushbytes \"bool9\"",
      "defined_out": [
        "\"bool9\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool9\""
      ]
    },
    "3187": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "\"bool9\"",
        "arr9#0"
      ]
    },
    "3188": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3189": {
      "retsub": true,
      "op": "retsub"
    }
  }
}