{
  "version": 3,
  "sources": [
    "../immutable.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AAAA;AAqWK;;;;;;AANA;;;;;;AANA;;;;;;AARA;;;;;;AARA;;;;;;AARA;;;;;;AARA;;;;;;AAVA;;;;;;AAPA;;;;;;AAPA;;;;;;AAPA;;;;;;AAPA;;;;;;AA3BA;;;;;;AAjEA;;;;;;AAlBA;;;;;;AAJA;;;;;;AAJA;;;;;;AAnBA;;;;;;AAnBA;;;;;;AAfA;;;;;;AAlBA;;;;;;AAxBA;;;;;;AAzBA;;;;;;AApiYL;;;;;;AAEY;;;;;AACZ;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACiB;AAAA;AAAA;AAAA;AAAA;AAAT;;AAAA;AACS;;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;;;;;;;;;;;;;;AACJ;AAGJ;;;;;;AAEa;AACC;AAAd;AAAc;;;;AAAd;;AAAA;;AAAA;AAAA;;;AAAA;;;AACQ;;AAAU;;;AAAV;AAAA;;;;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;AAGJ;;;;;;AAEa;AAAb;AAAa;;;;AAAb;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAQ;;AACM;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;;AAAA;;AAAA;AAGJ;;;;;;;AAEc;AAAd;AAAc;;;;AAAd;;AAAA;;AAAA;AAAA;;;AAAA;;;AACc;;AAAA;AAAA;;;AAAA;;AAAA;;AAAN;;;;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;;AAAA;;AAAA;AAGJ;;;;;;AAEa;AAAb;AAAa;;;;AAAb;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAQ;;AACiB;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;;AAAA;;AAAA;AAGJ;;;;;;AAEY;AACZ;;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ;;AAAA;AAAA;;;;;;;;;;;;;;AACJ;;;;AA5aC;;;AAAA;AAAA;;;;AAoCA;;;AAAA;AAAA;;;;AAyBA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAwBA;;;AAAA;AAAA;;;;AAkBA;;;AAAA;AAAA;;;;AAeA;;;AAAA;AAAA;;;;AAmBA;;;AAAA;AAAA;;;;AAmBA;;;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAkBA;;;AAAA;AAAA;;;;AAiEA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA2BA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAUA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAMA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAMA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAlWS;AAAA;AAAA;;;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AAEiB;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEqB;;AAAf;AAAY;AAAZ;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEA;AAAA;;AAAA;;;;;AAIM;AAAA;AAAA;;;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AAEyB;;AAAmB;AAAnB;AAAR;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAX;AAAP;AAEkB;;AAAZ;;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;AAAX;AAAP;AAEuC;;AAAtB;AAAA;;AAAA;;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAX;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAU;AAAV;AAAP;AAEiB;;AAAX;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAW;;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAU;AAAV;AAAP;AAEiC;;AAAjC;;AAAiC;;AAAjC;;AAAA;;AAER;;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAY;;AACsB;;AAAL;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEG;;AAAS;AAAT;AAAX;;;AAAA;;;AACuB;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;;AAAA;AAAA;AAAJ;AAAP;;;;AACD;;AAAS;AAAT;AAAX;;;AAAA;;;AACuB;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;;AAAA;AAAA;AAAJ;AAAP;;;;AACD;;AAAS;AAAT;AAAX;;;AAAA;;;AACmB;;AAAA;AAAA;AAAA;AAAI;AAAJ;AAAA;AAAI;AAAJ;;AAAA;AAAA;AAAP;;;;AACD;;AAAS;;AAAT;AAAX;;;AAAA;;;AAC2B;;AAAS;AAAT;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAJ;AAAP;;;;AAEJ;;;AAAA;;AAAA;AACG;;AAAA;AAAA;AAAX;;;AAAA;;;AACkB;;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAc;;AAAS;AAAT;AAAd;AAAP;;;;;AAEZ;;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAY;;AACkB;AAAI;AAAJ;AAAA;;AAAW;AAAJ;AAAA;;AAAnB;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAW;AAAX;AAAA;;AAAsB;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAY;;AAAZ;AAAA;;AAAuB;;AAAvB;AAAA;AAAP;AAEM;;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAW;AAAX;AAAA;;AAAsB;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAY;;AAAZ;AAAA;;AAAuB;;AAAvB;AAAA;AAAP;AACA;;;AAAA;;AAAA;;AAER;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAY;;AACoC;AAAI;AAAJ;AAAS;AAAT;AAAA;;AAAgB;AAAI;;AAAJ;AAAQ;AAAR;AAAa;AAAb;AAAA;;AAA9C;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACgB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAhB;;AAAA;;AAAA;;AACc;AAAP;AAAP;AACA;AACA;AACA;;;AAAA;;AAAA;;AAER;;;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAY;;AACkB;AAAI;AAAJ;AAAA;;AAAO;AAAA;;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAc;;AAAd;AAAP;AACS;AAAjB;AAAiB;AAAA;;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAY;;AACO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAI;AAAJ;AAAb;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAP;;;;AAFK;;AAAA;AAAA;AAAA;;;;;AAIH;;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAI;AAAJ;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAI;AAAJ;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAW;AAAX;AAAA;;AAA+B;AAAT;AAAtB;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAY;;AAAZ;AAAA;;AAAgC;;AAAT;AAAvB;AAAA;AAAP;AACA;;;AAAA;;AAAA;;AAER;;;;;;;;AAEc;AAAA;AAAA;;;AAAN;AACO;AAAA;AAAc;AAAd;AAAP;AAES;AAAjB;AAAiB;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAY;;AACyC;AAAI;AAAJ;AAAA;;AAAW;;;AAAA;;AAA9C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAc;;AAAd;AAAP;AACS;AAAjB;AAAiB;AAAA;;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAY;;AACO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAI;AAAJ;AAAb;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAa;;AAAA;;;AAAb;AAAP;;;;AAFK;;AAAA;AAAA;AAAA;;;;;AAIH;;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAI;AAAJ;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAI;AAAJ;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAA8B;AAA9B;AAAA;;AAAyC;AAAzC;AAAA;AAAP;AACW;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAA+B;;AAA/B;AAAA;;AAA0C;;;;;AAA1C;AAAA;AAAP;AACA;;;AAAA;;AAAA;;AAER;;;;;;AAEQ;;AAAA;;AAER;;;;;;AAEQ;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;;AAER;;;;;;;;;;;;AAKiB;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAY;;AAAA;;AACY;AAAA;AAAA;;;AAAZ;;AACS;AAArB;AAAqB;AAAA;;;;;AAArB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAgB;;AACY;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAZ;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAEH;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAN;;;;;AAJK;;AAAA;AAAA;AAAA;;;;;AAOA;AAAA;AAAA;;;AAAT;;AACR;;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACmC;;;AAAd;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAT;;;;;;;;;;;;;;AAEJ;;AAAA;;AAAA;AAER;;;;;;AAEe;AAAA;AAAA;;;AAAP;AACO;AAAA;AAAA;;;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAA;;;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAA;;;AAAP;AAAA;;AAAA;;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AACO;AAAA;AAAe;AAAf;AAAP;AAES;AAAjB;AAAiB;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAY;;AACkC;AAAK;AAAL;AAAA;;AAAU;AAAK;AAAL;AAAA;;AAArC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAKU;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AAPE;AAAI;AAAJ;AAAA;;AAHL;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAiBU;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AARE;AAAI;AAAJ;AAAA;;AAHL;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAkBU;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;;AAAL;AAAA;;AACA;AAAK;AAAL;AAAA;;AATE;AAAI;AAAJ;AAAA;;AAHL;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;;;;AA7BK;;AAAA;AAAA;AAAA;;;;;AA6CF;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;;AAER;;;;;;;;;;;;;;;AAQoC;AAAA;AAAA;AAAA;AACpC;;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACY;;AAAA;AAAA;;;;;;;;;;;;;;AACZ;;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;;;;AACA;;;AAAA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;;;;;;;;;;;;;AAChB;;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAY;;AAAA;;AAAA;;AACA;;AAAA;AAAA;AAAA;;;;AACZ;;;AAAA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;AAChB;;AAAA;;;AAAA;;;AACgB;;AAAQ;AAAR;AAAA;;;;;;;;;;;;;;;;;AAChB;;AAAA;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAY;;AACA;;AAAA;AACQ;;AAAA;AAAR;AAAA;;AACO;AAAA;AAAP;;;;;;;;;;;;;AAEJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAER;;;;;;AAEc;;AAAA;AAAA;;;AAAgB;AAAhB;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AACG;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAY;;AACM;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;;;;AAEc;;AAAA;AAAA;;;AAAA;AAAA;AAAgB;AAAhB;AAAA;AAAsB;AAAtB;AAAA;AAA6B;AAA7B;AAAA;;AAAmC;AAAnC;AAAA;;AAA0C;AAA1C;AAAA;AACG;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAY;;AACqB;AAAJ;AAAS;AAAT;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;;;;AAEc;AAAA;AAAA;;;AAAwB;AAAxB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAkC;AAAlC;AAAA;AAAwC;AAAxC;AAAA;AAAA;AACG;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAY;;AACoC;AAAI;AAAJ;AAAS;AAAT;AAAA;;AAAgB;AAAI;;AAAJ;AAAS;AAAT;AAAA;;AAA9C;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;;;;AAEc;AAAA;AAAA;;;AAAoC;AAApC;AAAA;AAAA;;AAAA;AAA8C;;AAA9C;AAAA;AAAA;;;AAA8C;;AAA9C;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AACG;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAY;;AACwC;AAAA;;;AAAA;;AAAlC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAN;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAER;;;;;;AAIkB;;;AAAA;AAAA;AAAA;AAAV;;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACS;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAY;;AACkC;AAAI;AAAJ;AAAS;AAAT;AAAA;;AAAgB;AAAI;;AAAJ;AAAS;AAAT;AAAA;;AAAlD;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAP;;AAAA;AAER;;;;;;AAIiB;AAAA;AAAA;;;AAAgB;;AAAhB;AAAgC;;AAAhC;AACA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACT;AAER;;;;;;AAIiB;AAAA;AAAA;;;AAAgB;;AAAhB;AAAgC;;AAAhC;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACT;AAER;;;;;;AAIiC;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAkB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAlC;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AACT;AAER;;;;;;AAIiC;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAkB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAlC;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AACT;AAER;;;;;;AAIe;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAP;AAER;;;;;;AAEe;;AAAA;AAAA;AAAA;AAAA;AAAP;AACkB;;AAAA;AAAA;AAAa;AAAb;AAAgB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAI;AAAJ;;AAAA;AAAA;;AAAA;AAA5B;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAN;;AACA;AAER;;;;;;;AAEe;;AAAA;AAAP;AACwB;;AAAmB;AAAnB;AAAsB;;AAAmB;AAAnB;AAAA;;AAAnC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAX;AAAA;;AACO;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAAA;;AAAA;;AACO;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAAP;AACO;AAAP;AAES;AAAjB;AAAiB;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAY;;AACO;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAP;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;;AAAA;AAAP;;;;;;;AAER;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACmB;;AAAA;AAAP;;;;;;;;;;;;;AAEJ;;AAAA;;AAAA;AAAA;;AAAA;AACO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGO;AAAA;;;AAAmC;;AAAnC;AAAP;AAE0B;AAAb;AAAA;AAAA;;AAAA;AAAuB;AAAvB;AAAA;AAAL;AAAR;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACO;;;AAAmC;;AAAnC;AAAP;AAEO;AAAA;;AAAA;AAAA;AAAP;;AAAA;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8"
    },
    "7": {
      "op": "bytecblock 0x 0x151f7c75 0x00 \"a\" 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff \"b\" \"imm_fixed_arr\" 0x62696775696e74 \"Hello\" 0x0000000000000001 0x0000000000000002"
    },
    "132": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "166": {
      "op": "store 0"
    },
    "168": {
      "op": "b main_block@0"
    },
    "171": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "174": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "176": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "177": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "178": {
      "op": "bz main___algopy_default_create@31",
      "stack_out": []
    },
    "181": {
      "op": "b main_abi_routing@2"
    },
    "184": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "186": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "187": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "188": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "189": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "191": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "192": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "193": {
      "op": "bz main_create_NoOp@29",
      "stack_out": []
    },
    "196": {
      "op": "b main_call_NoOp@3"
    },
    "199": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "202": {
      "op": "pushbytes 0x44d42f99 // method \"test_uint64_array()void\"",
      "defined_out": [
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)"
      ]
    },
    "208": {
      "op": "pushbytes 0xb7eaa60b // method \"test_biguint_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)"
      ]
    },
    "214": {
      "op": "pushbytes 0x743d70ed // method \"test_bool_array(uint64)void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)"
      ]
    },
    "220": {
      "op": "pushbytes 0x1c7e0494 // method \"test_fixed_size_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)"
      ]
    },
    "226": {
      "op": "pushbytes 0xa2d5860b // method \"test_fixed_size_named_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)"
      ]
    },
    "232": {
      "op": "pushbytes 0xe05fc564 // method \"test_dynamic_sized_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)"
      ]
    },
    "238": {
      "op": "pushbytes 0x1e092b83 // method \"test_dynamic_sized_named_tuple_array()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)"
      ]
    },
    "244": {
      "op": "pushbytes 0x01310262 // method \"test_implicit_conversion_log(uint64[])void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)"
      ]
    },
    "250": {
      "op": "pushbytes 0xc8654a98 // method \"test_implicit_conversion_emit(uint64[])void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)"
      ]
    },
    "256": {
      "op": "pushbytes 0x89d196f8 // method \"test_nested_array(uint64,uint64[][])uint64[]\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])"
      ]
    },
    "262": {
      "op": "pushbytes 0x6cb7c991 // method \"test_bit_packed_tuples()void\"",
      "defined_out": [
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)"
      ]
    },
    "268": {
      "op": "pushbytes 0x9898bf02 // method \"sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))"
      ]
    },
    "274": {
      "op": "pushbytes 0xf6b61ee8 // method \"test_uint64_return(uint64)uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])"
      ]
    },
    "280": {
      "op": "pushbytes 0x60b86a7b // method \"test_bool_return(uint64)bool[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])"
      ]
    },
    "286": {
      "op": "pushbytes 0x73ad283f // method \"test_tuple_return(uint64)(uint64,bool,bool)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])"
      ]
    },
    "292": {
      "op": "pushbytes 0x529dfae9 // method \"test_dynamic_tuple_return(uint64)(uint64,string)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])"
      ]
    },
    "298": {
      "op": "pushbytes 0x206d514f // method \"test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])"
      ]
    },
    "304": {
      "op": "pushbytes 0xe06465e2 // method \"test_concat_with_arc4_tuple((uint64,uint64))uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])"
      ]
    },
    "310": {
      "op": "pushbytes 0xec0300a2 // method \"test_concat_with_native_tuple((uint64,uint64))uint64[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])"
      ]
    },
    "316": {
      "op": "pushbytes 0xecdf14af // method \"test_dynamic_concat_with_arc4_tuple((string,string))string[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])"
      ]
    },
    "322": {
      "op": "pushbytes 0x511aca64 // method \"test_dynamic_concat_with_native_tuple((string,string))string[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])"
      ]
    },
    "328": {
      "op": "pushbytes 0x29852e4f // method \"test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])"
      ]
    },
    "334": {
      "op": "pushbytes 0x6d4aa358 // method \"test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])"
      ]
    },
    "340": {
      "op": "pushbytes 0xb7cb96bd // method \"test_imm_fixed_arr()(uint64,uint64)[3]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])"
      ]
    },
    "346": {
      "op": "uncover 24",
      "stack_out": [
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "tmp%6#0"
      ]
    },
    "348": {
      "op": "match main_test_uint64_array_route@4 main_test_biguint_array_route@5 main_test_bool_array_route@6 main_test_fixed_size_tuple_array_route@7 main_test_fixed_size_named_tuple_array_route@8 main_test_dynamic_sized_tuple_array_route@9 main_test_dynamic_sized_named_tuple_array_route@10 main_test_implicit_conversion_log_route@11 main_test_implicit_conversion_emit_route@12 main_test_nested_array_route@13 main_test_bit_packed_tuples_route@14 main_sum_uints_and_lengths_and_trues_route@15 main_test_uint64_return_route@16 main_test_bool_return_route@17 main_test_tuple_return_route@18 main_test_dynamic_tuple_return_route@19 main_test_convert_to_array_and_back_route@20 main_test_concat_with_arc4_tuple_route@21 main_test_concat_with_native_tuple_route@22 main_test_dynamic_concat_with_arc4_tuple_route@23 main_test_dynamic_concat_with_native_tuple_route@24 main_test_concat_immutable_dynamic_route@25 main_test_immutable_arc4_route@26 main_test_imm_fixed_arr_route@27",
      "stack_out": []
    },
    "398": {
      "op": "b main_switch_case_next@28"
    },
    "401": {
      "block": "main_switch_case_next@28",
      "stack_in": [],
      "op": "b main_after_if_else@30"
    },
    "404": {
      "block": "main_after_if_else@30",
      "stack_in": [],
      "op": "b main_after_if_else@32"
    },
    "407": {
      "block": "main_after_if_else@32",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "408": {
      "block": "main_test_imm_fixed_arr_route@27",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr[routing]",
      "op": "callsub test_imm_fixed_arr"
    },
    "411": {
      "op": "b main_switch_case_next@28"
    },
    "414": {
      "block": "main_test_immutable_arc4_route@26",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4[routing]",
      "op": "callsub test_immutable_arc4"
    },
    "417": {
      "op": "b main_switch_case_next@28"
    },
    "420": {
      "block": "main_test_concat_immutable_dynamic_route@25",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic[routing]",
      "op": "callsub test_concat_immutable_dynamic"
    },
    "423": {
      "op": "b main_switch_case_next@28"
    },
    "426": {
      "block": "main_test_dynamic_concat_with_native_tuple_route@24",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple[routing]",
      "op": "callsub test_dynamic_concat_with_native_tuple"
    },
    "429": {
      "op": "b main_switch_case_next@28"
    },
    "432": {
      "block": "main_test_dynamic_concat_with_arc4_tuple_route@23",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple[routing]",
      "op": "callsub test_dynamic_concat_with_arc4_tuple"
    },
    "435": {
      "op": "b main_switch_case_next@28"
    },
    "438": {
      "block": "main_test_concat_with_native_tuple_route@22",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple[routing]",
      "op": "callsub test_concat_with_native_tuple"
    },
    "441": {
      "op": "b main_switch_case_next@28"
    },
    "444": {
      "block": "main_test_concat_with_arc4_tuple_route@21",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple[routing]",
      "op": "callsub test_concat_with_arc4_tuple"
    },
    "447": {
      "op": "b main_switch_case_next@28"
    },
    "450": {
      "block": "main_test_convert_to_array_and_back_route@20",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back[routing]",
      "op": "callsub test_convert_to_array_and_back"
    },
    "453": {
      "op": "b main_switch_case_next@28"
    },
    "456": {
      "block": "main_test_dynamic_tuple_return_route@19",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return[routing]",
      "op": "callsub test_dynamic_tuple_return"
    },
    "459": {
      "op": "b main_switch_case_next@28"
    },
    "462": {
      "block": "main_test_tuple_return_route@18",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return[routing]",
      "op": "callsub test_tuple_return"
    },
    "465": {
      "op": "b main_switch_case_next@28"
    },
    "468": {
      "block": "main_test_bool_return_route@17",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return[routing]",
      "op": "callsub test_bool_return"
    },
    "471": {
      "op": "b main_switch_case_next@28"
    },
    "474": {
      "block": "main_test_uint64_return_route@16",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return[routing]",
      "op": "callsub test_uint64_return"
    },
    "477": {
      "op": "b main_switch_case_next@28"
    },
    "480": {
      "block": "main_sum_uints_and_lengths_and_trues_route@15",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues[routing]",
      "op": "callsub sum_uints_and_lengths_and_trues"
    },
    "483": {
      "op": "b main_switch_case_next@28"
    },
    "486": {
      "block": "main_test_bit_packed_tuples_route@14",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples[routing]",
      "op": "callsub test_bit_packed_tuples"
    },
    "489": {
      "op": "b main_switch_case_next@28"
    },
    "492": {
      "block": "main_test_nested_array_route@13",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array[routing]",
      "op": "callsub test_nested_array"
    },
    "495": {
      "op": "b main_switch_case_next@28"
    },
    "498": {
      "block": "main_test_implicit_conversion_emit_route@12",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit[routing]",
      "op": "callsub test_implicit_conversion_emit"
    },
    "501": {
      "op": "b main_switch_case_next@28"
    },
    "504": {
      "block": "main_test_implicit_conversion_log_route@11",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log[routing]",
      "op": "callsub test_implicit_conversion_log"
    },
    "507": {
      "op": "b main_switch_case_next@28"
    },
    "510": {
      "block": "main_test_dynamic_sized_named_tuple_array_route@10",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array[routing]",
      "op": "callsub test_dynamic_sized_named_tuple_array"
    },
    "513": {
      "op": "b main_switch_case_next@28"
    },
    "516": {
      "block": "main_test_dynamic_sized_tuple_array_route@9",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array[routing]",
      "op": "callsub test_dynamic_sized_tuple_array"
    },
    "519": {
      "op": "b main_switch_case_next@28"
    },
    "522": {
      "block": "main_test_fixed_size_named_tuple_array_route@8",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array[routing]",
      "op": "callsub test_fixed_size_named_tuple_array"
    },
    "525": {
      "op": "b main_switch_case_next@28"
    },
    "528": {
      "block": "main_test_fixed_size_tuple_array_route@7",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array[routing]",
      "op": "callsub test_fixed_size_tuple_array"
    },
    "531": {
      "op": "b main_switch_case_next@28"
    },
    "534": {
      "block": "main_test_bool_array_route@6",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array[routing]",
      "op": "callsub test_bool_array"
    },
    "537": {
      "op": "b main_switch_case_next@28"
    },
    "540": {
      "block": "main_test_biguint_array_route@5",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array[routing]",
      "op": "callsub test_biguint_array"
    },
    "543": {
      "op": "b main_switch_case_next@28"
    },
    "546": {
      "block": "main_test_uint64_array_route@4",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array[routing]",
      "op": "callsub test_uint64_array"
    },
    "549": {
      "op": "b main_switch_case_next@28"
    },
    "552": {
      "block": "main_create_NoOp@29",
      "stack_in": [],
      "op": "b main_after_if_else@30"
    },
    "555": {
      "block": "main___algopy_default_create@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "557": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "558": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "559": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "561": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "562": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "563": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "564": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "565": {
      "op": "b main_block@34"
    },
    "568": {
      "block": "main_block@34",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@35"
    },
    "571": {
      "block": "main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create@35",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "572": {
      "op": "return",
      "stack_out": []
    },
    "573": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_bit",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_bit",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "576": {
      "op": "b dynamic_array_pop_bit_block@0"
    },
    "579": {
      "block": "dynamic_array_pop_bit_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "581": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "582": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "583": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "584": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "585": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "586": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "tmp%2#0"
      ]
    },
    "587": {
      "op": "extract 6 0",
      "defined_out": [
        "length_minus_1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "tmp%3#0"
      ]
    },
    "590": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "tmp%3#0",
        "array#0 (copy)"
      ]
    },
    "592": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "array#0 (copy)",
        "tmp%3#0"
      ]
    },
    "594": {
      "op": "replace2 0",
      "defined_out": [
        "length_minus_1#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0"
      ]
    },
    "596": {
      "op": "dig 1",
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "598": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)",
        "16"
      ]
    },
    "600": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "601": {
      "op": "dup2",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "popped_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "result#0 (copy)",
        "popped_location#0 (copy)"
      ]
    },
    "602": {
      "op": "getbit",
      "defined_out": [
        "length_minus_1#0",
        "popped_location#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "tmp%6#0"
      ]
    },
    "603": {
      "op": "cover 3",
      "defined_out": [
        "length_minus_1#0",
        "popped#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "605": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "0"
      ]
    },
    "606": {
      "op": "setbit",
      "defined_out": [
        "length_minus_1#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "length_minus_1#0",
        "result#0"
      ]
    },
    "607": {
      "op": "uncover 1",
      "stack_out": [
        "popped#0",
        "result#0",
        "length_minus_1#0"
      ]
    },
    "609": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "length_minus_1#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "length_minus_1#0",
        "7"
      ]
    },
    "611": {
      "op": "+",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%8#0"
      ]
    },
    "612": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "popped#0",
        "result#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%8#0",
        "8"
      ]
    },
    "613": {
      "op": "/",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%9#0"
      ]
    },
    "614": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "popped#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%9#0",
        "2"
      ]
    },
    "615": {
      "op": "+",
      "defined_out": [
        "popped#0",
        "result#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "tmp%10#0"
      ]
    },
    "616": {
      "op": "uncover 1",
      "stack_out": [
        "popped#0",
        "tmp%10#0",
        "result#0"
      ]
    },
    "618": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "tmp%10#0",
        "result#0",
        "0"
      ]
    },
    "619": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "tmp%10#0"
      ]
    },
    "621": {
      "op": "substring3",
      "defined_out": [
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "622": {
      "retsub": true,
      "op": "retsub"
    },
    "623": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "params": {
        "array#0": "bytes",
        "fixed_byte_size#0": "uint64"
      },
      "block": "dynamic_array_pop_fixed_size",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "626": {
      "op": "b dynamic_array_pop_fixed_size_block@0"
    },
    "629": {
      "block": "dynamic_array_pop_fixed_size_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "631": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "632": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "633": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "634": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "635": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "636": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "639": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%3#0",
        "array#0 (copy)"
      ]
    },
    "641": {
      "op": "uncover 1",
      "stack_out": [
        "array#0 (copy)",
        "tmp%3#0"
      ]
    },
    "643": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "645": {
      "op": "dup",
      "defined_out": [
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "result#0 (copy)"
      ]
    },
    "646": {
      "op": "len",
      "defined_out": [
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0"
      ]
    },
    "647": {
      "op": "frame_dig -1",
      "defined_out": [
        "fixed_byte_size#0 (copy)",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "649": {
      "op": "-",
      "defined_out": [
        "item_location#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0"
      ]
    },
    "650": {
      "op": "dup2",
      "defined_out": [
        "item_location#0",
        "item_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)"
      ]
    },
    "651": {
      "op": "frame_dig -1",
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "653": {
      "op": "extract3",
      "defined_out": [
        "item_location#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "tmp%7#0"
      ]
    },
    "654": {
      "op": "cover 2",
      "defined_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "item_location#0"
      ]
    },
    "656": {
      "op": "uncover 1",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0"
      ]
    },
    "658": {
      "op": "intc_0 // 0",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0",
        "0"
      ]
    },
    "659": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "item_location#0"
      ]
    },
    "661": {
      "op": "substring3",
      "defined_out": [
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "662": {
      "retsub": true,
      "op": "retsub"
    },
    "663": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_dynamic_element",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "666": {
      "op": "b dynamic_array_pop_dynamic_element_block@0"
    },
    "669": {
      "block": "dynamic_array_pop_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "671": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "672": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "673": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "674": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "675": {
      "op": "dupn 2",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "677": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "2"
      ]
    },
    "678": {
      "op": "*",
      "defined_out": [
        "length_minus_1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "tmp%2#0"
      ]
    },
    "679": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0 (copy)"
      ]
    },
    "680": {
      "op": "cover 2",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "682": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "array#0 (copy)"
      ]
    },
    "684": {
      "op": "extract 2 0",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%3#0"
      ]
    },
    "687": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "688": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "690": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "691": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "popped_header_offset#0"
      ]
    },
    "693": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "tmp%4#0"
      ]
    },
    "694": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ]
    },
    "695": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "697": {
      "op": "dig 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "699": {
      "op": "len",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%5#0"
      ]
    },
    "700": {
      "op": "cover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "tmp%5#0",
        "popped_offset#0"
      ]
    },
    "702": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%5#0",
        "popped_offset#0",
        "head_and_tail#0"
      ]
    },
    "704": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%5#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "706": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%5#0"
      ]
    },
    "708": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%6#0"
      ]
    },
    "709": {
      "op": "cover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0"
      ]
    },
    "711": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0",
        "0x"
      ]
    },
    "712": {
      "op": "cover 1",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0"
      ]
    },
    "714": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0",
        "2"
      ]
    },
    "715": {
      "op": "*",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "716": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "2"
      ]
    },
    "717": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "718": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0"
      ]
    },
    "719": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "722": {
      "block": "dynamic_array_pop_dynamic_element_for_header@1",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "724": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "tmp%7#0"
      ]
    },
    "726": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "727": {
      "op": "bz dynamic_array_pop_dynamic_element_after_for@4",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0"
      ]
    },
    "730": {
      "op": "b dynamic_array_pop_dynamic_element_for_body@2"
    },
    "733": {
      "block": "dynamic_array_pop_dynamic_element_for_body@2",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "head_offset#0"
      ]
    },
    "735": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "head_offset#0",
        "head_and_tail#0"
      ]
    },
    "737": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "head_and_tail#0",
        "head_offset#0"
      ]
    },
    "739": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "item_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "item_offset#0"
      ]
    },
    "740": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_tail#0",
        "item_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "item_offset#0",
        "2"
      ]
    },
    "741": {
      "op": "-",
      "defined_out": [
        "head_and_tail#0",
        "item_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "item_offset#0"
      ]
    },
    "742": {
      "op": "itob",
      "defined_out": [
        "head_and_tail#0",
        "tmp%10#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%10#0"
      ]
    },
    "743": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail#0",
        "tmp%11#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%11#0"
      ]
    },
    "746": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_and_tail#0",
        "new_head#0",
        "tmp%11#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%11#0",
        "new_head#0"
      ]
    },
    "748": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "new_head#0",
        "tmp%11#0"
      ]
    },
    "750": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "new_head#0",
        "tmp%12#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%12#0"
      ]
    },
    "751": {
      "op": "frame_bury 5",
      "defined_out": [
        "head_and_tail#0",
        "new_head#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0"
      ]
    },
    "753": {
      "op": "b dynamic_array_pop_dynamic_element_for_footer@3"
    },
    "756": {
      "block": "dynamic_array_pop_dynamic_element_for_footer@3",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "758": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "2"
      ]
    },
    "759": {
      "op": "+",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "760": {
      "op": "frame_bury 7",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0"
      ]
    },
    "762": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "765": {
      "block": "dynamic_array_pop_dynamic_element_after_for@4",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "length_minus_1#0"
      ]
    },
    "767": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%13#0"
      ]
    },
    "768": {
      "op": "extract 6 2",
      "defined_out": [
        "length_minus_1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%14#0"
      ]
    },
    "771": {
      "op": "frame_dig 5",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%14#0",
        "new_head#0"
      ]
    },
    "773": {
      "op": "concat",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%15#0"
      ]
    },
    "774": {
      "op": "frame_dig 1",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%15#0",
        "popped_header_offset#0"
      ]
    },
    "776": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%15#0",
        "popped_header_offset#0",
        "2"
      ]
    },
    "777": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "778": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "head_and_tail#0"
      ]
    },
    "780": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0"
      ]
    },
    "782": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0",
        "popped_offset#0"
      ]
    },
    "784": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "785": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "updated#0"
      ]
    },
    "786": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "updated#0",
        "popped#0"
      ]
    },
    "788": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "value_internal%0#0",
        "popped#0",
        "updated#0"
      ]
    },
    "790": {
      "op": "frame_bury 1"
    },
    "792": {
      "op": "frame_bury 0"
    },
    "794": {
      "retsub": true,
      "op": "retsub"
    },
    "795": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "798": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "799": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0",
        "write_end#0"
      ]
    },
    "800": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "801": {
      "op": "b dynamic_array_concat_bits_block@0"
    },
    "804": {
      "block": "dynamic_array_concat_bits_block@0",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "806": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "807": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "tmp%0#0"
      ]
    },
    "808": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "810": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "812": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "813": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "814": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ]
    },
    "815": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "818": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "820": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "822": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%4#0"
      ]
    },
    "824": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)",
        "result#0 (copy)"
      ]
    },
    "825": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0",
        "result#0 (copy)"
      ]
    },
    "827": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "829": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "831": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "833": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0"
      ]
    },
    "834": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0",
        "8"
      ]
    },
    "835": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%6#0"
      ]
    },
    "836": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "current_bytes#0 (copy)",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0 (copy)"
      ]
    },
    "837": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "839": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "841": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "843": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0"
      ]
    },
    "844": {
      "op": "intc_3 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0",
        "8"
      ]
    },
    "845": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%8#0"
      ]
    },
    "846": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0 (copy)"
      ]
    },
    "847": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "849": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%9#0"
      ]
    },
    "850": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "853": {
      "op": "b dynamic_array_concat_bits_if_body@1"
    },
    "856": {
      "block": "dynamic_array_concat_bits_if_body@1",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "required_bytes#0"
      ]
    },
    "858": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "860": {
      "op": "-",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%10#0"
      ]
    },
    "861": {
      "op": "bzero",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%11#0"
      ]
    },
    "862": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%11#0",
        "result#0"
      ]
    },
    "864": {
      "op": "uncover 1",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "result#0",
        "tmp%11#0"
      ]
    },
    "866": {
      "op": "concat",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "result#0"
      ]
    },
    "867": {
      "op": "frame_bury 7",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "869": {
      "op": "b dynamic_array_concat_bits_after_if_else@2"
    },
    "872": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "0"
      ]
    },
    "873": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "875": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "array_length#0"
      ]
    },
    "877": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "array_length#0",
        "16"
      ]
    },
    "879": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%13#0"
      ]
    },
    "880": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0",
        "write_offset#0 (copy)"
      ]
    },
    "881": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0"
      ]
    },
    "883": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "885": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "tmp%14#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%14#0"
      ]
    },
    "886": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "888": {
      "op": "frame_dig 7",
      "defined_out": [
        "array_length#0",
        "result#4",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "result#4"
      ]
    },
    "890": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length#0",
        "result#4",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "892": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "895": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0"
      ]
    },
    "897": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "899": {
      "op": "<",
      "defined_out": [
        "tmp%15#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%15#0"
      ]
    },
    "900": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "903": {
      "op": "b dynamic_array_concat_bits_while_body@4"
    },
    "906": {
      "block": "dynamic_array_concat_bits_while_body@4",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "new_items_bytes#0 (copy)"
      ]
    },
    "908": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "910": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "911": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "913": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%16#0"
      ]
    },
    "914": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%16#0",
        "result#0"
      ]
    },
    "916": {
      "op": "frame_dig 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "918": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "919": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "921": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%16#0"
      ]
    },
    "923": {
      "op": "setbit",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%17#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0",
        "tmp%17#0"
      ]
    },
    "924": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "926": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "927": {
      "op": "+",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%18#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "tmp%18#0"
      ]
    },
    "928": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0"
      ]
    },
    "930": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "932": {
      "op": "+",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%19#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "tmp%19#0"
      ]
    },
    "933": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ]
    },
    "935": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "938": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#4",
        "result#0"
      ]
    },
    "940": {
      "op": "frame_bury 0"
    },
    "942": {
      "retsub": true,
      "op": "retsub"
    },
    "943": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "946": {
      "op": "b dynamic_array_concat_byte_length_head_block@0"
    },
    "949": {
      "block": "dynamic_array_concat_byte_length_head_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "951": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "952": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "953": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "954": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "956": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length#0",
        "tmp%1#0"
      ]
    },
    "957": {
      "op": "cover 1",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "959": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "960": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%2#0"
      ]
    },
    "961": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%2#0",
        "2"
      ]
    },
    "962": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "963": {
      "op": "dig 1",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "new_length#0 (copy)"
      ]
    },
    "965": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%4#0"
      ]
    },
    "966": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%5#0"
      ]
    },
    "969": {
      "op": "cover 1",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0"
      ]
    },
    "971": {
      "op": "frame_dig -3",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "array#0 (copy)"
      ]
    },
    "973": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "974": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "976": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0"
      ]
    },
    "977": {
      "op": "frame_dig -1",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0",
        "new_items_count#0 (copy)"
      ]
    },
    "979": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "980": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "981": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "982": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%9#0"
      ]
    },
    "983": {
      "op": "frame_dig -3",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%9#0",
        "array#0 (copy)"
      ]
    },
    "985": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%10#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "986": {
      "op": "frame_dig -3",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "header_end#0",
        "tmp%9#0",
        "tmp%10#0",
        "array#0 (copy)"
      ]
    },
    "988": {
      "op": "uncover 3",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%10#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "990": {
      "op": "uncover 2",
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%10#0"
      ]
    },
    "992": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "993": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%12#0"
      ]
    },
    "994": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%12#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "996": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%13#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%5#0",
        "tmp%13#0"
      ]
    },
    "997": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "tmp%13#0",
        "new_length#0"
      ]
    },
    "999": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "tmp%13#0",
        "new_length#0",
        "0"
      ]
    },
    "1000": {
      "callsub": "_puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head",
      "op": "callsub recalculate_head_for_elements_with_byte_length_head",
      "defined_out": [
        "tmp%14#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%14#0"
      ]
    },
    "1003": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1004": {
      "retsub": true,
      "op": "retsub"
    },
    "1005": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "1008": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "head_and_tail_length#0"
      ]
    },
    "1009": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0"
      ]
    },
    "1010": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0"
      ]
    },
    "1011": {
      "op": "b dynamic_array_concat_dynamic_element_block@0"
    },
    "1014": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0"
      ]
    },
    "1015": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1017": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1018": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "1019": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1021": {
      "op": "intc_2 // 2",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "1022": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "1023": {
      "op": "intc_2 // 2",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "2"
      ]
    },
    "1024": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "1025": {
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1026": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "1029": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1031": {
      "op": "frame_dig 5",
      "defined_out": [
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1033": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1034": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1037": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@2"
    },
    "1040": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "head_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "head_offset#0"
      ]
    },
    "1042": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1044": {
      "op": "uncover 1",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1046": {
      "op": "extract_uint16",
      "defined_out": [
        "item_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "item_offset#0"
      ]
    },
    "1047": {
      "op": "frame_dig 4",
      "defined_out": [
        "item_offset#0",
        "item_offset_adjustment#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1049": {
      "op": "+",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%3#0"
      ]
    },
    "1050": {
      "op": "itob",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "1051": {
      "op": "extract 6 2",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%5#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%5#0"
      ]
    },
    "1054": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%5#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "1056": {
      "op": "uncover 1",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "1058": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%6#0"
      ]
    },
    "1059": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1061": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@3"
    },
    "1064": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1066": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "2"
      ]
    },
    "1067": {
      "op": "+",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1068": {
      "op": "frame_bury 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1070": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "1073": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1075": {
      "op": "len",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%7#0"
      ]
    },
    "1076": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1078": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1080": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1081": {
      "op": "*",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%8#0"
      ]
    },
    "1082": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1084": {
      "op": "intc_2 // 2",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "2"
      ]
    },
    "1085": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1086": {
      "op": "intc_0 // 0",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1087": {
      "op": "frame_bury 2",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1089": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "1092": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "1094": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%8#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "tmp%8#0"
      ]
    },
    "1096": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "tmp%8#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "1097": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1100": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@6"
    },
    "1103": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "head_offset#0"
      ]
    },
    "1105": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1107": {
      "op": "uncover 1",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1109": {
      "op": "extract_uint16",
      "defined_out": [
        "item_offset#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "item_offset#0"
      ]
    },
    "1110": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_and_tail_length#0",
        "item_offset#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "item_offset#0",
        "head_and_tail_length#0"
      ]
    },
    "1112": {
      "op": "+",
      "defined_out": [
        "head_and_tail_length#0",
        "tmp%10#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%10#0"
      ]
    },
    "1113": {
      "op": "itob",
      "defined_out": [
        "head_and_tail_length#0",
        "tmp%11#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%11#0"
      ]
    },
    "1114": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail_length#0",
        "tmp%12#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%12#0"
      ]
    },
    "1117": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%12#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "1119": {
      "op": "uncover 1",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "1121": {
      "op": "concat",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%13#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%13#0"
      ]
    },
    "1122": {
      "op": "frame_bury 3",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1124": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@7"
    },
    "1127": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "1129": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "2"
      ]
    },
    "1130": {
      "op": "+",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "1131": {
      "op": "frame_bury 2",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ]
    },
    "1133": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "1136": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1138": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1140": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%14#0"
      ]
    },
    "1141": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%15#0"
      ]
    },
    "1142": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%16#0"
      ]
    },
    "1145": {
      "op": "frame_dig 3",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "1147": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%17#0"
      ]
    },
    "1148": {
      "op": "frame_dig -4",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%17#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1150": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%17#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "1151": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1152": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%17#0",
        "tmp%18#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1154": {
      "op": "uncover 1",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0"
      ]
    },
    "1156": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0",
        "head_and_tail_length#0"
      ]
    },
    "1158": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "1159": {
      "op": "concat",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0"
      ]
    },
    "1160": {
      "op": "frame_dig -2",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1162": {
      "op": "intc_2 // 2",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1163": {
      "op": "*",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "1164": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1166": {
      "op": "len",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1167": {
      "op": "frame_dig -1",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1169": {
      "op": "uncover 2",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0"
      ]
    },
    "1171": {
      "op": "uncover 2",
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1173": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%20#0",
        "tmp%23#0"
      ]
    },
    "1174": {
      "op": "concat",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "tmp%8#0",
        "value_internal%1#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "value_internal%0#0",
        "tmp%24#0"
      ]
    },
    "1175": {
      "op": "frame_bury 0"
    },
    "1177": {
      "retsub": true,
      "op": "retsub"
    },
    "1178": {
      "subroutine": "_puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head",
      "params": {
        "array_head_and_tail#0": "bytes",
        "length#0": "uint64",
        "start_at_index#0": "uint64"
      },
      "block": "recalculate_head_for_elements_with_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1181": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_block@0"
    },
    "1184": {
      "block": "recalculate_head_for_elements_with_byte_length_head_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "length#0 (copy)"
      ]
    },
    "1186": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0 (copy)"
      ],
      "stack_out": [
        "length#0 (copy)",
        "2"
      ]
    },
    "1187": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1188": {
      "op": "frame_dig -1",
      "defined_out": [
        "start_at_index#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1190": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%0#0",
        "start_at_index#0 (copy)",
        "2"
      ]
    },
    "1191": {
      "op": "*",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1192": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1194": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1196": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1197": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1199": {
      "op": "select",
      "defined_out": [],
      "stack_out": [
        "tail_offset#0"
      ]
    },
    "1200": {
      "op": "frame_dig -2",
      "stack_out": [
        "tail_offset#0",
        "length#0 (copy)"
      ]
    },
    "1202": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "1203": {
      "op": "*",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0"
      ]
    },
    "1204": {
      "op": "frame_dig -1",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "start_at_index#0 (copy)"
      ]
    },
    "1206": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "start_at_index#0 (copy)",
        "2"
      ]
    },
    "1207": {
      "op": "*",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1208": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "tmp%5#0",
        "2"
      ]
    },
    "1209": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0"
      ]
    },
    "1210": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_header@1"
    },
    "1213": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_header@1",
      "stack_in": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1215": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "1217": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1218": {
      "op": "bz recalculate_head_for_elements_with_byte_length_head_after_for@4",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0"
      ]
    },
    "1221": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_body@2"
    },
    "1224": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_body@2",
      "stack_in": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "head_offset#0"
      ]
    },
    "1226": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "1228": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "head_offset#0",
        "tail_offset#0 (copy)",
        "tail_offset#0 (copy)"
      ]
    },
    "1229": {
      "op": "cover 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#0 (copy)"
      ]
    },
    "1231": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "1232": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "1235": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset_bytes#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset_bytes#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1237": {
      "op": "uncover 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "tail_offset_bytes#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1239": {
      "op": "uncover 2",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "1241": {
      "op": "replace3",
      "defined_out": [
        "tail_offset#0",
        "tmp%8#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "tmp%8#0"
      ]
    },
    "1242": {
      "op": "dup"
    },
    "1243": {
      "op": "frame_bury -3",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1245": {
      "op": "dig 1",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "array_head_and_tail#0 (copy)",
        "tail_offset#0 (copy)"
      ]
    },
    "1247": {
      "op": "extract_uint16",
      "defined_out": [
        "tail_offset#0",
        "tmp%9#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "tmp%9#0"
      ]
    },
    "1248": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tail_offset#0",
        "tmp%9#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "tmp%9#0",
        "2"
      ]
    },
    "1249": {
      "op": "+",
      "defined_out": [
        "tail_offset#0",
        "tmp%10#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tail_offset#0",
        "tmp%10#0"
      ]
    },
    "1250": {
      "op": "+",
      "defined_out": [
        "tail_offset#0",
        "tmp%11#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "tmp%11#0"
      ]
    },
    "1251": {
      "op": "frame_bury 0",
      "defined_out": [
        "tail_offset#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0"
      ]
    },
    "1253": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_footer@3"
    },
    "1256": {
      "block": "recalculate_head_for_elements_with_byte_length_head_for_footer@3",
      "stack_in": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1258": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "2"
      ]
    },
    "1259": {
      "op": "+",
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1260": {
      "op": "frame_bury 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0"
      ]
    },
    "1262": {
      "op": "b recalculate_head_for_elements_with_byte_length_head_for_header@1"
    },
    "1265": {
      "block": "recalculate_head_for_elements_with_byte_length_head_after_for@4",
      "stack_in": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tail_offset#0",
        "tmp%4#0",
        "value_internal%0#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1267": {
      "op": "frame_bury 0"
    },
    "1269": {
      "retsub": true,
      "op": "retsub"
    },
    "1270": {
      "subroutine": "test_cases.array.immutable.sum_imm_fixed",
      "params": {
        "arr#0": "bytes"
      },
      "block": "sum_imm_fixed",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1273": {
      "op": "b sum_imm_fixed_block@0"
    },
    "1276": {
      "block": "sum_imm_fixed_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0"
      ]
    },
    "1277": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1278": {
      "op": "b sum_imm_fixed_for_header@1"
    },
    "1281": {
      "block": "sum_imm_fixed_for_header@1",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1283": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "3"
      ]
    },
    "1285": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1286": {
      "op": "bz sum_imm_fixed_after_for@4",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1289": {
      "op": "b sum_imm_fixed_for_body@2"
    },
    "1292": {
      "block": "sum_imm_fixed_for_body@2",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1294": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "16"
      ]
    },
    "1296": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1297": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0 (copy)"
      ]
    },
    "1299": {
      "op": "uncover 1",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1301": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "1303": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "1304": {
      "op": "dup",
      "defined_out": [
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)"
      ]
    },
    "1305": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)",
        "0"
      ]
    },
    "1306": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)",
        "0",
        "8"
      ]
    },
    "1307": {
      "op": "extract3",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "tuple_item%0#0"
      ]
    },
    "1308": {
      "op": "btoi",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "values%0#0"
      ]
    },
    "1309": {
      "op": "frame_dig 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "values%0#0",
        "total#0"
      ]
    },
    "1311": {
      "op": "+",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "1312": {
      "op": "uncover 1",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "item#0"
      ]
    },
    "1314": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "item#0",
        "8"
      ]
    },
    "1315": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "item#0",
        "8",
        "8"
      ]
    },
    "1316": {
      "op": "extract3",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "tuple_item%1#0"
      ]
    },
    "1317": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ]
    },
    "1318": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%1#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1319": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1321": {
      "op": "b sum_imm_fixed_for_footer@3"
    },
    "1324": {
      "block": "sum_imm_fixed_for_footer@3",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1326": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1327": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1328": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1330": {
      "op": "b sum_imm_fixed_for_header@1"
    },
    "1333": {
      "block": "sum_imm_fixed_after_for@4",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1334": {
      "subroutine": "test_cases.array.immutable.times",
      "params": {
        "n#0": "uint64"
      },
      "block": "times",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1337": {
      "op": "b times_block@0"
    },
    "1340": {
      "block": "times_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "defined_out": [],
      "stack_out": [
        "result#0"
      ]
    },
    "1341": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "result#0",
        "1"
      ]
    },
    "1342": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "result#0"
      ]
    },
    "1343": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "result#0",
        "value_internal%0#0"
      ]
    },
    "1344": {
      "op": "b times_for_header@1"
    },
    "1347": {
      "block": "times_for_header@1",
      "stack_in": [
        "result#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1349": {
      "op": "frame_dig -1",
      "defined_out": [
        "n#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "n#0 (copy)"
      ]
    },
    "1351": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1352": {
      "op": "bz times_after_for@4",
      "stack_out": [
        "result#0",
        "value_internal%0#0"
      ]
    },
    "1355": {
      "op": "b times_for_body@2"
    },
    "1358": {
      "block": "times_for_body@2",
      "stack_in": [
        "result#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "result#0"
      ]
    },
    "1360": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "result#0",
        "\" \""
      ]
    },
    "1363": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1364": {
      "op": "frame_bury 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0"
      ]
    },
    "1366": {
      "op": "b times_for_footer@3"
    },
    "1369": {
      "block": "times_for_footer@3",
      "stack_in": [
        "result#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1371": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1372": {
      "op": "+",
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1373": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0"
      ]
    },
    "1375": {
      "op": "b times_for_header@1"
    },
    "1378": {
      "block": "times_after_for@4",
      "stack_in": [
        "result#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "value_internal%0#0",
        "result#0"
      ]
    },
    "1379": {
      "subroutine": "test_cases.array.immutable.add_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1382": {
      "op": "b add_x_block@0"
    },
    "1385": {
      "block": "add_x_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1386": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1387": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "value_internal%0#0"
      ]
    },
    "1388": {
      "op": "b add_x_for_header@1"
    },
    "1391": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1393": {
      "op": "frame_dig -1",
      "defined_out": [
        "value_internal%0#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0",
        "x#0 (copy)"
      ]
    },
    "1395": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1396": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "value_internal%0#0"
      ]
    },
    "1399": {
      "op": "b add_x_for_body@2"
    },
    "1402": {
      "block": "add_x_for_body@2",
      "stack_in": [
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "i#0"
      ]
    },
    "1404": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1405": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1406": {
      "op": "uncover 1",
      "stack_out": [
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1408": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1409": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0",
        "arr#0 (copy)"
      ]
    },
    "1411": {
      "op": "uncover 1",
      "stack_out": [
        "value_internal%0#0",
        "arr#0 (copy)",
        "tmp%0#0"
      ]
    },
    "1413": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0"
      ]
    },
    "1414": {
      "op": "frame_dig -2",
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1416": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1417": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1418": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "1419": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "1420": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "1421": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1424": {
      "op": "uncover 1",
      "stack_out": [
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "1426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "1427": {
      "op": "uncover 2",
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "1429": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "1430": {
      "op": "frame_bury -2",
      "stack_out": [
        "value_internal%0#0"
      ]
    },
    "1432": {
      "op": "b add_x_for_footer@3"
    },
    "1435": {
      "block": "add_x_for_footer@3",
      "stack_in": [
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1437": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1438": {
      "op": "+",
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1439": {
      "op": "frame_bury 0",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0"
      ]
    },
    "1441": {
      "op": "b add_x_for_header@1"
    },
    "1444": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "value_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "value_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "1446": {
      "op": "uncover 1"
    },
    "1448": {
      "retsub": true,
      "op": "retsub"
    },
    "1449": {
      "subroutine": "test_cases.array.immutable.pop_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "pop_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1452": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1453": {
      "op": "b pop_x_block@0"
    },
    "1456": {
      "block": "pop_x_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1457": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1458": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "1459": {
      "op": "b pop_x_for_header@1"
    },
    "1462": {
      "block": "pop_x_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1464": {
      "op": "frame_dig -1",
      "defined_out": [
        "value_internal%0#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "x#0 (copy)"
      ]
    },
    "1466": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1467": {
      "op": "bz pop_x_after_for@4",
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "1470": {
      "op": "b pop_x_for_body@2"
    },
    "1473": {
      "block": "pop_x_for_body@2",
      "stack_in": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "1475": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "arr#0 (copy)",
        "8"
      ]
    },
    "1476": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1479": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1481": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1483": {
      "op": "frame_bury -2",
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "1485": {
      "op": "b pop_x_for_footer@3"
    },
    "1488": {
      "block": "pop_x_for_footer@3",
      "stack_in": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1490": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1491": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1492": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "1494": {
      "op": "b pop_x_for_header@1"
    },
    "1497": {
      "block": "pop_x_after_for@4",
      "stack_in": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "value_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "1499": {
      "op": "frame_bury 0"
    },
    "1501": {
      "retsub": true,
      "op": "retsub"
    },
    "1502": {
      "subroutine": "test_cases.array.immutable.add_xb",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_xb",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1505": {
      "op": "b add_xb_block@0"
    },
    "1508": {
      "block": "add_xb_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1509": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1510": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "value_internal%0#0"
      ]
    },
    "1511": {
      "op": "b add_xb_for_header@1"
    },
    "1514": {
      "block": "add_xb_for_header@1",
      "stack_in": [
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1516": {
      "op": "frame_dig -1",
      "defined_out": [
        "value_internal%0#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0",
        "x#0 (copy)"
      ]
    },
    "1518": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1519": {
      "op": "bz add_xb_after_for@4",
      "stack_out": [
        "value_internal%0#0"
      ]
    },
    "1522": {
      "op": "b add_xb_for_body@2"
    },
    "1525": {
      "block": "add_xb_for_body@2",
      "stack_in": [
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "i#0"
      ]
    },
    "1527": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1528": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1529": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0",
        "aggregate%value_len%0#0"
      ]
    },
    "1530": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "1532": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "1533": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1534": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0",
        "64"
      ]
    },
    "1536": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%0#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1537": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "1538": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint512)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "aggregate%as_Encoded(uint512)%0#0",
        "0x"
      ]
    },
    "1539": {
      "op": "uncover 1",
      "stack_out": [
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "1541": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1542": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "tmp%1#0",
        "arr#0 (copy)"
      ]
    },
    "1544": {
      "op": "uncover 1",
      "stack_out": [
        "value_internal%0#0",
        "arr#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1546": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0"
      ]
    },
    "1547": {
      "op": "frame_dig -2",
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1549": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1550": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1551": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "1552": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "1553": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "1554": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1557": {
      "op": "uncover 1",
      "stack_out": [
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "1559": {
      "op": "intc_0 // 0",
      "stack_out": [
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "1560": {
      "op": "uncover 2",
      "stack_out": [
        "value_internal%0#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "1562": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint512[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "as_Encoded(len+uint512[])%0#0"
      ]
    },
    "1563": {
      "op": "frame_bury -2",
      "stack_out": [
        "value_internal%0#0"
      ]
    },
    "1565": {
      "op": "b add_xb_for_footer@3"
    },
    "1568": {
      "block": "add_xb_for_footer@3",
      "stack_in": [
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1570": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1571": {
      "op": "+",
      "stack_out": [
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1572": {
      "op": "frame_bury 0",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "value_internal%0#0"
      ]
    },
    "1574": {
      "op": "b add_xb_for_header@1"
    },
    "1577": {
      "block": "add_xb_after_for@4",
      "stack_in": [
        "value_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "value_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "1579": {
      "op": "uncover 1"
    },
    "1581": {
      "retsub": true,
      "op": "retsub"
    },
    "1582": {
      "subroutine": "test_cases.array.immutable.sum_arr",
      "params": {
        "arr#0": "bytes"
      },
      "block": "sum_arr",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1585": {
      "op": "b sum_arr_block@0"
    },
    "1588": {
      "block": "sum_arr_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0"
      ]
    },
    "1589": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "arr#0 (copy)"
      ]
    },
    "1591": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1592": {
      "op": "extract_uint16",
      "defined_out": [],
      "stack_out": [
        "total#0",
        "array_length%0#0"
      ]
    },
    "1593": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1594": {
      "op": "b sum_arr_for_header@1"
    },
    "1597": {
      "block": "sum_arr_for_header@1",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1599": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "1601": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1602": {
      "op": "bz sum_arr_after_for@4",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1605": {
      "op": "b sum_arr_for_body@2"
    },
    "1608": {
      "block": "sum_arr_for_body@2",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "1610": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0"
      ]
    },
    "1611": {
      "op": "frame_dig -1",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0 (copy)"
      ]
    },
    "1613": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "1614": {
      "op": "uncover 2",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "1616": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "1617": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1619": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1620": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1621": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "1622": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%0#0"
      ]
    },
    "1623": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "1624": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0",
        "total#0"
      ]
    },
    "1626": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1627": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1629": {
      "op": "b sum_arr_for_footer@3"
    },
    "1632": {
      "block": "sum_arr_for_footer@3",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1634": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1635": {
      "op": "+",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1636": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1638": {
      "op": "b sum_arr_for_header@1"
    },
    "1641": {
      "block": "sum_arr_after_for@4",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1642": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array[routing]",
      "params": {},
      "block": "test_uint64_array",
      "stack_in": [],
      "op": "b test_uint64_array_block@0"
    },
    "1645": {
      "block": "test_uint64_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_uint64_array"
    },
    "1648": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1649": {
      "op": "return",
      "stack_out": []
    },
    "1650": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array[routing]",
      "params": {},
      "block": "test_biguint_array",
      "stack_in": [],
      "op": "b test_biguint_array_block@0"
    },
    "1653": {
      "block": "test_biguint_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_biguint_array"
    },
    "1656": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1657": {
      "op": "return",
      "stack_out": []
    },
    "1658": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array[routing]",
      "params": {},
      "block": "test_bool_array",
      "stack_in": [],
      "op": "b test_bool_array_block@0"
    },
    "1661": {
      "block": "test_bool_array_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1664": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1665": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "stack_out": []
    },
    "1668": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1669": {
      "op": "return",
      "stack_out": []
    },
    "1670": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array[routing]",
      "params": {},
      "block": "test_fixed_size_tuple_array",
      "stack_in": [],
      "op": "b test_fixed_size_tuple_array_block@0"
    },
    "1673": {
      "block": "test_fixed_size_tuple_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array"
    },
    "1676": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1677": {
      "op": "return",
      "stack_out": []
    },
    "1678": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array[routing]",
      "params": {},
      "block": "test_fixed_size_named_tuple_array",
      "stack_in": [],
      "op": "b test_fixed_size_named_tuple_array_block@0"
    },
    "1681": {
      "block": "test_fixed_size_named_tuple_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array"
    },
    "1684": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1685": {
      "op": "return",
      "stack_out": []
    },
    "1686": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array[routing]",
      "params": {},
      "block": "test_dynamic_sized_tuple_array",
      "stack_in": [],
      "op": "b test_dynamic_sized_tuple_array_block@0"
    },
    "1689": {
      "block": "test_dynamic_sized_tuple_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array"
    },
    "1692": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1693": {
      "op": "return",
      "stack_out": []
    },
    "1694": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array[routing]",
      "params": {},
      "block": "test_dynamic_sized_named_tuple_array",
      "stack_in": [],
      "op": "b test_dynamic_sized_named_tuple_array_block@0"
    },
    "1697": {
      "block": "test_dynamic_sized_named_tuple_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array"
    },
    "1700": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1701": {
      "op": "return",
      "stack_out": []
    },
    "1702": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log[routing]",
      "params": {},
      "block": "test_implicit_conversion_log",
      "stack_in": [],
      "op": "b test_implicit_conversion_log_block@0"
    },
    "1705": {
      "block": "test_implicit_conversion_log_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1708": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "stack_out": []
    },
    "1711": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1712": {
      "op": "return",
      "stack_out": []
    },
    "1713": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit[routing]",
      "params": {},
      "block": "test_implicit_conversion_emit",
      "stack_in": [],
      "op": "b test_implicit_conversion_emit_block@0"
    },
    "1716": {
      "block": "test_implicit_conversion_emit_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1719": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "stack_out": []
    },
    "1722": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1723": {
      "op": "return",
      "stack_out": []
    },
    "1724": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array[routing]",
      "params": {},
      "block": "test_nested_array",
      "stack_in": [],
      "op": "b test_nested_array_block@0"
    },
    "1727": {
      "block": "test_nested_array_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1730": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1731": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(len+uint64[])[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+(len+uint64[])[])%0#0"
      ]
    },
    "1734": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1737": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1738": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1740": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1741": {
      "op": "log",
      "stack_out": []
    },
    "1742": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1743": {
      "op": "return",
      "stack_out": []
    },
    "1744": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples[routing]",
      "params": {},
      "block": "test_bit_packed_tuples",
      "stack_in": [],
      "op": "b test_bit_packed_tuples_block@0"
    },
    "1747": {
      "block": "test_bit_packed_tuples_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples"
    },
    "1750": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1751": {
      "op": "return",
      "stack_out": []
    },
    "1752": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues[routing]",
      "params": {},
      "block": "sum_uints_and_lengths_and_trues",
      "stack_in": [],
      "op": "b sum_uints_and_lengths_and_trues_block@0"
    },
    "1755": {
      "block": "sum_uints_and_lengths_and_trues_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1758": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0"
      ]
    },
    "1761": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "1764": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "1767": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "1769": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0"
      ]
    },
    "1771": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "1773": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "1775": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1778": {
      "op": "cover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1780": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1782": {
      "op": "cover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1784": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1785": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1786": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1788": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%0#0"
      ]
    },
    "1789": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "tmp%1#0"
      ]
    },
    "1791": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1792": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%1#0"
      ]
    },
    "1793": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%1#0",
        "tmp%2#0"
      ]
    },
    "1795": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1796": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%2#0"
      ]
    },
    "1797": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "tmp%3#0"
      ]
    },
    "1799": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1800": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1801": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "1802": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "1804": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1805": {
      "op": "log",
      "stack_out": []
    },
    "1806": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1807": {
      "op": "return",
      "stack_out": []
    },
    "1808": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return[routing]",
      "params": {},
      "block": "test_uint64_return",
      "stack_in": [],
      "op": "b test_uint64_return_block@0"
    },
    "1811": {
      "block": "test_uint64_return_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1814": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1815": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1818": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1819": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1821": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1822": {
      "op": "log",
      "stack_out": []
    },
    "1823": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1824": {
      "op": "return",
      "stack_out": []
    },
    "1825": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return[routing]",
      "params": {},
      "block": "test_bool_return",
      "stack_in": [],
      "op": "b test_bool_return_block@0"
    },
    "1828": {
      "block": "test_bool_return_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1831": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1832": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1835": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1836": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1838": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1839": {
      "op": "log",
      "stack_out": []
    },
    "1840": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1841": {
      "op": "return",
      "stack_out": []
    },
    "1842": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return[routing]",
      "params": {},
      "block": "test_tuple_return",
      "stack_in": [],
      "op": "b test_tuple_return_block@0"
    },
    "1845": {
      "block": "test_tuple_return_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1848": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1849": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1852": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1853": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1855": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1856": {
      "op": "log",
      "stack_out": []
    },
    "1857": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1858": {
      "op": "return",
      "stack_out": []
    },
    "1859": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return[routing]",
      "params": {},
      "block": "test_dynamic_tuple_return",
      "stack_in": [],
      "op": "b test_dynamic_tuple_return_block@0"
    },
    "1862": {
      "block": "test_dynamic_tuple_return_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1865": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1866": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1869": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1870": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1872": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1873": {
      "op": "log",
      "stack_out": []
    },
    "1874": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1875": {
      "op": "return",
      "stack_out": []
    },
    "1876": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back[routing]",
      "params": {},
      "block": "test_convert_to_array_and_back",
      "stack_in": [],
      "op": "b test_convert_to_array_and_back_block@0"
    },
    "1879": {
      "block": "test_convert_to_array_and_back_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "1882": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1885": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "tmp%0#0"
      ]
    },
    "1886": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1889": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1890": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1892": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1893": {
      "op": "log",
      "stack_out": []
    },
    "1894": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1895": {
      "op": "return",
      "stack_out": []
    },
    "1896": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple[routing]",
      "params": {},
      "block": "test_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "b test_concat_with_arc4_tuple_block@0"
    },
    "1899": {
      "block": "test_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1902": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1905": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "1906": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "1908": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1909": {
      "op": "log",
      "stack_out": []
    },
    "1910": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1911": {
      "op": "return",
      "stack_out": []
    },
    "1912": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple[routing]",
      "params": {},
      "block": "test_concat_with_native_tuple",
      "stack_in": [],
      "op": "b test_concat_with_native_tuple_block@0"
    },
    "1915": {
      "block": "test_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1918": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "1919": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "1920": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1921": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1922": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1924": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8"
      ]
    },
    "1925": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8",
        "8"
      ]
    },
    "1926": {
      "op": "extract3",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1927": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1930": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "1931": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "1933": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1934": {
      "op": "log",
      "stack_out": []
    },
    "1935": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1936": {
      "op": "return",
      "stack_out": []
    },
    "1937": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple[routing]",
      "params": {},
      "block": "test_dynamic_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "b test_dynamic_concat_with_arc4_tuple_block@0"
    },
    "1940": {
      "block": "test_dynamic_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "1943": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1946": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "1947": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "1949": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1950": {
      "op": "log",
      "stack_out": []
    },
    "1951": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1952": {
      "op": "return",
      "stack_out": []
    },
    "1953": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple[routing]",
      "params": {},
      "block": "test_dynamic_concat_with_native_tuple",
      "stack_in": [],
      "op": "b test_dynamic_concat_with_native_tuple_block@0"
    },
    "1956": {
      "block": "test_dynamic_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "1959": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1960": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "0"
      ]
    },
    "1961": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "1962": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "1964": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1965": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "2"
      ]
    },
    "1966": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "1967": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1969": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "1971": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "1973": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1974": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "1976": {
      "op": "dup",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1977": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "2"
      ]
    },
    "1978": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "1979": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "1981": {
      "op": "dup",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1982": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%len%0#0"
      ]
    },
    "1983": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "1985": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "1987": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "1989": {
      "op": "substring3",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1990": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1993": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "1994": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "1996": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1997": {
      "op": "log",
      "stack_out": []
    },
    "1998": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1999": {
      "op": "return",
      "stack_out": []
    },
    "2000": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic[routing]",
      "params": {},
      "block": "test_concat_immutable_dynamic",
      "stack_in": [],
      "op": "b test_concat_immutable_dynamic_block@0"
    },
    "2003": {
      "block": "test_concat_immutable_dynamic_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "2006": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ]
    },
    "2009": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2012": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "2013": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "2015": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2016": {
      "op": "log",
      "stack_out": []
    },
    "2017": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2018": {
      "op": "return",
      "stack_out": []
    },
    "2019": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4[routing]",
      "params": {},
      "block": "test_immutable_arc4",
      "stack_in": [],
      "op": "b test_immutable_arc4_block@0"
    },
    "2022": {
      "block": "test_immutable_arc4_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint64)[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,uint64)[])%0#0"
      ]
    },
    "2025": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2028": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "2029": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "2031": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2032": {
      "op": "log",
      "stack_out": []
    },
    "2033": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2034": {
      "op": "return",
      "stack_out": []
    },
    "2035": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr[routing]",
      "params": {},
      "block": "test_imm_fixed_arr",
      "stack_in": [],
      "op": "b test_imm_fixed_arr_block@0"
    },
    "2038": {
      "block": "test_imm_fixed_arr_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "op": "callsub test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2041": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "2042": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "2044": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2045": {
      "op": "log",
      "stack_out": []
    },
    "2046": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2047": {
      "op": "return",
      "stack_out": []
    },
    "2048": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "stack_in": [],
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_array_block@0"
    },
    "2051": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2052": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "2053": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2056": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2057": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2058": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2059": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2060": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2061": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2062": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "42"
      ]
    },
    "2064": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2065": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2066": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2068": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "2069": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "arr#0 (copy)"
      ]
    },
    "2071": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%2#0"
      ]
    },
    "2073": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "2074": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "arr#0"
      ]
    },
    "2076": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "2077": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2078": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2079": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2080": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2081": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2084": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "2086": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "2087": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "2089": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2090": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2091": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2092": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%3#0"
      ]
    },
    "2093": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%3#0",
        "1"
      ]
    },
    "2094": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2095": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2096": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2097": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2098": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "2099": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "1"
      ]
    },
    "2100": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "2101": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "arr#0 (copy)"
      ]
    },
    "2103": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "aggregate%total_length%0#0"
      ]
    },
    "2104": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%6#0"
      ]
    },
    "2106": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%6#0",
        "arr#0 (copy)"
      ]
    },
    "2108": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%6#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2109": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "2111": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "2112": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0"
      ]
    },
    "2114": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0",
        "8"
      ]
    },
    "2115": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "2116": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "2117": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%0#0"
      ]
    },
    "2118": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "arr#0",
        "values%0#0"
      ]
    },
    "2119": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "values%0#0",
        "42"
      ]
    },
    "2121": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "2122": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2123": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "5"
      ]
    },
    "2125": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2128": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2130": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "2131": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "6"
      ]
    },
    "2133": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "2134": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2135": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2136": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2137": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0"
      ]
    },
    "2138": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "1"
      ]
    },
    "2139": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "2140": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "arr#0 (copy)"
      ]
    },
    "2142": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "aggregate%total_length%1#0"
      ]
    },
    "2143": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%12#0"
      ]
    },
    "2145": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%12#0",
        "arr#0 (copy)"
      ]
    },
    "2147": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%12#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2148": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "2150": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "2151": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%12#0"
      ]
    },
    "2153": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%12#0",
        "8"
      ]
    },
    "2154": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "2155": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "8"
      ]
    },
    "2156": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%1#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%1#0"
      ]
    },
    "2157": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "values%1#0"
      ]
    },
    "2158": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "values%1#0",
        "4"
      ]
    },
    "2160": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "2161": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2162": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "43"
      ]
    },
    "2164": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2165": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "2166": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2168": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "2169": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%14#0",
        "arr#0 (copy)"
      ]
    },
    "2171": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%14#0"
      ]
    },
    "2173": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%1#0"
      ]
    },
    "2174": {
      "op": "cover 1",
      "stack_out": [
        "concat%1#0",
        "arr#0"
      ]
    },
    "2176": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%1#0",
        "arr#0",
        "0"
      ]
    },
    "2177": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "2178": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "2179": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "add%1#0"
      ]
    },
    "2180": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "2181": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "2184": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "2186": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "2187": {
      "op": "uncover 2",
      "stack_out": [
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "2189": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2190": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2191": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2192": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "2193": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "7"
      ]
    },
    "2195": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%16#0"
      ]
    },
    "2196": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2197": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2198": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2199": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0"
      ]
    },
    "2200": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "1"
      ]
    },
    "2201": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0"
      ]
    },
    "2202": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "arr#0 (copy)"
      ]
    },
    "2204": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "aggregate%total_length%2#0"
      ]
    },
    "2205": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%18#0"
      ]
    },
    "2207": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%18#0",
        "arr#0 (copy)"
      ]
    },
    "2209": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%18#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2210": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "2212": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "2213": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%18#0"
      ]
    },
    "2215": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%18#0",
        "8"
      ]
    },
    "2216": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "2217": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "8"
      ]
    },
    "2218": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%2#0"
      ]
    },
    "2219": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "values%2#0"
      ]
    },
    "2220": {
      "op": "pushint 43 // 43",
      "stack_out": [
        "arr#0",
        "values%2#0",
        "43"
      ]
    },
    "2222": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2223": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2224": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2225": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%3#0"
      ]
    },
    "2226": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0"
      ]
    },
    "2228": {
      "op": "dup",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2229": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2230": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "2232": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "2233": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "0"
      ]
    },
    "2234": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "0",
        "8"
      ]
    },
    "2235": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "2236": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "8"
      ]
    },
    "2237": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%3#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%3#0"
      ]
    },
    "2238": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%3#0"
      ],
      "stack_out": [
        "arr#0",
        "values%3#0"
      ]
    },
    "2239": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "values%3#0",
        "42"
      ]
    },
    "2241": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "2242": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2243": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "3"
      ]
    },
    "2245": {
      "callsub": "test_cases.array.immutable.pop_x",
      "op": "callsub pop_x",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2248": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2249": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2250": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "2251": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "tmp%22#0",
        "4"
      ]
    },
    "2253": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "2254": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2255": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2257": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "2258": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "1"
      ]
    },
    "2259": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "2260": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "2262": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%4#0",
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "aggregate%total_length%4#0"
      ]
    },
    "2263": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%25#0"
      ]
    },
    "2265": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "2267": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%25#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2268": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%4#0"
      ]
    },
    "2270": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "2271": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "tmp%25#0"
      ]
    },
    "2273": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "tmp%25#0",
        "8"
      ]
    },
    "2274": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "2275": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "8"
      ]
    },
    "2276": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%4#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%4#0"
      ]
    },
    "2277": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%4#0"
      ],
      "stack_out": [
        "arr#0",
        "values%4#0"
      ]
    },
    "2278": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "values%4#0",
        "2"
      ]
    },
    "2279": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0"
      ]
    },
    "2280": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2281": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "10"
      ]
    },
    "2283": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2286": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2287": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2288": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0"
      ]
    },
    "2289": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0",
        "14"
      ]
    },
    "2291": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%29#0"
      ]
    },
    "2292": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2293": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2294": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2295": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%30#0"
      ]
    },
    "2296": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%30#0",
        "1"
      ]
    },
    "2297": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0"
      ]
    },
    "2298": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2300": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%5#0",
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "aggregate%total_length%5#0"
      ]
    },
    "2301": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%5#0",
        "tmp%31#0"
      ]
    },
    "2303": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%5#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2305": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%5#0",
        "tmp%31#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2306": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%5#0"
      ]
    },
    "2308": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%5#0",
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "aggregate%array_trimmed%5#0"
      ]
    },
    "2309": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "tmp%31#0"
      ]
    },
    "2311": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "tmp%31#0",
        "8"
      ]
    },
    "2312": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "2313": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "8"
      ]
    },
    "2314": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%5#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%5#0"
      ]
    },
    "2315": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%5#0"
      ],
      "stack_out": [
        "arr#0",
        "values%5#0"
      ]
    },
    "2316": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "values%5#0"
      ],
      "stack_out": [
        "arr#0",
        "values%5#0",
        "9"
      ]
    },
    "2318": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0"
      ]
    },
    "2319": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2320": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "44"
      ]
    },
    "2322": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2323": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "2324": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2326": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%33#0"
      ]
    },
    "2327": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%33#0",
        "arr#0 (copy)"
      ]
    },
    "2329": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%33#0"
      ]
    },
    "2331": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%2#0"
      ]
    },
    "2332": {
      "op": "cover 1",
      "stack_out": [
        "concat%2#0",
        "arr#0"
      ]
    },
    "2334": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%2#0",
        "arr#0",
        "0"
      ]
    },
    "2335": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "2336": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "2337": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "add%2#0"
      ]
    },
    "2338": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "2339": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "2342": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ]
    },
    "2344": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0",
        "0"
      ]
    },
    "2345": {
      "op": "uncover 2",
      "stack_out": [
        "concat%2#0",
        "0",
        "as_u16_bytes%2#0"
      ]
    },
    "2347": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2348": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2349": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2350": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0"
      ]
    },
    "2351": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0",
        "15"
      ]
    },
    "2353": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%35#0"
      ]
    },
    "2354": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2355": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2356": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2357": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%36#0"
      ]
    },
    "2358": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%36#0",
        "1"
      ]
    },
    "2359": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0"
      ]
    },
    "2360": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "arr#0 (copy)"
      ]
    },
    "2362": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%6#0",
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "aggregate%total_length%6#0"
      ]
    },
    "2363": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%6#0",
        "tmp%37#0"
      ]
    },
    "2365": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%6#0",
        "tmp%37#0",
        "arr#0 (copy)"
      ]
    },
    "2367": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%6#0",
        "tmp%37#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2368": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%6#0"
      ]
    },
    "2370": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%6#0",
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "aggregate%array_trimmed%6#0"
      ]
    },
    "2371": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%6#0",
        "tmp%37#0"
      ]
    },
    "2373": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%6#0",
        "tmp%37#0",
        "8"
      ]
    },
    "2374": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "2375": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0",
        "8"
      ]
    },
    "2376": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%6#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%6#0"
      ]
    },
    "2377": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%6#0"
      ],
      "stack_out": [
        "arr#0",
        "values%6#0"
      ]
    },
    "2378": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "values%6#0",
        "44"
      ]
    },
    "2380": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%38#0"
      ]
    },
    "2381": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2382": {
      "op": "pushint 23 // 23",
      "defined_out": [
        "23",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "23"
      ]
    },
    "2384": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_value%0#0"
      ]
    },
    "2385": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "2"
      ]
    },
    "2386": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "2",
        "8"
      ]
    },
    "2387": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "2388": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "2389": {
      "op": "+",
      "defined_out": [
        "aggregate%write_offset_with_length_header%0#0",
        "arr#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "2390": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "arr#0"
      ]
    },
    "2392": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%0#0",
        "arr#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "2394": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "aggregate%write_offset_with_length_header%0#0",
        "encoded_value%0#0"
      ]
    },
    "2396": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2397": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2398": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2399": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%39#0"
      ]
    },
    "2400": {
      "op": "pushint 15 // 15",
      "stack_out": [
        "arr#0",
        "tmp%39#0",
        "15"
      ]
    },
    "2402": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0"
      ]
    },
    "2403": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2404": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2405": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%8#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%8#0"
      ]
    },
    "2406": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%total_length%8#0",
        "arr#0"
      ]
    },
    "2408": {
      "op": "dup",
      "stack_out": [
        "aggregate%total_length%8#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2409": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%total_length%8#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2410": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%8#0"
      ]
    },
    "2412": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%8#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0"
      ]
    },
    "2413": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0",
        "2"
      ]
    },
    "2414": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0",
        "2",
        "8"
      ]
    },
    "2415": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0"
      ]
    },
    "2416": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0",
        "8"
      ]
    },
    "2417": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%7#0"
      ],
      "stack_out": [
        "arr#0",
        "array_item%7#0"
      ]
    },
    "2418": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "values%7#0"
      ],
      "stack_out": [
        "arr#0",
        "values%7#0"
      ]
    },
    "2419": {
      "op": "pushint 23 // 23",
      "stack_out": [
        "arr#0",
        "values%7#0",
        "23"
      ]
    },
    "2421": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%41#0"
      ]
    },
    "2422": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2423": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "\"a\""
      ]
    },
    "2424": {
      "op": "uncover 1",
      "stack_out": [
        "\"a\"",
        "arr#0"
      ]
    },
    "2426": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2427": {
      "retsub": true,
      "op": "retsub"
    },
    "2428": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "stack_in": [],
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_biguint_array_block@0"
    },
    "2431": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2432": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "2433": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2436": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2437": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2438": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2439": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2440": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2441": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2442": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "2444": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "2445": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%3#0"
      ]
    },
    "2446": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2447": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2448": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "aggregate%value_len%0#0"
      ]
    },
    "2449": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#0",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "2451": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "2452": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2453": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "64"
      ]
    },
    "2455": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "aggregate%bzero%0#0"
      ]
    },
    "2456": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "2457": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint512)%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%0#0",
        "0x"
      ]
    },
    "2458": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint512)%0#0"
      ]
    },
    "2460": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "2461": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "arr#0 (copy)"
      ]
    },
    "2463": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%5#0"
      ]
    },
    "2465": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "2466": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "arr#0"
      ]
    },
    "2468": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "2469": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2470": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2471": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2472": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2473": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2476": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "2478": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "2479": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "2481": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2482": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2483": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2484": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "2485": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "1"
      ]
    },
    "2486": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "2487": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2488": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2489": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2490": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0"
      ]
    },
    "2491": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%8#0",
        "1"
      ]
    },
    "2492": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "2493": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "arr#0 (copy)"
      ]
    },
    "2495": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "aggregate%total_length%0#0"
      ]
    },
    "2496": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%9#0"
      ]
    },
    "2498": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%9#0",
        "arr#0 (copy)"
      ]
    },
    "2500": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%0#0",
        "tmp%9#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2501": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "2503": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "2504": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0"
      ]
    },
    "2506": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0",
        "64"
      ]
    },
    "2508": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "2509": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "64"
      ]
    },
    "2511": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "arr#0",
        "values%0#0"
      ]
    },
    "2512": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "values%0#0",
        "0x"
      ]
    },
    "2513": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "2514": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2515": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "5"
      ]
    },
    "2517": {
      "callsub": "test_cases.array.immutable.add_xb",
      "op": "callsub add_xb",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2520": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2521": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2522": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "2523": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "6"
      ]
    },
    "2525": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "2526": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2527": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2528": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2529": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "2530": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%14#0",
        "1"
      ]
    },
    "2531": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "2532": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "arr#0 (copy)"
      ]
    },
    "2534": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "aggregate%total_length%1#0"
      ]
    },
    "2535": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%15#0"
      ]
    },
    "2537": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%15#0",
        "arr#0 (copy)"
      ]
    },
    "2539": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%15#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2540": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "2542": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "2543": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%15#0"
      ]
    },
    "2545": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%15#0",
        "64"
      ]
    },
    "2547": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "2548": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "64"
      ]
    },
    "2550": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "values%1#0"
      ]
    },
    "2551": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04",
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "values%1#0",
        "0x04"
      ]
    },
    "2554": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%16#0"
      ]
    },
    "2555": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2556": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0"
      ]
    },
    "2558": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0"
      ]
    },
    "2559": {
      "op": "bytec 4 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2561": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "tmp%18#0"
      ]
    },
    "2563": {
      "op": "b-",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2564": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ]
    },
    "2565": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%1#0",
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "aggregate%value_len%1#0"
      ]
    },
    "2566": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "aggregate%value_len%1#0",
        "64"
      ]
    },
    "2568": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%1#0",
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "aggregate%len_ok%1#0"
      ]
    },
    "2569": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "2570": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "64"
      ]
    },
    "2572": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%1#0",
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "aggregate%bzero%1#0"
      ]
    },
    "2573": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%1#0"
      ]
    },
    "2574": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%1#0",
        "0x"
      ]
    },
    "2575": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint512)%1#0"
      ]
    },
    "2577": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "2578": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%20#0",
        "arr#0 (copy)"
      ]
    },
    "2580": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%20#0"
      ]
    },
    "2582": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%1#0"
      ]
    },
    "2583": {
      "op": "cover 1",
      "stack_out": [
        "concat%1#0",
        "arr#0"
      ]
    },
    "2585": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%1#0",
        "arr#0",
        "0"
      ]
    },
    "2586": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "2587": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "2588": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "add%1#0"
      ]
    },
    "2589": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "2590": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "2593": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "2595": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "2596": {
      "op": "uncover 2",
      "stack_out": [
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "2598": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2599": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2600": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2601": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0"
      ]
    },
    "2602": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0",
        "7"
      ]
    },
    "2604": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "2605": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2606": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2607": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2608": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "2609": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%23#0",
        "1"
      ]
    },
    "2610": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "2611": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "arr#0 (copy)"
      ]
    },
    "2613": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "aggregate%total_length%2#0"
      ]
    },
    "2614": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%24#0"
      ]
    },
    "2616": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%24#0",
        "arr#0 (copy)"
      ]
    },
    "2618": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%2#0",
        "tmp%24#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2619": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "2621": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "2622": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%24#0"
      ]
    },
    "2624": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%24#0",
        "64"
      ]
    },
    "2626": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "2627": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "64"
      ]
    },
    "2629": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "values%2#0"
      ]
    },
    "2630": {
      "op": "pushbytes 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
      "defined_out": [
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "values%2#0",
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe"
      ]
    },
    "2696": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "2697": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2698": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2699": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%3#0"
      ]
    },
    "2700": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0"
      ]
    },
    "2702": {
      "op": "dup",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2703": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2704": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "2706": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "2707": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "0"
      ]
    },
    "2708": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "0",
        "64"
      ]
    },
    "2710": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "2711": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "64"
      ]
    },
    "2713": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%3#0"
      ],
      "stack_out": [
        "arr#0",
        "values%3#0"
      ]
    },
    "2714": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "values%3#0",
        "0x"
      ]
    },
    "2715": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0"
      ]
    },
    "2716": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2717": {
      "op": "bytec 4 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "arr#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2719": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%value_len%2#0"
      ]
    },
    "2720": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%value_len%2#0",
        "64"
      ]
    },
    "2722": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%len_ok%2#0"
      ]
    },
    "2723": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr#0"
      ]
    },
    "2724": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "64"
      ]
    },
    "2726": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%bzero%2#0"
      ]
    },
    "2727": {
      "op": "bytec 4 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "arr#0",
        "aggregate%bzero%2#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2729": {
      "op": "b|",
      "defined_out": [
        "aggregate%as_Encoded(uint512)%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%2#0"
      ]
    },
    "2730": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "aggregate%as_Encoded(uint512)%2#0",
        "0x"
      ]
    },
    "2731": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "0x",
        "aggregate%as_Encoded(uint512)%2#0"
      ]
    },
    "2733": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%27#0"
      ]
    },
    "2734": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%27#0",
        "arr#0 (copy)"
      ]
    },
    "2736": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%27#0"
      ]
    },
    "2738": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%2#0"
      ]
    },
    "2739": {
      "op": "cover 1",
      "stack_out": [
        "concat%2#0",
        "arr#0"
      ]
    },
    "2741": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%2#0",
        "arr#0",
        "0"
      ]
    },
    "2742": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "2743": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "2744": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "add%2#0"
      ]
    },
    "2745": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "2746": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "2749": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ]
    },
    "2751": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0",
        "0"
      ]
    },
    "2752": {
      "op": "uncover 2",
      "stack_out": [
        "concat%2#0",
        "0",
        "as_u16_bytes%2#0"
      ]
    },
    "2754": {
      "op": "replace3",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2755": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2756": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2757": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0"
      ]
    },
    "2758": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0",
        "8"
      ]
    },
    "2759": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%29#0"
      ]
    },
    "2760": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2761": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2762": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2763": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%30#0"
      ]
    },
    "2764": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%30#0",
        "1"
      ]
    },
    "2765": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0"
      ]
    },
    "2766": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2768": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%4#0",
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "aggregate%total_length%4#0"
      ]
    },
    "2769": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%31#0"
      ]
    },
    "2771": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "2773": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "aggregate%total_length%4#0",
        "tmp%31#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2774": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%4#0"
      ]
    },
    "2776": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "2777": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "tmp%31#0"
      ]
    },
    "2779": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "tmp%31#0",
        "64"
      ]
    },
    "2781": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "2782": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "64"
      ]
    },
    "2784": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%4#0"
      ],
      "stack_out": [
        "arr#0",
        "values%4#0"
      ]
    },
    "2785": {
      "op": "bytec 4 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "arr#0",
        "values%4#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "2787": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0"
      ]
    },
    "2788": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2789": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2790": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%total_length%5#0"
      ]
    },
    "2791": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%total_length%5#0",
        "arr#0"
      ]
    },
    "2793": {
      "op": "dup",
      "stack_out": [
        "aggregate%total_length%5#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2794": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%total_length%5#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "2795": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%5#0"
      ]
    },
    "2797": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0"
      ]
    },
    "2798": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "0"
      ]
    },
    "2799": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "0",
        "64"
      ]
    },
    "2801": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "2802": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "arr#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "64"
      ]
    },
    "2804": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "values%5#0"
      ],
      "stack_out": [
        "arr#0",
        "values%5#0"
      ]
    },
    "2805": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "values%5#0",
        "0x"
      ]
    },
    "2806": {
      "op": "b==",
      "defined_out": [
        "arr#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%33#0"
      ]
    },
    "2807": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "2808": {
      "op": "bytec 7 // 0x62696775696e74",
      "defined_out": [
        "0x62696775696e74",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "0x62696775696e74"
      ]
    },
    "2810": {
      "op": "box_del",
      "defined_out": [
        "arr#0",
        "{box_del}"
      ],
      "stack_out": [
        "arr#0",
        "{box_del}"
      ]
    },
    "2811": {
      "op": "pop",
      "stack_out": [
        "arr#0"
      ]
    },
    "2812": {
      "op": "bytec 7 // 0x62696775696e74",
      "stack_out": [
        "arr#0",
        "0x62696775696e74"
      ]
    },
    "2814": {
      "op": "uncover 1",
      "stack_out": [
        "0x62696775696e74",
        "arr#0"
      ]
    },
    "2816": {
      "op": "box_put",
      "stack_out": []
    },
    "2817": {
      "retsub": true,
      "op": "retsub"
    },
    "2818": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2821": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2822": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_block@0"
    },
    "2825": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_block@0",
      "stack_in": [
        "tmp%16#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%16#0",
        "0"
      ]
    },
    "2826": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2827": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "encoded_array%0#0"
      ]
    },
    "2830": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "arr#0"
      ]
    },
    "2831": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "2832": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2833": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2834": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2835": {
      "op": "assert",
      "stack_out": [
        "tmp%16#0",
        "arr#0"
      ]
    },
    "2836": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "1"
      ]
    },
    "2837": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%16#0",
        "arr#0"
      ]
    },
    "2838": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2839": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_header@1"
    },
    "2842": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_header@1",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "2844": {
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "length#0 (copy)"
      ]
    },
    "2846": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "2847": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_for@4",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2850": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_body@2"
    },
    "2853": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_body@2",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "2855": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2857": {
      "op": "==",
      "defined_out": [
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0"
      ]
    },
    "2858": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "2859": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "2860": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "2862": {
      "op": "setbit",
      "defined_out": [
        "aggregate%as_Encoded(bool8)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "2863": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(bool8)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(bool8)%0#0",
        "0x"
      ]
    },
    "2864": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "2866": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "2867": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "arr#0"
      ]
    },
    "2869": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%4#0"
      ]
    },
    "2871": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%4#0",
        "1"
      ]
    },
    "2872": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "arr#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%4#0",
        "1",
        "8"
      ]
    },
    "2873": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+bool1[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+bool1[])%0#0"
      ]
    },
    "2876": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2878": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_footer@3"
    },
    "2881": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_footer@3",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "2883": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "2884": {
      "op": "+",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "2885": {
      "op": "frame_bury 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2887": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_for_header@1"
    },
    "2890": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_for@4",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "2892": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "0"
      ]
    },
    "2893": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%5#0"
      ]
    },
    "2894": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%5#0",
        "length#0 (copy)"
      ]
    },
    "2896": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%6#0"
      ]
    },
    "2897": {
      "op": "assert",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2898": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)"
      ]
    },
    "2900": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)",
        "0"
      ]
    },
    "2901": {
      "op": ">",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%7#0"
      ]
    },
    "2902": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@6",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2905": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@5"
    },
    "2908": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@5",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "2910": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2911": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2912": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_length%2#0"
      ]
    },
    "2913": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_length%2#0",
        "0"
      ]
    },
    "2914": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%lt%0#0"
      ]
    },
    "2915": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "2916": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "0"
      ]
    },
    "2917": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "0",
        "16"
      ]
    },
    "2919": {
      "op": "+",
      "defined_out": [
        "aggregate%add%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%add%0#0"
      ]
    },
    "2920": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "values%0#0"
      ]
    },
    "2921": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%8#0"
      ]
    },
    "2922": {
      "error": "expected element 0 to be False",
      "op": "assert // expected element 0 to be False",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2923": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@6"
    },
    "2926": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@6",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)"
      ]
    },
    "2928": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2929": {
      "op": ">",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%9#0"
      ]
    },
    "2930": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@8",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2933": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@7"
    },
    "2936": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@7",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "2938": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2939": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2940": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2941": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "1"
      ]
    },
    "2942": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%1#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%lt%1#0"
      ]
    },
    "2943": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "2944": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "1"
      ]
    },
    "2945": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "1",
        "16",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "1",
        "16"
      ]
    },
    "2947": {
      "op": "+",
      "defined_out": [
        "aggregate%add%1#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%add%1#0"
      ]
    },
    "2948": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "values%1#0"
      ]
    },
    "2949": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%10#0"
      ]
    },
    "2950": {
      "error": "expected element 1 to be False",
      "op": "assert // expected element 1 to be False",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2951": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@8"
    },
    "2954": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@8",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)"
      ]
    },
    "2956": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "2957": {
      "op": ">",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%11#0"
      ]
    },
    "2958": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@10",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2961": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@9"
    },
    "2964": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@9",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "2966": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2967": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2968": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_length%4#0"
      ]
    },
    "2969": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%4#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_length%4#0",
        "2"
      ]
    },
    "2970": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%2#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%lt%2#0"
      ]
    },
    "2971": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "2972": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "2"
      ]
    },
    "2973": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "2",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "2",
        "16"
      ]
    },
    "2975": {
      "op": "+",
      "defined_out": [
        "aggregate%add%2#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%add%2#0"
      ]
    },
    "2976": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "values%2#0"
      ]
    },
    "2977": {
      "error": "expected element 2 to be True",
      "op": "assert // expected element 2 to be True",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2978": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@10"
    },
    "2981": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@10",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)"
      ]
    },
    "2983": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)",
        "3"
      ]
    },
    "2985": {
      "op": ">",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%12#0"
      ]
    },
    "2986": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@12",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "2989": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@11"
    },
    "2992": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@11",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)"
      ]
    },
    "2994": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2995": {
      "op": "-",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%13#0"
      ]
    },
    "2996": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%13#0",
        "arr#0"
      ]
    },
    "2998": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%13#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "2999": {
      "op": "cover 2",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%13#0",
        "arr#0 (copy)"
      ]
    },
    "3001": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%13#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3002": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%13#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3003": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%13#0",
        "aggregate%array_length%5#0",
        "tmp%13#0 (copy)"
      ]
    },
    "3005": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%3#0",
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%13#0",
        "aggregate%lt%3#0"
      ]
    },
    "3006": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%13#0"
      ]
    },
    "3007": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%13#0",
        "16"
      ]
    },
    "3009": {
      "op": "+",
      "defined_out": [
        "aggregate%add%3#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%add%3#0"
      ]
    },
    "3010": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "values%3#0"
      ]
    },
    "3011": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%14#0"
      ]
    },
    "3012": {
      "error": "expected last element to be False",
      "op": "assert // expected last element to be False",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3013": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@12"
    },
    "3016": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@12",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "pushbytes \"g\"",
      "defined_out": [
        "\"g\""
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "\"g\""
      ]
    },
    "3019": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"g\"",
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "\"g\"",
        "arr#0"
      ]
    },
    "3021": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3022": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)"
      ]
    },
    "3024": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "length#0 (copy)",
        "0"
      ]
    },
    "3025": {
      "op": "!=",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%15#0"
      ]
    },
    "3026": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@14",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3029": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@13"
    },
    "3032": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_if_body@13",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3034": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_bit",
      "op": "callsub dynamic_array_pop_bit",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3037": {
      "op": "cover 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%17#0",
        "tmp%16#0"
      ]
    },
    "3039": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3041": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "0"
      ]
    },
    "3042": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%19#0"
      ]
    },
    "3043": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)",
        "tmp%16#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%19#0",
        "length#0 (copy)"
      ]
    },
    "3045": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%19#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "3046": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "3047": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%16#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0"
      ]
    },
    "3048": {
      "op": "assert",
      "stack_out": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3049": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@14"
    },
    "3052": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array_after_if_else@14",
      "stack_in": [
        "tmp%16#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "3053": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3056": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "3057": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_block@0"
    },
    "3060": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_block@0",
      "stack_in": [
        "tmp%15#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0"
      ]
    },
    "3061": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "3062": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "encoded_array%0#0"
      ]
    },
    "3065": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "arr#0"
      ]
    },
    "3066": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "3067": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "3068": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3069": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3070": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0"
      ]
    },
    "3071": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "1"
      ]
    },
    "3072": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%15#0",
        "arr#0"
      ]
    },
    "3073": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3074": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_header@1"
    },
    "3077": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_header@1",
      "stack_in": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3079": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "5"
      ]
    },
    "3081": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "3082": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_after_for@4",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3085": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_body@2"
    },
    "3088": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_body@2",
      "stack_in": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "3090": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3091": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3092": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3093": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3095": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0",
        "i#0",
        "2"
      ]
    },
    "3096": {
      "op": "+",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3097": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "3099": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3100": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "3101": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3103": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "3104": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "3106": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "3107": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64,uint64)%0#0"
      ]
    },
    "3108": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64,uint64)%0#0",
        "0x"
      ]
    },
    "3109": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint64,uint64)%0#0"
      ]
    },
    "3111": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "3112": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "arr#0"
      ]
    },
    "3114": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "3115": {
      "op": "cover 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%4#0",
        "arr#0 (copy)"
      ]
    },
    "3117": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%4#0"
      ]
    },
    "3119": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "3120": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "3122": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "3123": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3124": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3125": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3126": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3127": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3130": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "3132": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "3133": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "3135": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,uint64)[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+(uint64,uint64)[])%0#0"
      ]
    },
    "3136": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3138": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_footer@3"
    },
    "3141": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_footer@3",
      "stack_in": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3143": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "3144": {
      "op": "+",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3145": {
      "op": "frame_bury 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3147": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_for_header@1"
    },
    "3150": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array_after_for@4",
      "stack_in": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3152": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3153": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3154": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%5#0"
      ]
    },
    "3155": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%5#0",
        "5"
      ]
    },
    "3157": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%6#0"
      ]
    },
    "3158": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3159": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3160": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "3161": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0"
      ]
    },
    "3163": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3164": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3165": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "3167": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "3168": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "0"
      ]
    },
    "3169": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "0",
        "16"
      ]
    },
    "3171": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "3172": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "3174": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0"
      ]
    },
    "3175": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "3176": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0"
      ]
    },
    "3177": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "3178": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "3179": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "3180": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0"
      ]
    },
    "3182": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "8"
      ]
    },
    "3183": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "8",
        "8"
      ]
    },
    "3184": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "3185": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%0#0",
        "arr#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "3186": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%1#0",
        "values%0#0"
      ]
    },
    "3188": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%1#0",
        "values%0#0",
        "1"
      ]
    },
    "3189": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%1#0",
        "tmp%7#0"
      ]
    },
    "3190": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%7#0",
        "values%1#0"
      ]
    },
    "3192": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%7#0",
        "values%1#0",
        "2"
      ]
    },
    "3193": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3194": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%9#0"
      ]
    },
    "3195": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3196": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3197": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3198": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%10#0"
      ]
    },
    "3199": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%10#0",
        "1"
      ]
    },
    "3200": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%11#0"
      ]
    },
    "3201": {
      "op": "dig 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%11#0",
        "arr#0 (copy)"
      ]
    },
    "3203": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%11#0",
        "aggregate%total_length%1#0"
      ]
    },
    "3204": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%11#0"
      ]
    },
    "3206": {
      "op": "dig 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%11#0",
        "arr#0 (copy)"
      ]
    },
    "3208": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%1#0",
        "tmp%11#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3209": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%11#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "3211": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%11#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "3212": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%11#0"
      ]
    },
    "3214": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "tmp%11#0",
        "16"
      ]
    },
    "3216": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "3217": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "3219": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%1#0"
      ]
    },
    "3220": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "3221": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "0"
      ]
    },
    "3222": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "3223": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "arr#0",
        "array_item%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "3224": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "arr#0",
        "array_item%1#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "3225": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%1#0",
        "array_item%1#0"
      ]
    },
    "3227": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%1#0",
        "array_item%1#0",
        "8"
      ]
    },
    "3228": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%1#0",
        "array_item%1#0",
        "8",
        "8"
      ]
    },
    "3229": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%1#0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%1#0",
        "aggregate%extract%3#0"
      ]
    },
    "3230": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%1#0",
        "arr#0",
        "values%2#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%2#0",
        "aggregate%item1%1#0"
      ]
    },
    "3231": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%3#0",
        "values%2#0"
      ]
    },
    "3233": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%3#0",
        "values%2#0",
        "5"
      ]
    },
    "3235": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%3#0",
        "tmp%12#0"
      ]
    },
    "3236": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%12#0",
        "values%3#0"
      ]
    },
    "3238": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%12#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%12#0",
        "values%3#0",
        "6"
      ]
    },
    "3240": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "3241": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "3242": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3243": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "16"
      ]
    },
    "3245": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "3248": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%16#0",
        "tmp%15#0"
      ]
    },
    "3250": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3252": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3253": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3254": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%19#0"
      ]
    },
    "3255": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%15#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%19#0",
        "4"
      ]
    },
    "3257": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%20#0"
      ]
    },
    "3258": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3259": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3260": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%2#0"
      ]
    },
    "3261": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0"
      ]
    },
    "3263": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3264": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3265": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "3267": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "3268": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "0"
      ]
    },
    "3269": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "0",
        "16"
      ]
    },
    "3271": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "3272": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "16"
      ]
    },
    "3274": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0"
      ]
    },
    "3275": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3276": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0"
      ]
    },
    "3277": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "3278": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#0",
        "arr#0",
        "array_item%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%extract%4#0"
      ]
    },
    "3279": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "3280": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0"
      ]
    },
    "3282": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "8"
      ]
    },
    "3283": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "8",
        "8"
      ]
    },
    "3284": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%2#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract%5#0"
      ]
    },
    "3285": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%15#0",
        "values%4#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%4#0",
        "aggregate%item1%2#0"
      ]
    },
    "3286": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "values%4#0"
      ]
    },
    "3288": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "values%4#0",
        "1"
      ]
    },
    "3289": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%21#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "tmp%21#0"
      ]
    },
    "3290": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%21#0",
        "values%5#0"
      ]
    },
    "3292": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%21#0",
        "values%5#0",
        "2"
      ]
    },
    "3293": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "3294": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%23#0"
      ]
    },
    "3295": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3296": {
      "op": "dup",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3297": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3298": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%24#0"
      ]
    },
    "3299": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%24#0",
        "1"
      ]
    },
    "3300": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%25#0"
      ]
    },
    "3301": {
      "op": "dig 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "3303": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "tmp%15#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%25#0",
        "aggregate%total_length%3#0"
      ]
    },
    "3304": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%3#0",
        "tmp%25#0"
      ]
    },
    "3306": {
      "op": "dig 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%3#0",
        "tmp%25#0",
        "arr#0 (copy)"
      ]
    },
    "3308": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%3#0",
        "tmp%25#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3309": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%25#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "3311": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "arr#0",
        "tmp%15#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%25#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "3312": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "tmp%25#0"
      ]
    },
    "3314": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "tmp%25#0",
        "16"
      ]
    },
    "3316": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "3317": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "16"
      ]
    },
    "3319": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0"
      ]
    },
    "3320": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "3321": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0"
      ]
    },
    "3322": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "3323": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%6#0",
        "arr#0",
        "array_item%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%extract%6#0"
      ]
    },
    "3324": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "3325": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0"
      ]
    },
    "3327": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "8"
      ]
    },
    "3328": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "8",
        "8"
      ]
    },
    "3329": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%7#0",
        "aggregate%item0%3#0",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract%7#0"
      ]
    },
    "3330": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%15#0",
        "values%6#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%6#0",
        "aggregate%item1%3#0"
      ]
    },
    "3331": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "values%6#0"
      ]
    },
    "3333": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "values%6#0",
        "4"
      ]
    },
    "3335": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%26#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "tmp%26#0"
      ]
    },
    "3336": {
      "op": "cover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%26#0",
        "values%7#0"
      ]
    },
    "3338": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%26#0",
        "values%7#0",
        "5"
      ]
    },
    "3340": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "3341": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%28#0"
      ]
    },
    "3342": {
      "op": "assert",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3343": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "\"c\""
      ]
    },
    "3346": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0",
        "\"c\"",
        "arr#0"
      ]
    },
    "3348": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%15#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3349": {
      "retsub": true,
      "op": "retsub"
    },
    "3350": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3353": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_block@0"
    },
    "3356": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3357": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "3358": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "3361": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "3362": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "3363": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "3364": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3365": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3366": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "3367": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "3368": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "3369": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3370": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_header@1"
    },
    "3373": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3375": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "5"
      ]
    },
    "3377": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "3378": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3381": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_body@2"
    },
    "3384": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_body@2",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "3386": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3387": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3388": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3389": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3390": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "3391": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "3393": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3394": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "3396": {
      "op": "*",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "3397": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0",
        "2"
      ]
    },
    "3398": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%5#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "3399": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%5#0",
        "0"
      ]
    },
    "3400": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "3401": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "i#0"
      ]
    },
    "3403": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3404": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "3405": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3407": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%head%0#0"
      ]
    },
    "3408": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "0x00"
      ]
    },
    "3409": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "0x00",
        "0"
      ]
    },
    "3410": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "3412": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "3413": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "tmp%6#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%6#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "3414": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%6#0"
      ]
    },
    "3416": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "3417": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "3418": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "0x"
      ]
    },
    "3419": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "3421": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%7#0"
      ]
    },
    "3422": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%7#0",
        "arr#0"
      ]
    },
    "3424": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%7#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%7#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "3425": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%7#0",
        "arr#0 (copy)"
      ]
    },
    "3427": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%7#0"
      ]
    },
    "3429": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "3430": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "3432": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "3433": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3434": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3435": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3436": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3437": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3440": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "3442": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "3443": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "3445": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "3446": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3448": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_footer@3"
    },
    "3451": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3453": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "3454": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3455": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3457": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_for_header@1"
    },
    "3460": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3462": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3463": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3464": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "3465": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%8#0",
        "5"
      ]
    },
    "3467": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%9#0"
      ]
    },
    "3468": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3469": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3470": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "3471": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0"
      ]
    },
    "3473": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3474": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3475": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "3477": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "3478": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "0"
      ]
    },
    "3479": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "9",
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "0",
        "9"
      ]
    },
    "3481": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "3482": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "9"
      ]
    },
    "3484": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0"
      ]
    },
    "3485": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "3486": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0"
      ]
    },
    "3487": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "3488": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "3489": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "3490": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0"
      ]
    },
    "3492": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "3493": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "64"
      ]
    },
    "3495": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "array_item%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "3496": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%0#0",
        "array_item%0#0"
      ]
    },
    "3498": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "aggregate%get_bit%0#0",
        "aggregate%item0%0#0",
        "arr#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%0#0",
        "array_item%0#0",
        "65"
      ]
    },
    "3500": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "aggregate%get_bit%1#0",
        "aggregate%item0%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "3501": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%get_bit%0#0",
        "aggregate%get_bit%1#0",
        "aggregate%item0%0#0"
      ]
    },
    "3503": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "arr#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%1#0",
        "values%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "3505": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%2#0",
        "values%1#0",
        "values%0#0"
      ]
    },
    "3507": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "foo#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "foo#0",
        "values%2#0",
        "values%1#0"
      ]
    },
    "3509": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "bar#0",
        "foo#0",
        "values%2#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "bar#0",
        "foo#0",
        "values%2#0"
      ]
    },
    "3511": {
      "op": "cover 2",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "foo#0"
      ]
    },
    "3513": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "foo#0",
        "0"
      ]
    },
    "3514": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "baz#0",
        "bar#0",
        "tmp%10#0"
      ]
    },
    "3515": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "baz#0",
        "bar#0"
      ]
    },
    "3516": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "baz#0"
      ]
    },
    "3517": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3518": {
      "op": "pushbytes \"d\"",
      "defined_out": [
        "\"d\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "\"d\""
      ]
    },
    "3521": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "\"d\"",
        "arr#0"
      ]
    },
    "3523": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3524": {
      "retsub": true,
      "op": "retsub"
    },
    "3525": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3528": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3529": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0"
      ]
    },
    "3530": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_block@0"
    },
    "3533": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_block@0",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "0"
      ]
    },
    "3534": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "3535": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "encoded_array%0#0"
      ]
    },
    "3538": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "arr#0"
      ]
    },
    "3539": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "3540": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "3541": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3542": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3543": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0"
      ]
    },
    "3544": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "1"
      ]
    },
    "3545": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0"
      ]
    },
    "3546": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3547": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@1"
    },
    "3550": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@1",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3552": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "5"
      ]
    },
    "3554": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "3555": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_after_for@4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3558": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_body@2"
    },
    "3561": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_body@2",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "3563": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3564": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3565": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3566": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3568": {
      "op": "bzero",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3569": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "3571": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "3573": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3574": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3575": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "3576": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "3578": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3579": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "total_length%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "total_length%0#0"
      ]
    },
    "3580": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "total_length%0#0",
        "arr#0"
      ]
    },
    "3582": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "extract_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "total_length%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "total_length%0#0",
        "arr#0",
        "2"
      ]
    },
    "3583": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "3585": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "extract_to_end%0#0"
      ]
    },
    "3586": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "3588": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3589": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "3590": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "3592": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "3593": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "3595": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3596": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%length%0#0"
      ]
    },
    "3597": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "3598": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "3601": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "3603": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "3604": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "10"
      ]
    },
    "3606": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "3607": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "3610": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "3612": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "3614": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "3615": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "3617": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0"
      ]
    },
    "3618": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "2"
      ]
    },
    "3619": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%as_bytes%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "3620": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "3623": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "3624": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "3626": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%head%2#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0",
        "aggregate%head%2#0"
      ]
    },
    "3627": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]))%0#0"
      ]
    },
    "3629": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%4#0"
      ]
    },
    "3630": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_to_end%0#0",
        "tmp%4#0",
        "extract_uint16%0#0"
      ]
    },
    "3632": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "3634": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "3635": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%4#0"
      ]
    },
    "3637": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,(len+uint8[]))[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+(uint64,(len+uint8[]))[])%0#0"
      ]
    },
    "3640": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3642": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_footer@3"
    },
    "3645": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_footer@3",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3647": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "3648": {
      "op": "+",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "3649": {
      "op": "frame_bury 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3651": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@1"
    },
    "3654": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_after_for@4",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3656": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "0"
      ]
    },
    "3657": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%5#0"
      ]
    },
    "3658": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%5#0",
        "5"
      ]
    },
    "3660": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%6#0"
      ]
    },
    "3661": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3662": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "3663": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3664": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "3665": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3667": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@5"
    },
    "3670": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@5",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "3672": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "5"
      ]
    },
    "3674": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "3675": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_after_for@8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3678": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_body@6"
    },
    "3681": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_body@6",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "3683": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0"
      ]
    },
    "3685": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3686": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "3687": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0"
      ]
    },
    "3689": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3690": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3691": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "3693": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3694": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "3696": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3697": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3698": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3699": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "3701": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0 (copy)"
      ]
    },
    "3703": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3704": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3705": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3707": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3709": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3710": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "3712": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0 (copy)"
      ]
    },
    "3714": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3715": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3716": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3718": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "3720": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3721": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3723": {
      "op": "dig 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3725": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3726": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3728": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "3729": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3730": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3732": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3734": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3735": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3737": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3739": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3741": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3742": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3744": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3746": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3748": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "array_item%0#0"
      ]
    },
    "3749": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "0"
      ]
    },
    "3750": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%0#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "0",
        "8"
      ]
    },
    "3751": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%extract%0#0"
      ]
    },
    "3752": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "i#0",
        "value_internal%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "values%0#0"
      ]
    },
    "3753": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "values%0#0",
        "i#0 (copy)"
      ]
    },
    "3755": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "values%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3756": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0",
        "value_internal%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "values%0#0",
        "tmp%7#0"
      ]
    },
    "3757": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%8#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "3758": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0"
      ]
    },
    "3759": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3760": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0"
      ]
    },
    "3761": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%1#0",
        "arr#0"
      ]
    },
    "3763": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%1#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3764": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%1#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3765": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "3767": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3768": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "arr#0"
      ]
    },
    "3770": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "arr#0",
        "0"
      ]
    },
    "3771": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3772": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3774": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "3776": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3777": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "3778": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3780": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "3782": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3783": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3785": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "3787": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3788": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "3789": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3791": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "aggregate%next_index%1#0 (copy)",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%1#0 (copy)"
      ]
    },
    "3793": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "3794": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "3796": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3798": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "3799": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "3801": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "2"
      ]
    },
    "3802": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "3803": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3805": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "3807": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "3808": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "3810": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "3812": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "3814": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "3815": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3817": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3819": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "3821": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0"
      ]
    },
    "3822": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "3823": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "8"
      ]
    },
    "3824": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "arr#0",
        "array_item%1#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3825": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0"
      ]
    },
    "3827": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "3828": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "arr#0",
        "array_item%1#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0",
        "aggregate%len%1#0"
      ]
    },
    "3829": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "array_item%1#0"
      ]
    },
    "3831": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%len%1#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3833": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "3835": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%3#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%substring3%3#0"
      ]
    },
    "3836": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "value_internal%1#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "values%3#0"
      ]
    },
    "3839": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%9#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "3840": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%10#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%10#0"
      ]
    },
    "3841": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3842": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_footer@7"
    },
    "3845": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_footer@7",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "3847": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "1"
      ]
    },
    "3848": {
      "op": "+",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "3849": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "3851": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_for_header@5"
    },
    "3854": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array_after_for@8",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3856": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3859": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "3861": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3863": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3864": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3865": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "3866": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%15#0",
        "4"
      ]
    },
    "3868": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%16#0"
      ]
    },
    "3869": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3870": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3871": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%2#0"
      ]
    },
    "3872": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0"
      ]
    },
    "3874": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3875": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3876": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "3878": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3879": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0"
      ]
    },
    "3881": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3882": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3883": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3884": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0"
      ]
    },
    "3886": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0"
      ]
    },
    "3887": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0",
        "2"
      ]
    },
    "3888": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3889": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%5#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3891": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3893": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "3894": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0"
      ]
    },
    "3896": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0"
      ]
    },
    "3897": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0",
        "1"
      ]
    },
    "3898": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "3899": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3901": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%5#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "3903": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "3904": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "3906": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3908": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "3909": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "3911": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "3912": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "3913": {
      "op": "dig 5",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3915": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "3917": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "3918": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "3920": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "3922": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "3924": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "3925": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3927": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "3929": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "3931": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0"
      ]
    },
    "3932": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3933": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0"
      ]
    },
    "3934": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "3935": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%extract%2#0"
      ]
    },
    "3936": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "3937": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0"
      ]
    },
    "3939": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3940": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "8"
      ]
    },
    "3941": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3942": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0"
      ]
    },
    "3944": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3945": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0",
        "aggregate%len%2#0"
      ]
    },
    "3946": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "array_item%2#0"
      ]
    },
    "3948": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3950": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "3952": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0"
      ]
    },
    "3953": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%11#0",
        "values%4#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%4#0",
        "aggregate%item1%2#0"
      ]
    },
    "3956": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "values%4#0"
      ]
    },
    "3958": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "values%4#0",
        "1"
      ]
    },
    "3959": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "tmp%17#0"
      ]
    },
    "3960": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0"
      ]
    },
    "3962": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0",
        "0"
      ]
    },
    "3963": {
      "op": "bzero",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%18#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0",
        "tmp%18#0"
      ]
    },
    "3964": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "3965": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%20#0"
      ]
    },
    "3966": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "3967": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3968": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3969": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%21#0"
      ]
    },
    "3970": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%21#0",
        "1"
      ]
    },
    "3971": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%22#0"
      ]
    },
    "3972": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "arr#0"
      ]
    },
    "3974": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3975": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "arr#0",
        "aggregate%total_length%3#0"
      ]
    },
    "3976": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "arr#0"
      ]
    },
    "3978": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3979": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "3980": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "3982": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "3983": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "3985": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3986": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3987": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%array_length%7#0"
      ]
    },
    "3988": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "3990": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0",
        "tmp%22#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%22#0 (copy)"
      ]
    },
    "3992": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%22#0 (copy)",
        "2"
      ]
    },
    "3993": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "3994": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%array_length%7#0",
        "aggregate%item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "3996": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "3998": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "3999": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%22#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4001": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%22#0"
      ]
    },
    "4003": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%22#0",
        "1"
      ]
    },
    "4004": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4005": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%7#0"
      ]
    },
    "4007": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "aggregate%next_index%3#0 (copy)",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%7#0",
        "aggregate%next_index%3#0 (copy)"
      ]
    },
    "4009": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "4010": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4012": {
      "op": "dig 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4014": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "4015": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4017": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "2"
      ]
    },
    "4018": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "4019": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4021": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "4023": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "4024": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "4026": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "4028": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "4030": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_offset%3#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "4031": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "4033": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "4035": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "4037": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0"
      ]
    },
    "4038": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4039": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0"
      ]
    },
    "4040": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "4041": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%extract%3#0"
      ]
    },
    "4042": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "4043": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0"
      ]
    },
    "4045": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4046": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "8"
      ]
    },
    "4047": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4048": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0"
      ]
    },
    "4050": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4051": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0",
        "aggregate%len%3#0"
      ]
    },
    "4052": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0",
        "array_item%3#0"
      ]
    },
    "4054": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4056": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0"
      ]
    },
    "4058": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0"
      ]
    },
    "4059": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%11#0",
        "values%6#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%6#0",
        "aggregate%item1%3#0"
      ]
    },
    "4062": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "values%6#0"
      ]
    },
    "4064": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "values%6#0",
        "4"
      ]
    },
    "4066": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%23#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "tmp%23#0"
      ]
    },
    "4067": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%23#0",
        "values%7#0"
      ]
    },
    "4069": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "tmp%11#0",
        "tmp%23#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%23#0",
        "values%7#0",
        "3"
      ]
    },
    "4071": {
      "op": "bzero",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%24#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%23#0",
        "values%7#0",
        "tmp%24#0"
      ]
    },
    "4072": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "4073": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%26#0"
      ]
    },
    "4074": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "4075": {
      "op": "pushbytes \"e\"",
      "defined_out": [
        "\"e\"",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "\"e\""
      ]
    },
    "4078": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "\"e\"",
        "arr#0"
      ]
    },
    "4080": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4081": {
      "retsub": true,
      "op": "retsub"
    },
    "4082": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4085": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "4086": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0"
      ]
    },
    "4087": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_block@0"
    },
    "4090": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_block@0",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "0"
      ]
    },
    "4091": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "4092": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "encoded_array%0#0"
      ]
    },
    "4095": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "arr#0"
      ]
    },
    "4096": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "arr#0",
        "0"
      ]
    },
    "4097": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "4098": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "4099": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "4100": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0"
      ]
    },
    "4101": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "1"
      ]
    },
    "4102": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0"
      ]
    },
    "4103": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4104": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@1"
    },
    "4107": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@1",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "4109": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "5"
      ]
    },
    "4111": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "4112": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4115": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_body@2"
    },
    "4118": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_body@2",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "4120": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4121": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4122": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "4123": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "4125": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "4128": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "4130": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "4132": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4133": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4134": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "4135": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "4137": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4138": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "total_length%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "total_length%0#0"
      ]
    },
    "4139": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "total_length%0#0",
        "arr#0"
      ]
    },
    "4141": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "extract_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "total_length%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "total_length%0#0",
        "arr#0",
        "2"
      ]
    },
    "4142": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "4144": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "extract_to_end%0#0"
      ]
    },
    "4145": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "4147": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4148": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "4149": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4151": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "4152": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "4154": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "4155": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%length%0#0"
      ]
    },
    "4156": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "4157": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "4160": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "4162": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "4163": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "10"
      ]
    },
    "4165": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "4166": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4169": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "4171": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4173": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "4174": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "4176": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0"
      ]
    },
    "4177": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "2"
      ]
    },
    "4178": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%as_bytes%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "4179": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "4182": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "4183": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "4185": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%head%2#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%head%2#0"
      ]
    },
    "4186": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0"
      ]
    },
    "4188": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%4#0"
      ]
    },
    "4189": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_to_end%0#0",
        "tmp%4#0",
        "extract_uint16%0#0"
      ]
    },
    "4191": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "4193": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "4194": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%4#0"
      ]
    },
    "4196": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "4199": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4201": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_footer@3"
    },
    "4204": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_footer@3",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "4206": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "4207": {
      "op": "+",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "4208": {
      "op": "frame_bury 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4210": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@1"
    },
    "4213": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "4215": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "0"
      ]
    },
    "4216": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%5#0"
      ]
    },
    "4217": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%5#0",
        "5"
      ]
    },
    "4219": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%6#0"
      ]
    },
    "4220": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4221": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "4222": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "4224": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4226": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@5"
    },
    "4229": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@5",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "4231": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "5"
      ]
    },
    "4233": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "4234": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4237": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_body@6"
    },
    "4240": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_body@6",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "4242": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0"
      ]
    },
    "4244": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4245": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "4246": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0"
      ]
    },
    "4248": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4249": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4250": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "4252": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "4253": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "4255": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4256": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4257": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%array_length%2#0"
      ]
    },
    "4258": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "4260": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0 (copy)"
      ]
    },
    "4262": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4263": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "4264": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "4266": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "4268": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4269": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0"
      ]
    },
    "4271": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0 (copy)"
      ]
    },
    "4273": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4274": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%next_index%0#0"
      ]
    },
    "4275": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "4277": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "4279": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "4280": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%next_index%0#0"
      ]
    },
    "4282": {
      "op": "dig 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "4284": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "4285": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_index%0#0"
      ]
    },
    "4287": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "4288": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "4289": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "4291": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "4293": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "arr#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "4294": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "4296": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "arr#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "4298": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "4300": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "4301": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "4303": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4305": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "4307": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%0#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "array_item%0#0"
      ]
    },
    "4308": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "0"
      ]
    },
    "4309": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%0#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "array_item%0#0",
        "0",
        "8"
      ]
    },
    "4310": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%extract%0#0"
      ]
    },
    "4311": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "i#0",
        "value_internal%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "values%0#0"
      ]
    },
    "4312": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "values%0#0",
        "i#0 (copy)"
      ]
    },
    "4314": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "values%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4315": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%7#0",
        "value_internal%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "values%0#0",
        "tmp%7#0"
      ]
    },
    "4316": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%8#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "tmp%8#0"
      ]
    },
    "4317": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0"
      ]
    },
    "4318": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4319": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%total_length%1#0"
      ]
    },
    "4320": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%1#0",
        "arr#0"
      ]
    },
    "4322": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%1#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4323": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%total_length%1#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4324": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "4326": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "4327": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "arr#0"
      ]
    },
    "4329": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "arr#0",
        "0"
      ]
    },
    "4330": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "4331": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "4333": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "4335": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4336": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "4337": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "4339": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "4341": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "4342": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "4344": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "4346": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "4347": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "4348": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "4350": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "aggregate%next_index%1#0 (copy)",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%1#0 (copy)"
      ]
    },
    "4352": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "4353": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "4355": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "4357": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "4358": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "4360": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%1#0",
        "2"
      ]
    },
    "4361": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "4362": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "4364": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "4366": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "4367": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "4369": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "4371": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "4373": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "4374": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%1#0",
        "i#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "4376": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "4378": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "4380": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0"
      ]
    },
    "4381": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "4382": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0",
        "array_item%1#0 (copy)",
        "8"
      ]
    },
    "4383": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "arr#0",
        "array_item%1#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4384": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0"
      ]
    },
    "4386": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0",
        "array_item%1#0 (copy)"
      ]
    },
    "4387": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "arr#0",
        "array_item%1#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "array_item%1#0",
        "aggregate%len%1#0"
      ]
    },
    "4388": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "array_item%1#0"
      ]
    },
    "4390": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%len%1#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4392": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "array_item%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "4394": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%3#0",
        "arr#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4395": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "value_internal%1#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "values%3#0"
      ]
    },
    "4398": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "values%3#0",
        "i#0"
      ]
    },
    "4400": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "arr#0",
        "tmp%9#0",
        "value_internal%1#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "values%3#0",
        "tmp%9#0"
      ]
    },
    "4403": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%10#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%10#0"
      ]
    },
    "4404": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4405": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_footer@7"
    },
    "4408": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_footer@7",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "4410": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "1"
      ]
    },
    "4411": {
      "op": "+",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "4412": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4414": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_for_header@5"
    },
    "4417": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_in": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "4419": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "4422": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "4424": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "4426": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4427": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4428": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%15#0"
      ]
    },
    "4429": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%15#0",
        "4"
      ]
    },
    "4431": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%16#0"
      ]
    },
    "4432": {
      "op": "assert",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "4433": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4434": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%total_length%2#0"
      ]
    },
    "4435": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0"
      ]
    },
    "4437": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4438": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%total_length%2#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4439": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "4441": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "4442": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0"
      ]
    },
    "4444": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4445": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4446": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "arr#0",
        "aggregate%array_length%5#0"
      ]
    },
    "4447": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0"
      ]
    },
    "4449": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0"
      ]
    },
    "4450": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0",
        "2"
      ]
    },
    "4451": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "4452": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%5#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "4454": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "4456": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "4457": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0"
      ]
    },
    "4459": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0"
      ]
    },
    "4460": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "0",
        "1"
      ]
    },
    "4461": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%5#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "4462": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%5#0"
      ]
    },
    "4464": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%5#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%5#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "4466": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "4467": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "4469": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "4471": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "4472": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_index%2#0"
      ]
    },
    "4474": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "4475": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "4476": {
      "op": "dig 5",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "4478": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "4480": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "arr#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "4481": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "4483": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "arr#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "4485": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "4487": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "4488": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%2#0",
        "arr#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "4490": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "4492": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "4494": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0"
      ]
    },
    "4495": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "4496": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0"
      ]
    },
    "4497": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "4498": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%extract%2#0"
      ]
    },
    "4499": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "4500": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0"
      ]
    },
    "4502": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "4503": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "8"
      ]
    },
    "4504": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "4505": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0"
      ]
    },
    "4507": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "4508": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "arr#0",
        "array_item%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "array_item%2#0",
        "aggregate%len%2#0"
      ]
    },
    "4509": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "array_item%2#0"
      ]
    },
    "4511": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "4513": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "array_item%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "4515": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4516": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%11#0",
        "values%4#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%4#0",
        "aggregate%item1%2#0"
      ]
    },
    "4519": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "values%4#0"
      ]
    },
    "4521": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "values%4#0",
        "1"
      ]
    },
    "4522": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%5#0",
        "tmp%17#0"
      ]
    },
    "4523": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0"
      ]
    },
    "4525": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "values%5#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%17#0",
        "values%5#0",
        "\"\""
      ]
    },
    "4526": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "4527": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%19#0"
      ]
    },
    "4528": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "4529": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4530": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4531": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%20#0"
      ]
    },
    "4532": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%20#0",
        "1"
      ]
    },
    "4533": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%21#0"
      ]
    },
    "4534": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "arr#0"
      ]
    },
    "4536": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4537": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "arr#0",
        "aggregate%total_length%3#0"
      ]
    },
    "4538": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%total_length%3#0",
        "arr#0"
      ]
    },
    "4540": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4541": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%total_length%3#0",
        "arr#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4542": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "arr#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "4544": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "4545": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4547": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4548": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4549": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%array_length%7#0"
      ]
    },
    "4550": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4552": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%21#0 (copy)"
      ]
    },
    "4554": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%21#0 (copy)",
        "2"
      ]
    },
    "4555": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "4556": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%array_length%7#0",
        "aggregate%item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4558": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "4560": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "tmp%11#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "4561": {
      "op": "cover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "tmp%21#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0"
      ]
    },
    "4563": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%21#0"
      ]
    },
    "4565": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "tmp%21#0",
        "1"
      ]
    },
    "4566": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%7#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4567": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%7#0"
      ]
    },
    "4569": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%7#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "aggregate%next_index%3#0 (copy)",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%7#0",
        "aggregate%next_index%3#0 (copy)"
      ]
    },
    "4571": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "4572": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4574": {
      "op": "dig 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4576": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "4577": {
      "op": "cover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_index%3#0"
      ]
    },
    "4579": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_index%3#0",
        "2"
      ]
    },
    "4580": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "4581": {
      "op": "dig 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "4583": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "4585": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "arr#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "4586": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "4588": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "arr#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "4590": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "4592": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_offset%3#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "arr#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "4593": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "aggregate%item_offset%3#0",
        "arr#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "4595": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "4597": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "4599": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0"
      ]
    },
    "4600": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4601": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0"
      ]
    },
    "4602": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "4603": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%extract%3#0"
      ]
    },
    "4604": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "array_item%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "4605": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0"
      ]
    },
    "4607": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4608": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "8"
      ]
    },
    "4609": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4610": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0"
      ]
    },
    "4612": {
      "op": "dup",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "4613": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "arr#0",
        "array_item%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "array_item%3#0",
        "aggregate%len%3#0"
      ]
    },
    "4614": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0",
        "array_item%3#0"
      ]
    },
    "4616": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4618": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "array_item%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0"
      ]
    },
    "4620": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0"
      ]
    },
    "4621": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%11#0",
        "values%6#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%6#0",
        "aggregate%item1%3#0"
      ]
    },
    "4624": {
      "op": "cover 1",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "values%6#0"
      ]
    },
    "4626": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "values%6#0",
        "4"
      ]
    },
    "4628": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%22#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "values%7#0",
        "tmp%22#0"
      ]
    },
    "4629": {
      "op": "cover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%22#0",
        "values%7#0"
      ]
    },
    "4631": {
      "op": "pushbytes \"   \"",
      "defined_out": [
        "\"   \"",
        "arr#0",
        "tmp%11#0",
        "tmp%22#0",
        "values%7#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%22#0",
        "values%7#0",
        "\"   \""
      ]
    },
    "4636": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "4637": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%11#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%24#0"
      ]
    },
    "4638": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "4639": {
      "op": "pushbytes \"f\"",
      "defined_out": [
        "\"f\"",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "\"f\""
      ]
    },
    "4642": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0",
        "\"f\"",
        "arr#0"
      ]
    },
    "4644": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%11#0",
        "value_internal%1#0",
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "4645": {
      "retsub": true,
      "op": "retsub"
    },
    "4646": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "params": {
        "arr#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4649": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log_block@0"
    },
    "4652": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "4654": {
      "op": "log",
      "stack_out": []
    },
    "4655": {
      "retsub": true,
      "op": "retsub"
    },
    "4656": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "params": {
        "arr#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4659": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit_block@0"
    },
    "4662": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "4663": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "4664": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4667": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "4668": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4670": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "4671": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "arr#0 (copy)"
      ]
    },
    "4673": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4674": {
      "op": "pushbytes 0xfa40c053 // method \"emit_test(uint64[])\"",
      "defined_out": [
        "Method(emit_test(uint64[]))",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "Method(emit_test(uint64[]))"
      ]
    },
    "4680": {
      "op": "uncover 1",
      "stack_out": [
        "Method(emit_test(uint64[]))",
        "tmp%0#0"
      ]
    },
    "4682": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "4683": {
      "op": "log",
      "stack_out": []
    },
    "4684": {
      "retsub": true,
      "op": "retsub"
    },
    "4685": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "params": {
        "arr_to_add#0": "uint64",
        "arr#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "4688": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0"
      ]
    },
    "4689": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0"
      ]
    },
    "4690": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0"
      ]
    },
    "4691": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "4692": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4693": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "4694": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_block@0"
    },
    "4697": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_block@0",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "1"
      ]
    },
    "4698": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "4699": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4700": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@1"
    },
    "4703": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@1",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "4705": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr_to_add#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "arr_to_add#0 (copy)"
      ]
    },
    "4707": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "4708": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@8",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4711": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@2"
    },
    "4714": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@2",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "4716": {
      "op": "frame_bury 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4718": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "4719": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "4720": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "encoded_array%0#0"
      ]
    },
    "4723": {
      "op": "frame_bury 0",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4725": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "4726": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4727": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "4728": {
      "op": "frame_bury 5",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4730": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@3"
    },
    "4733": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@3",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "4735": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "i#0"
      ]
    },
    "4737": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "4738": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@6",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4741": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@4"
    },
    "4744": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@4",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "j#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "j#0"
      ]
    },
    "4746": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4747": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "4748": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4750": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "4751": {
      "op": "frame_dig 0",
      "defined_out": [
        "extra_arr#0",
        "tmp%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%0#0",
        "extra_arr#0"
      ]
    },
    "4753": {
      "op": "dup",
      "defined_out": [
        "extra_arr#0",
        "extra_arr#0 (copy)",
        "tmp%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%0#0",
        "extra_arr#0 (copy)",
        "extra_arr#0 (copy)"
      ]
    },
    "4754": {
      "op": "cover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extra_arr#0",
        "tmp%0#0",
        "extra_arr#0 (copy)"
      ]
    },
    "4756": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extra_arr#0",
        "extra_arr#0 (copy)",
        "tmp%0#0"
      ]
    },
    "4758": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "extra_arr#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extra_arr#0",
        "concat%0#0"
      ]
    },
    "4759": {
      "op": "cover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%0#0",
        "extra_arr#0"
      ]
    },
    "4761": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "extra_arr#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%0#0",
        "extra_arr#0",
        "0"
      ]
    },
    "4762": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extra_arr#0",
        "extract_uint16%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "4763": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extra_arr#0",
        "extract_uint16%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "4764": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "extra_arr#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "4765": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "extra_arr#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "4766": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "extra_arr#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "4769": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "4771": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "4772": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "4774": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%0#0",
        "extra_arr#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "4775": {
      "op": "frame_bury 0",
      "defined_out": [
        "extra_arr#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4777": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@5"
    },
    "4780": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@5",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "4782": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "1"
      ]
    },
    "4783": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "4784": {
      "op": "frame_bury 5",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4786": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@3"
    },
    "4789": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@6",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "4791": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4792": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0"
      ]
    },
    "4793": {
      "op": "frame_dig -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "arr#0 (copy)"
      ]
    },
    "4795": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "total_length%0#0"
      ]
    },
    "4796": {
      "op": "frame_dig -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "total_length%0#0",
        "arr#0 (copy)"
      ]
    },
    "4798": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0 (copy)",
        "extract_uint16%1#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "total_length%0#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4799": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "arr#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "4801": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0"
      ]
    },
    "4802": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "4803": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "4804": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4807": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "4808": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4810": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0"
      ]
    },
    "4811": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%head%1#0",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "extra_arr#0"
      ]
    },
    "4813": {
      "op": "concat",
      "defined_out": [
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "tmp%1#0"
      ]
    },
    "4814": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_to_end%0#0",
        "tmp%1#0",
        "extract_uint16%1#0"
      ]
    },
    "4816": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%1#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0"
      ]
    },
    "4818": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%1#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "4819": {
      "op": "uncover 3",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "1",
        "tmp%1#0"
      ]
    },
    "4821": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(len+uint64[])[])%0#0",
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "as_Encoded(len+(len+uint64[])[])%0#0"
      ]
    },
    "4824": {
      "op": "frame_bury -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4826": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@7"
    },
    "4829": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@7",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "4831": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "4832": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "4833": {
      "op": "frame_bury 6",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4835": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@1"
    },
    "4838": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@8",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "4839": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "4840": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "encoded_array%1#0"
      ]
    },
    "4843": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4845": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "4847": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4848": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4849": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4851": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "4852": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4854": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@9"
    },
    "4857": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@9",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4859": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "4861": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%2#0"
      ]
    },
    "4862": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@12",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4865": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@10"
    },
    "4868": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_body@10",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "4870": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0"
      ]
    },
    "4871": {
      "op": "frame_dig -1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0 (copy)"
      ]
    },
    "4873": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%total_length%0#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "4874": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "arr#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "4876": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "4877": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4879": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "2"
      ]
    },
    "4880": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "4881": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "4883": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "4885": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4886": {
      "op": "dup2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%0#0",
        "aggregate%item_offset%0#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%0#0 (copy)"
      ]
    },
    "4887": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length%0#0"
      ]
    },
    "4888": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length%0#0",
        "8"
      ]
    },
    "4889": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0"
      ]
    },
    "4890": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "2"
      ]
    },
    "4891": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "4892": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "4894": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4896": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "4898": {
      "op": "extract3",
      "defined_out": [
        "inner_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "inner_arr#0"
      ]
    },
    "4899": {
      "callsub": "test_cases.array.immutable.sum_arr",
      "op": "callsub sum_arr",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%2#0"
      ]
    },
    "4902": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "4903": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "4904": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "4906": {
      "op": "concat",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%3#0"
      ]
    },
    "4907": {
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%3#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%3#0",
        "totals#0"
      ]
    },
    "4909": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%3#0",
        "totals#0",
        "totals#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%3#0",
        "totals#0 (copy)",
        "totals#0 (copy)"
      ]
    },
    "4910": {
      "op": "cover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "totals#0",
        "tmp%3#0",
        "totals#0 (copy)"
      ]
    },
    "4912": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "totals#0",
        "totals#0 (copy)",
        "tmp%3#0"
      ]
    },
    "4914": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "totals#0",
        "concat%1#0"
      ]
    },
    "4915": {
      "op": "cover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%1#0",
        "totals#0"
      ]
    },
    "4917": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%1#0",
        "totals#0",
        "0"
      ]
    },
    "4918": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%2#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%1#0",
        "extract_uint16%2#0"
      ]
    },
    "4919": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%1#0",
        "extract_uint16%2#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%1#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "4920": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "4921": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "4922": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "4925": {
      "op": "uncover 1",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "4927": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "4928": {
      "op": "uncover 2",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "4930": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%1#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "as_Encoded(len+uint64[])%1#0"
      ]
    },
    "4931": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4933": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@11"
    },
    "4936": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_footer@11",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4938": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4939": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4940": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "4942": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_nested_array_for_header@9"
    },
    "4945": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array_after_for@12",
      "stack_in": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "totals#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "totals#0"
      ]
    },
    "4947": {
      "op": "frame_bury 0"
    },
    "4949": {
      "retsub": true,
      "op": "retsub"
    },
    "4950": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4953": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_block@0"
    },
    "4956": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4957": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "4958": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "4961": {
      "op": "dup",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0"
      ]
    },
    "4962": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "0"
      ]
    },
    "4963": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "4964": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "encoded_array%1#0"
      ]
    },
    "4967": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr2#0",
        "arr7#0 (copy)",
        "arr7#0 (copy)"
      ]
    },
    "4968": {
      "op": "cover 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr2#0",
        "arr7#0 (copy)"
      ]
    },
    "4970": {
      "op": "cover 2",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "4972": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "0"
      ]
    },
    "4973": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "4974": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "encoded_array%2#0"
      ]
    },
    "4977": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0",
        "arr2#0",
        "arr8#0 (copy)",
        "arr8#0 (copy)"
      ]
    },
    "4978": {
      "op": "cover 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr8#0 (copy)"
      ]
    },
    "4980": {
      "op": "cover 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "4982": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0"
      ]
    },
    "4983": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "4984": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "encoded_array%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "encoded_array%3#0"
      ]
    },
    "4987": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0 (copy)",
        "arr9#0 (copy)"
      ]
    },
    "4988": {
      "op": "cover 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "arr9#0 (copy)"
      ]
    },
    "4990": {
      "op": "cover 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0"
      ]
    },
    "4992": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "arr2#0",
        "0"
      ]
    },
    "4993": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%0#0"
      ]
    },
    "4994": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%0#0",
        "0"
      ]
    },
    "4995": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "tmp%1#0"
      ]
    },
    "4996": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0"
      ]
    },
    "4997": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "arr7#0",
        "0"
      ]
    },
    "4998": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%2#0"
      ]
    },
    "4999": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%2#0",
        "0"
      ]
    },
    "5000": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "tmp%3#0"
      ]
    },
    "5001": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0"
      ]
    },
    "5002": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "arr8#0",
        "0"
      ]
    },
    "5003": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%4#0"
      ]
    },
    "5004": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%4#0",
        "0"
      ]
    },
    "5005": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "tmp%5#0"
      ]
    },
    "5006": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0"
      ]
    },
    "5007": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0",
        "0"
      ]
    },
    "5008": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0"
      ]
    },
    "5009": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%6#0",
        "0"
      ]
    },
    "5010": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%7#0"
      ]
    },
    "5011": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5012": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "1"
      ]
    },
    "5013": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5014": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ]
    },
    "5015": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_header@1"
    },
    "5018": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_header@1",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "5020": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "5"
      ]
    },
    "5022": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "5023": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_after_for@4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ]
    },
    "5026": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_body@2"
    },
    "5029": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_body@2",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "5031": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5032": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "5033": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%8#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "5034": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%8#0",
        "i#0"
      ]
    },
    "5036": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%8#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5037": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "tmp%8#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%8#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5038": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%8#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "5039": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0"
      ]
    },
    "5041": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0",
        "0x00"
      ]
    },
    "5042": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "i#0",
        "0x00",
        "0"
      ]
    },
    "5043": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%9#0",
        "i#0",
        "0x00",
        "0",
        "tmp%8#0"
      ]
    },
    "5045": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "i#0",
        "tmp%9#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%9#0",
        "i#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "5046": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%9#0",
        "i#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "5047": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%9#0"
      ]
    },
    "5049": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "5050": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%set_bit%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "0x"
      ]
    },
    "5051": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "0x",
        "aggregate%set_bit%0#0"
      ]
    },
    "5053": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(bool1,bool1)%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%as_Encoded(bool1,bool1)%0#0"
      ]
    },
    "5054": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%as_Encoded(bool1,bool1)%0#0",
        "0x"
      ]
    },
    "5055": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(bool1,bool1)%0#0"
      ]
    },
    "5057": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%10#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "5058": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%10#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%10#0",
        "arr2#0"
      ]
    },
    "5060": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)",
        "i#0",
        "tmp%10#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%10#0",
        "arr2#0 (copy)",
        "arr2#0 (copy)"
      ]
    },
    "5061": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr2#0",
        "tmp%10#0",
        "arr2#0 (copy)"
      ]
    },
    "5063": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)",
        "tmp%10#0"
      ]
    },
    "5065": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "concat%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr2#0",
        "concat%0#0"
      ]
    },
    "5066": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%0#0",
        "arr2#0"
      ]
    },
    "5068": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%0#0",
        "arr2#0",
        "0"
      ]
    },
    "5069": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "5070": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "5071": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr2#0",
        "concat%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "5072": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "5073": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "5076": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "5078": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "5079": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "5081": {
      "op": "replace3",
      "defined_out": [
        "arr2#0",
        "as_Encoded(len+(bool1,bool1)[])%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_Encoded(len+(bool1,bool1)[])%0#0"
      ]
    },
    "5082": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr2#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "5084": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5085": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "5086": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "5087": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5089": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5090": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5091": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%11#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "5092": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5094": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5095": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "5096": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "5097": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5099": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5100": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "5102": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "5103": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5105": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5106": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "5108": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "5109": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5111": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5112": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "5114": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%16#0"
      ]
    },
    "5115": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5117": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5118": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "5120": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "5121": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5123": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5124": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5125": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "5126": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "5128": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5129": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "5130": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "5131": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "5133": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%head%2#0"
      ]
    },
    "5134": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%head%2#0",
        "0x00"
      ]
    },
    "5135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "i#0",
        "aggregate%head%2#0",
        "0x00",
        "0"
      ]
    },
    "5136": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "aggregate%head%2#0",
        "0x00",
        "0",
        "tmp%11#0"
      ]
    },
    "5138": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "arr2#0",
        "i#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "5139": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%encoded_bool%1#0",
        "1"
      ]
    },
    "5140": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%encoded_bool%1#0",
        "1",
        "tmp%12#0"
      ]
    },
    "5142": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%1#0",
        "arr2#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "5143": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%1#0",
        "2"
      ]
    },
    "5144": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%1#0",
        "2",
        "tmp%13#0"
      ]
    },
    "5146": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%2#0",
        "arr2#0",
        "i#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%2#0"
      ]
    },
    "5147": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%2#0",
        "3"
      ]
    },
    "5149": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%2#0",
        "3",
        "tmp%14#0"
      ]
    },
    "5151": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%3#0",
        "arr2#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%3#0"
      ]
    },
    "5152": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%3#0",
        "4"
      ]
    },
    "5154": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%3#0",
        "4",
        "tmp%15#0"
      ]
    },
    "5156": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%4#0",
        "arr2#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%4#0"
      ]
    },
    "5157": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%4#0",
        "5"
      ]
    },
    "5159": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%4#0",
        "5",
        "tmp%16#0"
      ]
    },
    "5161": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%5#0",
        "arr2#0",
        "i#0",
        "tmp%17#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%5#0"
      ]
    },
    "5162": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "tmp%17#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%5#0",
        "6"
      ]
    },
    "5164": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%5#0",
        "6",
        "tmp%17#0"
      ]
    },
    "5166": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%set_bit%6#0",
        "arr2#0",
        "i#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "i#0",
        "aggregate%head%2#0",
        "aggregate%set_bit%6#0"
      ]
    },
    "5167": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "arr2#0",
        "i#0",
        "tmp%18#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%18#0",
        "i#0",
        "aggregate%head%3#0"
      ]
    },
    "5168": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%head%3#0",
        "tmp%18#0"
      ]
    },
    "5170": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%3#0",
        "arr2#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "5171": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "arr2#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5172": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "0x"
      ]
    },
    "5173": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5175": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "i#0",
        "tmp%19#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "5176": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%19#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%19#0",
        "arr7#0"
      ]
    },
    "5178": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "i#0",
        "tmp%19#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%19#0",
        "arr7#0 (copy)",
        "arr7#0 (copy)"
      ]
    },
    "5179": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr7#0",
        "tmp%19#0",
        "arr7#0 (copy)"
      ]
    },
    "5181": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr7#0",
        "arr7#0 (copy)",
        "tmp%19#0"
      ]
    },
    "5183": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr7#0",
        "concat%1#0"
      ]
    },
    "5184": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%1#0",
        "arr7#0"
      ]
    },
    "5186": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%1#0",
        "arr7#0",
        "0"
      ]
    },
    "5187": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "5188": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "5189": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "5190": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "as_bytes%1#0",
        "concat%1#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "5191": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "5194": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "5196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "5197": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "5199": {
      "op": "replace3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0"
      ]
    },
    "5200": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "5202": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5203": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "5204": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%20#0"
      ]
    },
    "5205": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5207": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5208": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5209": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%20#0",
        "i#0",
        "tmp%21#0"
      ]
    },
    "5210": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5212": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5213": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "5214": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%22#0"
      ]
    },
    "5215": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5217": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5218": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "5220": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%23#0"
      ]
    },
    "5221": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5223": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5224": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "5226": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%24#0"
      ]
    },
    "5227": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5229": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5230": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "5232": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%25#0"
      ]
    },
    "5233": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5235": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5236": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "5238": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%26#0"
      ]
    },
    "5239": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5241": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5242": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "5244": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%27#0"
      ]
    },
    "5245": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5247": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5248": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5249": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "tmp%28#0"
      ]
    },
    "5250": {
      "op": "cover 9",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0"
      ]
    },
    "5252": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5253": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "5254": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "5255": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "5257": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%head%6#0"
      ]
    },
    "5258": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%head%6#0",
        "0x00"
      ]
    },
    "5259": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "i#0",
        "aggregate%head%6#0",
        "0x00",
        "0"
      ]
    },
    "5260": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "aggregate%head%6#0",
        "0x00",
        "0",
        "tmp%20#0"
      ]
    },
    "5262": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%2#0",
        "aggregate%head%6#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%encoded_bool%2#0"
      ]
    },
    "5263": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%encoded_bool%2#0",
        "1"
      ]
    },
    "5264": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%encoded_bool%2#0",
        "1",
        "tmp%21#0"
      ]
    },
    "5266": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%7#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%7#0"
      ]
    },
    "5267": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%7#0",
        "2"
      ]
    },
    "5268": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%7#0",
        "2",
        "tmp%22#0"
      ]
    },
    "5270": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%8#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%8#0"
      ]
    },
    "5271": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%8#0",
        "3"
      ]
    },
    "5273": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%8#0",
        "3",
        "tmp%23#0"
      ]
    },
    "5275": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%9#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%9#0"
      ]
    },
    "5276": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%9#0",
        "4"
      ]
    },
    "5278": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%9#0",
        "4",
        "tmp%24#0"
      ]
    },
    "5280": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%10#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%10#0"
      ]
    },
    "5281": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%10#0",
        "5"
      ]
    },
    "5283": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%10#0",
        "5",
        "tmp%25#0"
      ]
    },
    "5285": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%11#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%26#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%11#0"
      ]
    },
    "5286": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "tmp%26#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%11#0",
        "6"
      ]
    },
    "5288": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%11#0",
        "6",
        "tmp%26#0"
      ]
    },
    "5290": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%12#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%27#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%12#0"
      ]
    },
    "5291": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "tmp%27#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%12#0",
        "7"
      ]
    },
    "5293": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%12#0",
        "7",
        "tmp%27#0"
      ]
    },
    "5295": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%set_bit%13#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "i#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%13#0"
      ]
    },
    "5296": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%28#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%28#0",
        "i#0",
        "aggregate%head%7#0"
      ]
    },
    "5297": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%head%7#0",
        "tmp%28#0"
      ]
    },
    "5299": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%7#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "5300": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5301": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "0x"
      ]
    },
    "5302": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5304": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%29#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%29#0"
      ]
    },
    "5305": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%29#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%29#0",
        "arr8#0"
      ]
    },
    "5307": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "i#0",
        "tmp%29#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%29#0",
        "arr8#0 (copy)",
        "arr8#0 (copy)"
      ]
    },
    "5308": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr8#0",
        "tmp%29#0",
        "arr8#0 (copy)"
      ]
    },
    "5310": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr8#0",
        "arr8#0 (copy)",
        "tmp%29#0"
      ]
    },
    "5312": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "arr8#0",
        "concat%2#0"
      ]
    },
    "5313": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%2#0",
        "arr8#0"
      ]
    },
    "5315": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%2#0",
        "arr8#0",
        "0"
      ]
    },
    "5316": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "5317": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "5318": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "5319": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_bytes%2#0",
        "concat%2#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "5320": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_u16_bytes%2#0",
        "concat%2#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "5323": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_u16_bytes%2#0",
        "concat%2#0"
      ]
    },
    "5325": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_u16_bytes%2#0",
        "concat%2#0",
        "0"
      ]
    },
    "5326": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "concat%2#0",
        "0",
        "as_u16_bytes%2#0"
      ]
    },
    "5328": {
      "op": "replace3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0"
      ]
    },
    "5329": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "5331": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5332": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "0"
      ]
    },
    "5333": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "i#0",
        "tmp%30#0"
      ]
    },
    "5334": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5336": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5337": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5338": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%30#0",
        "i#0",
        "tmp%31#0"
      ]
    },
    "5339": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5341": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5342": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "5343": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%32#0"
      ]
    },
    "5344": {
      "op": "cover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5346": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5347": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "5349": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%33#0"
      ]
    },
    "5350": {
      "op": "cover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5352": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5353": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "5355": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%34#0"
      ]
    },
    "5356": {
      "op": "cover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5358": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5359": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "5361": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%35#0"
      ]
    },
    "5362": {
      "op": "cover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5364": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5365": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "5367": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%36#0"
      ]
    },
    "5368": {
      "op": "cover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5370": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5371": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "5373": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%37#0"
      ]
    },
    "5374": {
      "op": "cover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5376": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5377": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "8"
      ]
    },
    "5378": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%38#0"
      ]
    },
    "5379": {
      "op": "cover 9",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5381": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "5382": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "5383": {
      "op": "+",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0",
        "tmp%39#0"
      ]
    },
    "5384": {
      "op": "cover 10",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "i#0"
      ]
    },
    "5386": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "5387": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%as_Encoded(uint64)%4#0",
        "0x"
      ]
    },
    "5388": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "0x",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "5390": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%head%10#0"
      ]
    },
    "5391": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%head%10#0",
        "0x00"
      ]
    },
    "5392": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%head%10#0",
        "0x00",
        "0"
      ]
    },
    "5393": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "aggregate%head%10#0",
        "0x00",
        "0",
        "tmp%30#0"
      ]
    },
    "5395": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%3#0",
        "aggregate%head%10#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "aggregate%head%10#0",
        "aggregate%encoded_bool%3#0"
      ]
    },
    "5396": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%31#0",
        "aggregate%head%10#0",
        "aggregate%encoded_bool%3#0",
        "1"
      ]
    },
    "5397": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "aggregate%head%10#0",
        "aggregate%encoded_bool%3#0",
        "1",
        "tmp%31#0"
      ]
    },
    "5399": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%14#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%14#0"
      ]
    },
    "5400": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%32#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%14#0",
        "2"
      ]
    },
    "5401": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%14#0",
        "2",
        "tmp%32#0"
      ]
    },
    "5403": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%15#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%15#0"
      ]
    },
    "5404": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%15#0",
        "3"
      ]
    },
    "5406": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%15#0",
        "3",
        "tmp%33#0"
      ]
    },
    "5408": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%16#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%16#0"
      ]
    },
    "5409": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%16#0",
        "4"
      ]
    },
    "5411": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%16#0",
        "4",
        "tmp%34#0"
      ]
    },
    "5413": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%17#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%17#0"
      ]
    },
    "5414": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%17#0",
        "5"
      ]
    },
    "5416": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%17#0",
        "5",
        "tmp%35#0"
      ]
    },
    "5418": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%18#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%18#0"
      ]
    },
    "5419": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%18#0",
        "6"
      ]
    },
    "5421": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%18#0",
        "6",
        "tmp%36#0"
      ]
    },
    "5423": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%19#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%19#0"
      ]
    },
    "5424": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%19#0",
        "7"
      ]
    },
    "5426": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%19#0",
        "7",
        "tmp%37#0"
      ]
    },
    "5428": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%set_bit%20#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%10#0",
        "aggregate%set_bit%20#0"
      ]
    },
    "5429": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%11#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%38#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%11#0"
      ]
    },
    "5430": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%11#0",
        "0x00"
      ]
    },
    "5431": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "tmp%38#0",
        "aggregate%head%11#0",
        "0x00",
        "0"
      ]
    },
    "5432": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "aggregate%head%11#0",
        "0x00",
        "0",
        "tmp%38#0"
      ]
    },
    "5434": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%4#0",
        "aggregate%head%11#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "aggregate%head%11#0",
        "aggregate%encoded_bool%4#0"
      ]
    },
    "5435": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%12#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%39#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%39#0",
        "aggregate%head%12#0"
      ]
    },
    "5436": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "aggregate%head%12#0",
        "tmp%39#0"
      ]
    },
    "5438": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%12#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "aggregate%head%12#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "5439": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5440": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0",
        "0x"
      ]
    },
    "5441": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0"
      ]
    },
    "5443": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%40#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%40#0"
      ]
    },
    "5444": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%40#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%40#0",
        "arr9#0"
      ]
    },
    "5446": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "tmp%40#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "tmp%40#0",
        "arr9#0 (copy)",
        "arr9#0 (copy)"
      ]
    },
    "5447": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr9#0",
        "tmp%40#0",
        "arr9#0 (copy)"
      ]
    },
    "5449": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr9#0",
        "arr9#0 (copy)",
        "tmp%40#0"
      ]
    },
    "5451": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr9#0",
        "concat%3#0"
      ]
    },
    "5452": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "concat%3#0",
        "arr9#0"
      ]
    },
    "5454": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "concat%3#0",
        "arr9#0",
        "0"
      ]
    },
    "5455": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "concat%3#0",
        "extract_uint16%3#0"
      ]
    },
    "5456": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "1"
      ]
    },
    "5457": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "concat%3#0",
        "add%3#0"
      ]
    },
    "5458": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_bytes%3#0",
        "concat%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "concat%3#0",
        "as_bytes%3#0"
      ]
    },
    "5459": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_u16_bytes%3#0",
        "concat%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "concat%3#0",
        "as_u16_bytes%3#0"
      ]
    },
    "5462": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "as_u16_bytes%3#0",
        "concat%3#0"
      ]
    },
    "5464": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "as_u16_bytes%3#0",
        "concat%3#0",
        "0"
      ]
    },
    "5465": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "concat%3#0",
        "0",
        "as_u16_bytes%3#0"
      ]
    },
    "5467": {
      "op": "replace3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0"
      ]
    },
    "5468": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ]
    },
    "5470": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_footer@3"
    },
    "5473": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_footer@3",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "5475": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "5476": {
      "op": "+",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "5477": {
      "op": "frame_bury 4",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ]
    },
    "5479": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_for_header@1"
    },
    "5482": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples_after_for@4",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0"
      ]
    },
    "5484": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "5485": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "5486": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "tmp%41#0"
      ]
    },
    "5487": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "arr2#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "tmp%41#0",
        "5"
      ]
    },
    "5489": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "tmp%42#0"
      ]
    },
    "5490": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0"
      ]
    },
    "5491": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "5493": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ]
    },
    "5494": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "0"
      ]
    },
    "5495": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "tmp%43#0"
      ]
    },
    "5496": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "tmp%43#0",
        "5"
      ]
    },
    "5498": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "tmp%44#0"
      ]
    },
    "5499": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "5500": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "5502": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ]
    },
    "5503": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "0"
      ]
    },
    "5504": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%45#0"
      ]
    },
    "5505": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%45#0",
        "5"
      ]
    },
    "5507": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%46#0"
      ]
    },
    "5508": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "5509": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5511": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ]
    },
    "5512": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "0"
      ]
    },
    "5513": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%47#0"
      ]
    },
    "5514": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%47#0",
        "5"
      ]
    },
    "5516": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%48#0"
      ]
    },
    "5517": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5518": {
      "op": "pushbytes \"bool2\"",
      "defined_out": [
        "\"bool2\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\""
      ]
    },
    "5525": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\"",
        "arr2#0"
      ]
    },
    "5527": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5528": {
      "op": "pushbytes \"bool7\"",
      "defined_out": [
        "\"bool7\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\""
      ]
    },
    "5535": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\"",
        "arr7#0"
      ]
    },
    "5537": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "5538": {
      "op": "pushbytes \"bool8\"",
      "defined_out": [
        "\"bool8\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr8#0",
        "arr9#0",
        "\"bool8\""
      ]
    },
    "5545": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr9#0",
        "\"bool8\"",
        "arr8#0"
      ]
    },
    "5547": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr9#0"
      ]
    },
    "5548": {
      "op": "pushbytes \"bool9\"",
      "defined_out": [
        "\"bool9\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "arr9#0",
        "\"bool9\""
      ]
    },
    "5555": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0",
        "\"bool9\"",
        "arr9#0"
      ]
    },
    "5557": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "value_internal%0#0"
      ]
    },
    "5558": {
      "retsub": true,
      "op": "retsub"
    },
    "5559": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "params": {
        "arr1#0": "bytes",
        "arr2#0": "bytes",
        "arr3#0": "bytes",
        "arr4#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "stack_in": [],
      "op": "proto 4 4"
    },
    "5562": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0"
      ]
    },
    "5563": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0"
      ]
    },
    "5564": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0"
      ]
    },
    "5565": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0"
      ]
    },
    "5566": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0"
      ]
    },
    "5567": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0"
      ]
    },
    "5568": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4"
      ]
    },
    "5569": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4"
      ]
    },
    "5570": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0"
      ]
    },
    "5571": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_block@0"
    },
    "5574": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_block@0",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0"
      ]
    },
    "5575": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0"
      ]
    },
    "5576": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0"
      ]
    },
    "5577": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0"
      ]
    },
    "5578": {
      "op": "frame_dig -4",
      "defined_out": [
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "arr1#0 (copy)"
      ]
    },
    "5580": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "arr1#0 (copy)",
        "0"
      ]
    },
    "5581": {
      "op": "extract_uint16",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0"
      ]
    },
    "5582": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5583": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@1"
    },
    "5586": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@1",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5588": {
      "op": "frame_dig 13",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "5590": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "5591": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@4",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5594": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@2"
    },
    "5597": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@2",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr1#0 (copy)"
      ]
    },
    "5599": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0"
      ]
    },
    "5600": {
      "op": "frame_dig -4",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "arr1#0 (copy)"
      ]
    },
    "5602": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "arr1#0 (copy)",
        "2"
      ]
    },
    "5603": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr1#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "5605": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "5606": {
      "op": "frame_dig 14",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5608": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "5609": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "5610": {
      "op": "intc_3 // 8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "5611": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%0#0"
      ]
    },
    "5612": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "5613": {
      "op": "frame_dig 12",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "i#0",
        "sum1#0"
      ]
    },
    "5615": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "sum1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "5616": {
      "op": "frame_bury 12",
      "defined_out": [
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5618": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@3"
    },
    "5621": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@3",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5623": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "5624": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5625": {
      "op": "frame_bury 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5627": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@1"
    },
    "5630": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@4",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)"
      ]
    },
    "5632": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "5633": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "5634": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5636": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "5637": {
      "op": "frame_bury 3",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5639": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@5"
    },
    "5642": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@5",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "5644": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "array_length%1#0"
      ]
    },
    "5646": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "5647": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@10",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5650": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@6"
    },
    "5653": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@6",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "5655": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "16"
      ]
    },
    "5657": {
      "op": "+",
      "defined_out": [
        "aggregate%add%0#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%add%0#0"
      ]
    },
    "5658": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%add%0#0",
        "arr2#0 (copy)",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%add%0#0",
        "arr2#0 (copy)"
      ]
    },
    "5660": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)",
        "aggregate%add%0#0"
      ]
    },
    "5662": {
      "op": "getbit",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "5663": {
      "op": "frame_dig 11",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0",
        "sum2#0"
      ]
    },
    "5665": {
      "op": "frame_bury 6",
      "defined_out": [
        "b#0",
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "5667": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5670": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@7"
    },
    "5673": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@7",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0"
      ]
    },
    "5675": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0",
        "1"
      ]
    },
    "5676": {
      "op": "+",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0"
      ]
    },
    "5677": {
      "op": "frame_bury 6",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5679": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@8"
    },
    "5682": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@8",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@9"
    },
    "5685": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@9",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "5687": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "5688": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "5689": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5691": {
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%1#0",
        "sum2#4"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum2#4"
      ]
    },
    "5693": {
      "op": "frame_bury 11",
      "defined_out": [
        "item_index_internal%1#0",
        "sum2#4"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5695": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@5"
    },
    "5698": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@10",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)"
      ]
    },
    "5700": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)",
        "0"
      ]
    },
    "5701": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "5702": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5704": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "5705": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5707": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@11"
    },
    "5710": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@11",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "5712": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0",
        "array_length%2#0"
      ]
    },
    "5714": {
      "op": "<",
      "defined_out": [
        "array_length%2#0",
        "continue_looping%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%2#0"
      ]
    },
    "5715": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@18",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5718": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@12"
    },
    "5721": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@12",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)"
      ]
    },
    "5723": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%1#0"
      ]
    },
    "5724": {
      "op": "frame_dig -2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%1#0",
        "arr3#0 (copy)"
      ]
    },
    "5726": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%1#0",
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%1#0",
        "arr3#0 (copy)",
        "2"
      ]
    },
    "5727": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "5729": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "5730": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ]
    },
    "5732": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0",
        "9"
      ]
    },
    "5734": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "5735": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "9"
      ]
    },
    "5737": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0"
      ]
    },
    "5738": {
      "op": "dup",
      "defined_out": [
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "5739": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0"
      ]
    },
    "5740": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "5741": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "aggregate%extract%0#0"
      ]
    },
    "5742": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%2#0",
        "aggregate%item0%0#0"
      ]
    },
    "5743": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "array_item%2#0"
      ]
    },
    "5745": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "5746": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "64"
      ]
    },
    "5748": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "5749": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%1#0",
        "array_item%2#0"
      ]
    },
    "5751": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "aggregate%get_bit%1#0",
        "aggregate%item0%0#0",
        "array_item%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%1#0",
        "array_item%2#0",
        "65"
      ]
    },
    "5753": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "aggregate%get_bit%2#0",
        "aggregate%item0%0#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item0%0#0",
        "aggregate%get_bit%1#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "5754": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%get_bit%1#0",
        "aggregate%get_bit%2#0",
        "aggregate%item0%0#0"
      ]
    },
    "5756": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%get_bit%2#0",
        "item_index_internal%2#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "values%3#0",
        "values%2#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "5758": {
      "op": "cover 2",
      "defined_out": [
        "item_index_internal%2#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "values%4#0",
        "values%3#0",
        "values%2#0"
      ]
    },
    "5760": {
      "op": "cover 2",
      "defined_out": [
        "item_index_internal%2#0",
        "tup.foo#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.foo#0",
        "values%4#0",
        "values%3#0"
      ]
    },
    "5762": {
      "op": "cover 2",
      "defined_out": [
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.foo#0",
        "values%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0",
        "values%4#0"
      ]
    },
    "5764": {
      "op": "frame_bury 8",
      "defined_out": [
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0"
      ]
    },
    "5766": {
      "op": "frame_dig 10",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tup.foo#0",
        "sum3#0"
      ]
    },
    "5768": {
      "op": "+",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tmp%2#0",
        "tup.bar#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "tmp%2#0"
      ]
    },
    "5769": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "sum3#0 (copy)",
        "tup.bar#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0",
        "sum3#0 (copy)"
      ]
    },
    "5770": {
      "op": "frame_bury 10",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0"
      ]
    },
    "5772": {
      "op": "frame_bury 7",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0"
      ]
    },
    "5774": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@14",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5777": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@13"
    },
    "5780": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@13",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "5782": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "1"
      ]
    },
    "5783": {
      "op": "+",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "5784": {
      "op": "frame_bury 7",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5786": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@14"
    },
    "5789": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@14",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "sum3#4"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#4"
      ]
    },
    "5791": {
      "op": "frame_bury 10",
      "defined_out": [
        "sum3#4"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5793": {
      "op": "frame_dig 8",
      "defined_out": [
        "sum3#4",
        "tup.baz#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tup.baz#0"
      ]
    },
    "5795": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@16",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5798": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@15"
    },
    "5801": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_if_body@15",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "sum3#4"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#4"
      ]
    },
    "5803": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum3#4"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum3#4",
        "1"
      ]
    },
    "5804": {
      "op": "+",
      "defined_out": [
        "sum3#4",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%4#0"
      ]
    },
    "5805": {
      "op": "frame_bury 10",
      "defined_out": [
        "sum3#4"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5807": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@16"
    },
    "5810": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_if_else@16",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@17"
    },
    "5813": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@17",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "5815": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0",
        "1"
      ]
    },
    "5816": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "5817": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5819": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@11"
    },
    "5822": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@18",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)"
      ]
    },
    "5824": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)",
        "0"
      ]
    },
    "5825": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%3#0"
      ]
    },
    "5826": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5828": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "5829": {
      "op": "frame_bury 5",
      "defined_out": [],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5831": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@19"
    },
    "5834": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@19",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5836": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_length%3#0"
      ]
    },
    "5838": {
      "op": "<",
      "defined_out": [
        "array_length%3#0",
        "continue_looping%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%3#0"
      ]
    },
    "5839": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@22",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5842": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@20"
    },
    "5845": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_body@20",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)"
      ]
    },
    "5847": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%2#0"
      ]
    },
    "5848": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%2#0",
        "arr4#0 (copy)"
      ]
    },
    "5850": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%2#0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%2#0",
        "arr4#0 (copy)",
        "2"
      ]
    },
    "5851": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "5853": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "5854": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr4#0 (copy)"
      ]
    },
    "5856": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_head_and_tail%0#0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "arr4#0 (copy)",
        "0"
      ]
    },
    "5857": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0"
      ]
    },
    "5858": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "5860": {
      "op": "frame_dig 5",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5862": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ]
    },
    "5863": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)",
        "2"
      ]
    },
    "5864": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "5865": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%4#0",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "5867": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "5869": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "5870": {
      "op": "cover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5872": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ]
    },
    "5873": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "item_index_internal%3#0 (copy)",
        "1"
      ]
    },
    "5874": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0"
      ]
    },
    "5875": {
      "op": "uncover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%4#0"
      ]
    },
    "5877": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%4#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "5879": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "5880": {
      "op": "cover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0"
      ]
    },
    "5882": {
      "op": "dig 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "5884": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "5885": {
      "op": "cover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0"
      ]
    },
    "5887": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "5888": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "5889": {
      "op": "dig 4",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "5891": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "5893": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "item_index_internal%3#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "5894": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "5896": {
      "op": "uncover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "item_index_internal%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "5898": {
      "op": "uncover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "5900": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%3#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "5901": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%3#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "5903": {
      "op": "uncover 3",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "5905": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "5907": {
      "op": "substring3",
      "defined_out": [
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0"
      ]
    },
    "5908": {
      "op": "dup",
      "defined_out": [
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "5909": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0"
      ]
    },
    "5910": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "5911": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "aggregate%extract%1#0"
      ]
    },
    "5912": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "array_item%3#0",
        "aggregate%item0%1#0"
      ]
    },
    "5913": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0"
      ]
    },
    "5915": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "5916": {
      "op": "intc_3 // 8",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "8"
      ]
    },
    "5917": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "5918": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%0#0",
        "array_item%3#0"
      ]
    },
    "5920": {
      "op": "dup",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%0#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "5921": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%1#0",
        "aggregate%len%0#0",
        "array_item%3#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%0#0",
        "array_item%3#0",
        "aggregate%len%0#0"
      ]
    },
    "5922": {
      "op": "cover 1",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "array_item%3#0"
      ]
    },
    "5924": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%len%0#0",
        "array_item%3#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "5926": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "array_item%3#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "5928": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "5929": {
      "op": "extract 2 0",
      "defined_out": [
        "dyn_tup.foo#0",
        "item_index_internal%3#0",
        "values%6#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "dyn_tup.foo#0",
        "values%6#0"
      ]
    },
    "5932": {
      "op": "cover 1",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0"
      ]
    },
    "5934": {
      "op": "frame_dig 9",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "sum4#0"
      ]
    },
    "5936": {
      "op": "+",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0"
      ]
    },
    "5937": {
      "op": "dig 1",
      "defined_out": [
        "dyn_tup.bar#0",
        "dyn_tup.bar#0 (copy)",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0",
        "dyn_tup.bar#0 (copy)"
      ]
    },
    "5939": {
      "op": "len",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "sum4#0",
        "tmp%6#0"
      ]
    },
    "5940": {
      "op": "+",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0",
        "tmp%7#0"
      ]
    },
    "5941": {
      "op": "frame_bury 9",
      "defined_out": [
        "dyn_tup.bar#0",
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "dyn_tup.bar#0"
      ]
    },
    "5943": {
      "op": "len",
      "defined_out": [
        "idx#0",
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "tmp%8#0"
      ]
    },
    "5944": {
      "op": "==",
      "defined_out": [
        "item_index_internal%3#0",
        "sum4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%9#0"
      ]
    },
    "5945": {
      "error": "expected string length to match index",
      "op": "assert // expected string length to match index",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5946": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@21"
    },
    "5949": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_footer@21",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5951": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0",
        "1"
      ]
    },
    "5952": {
      "op": "+",
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%3#0"
      ]
    },
    "5953": {
      "op": "frame_bury 5",
      "defined_out": [
        "item_index_internal%3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "5955": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_for_header@19"
    },
    "5958": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues_after_for@22",
      "stack_in": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "sum1#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ]
    },
    "5960": {
      "op": "frame_dig 11",
      "defined_out": [
        "sum1#0",
        "sum2#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0"
      ]
    },
    "5962": {
      "op": "frame_dig 10",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ]
    },
    "5964": {
      "op": "frame_dig 9",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "array_length%1#0",
        "array_length%2#0",
        "array_length%3#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "item_index_internal%3#0",
        "sum2#4",
        "sum3#4",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ]
    },
    "5966": {
      "op": "frame_bury 3"
    },
    "5968": {
      "op": "frame_bury 2"
    },
    "5970": {
      "op": "frame_bury 1"
    },
    "5972": {
      "op": "frame_bury 0"
    },
    "5974": {
      "retsub": true,
      "op": "retsub"
    },
    "5975": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5978": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_block@0"
    },
    "5981": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_block@0",
      "stack_in": [],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "5983": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "5984": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "5987": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "1"
      ]
    },
    "5988": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "5989": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "5990": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "2"
      ]
    },
    "5991": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "5992": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "5993": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "aggregate%head%1#0",
        "3"
      ]
    },
    "5995": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "5996": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "arr#0"
      ]
    },
    "5997": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "5998": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "5999": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6000": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_header@1"
    },
    "6003": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_header@1",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6005": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "append#0 (copy)"
      ]
    },
    "6007": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "6008": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_after_for@4",
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6011": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_body@2"
    },
    "6014": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_body@2",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "6016": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "6017": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64)%3#0",
        "0x"
      ]
    },
    "6018": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "6020": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "6021": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0",
        "arr#0"
      ]
    },
    "6023": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "6024": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%0#0",
        "arr#0 (copy)"
      ]
    },
    "6026": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%0#0"
      ]
    },
    "6028": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "6029": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "6031": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "6032": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "6033": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "6034": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "6035": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "6036": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6039": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "6041": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "6042": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "6044": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+uint64[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "6045": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6047": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_footer@3"
    },
    "6050": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6052": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "6053": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6054": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6056": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_for_header@1"
    },
    "6059": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return_after_for@4",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "6060": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6063": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_block@0"
    },
    "6066": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_block@0",
      "stack_in": [],
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "5"
      ]
    },
    "6068": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6069": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6072": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x00"
      ]
    },
    "6073": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x00",
        "0"
      ]
    },
    "6074": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "6075": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "6076": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "6077": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "0"
      ]
    },
    "6078": {
      "op": "setbit",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "6079": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0",
        "2"
      ]
    },
    "6080": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0",
        "2",
        "1"
      ]
    },
    "6081": {
      "op": "setbit",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "6082": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0",
        "3"
      ]
    },
    "6084": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%1#0",
        "3",
        "0"
      ]
    },
    "6085": {
      "op": "setbit",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0"
      ]
    },
    "6086": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0",
        "4"
      ]
    },
    "6088": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%2#0",
        "4",
        "1"
      ]
    },
    "6089": {
      "op": "setbit",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%3#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%3#0"
      ]
    },
    "6090": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "arr#0"
      ]
    },
    "6091": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "6092": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "6093": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6094": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_header@1"
    },
    "6097": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_header@1",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6099": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "append#0 (copy)"
      ]
    },
    "6101": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "6102": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_bool_return_after_for@4",
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6105": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_body@2"
    },
    "6108": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_body@2",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "6110": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "2"
      ]
    },
    "6111": {
      "op": "%",
      "defined_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "6112": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0",
        "0"
      ]
    },
    "6113": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0"
      ]
    },
    "6114": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "0x00"
      ]
    },
    "6115": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "0x00",
        "0"
      ]
    },
    "6116": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "6118": {
      "op": "setbit",
      "defined_out": [
        "aggregate%as_Encoded(bool8)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "6119": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(bool8)%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(bool8)%0#0",
        "0x"
      ]
    },
    "6120": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(bool8)%0#0"
      ]
    },
    "6122": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0"
      ]
    },
    "6123": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "6125": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%2#0"
      ]
    },
    "6127": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "6128": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "arr#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%2#0",
        "1",
        "8"
      ]
    },
    "6129": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+bool1[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+bool1[])%0#0"
      ]
    },
    "6132": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6134": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_footer@3"
    },
    "6137": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6139": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "6140": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6141": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6143": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_bool_return_for_header@1"
    },
    "6146": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return_after_for@4",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "6147": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6150": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_block@0"
    },
    "6153": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "6154": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6155": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6158": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0"
      ]
    },
    "6159": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6160": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "6161": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6163": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6164": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "0x00"
      ]
    },
    "6165": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "0x00",
        "0"
      ]
    },
    "6166": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "6167": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "6168": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "6169": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "0"
      ]
    },
    "6170": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%set_bit%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "6171": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "6172": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "arr#0"
      ]
    },
    "6173": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "6174": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "6175": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6176": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_header@1"
    },
    "6179": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_header@1",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6181": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "append#0 (copy)"
      ]
    },
    "6183": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "6184": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_after_for@4",
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6187": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_body@2"
    },
    "6190": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_body@2",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "6192": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6193": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "6194": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "6195": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "6196": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "6197": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "6199": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6200": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "6202": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "6203": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "6204": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "6205": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "6207": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6208": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "6209": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6211": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%3#0"
      ]
    },
    "6212": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%3#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "0x00"
      ]
    },
    "6213": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "0x00",
        "0"
      ]
    },
    "6214": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "6216": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "aggregate%head%3#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "6217": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%3#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%encoded_bool%1#0",
        "1"
      ]
    },
    "6218": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%head%3#0",
        "aggregate%encoded_bool%1#0",
        "1",
        "tmp%3#0"
      ]
    },
    "6220": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%head%3#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "6221": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1)%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%1#0"
      ]
    },
    "6222": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%1#0",
        "0x"
      ]
    },
    "6223": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1)%1#0"
      ]
    },
    "6225": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "6226": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "arr#0"
      ]
    },
    "6228": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%4#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "6229": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "tmp%4#0",
        "arr#0 (copy)"
      ]
    },
    "6231": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "arr#0 (copy)",
        "tmp%4#0"
      ]
    },
    "6233": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "6234": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "6236": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "6237": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "6238": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "6239": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "6240": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "6241": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6244": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "6246": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "6247": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "6249": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "6250": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6252": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_footer@3"
    },
    "6255": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6257": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "6258": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6259": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6261": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_for_header@1"
    },
    "6264": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return_after_for@4",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "6265": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6268": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_block@0"
    },
    "6271": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "6272": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6273": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6276": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0"
      ]
    },
    "6277": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6278": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "6279": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6281": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6282": {
      "op": "bytec 8 // \"Hello\"",
      "defined_out": [
        "\"Hello\"",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "\"Hello\""
      ]
    },
    "6284": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%length%0#0"
      ]
    },
    "6285": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "6286": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "6289": {
      "op": "bytec 8 // \"Hello\"",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "\"Hello\""
      ]
    },
    "6291": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "6292": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "10"
      ]
    },
    "6294": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "6295": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "6298": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6300": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "6302": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "6303": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "6305": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0"
      ]
    },
    "6306": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "2"
      ]
    },
    "6307": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "6308": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "6311": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "6313": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "6315": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0",
        "aggregate%head%2#0"
      ]
    },
    "6316": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%0#0"
      ]
    },
    "6318": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "arr#0"
      ]
    },
    "6319": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "6320": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "6321": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6322": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_header@1"
    },
    "6325": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_header@1",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6327": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "append#0 (copy)"
      ]
    },
    "6329": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "6330": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_after_for@4",
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6333": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_body@2"
    },
    "6336": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_body@2",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "6338": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6339": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "6342": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "6344": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0"
      ]
    },
    "6346": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "6347": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "6348": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "6349": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0"
      ]
    },
    "6351": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "6352": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0",
        "total_length%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "total_length%0#0"
      ]
    },
    "6353": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "total_length%0#0",
        "arr#0"
      ]
    },
    "6355": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0",
        "total_length%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "total_length%0#0",
        "arr#0",
        "2"
      ]
    },
    "6356": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "6358": {
      "op": "substring3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "i#0",
        "extract_to_end%0#0"
      ]
    },
    "6359": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "6361": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6362": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "6363": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6365": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "aggregate%head%3#0"
      ]
    },
    "6366": {
      "op": "cover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0"
      ]
    },
    "6368": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "6369": {
      "op": "len",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%length%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "6370": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "6371": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "6374": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ]
    },
    "6376": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "6377": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "10"
      ]
    },
    "6379": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%5#0",
        "aggregate%head%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "6380": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%2#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "6383": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%3#0"
      ]
    },
    "6385": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "6387": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%4#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%4#0"
      ]
    },
    "6388": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "6390": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0"
      ]
    },
    "6391": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "2"
      ]
    },
    "6392": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%as_bytes%6#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "6393": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "6396": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%3#0",
        "0x"
      ]
    },
    "6397": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "0x",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "6399": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%head%5#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0",
        "aggregate%head%5#0"
      ]
    },
    "6400": {
      "op": "uncover 1",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(uint64,(len+utf8[]))%1#0"
      ]
    },
    "6402": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%1#0"
      ]
    },
    "6403": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_to_end%0#0",
        "tmp%1#0",
        "extract_uint16%0#0"
      ]
    },
    "6405": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6407": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "tmp%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "6408": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%1#0"
      ]
    },
    "6410": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "arr#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "6413": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6415": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_footer@3"
    },
    "6418": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_footer@3",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6420": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "6421": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6422": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0"
      ]
    },
    "6424": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_for_header@1"
    },
    "6427": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return_after_for@4",
      "stack_in": [
        "arr#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "value_internal%0#0",
        "arr#0"
      ]
    },
    "6428": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "params": {
        "arr#0": "bytes",
        "append#0": "uint64"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "6431": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_block@0"
    },
    "6434": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_block@0",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%0#0"
      ],
      "stack_out": [
        "slot%0#0"
      ]
    },
    "6437": {
      "op": "dup",
      "defined_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "6438": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "0x"
      ]
    },
    "6439": {
      "op": "stores",
      "stack_out": [
        "slot%0#0"
      ]
    },
    "6440": {
      "op": "dupn 2",
      "defined_out": [
        "mutable#0",
        "mutable#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "mutable#0 (copy)"
      ]
    },
    "6442": {
      "op": "loads",
      "defined_out": [
        "mutable#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0"
      ]
    },
    "6443": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "mutable#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "arr#0 (copy)"
      ]
    },
    "6445": {
      "op": "len",
      "defined_out": [
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ]
    },
    "6446": {
      "op": "frame_dig -2",
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0",
        "arr#0 (copy)"
      ]
    },
    "6448": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0 (copy)",
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "total_length%0#0",
        "arr#0 (copy)",
        "2"
      ]
    },
    "6449": {
      "op": "uncover 2",
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "arr#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "6451": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "mutable#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "slot_contents%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6452": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "concat%0#0"
      ]
    },
    "6453": {
      "op": "stores",
      "stack_out": [
        "mutable#0"
      ]
    },
    "6454": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "1"
      ]
    },
    "6455": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "mutable#0"
      ]
    },
    "6456": {
      "op": "intc_0 // 0",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0"
      ]
    },
    "6457": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_header@1"
    },
    "6460": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_header@1",
      "stack_in": [
        "mutable#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6462": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "append#0 (copy)"
      ]
    },
    "6464": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "6465": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_after_for@4",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0"
      ]
    },
    "6468": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_body@2"
    },
    "6471": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_body@2",
      "stack_in": [
        "mutable#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "6473": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6474": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "6475": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "6476": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "6477": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "6478": {
      "op": "cover 1",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "6480": {
      "op": "dup",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "6481": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "6483": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "6484": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "tmp%2#0",
        "0"
      ]
    },
    "6485": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "6486": {
      "op": "cover 1",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "6488": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "mutable#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0",
        "mutable#0"
      ]
    },
    "6490": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "mutable#0",
        "mutable#0 (copy)",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0",
        "mutable#0 (copy)",
        "mutable#0 (copy)"
      ]
    },
    "6491": {
      "op": "cover 4",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0",
        "mutable#0 (copy)"
      ]
    },
    "6493": {
      "op": "loads",
      "defined_out": [
        "i#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "6494": {
      "op": "cover 3",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "6496": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6497": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "6498": {
      "op": "uncover 1",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6500": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "6501": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "0x00"
      ]
    },
    "6502": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "0x00",
        "0"
      ]
    },
    "6503": {
      "op": "uncover 4",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "6505": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "6506": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%head%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "6507": {
      "op": "uncover 3",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "aggregate%head%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%3#0"
      ]
    },
    "6509": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "aggregate%head%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "6510": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "6511": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0",
        "0x"
      ]
    },
    "6512": {
      "op": "uncover 1",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "0x",
        "aggregate%as_Encoded(uint64,bool1,bool1)%0#0"
      ]
    },
    "6514": {
      "op": "concat",
      "defined_out": [
        "mutable#0",
        "slot_contents%1#0",
        "tmp%4#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "slot_contents%1#0",
        "tmp%4#0"
      ]
    },
    "6515": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "mutable#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0",
        "concat%1#0"
      ]
    },
    "6516": {
      "op": "stores",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0"
      ]
    },
    "6517": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_footer@3"
    },
    "6520": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_footer@3",
      "stack_in": [
        "mutable#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6522": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "6523": {
      "op": "+",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6524": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0"
      ]
    },
    "6526": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_for_header@1"
    },
    "6529": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back_after_for@4",
      "stack_in": [
        "mutable#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "mutable#0"
      ]
    },
    "6531": {
      "op": "loads",
      "defined_out": [
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "slot_contents%2#0"
      ]
    },
    "6532": {
      "op": "dup",
      "defined_out": [
        "mutable#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ]
    },
    "6533": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "6534": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%bytes_len%0#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0",
        "9"
      ]
    },
    "6536": {
      "op": "/",
      "defined_out": [
        "mutable#0",
        "slot_contents%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "slot_contents%2#0",
        "tmp%5#0"
      ]
    },
    "6537": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "slot_contents%2#0",
        "as_bytes%0#0"
      ]
    },
    "6538": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "mutable#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "slot_contents%2#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6541": {
      "op": "uncover 1",
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "slot_contents%2#0"
      ]
    },
    "6543": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "value_internal%0#0",
        "converted_array%0#0"
      ]
    },
    "6544": {
      "op": "frame_bury 0"
    },
    "6546": {
      "retsub": true,
      "op": "retsub"
    },
    "6547": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "params": {
        "arg#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6550": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple_block@0"
    },
    "6553": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "6554": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6555": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6558": {
      "op": "bytec 9 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0000000000000001"
      ]
    },
    "6560": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "6561": {
      "op": "bytec 10 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "0x0000000000000002"
      ]
    },
    "6563": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "6564": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "arg#0 (copy)"
      ]
    },
    "6566": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "6567": {
      "op": "dup",
      "defined_out": [
        "concat%0#0",
        "concat%0#0 (copy)"
      ],
      "stack_out": [
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "6568": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "total_length%0#0"
      ]
    },
    "6569": {
      "op": "cover 1",
      "stack_out": [
        "total_length%0#0",
        "concat%0#0"
      ]
    },
    "6571": {
      "op": "dup",
      "stack_out": [
        "total_length%0#0",
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "6572": {
      "op": "intc_2 // 2",
      "stack_out": [
        "total_length%0#0",
        "concat%0#0",
        "concat%0#0 (copy)",
        "2"
      ]
    },
    "6573": {
      "op": "uncover 3",
      "stack_out": [
        "concat%0#0",
        "concat%0#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "6575": {
      "op": "substring3",
      "defined_out": [
        "concat%0#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6576": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "len%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "len%0#0"
      ]
    },
    "6577": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "concat%0#0",
        "len%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "len%0#0",
        "8"
      ]
    },
    "6578": {
      "op": "/",
      "defined_out": [
        "concat%0#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "div_floor%0#0"
      ]
    },
    "6579": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "6580": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6583": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "6585": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "6586": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "6588": {
      "op": "replace3",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "6589": {
      "retsub": true,
      "op": "retsub"
    },
    "6590": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "params": {
        "arg.0#0": "bytes",
        "arg.1#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "6593": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple_block@0"
    },
    "6596": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "6597": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6598": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "6601": {
      "op": "bytec 9 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0000000000000001"
      ]
    },
    "6603": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "6604": {
      "op": "bytec 10 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "0x0000000000000002"
      ]
    },
    "6606": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "6607": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x"
      ]
    },
    "6608": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arg.0#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x",
        "arg.0#0 (copy)"
      ]
    },
    "6610": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "aggregate%head%2#0"
      ]
    },
    "6611": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%2#0",
        "arg.1#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "aggregate%head%2#0",
        "arg.1#0 (copy)"
      ]
    },
    "6613": {
      "op": "concat",
      "defined_out": [
        "prefix#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "tmp%0#0"
      ]
    },
    "6614": {
      "op": "dig 1",
      "defined_out": [
        "prefix#0",
        "prefix#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "tmp%0#0",
        "prefix#0 (copy)"
      ]
    },
    "6616": {
      "op": "uncover 1",
      "stack_out": [
        "prefix#0",
        "prefix#0 (copy)",
        "tmp%0#0"
      ]
    },
    "6618": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "concat%0#0"
      ]
    },
    "6619": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "prefix#0"
      ]
    },
    "6621": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "concat%0#0",
        "prefix#0",
        "0"
      ]
    },
    "6622": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "6623": {
      "op": "intc_2 // 2",
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "2"
      ]
    },
    "6624": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "6625": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "6626": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "6629": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "6631": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "6632": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "6634": {
      "op": "replace3",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "6635": {
      "retsub": true,
      "op": "retsub"
    },
    "6636": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "params": {
        "arg#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6639": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple_block@0"
    },
    "6642": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple_block@0",
      "stack_in": [],
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\""
      ],
      "stack_out": [
        "\"a\""
      ]
    },
    "6643": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "6644": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6645": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "6648": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"a\""
      ]
    },
    "6649": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6650": {
      "op": "bytec 5 // \"b\"",
      "defined_out": [
        "\"b\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"b\""
      ]
    },
    "6652": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "6653": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "6654": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "6657": {
      "op": "bytec 5 // \"b\"",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0",
        "\"b\""
      ]
    },
    "6659": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "6660": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "6662": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "2"
      ]
    },
    "6663": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "6664": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "6667": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "4"
      ]
    },
    "6669": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "6670": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "6673": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6674": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "6676": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "6677": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "6679": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "6680": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "6681": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "6684": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "6685": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%1#0",
        "tmp%0#0"
      ]
    },
    "6687": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%concat%0#0"
      ]
    },
    "6688": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ]
    },
    "6690": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "6691": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "2"
      ]
    },
    "6692": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "2",
        "2"
      ]
    },
    "6693": {
      "op": "*",
      "defined_out": [
        "prefix#0",
        "start_of_tail%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0"
      ]
    },
    "6694": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg#0 (copy)",
        "prefix#0",
        "start_of_tail%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "arg#0 (copy)"
      ]
    },
    "6696": {
      "op": "len",
      "defined_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0"
      ]
    },
    "6697": {
      "op": "frame_dig -1",
      "stack_out": [
        "prefix#0",
        "start_of_tail%0#0",
        "total_length%0#0",
        "arg#0 (copy)"
      ]
    },
    "6699": {
      "op": "uncover 2",
      "stack_out": [
        "prefix#0",
        "total_length%0#0",
        "arg#0 (copy)",
        "start_of_tail%0#0"
      ]
    },
    "6701": {
      "op": "uncover 2",
      "stack_out": [
        "prefix#0",
        "arg#0 (copy)",
        "start_of_tail%0#0",
        "total_length%0#0"
      ]
    },
    "6703": {
      "op": "substring3",
      "defined_out": [
        "data%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "data%0#0"
      ]
    },
    "6704": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "data%0#0",
        "2"
      ]
    },
    "6705": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "6708": {
      "retsub": true,
      "op": "retsub"
    },
    "6709": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "params": {
        "arg.0#0": "bytes",
        "arg.1#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "6712": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple_block@0"
    },
    "6715": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple_block@0",
      "stack_in": [],
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\""
      ],
      "stack_out": [
        "\"a\""
      ]
    },
    "6716": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "6717": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "6718": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "6721": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"a\""
      ]
    },
    "6722": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6723": {
      "op": "bytec 5 // \"b\"",
      "defined_out": [
        "\"b\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"b\""
      ]
    },
    "6725": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "6726": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "6727": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "6730": {
      "op": "bytec 5 // \"b\"",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0",
        "\"b\""
      ]
    },
    "6732": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "6733": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "6735": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "2"
      ]
    },
    "6736": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "6737": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "6740": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "4"
      ]
    },
    "6742": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%len_u16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "6743": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "6746": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "6747": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "6749": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "6750": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "6752": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "6753": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "6754": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "6757": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "6758": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%1#0",
        "tmp%0#0"
      ]
    },
    "6760": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%concat%0#0"
      ]
    },
    "6761": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ]
    },
    "6763": {
      "op": "concat",
      "defined_out": [
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0"
      ]
    },
    "6764": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x"
      ]
    },
    "6765": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "arg.0#0 (copy)",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "0x",
        "arg.0#0 (copy)"
      ]
    },
    "6767": {
      "op": "concat",
      "defined_out": [
        "concat%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "concat%0#0"
      ]
    },
    "6768": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg.1#0 (copy)",
        "concat%0#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "concat%0#0",
        "arg.1#0 (copy)"
      ]
    },
    "6770": {
      "op": "concat",
      "defined_out": [
        "concat%1#0",
        "prefix#0"
      ],
      "stack_out": [
        "prefix#0",
        "concat%1#0"
      ]
    },
    "6771": {
      "op": "intc_2 // 2",
      "stack_out": [
        "prefix#0",
        "concat%1#0",
        "2"
      ]
    },
    "6772": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "6775": {
      "retsub": true,
      "op": "retsub"
    },
    "6776": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "params": {
        "imm1#0": "bytes",
        "imm2#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "6779": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic_block@0"
    },
    "6782": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "imm1#0 (copy)"
      ]
    },
    "6784": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "imm1#0 (copy)",
        "0"
      ]
    },
    "6785": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0"
      ]
    },
    "6786": {
      "op": "frame_dig -2",
      "stack_out": [
        "extract_uint16%0#0",
        "imm1#0 (copy)"
      ]
    },
    "6788": {
      "op": "len",
      "defined_out": [
        "extract_uint16%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "total_length%0#0"
      ]
    },
    "6789": {
      "op": "frame_dig -2",
      "stack_out": [
        "extract_uint16%0#0",
        "total_length%0#0",
        "imm1#0 (copy)"
      ]
    },
    "6791": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "imm1#0 (copy)",
        "total_length%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "total_length%0#0",
        "imm1#0 (copy)",
        "2"
      ]
    },
    "6792": {
      "op": "uncover 2",
      "stack_out": [
        "extract_uint16%0#0",
        "imm1#0 (copy)",
        "2",
        "total_length%0#0"
      ]
    },
    "6794": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6795": {
      "op": "frame_dig -1",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "imm2#0 (copy)"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "imm2#0 (copy)"
      ]
    },
    "6797": {
      "op": "len",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "total_length%1#0"
      ]
    },
    "6798": {
      "op": "frame_dig -1",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "total_length%1#0",
        "imm2#0 (copy)"
      ]
    },
    "6800": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "total_length%1#0",
        "imm2#0 (copy)",
        "2"
      ]
    },
    "6801": {
      "op": "uncover 2",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "imm2#0 (copy)",
        "2",
        "total_length%1#0"
      ]
    },
    "6803": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0"
      ]
    },
    "6804": {
      "op": "frame_dig -1",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "imm2#0 (copy)"
      ]
    },
    "6806": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "imm2#0 (copy)",
        "0"
      ]
    },
    "6807": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "tmp%0#0"
      ]
    },
    "6808": {
      "op": "uncover 3",
      "stack_out": [
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "tmp%0#0",
        "extract_uint16%0#0"
      ]
    },
    "6810": {
      "op": "uncover 3",
      "stack_out": [
        "extract_to_end%1#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "6812": {
      "op": "uncover 2",
      "stack_out": [
        "extract_to_end%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0"
      ]
    },
    "6814": {
      "op": "uncover 3",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "extract_to_end%1#0"
      ]
    },
    "6816": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "6819": {
      "retsub": true,
      "op": "retsub"
    },
    "6820": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "params": {
        "imm#0": "bytes"
      },
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "6823": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4_block@0"
    },
    "6826": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "6828": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0 (copy)",
        "0"
      ]
    },
    "6829": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6830": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "6831": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6832": {
      "error": "expected non empty array",
      "op": "assert // expected non empty array",
      "stack_out": []
    },
    "6833": {
      "op": "frame_dig -1",
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "6835": {
      "op": "intc_0 // 0",
      "stack_out": [
        "imm#0 (copy)",
        "0"
      ]
    },
    "6836": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "6837": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "1"
      ]
    },
    "6838": {
      "op": "-",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "6839": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "imm#0 (copy)"
      ]
    },
    "6841": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%0#0"
      ]
    },
    "6842": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%0#0",
        "imm#0 (copy)"
      ]
    },
    "6844": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "imm#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%0#0",
        "imm#0 (copy)",
        "2"
      ]
    },
    "6845": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "imm#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "6847": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "6848": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0",
        "0"
      ]
    },
    "6849": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "aggregate%array_trimmed%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0",
        "0",
        "16"
      ]
    },
    "6851": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "6852": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "6854": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "array_item%0#0"
      ]
    },
    "6855": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%0#0",
        "tmp%3#0"
      ]
    },
    "6857": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "array_item%0#0",
        "tmp%3#0",
        "16"
      ]
    },
    "6859": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "6860": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_item%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "6861": {
      "op": "+",
      "defined_out": [
        "aggregate%write_offset_with_length_header%0#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "6862": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_item%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "imm#0 (copy)"
      ]
    },
    "6864": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%0#0",
        "imm#0 (copy)",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "6866": {
      "op": "uncover 2",
      "stack_out": [
        "imm#0 (copy)",
        "aggregate%write_offset_with_length_header%0#0",
        "array_item%0#0"
      ]
    },
    "6868": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "6869": {
      "op": "dup"
    },
    "6870": {
      "op": "frame_bury -1",
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "6872": {
      "retsub": true,
      "op": "retsub"
    },
    "6873": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "params": {},
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "6876": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "item_index_internal%0#0"
      ]
    },
    "6877": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_block@0"
    },
    "6880": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_block@0",
      "stack_in": [
        "item_index_internal%0#0"
      ],
      "op": "pushint 48 // 48",
      "defined_out": [
        "48"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "48"
      ]
    },
    "6882": {
      "op": "bzero",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "6883": {
      "op": "dup",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0"
      ]
    },
    "6884": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%1#0"
      ]
    },
    "6886": {
      "op": "intc_1 // 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%1#0",
        "1"
      ]
    },
    "6887": {
      "op": "+",
      "defined_out": [
        "arr1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0"
      ]
    },
    "6888": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "6890": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0",
        "2"
      ]
    },
    "6891": {
      "op": "+",
      "defined_out": [
        "arr1#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "6892": {
      "op": "cover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "tmp%2#0"
      ]
    },
    "6894": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "arr1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6895": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "arr1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "6896": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "6898": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "arr1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "aggregate%head%0#0"
      ]
    },
    "6899": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "aggregate%head%0#0",
        "tmp%4#0"
      ]
    },
    "6901": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "6902": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%5#0"
      ]
    },
    "6903": {
      "op": "dup",
      "defined_out": [
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)"
      ]
    },
    "6904": {
      "op": "cover 2",
      "defined_out": [
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0"
      ]
    },
    "6906": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "0x"
      ]
    },
    "6907": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "0x",
        "struct12#0 (copy)"
      ]
    },
    "6909": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%2#0"
      ]
    },
    "6910": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%2#0",
        "struct12#0 (copy)"
      ]
    },
    "6912": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%3#0"
      ]
    },
    "6913": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%3#0",
        "struct12#0 (copy)"
      ]
    },
    "6915": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "encoded_array%0#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "encoded_array%0#0"
      ]
    },
    "6916": {
      "op": "dup",
      "defined_out": [
        "arr1#0",
        "arr2#0 (copy)",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "arr2#0 (copy)",
        "arr2#0 (copy)"
      ]
    },
    "6917": {
      "op": "cover 2",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "arr2#0 (copy)",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "arr2#0 (copy)"
      ]
    },
    "6919": {
      "op": "cover 3",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ]
    },
    "6921": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "0x"
      ]
    },
    "6922": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "0x",
        "struct12#0 (copy)"
      ]
    },
    "6924": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "aggregate%head%5#0"
      ]
    },
    "6925": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "aggregate%head%5#0",
        "struct12#0 (copy)"
      ]
    },
    "6927": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "aggregate%head%6#0"
      ]
    },
    "6928": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "aggregate%head%6#0",
        "struct12#0"
      ]
    },
    "6930": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0"
      ]
    },
    "6931": {
      "op": "uncover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr2#0",
        "arr3#0",
        "arr1#0"
      ]
    },
    "6933": {
      "op": "dig 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr2#0",
        "arr3#0",
        "arr1#0",
        "arr2#0 (copy)"
      ]
    },
    "6935": {
      "op": "!=",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "struct12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr2#0",
        "arr3#0",
        "tmp%6#0"
      ]
    },
    "6936": {
      "error": "expected arrays to be different",
      "op": "assert // expected arrays to be different",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr2#0",
        "arr3#0"
      ]
    },
    "6937": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "tmp%7#0"
      ]
    },
    "6938": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0"
      ]
    },
    "6939": {
      "op": "intc_1 // 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "1"
      ]
    },
    "6940": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0"
      ]
    },
    "6941": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "6942": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@1"
    },
    "6945": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@1",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6947": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "3"
      ]
    },
    "6949": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "6950": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_after_for@4",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "6953": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_body@2"
    },
    "6956": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_body@2",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "6958": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "i#0",
        "16"
      ]
    },
    "6960": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "6961": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "aggregate%write_offset%0#0",
        "arr1#0"
      ]
    },
    "6963": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "6965": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr1#0",
        "struct12#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "aggregate%write_offset%0#0",
        "struct12#0"
      ]
    },
    "6967": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "struct12#0",
        "updated_array%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "updated_array%0#0"
      ]
    },
    "6968": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr1#0",
        "struct12#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "6970": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_footer@3"
    },
    "6973": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_footer@3",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6975": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "6976": {
      "op": "+",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "6977": {
      "op": "frame_bury 4",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "6979": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@1"
    },
    "6982": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_after_for@4",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0"
      ]
    },
    "6984": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "arr2#0"
      ]
    },
    "6986": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "tmp%8#0"
      ]
    },
    "6987": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "6988": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "6989": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "6991": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@5"
    },
    "6994": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@5",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "6996": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "3"
      ]
    },
    "6998": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "6999": {
      "op": "bz test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_after_for@8",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "7002": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_body@6"
    },
    "7005": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_body@6",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "7007": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "16"
      ]
    },
    "7009": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "7010": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "arr1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "aggregate%bytes_offset%1#0",
        "arr1#0"
      ]
    },
    "7012": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "7014": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "7016": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct_it#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "struct_it#0"
      ]
    },
    "7017": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0",
        "struct_it#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "struct_it#0",
        "struct12#0"
      ]
    },
    "7019": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "tmp%9#0"
      ]
    },
    "7020": {
      "error": "expected items on iteration to be the same",
      "op": "assert // expected items on iteration to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "7021": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_footer@7"
    },
    "7024": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_footer@7",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "7026": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "7027": {
      "op": "+",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "7028": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "7030": {
      "op": "b test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_for_header@5"
    },
    "7033": {
      "block": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr_after_for@8",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ],
      "op": "bytec 6 // \"imm_fixed_arr\"",
      "defined_out": [
        "\"imm_fixed_arr\""
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "\"imm_fixed_arr\""
      ]
    },
    "7035": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"imm_fixed_arr\"",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "\"imm_fixed_arr\"",
        "arr1#0"
      ]
    },
    "7037": {
      "op": "dup",
      "defined_out": [
        "\"imm_fixed_arr\"",
        "arr1#0",
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "\"imm_fixed_arr\"",
        "arr1#0 (copy)",
        "arr1#0 (copy)"
      ]
    },
    "7038": {
      "op": "cover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "\"imm_fixed_arr\"",
        "arr1#0 (copy)"
      ]
    },
    "7040": {
      "op": "app_global_put",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0"
      ]
    },
    "7041": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "0"
      ]
    },
    "7042": {
      "op": "bytec 6 // \"imm_fixed_arr\"",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "0",
        "\"imm_fixed_arr\""
      ]
    },
    "7044": {
      "op": "app_global_get_ex",
      "defined_out": [
        "arr1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "7045": {
      "error": "check self.imm_fixed_arr exists",
      "op": "assert // check self.imm_fixed_arr exists",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "maybe_value%0#0"
      ]
    },
    "7046": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "maybe_value%0#0",
        "arr2#0"
      ]
    },
    "7048": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "arr1#0",
        "tmp%10#0"
      ]
    },
    "7049": {
      "error": "expected array in storage to be the same",
      "op": "assert // expected array in storage to be the same",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0"
      ]
    },
    "7050": {
      "op": "dup",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "mut_arr#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "mut_arr#0 (copy)"
      ]
    },
    "7051": {
      "callsub": "test_cases.array.immutable.sum_imm_fixed",
      "op": "callsub sum_imm_fixed",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "tmp%13#0"
      ]
    },
    "7054": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "tmp%13#0",
        "15"
      ]
    },
    "7056": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "tmp%14#0"
      ]
    },
    "7057": {
      "error": "expected sum to be 15",
      "op": "assert // expected sum to be 15",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0"
      ]
    },
    "7058": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "0"
      ]
    },
    "7059": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "7060": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "7061": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "7063": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "aggregate%head%8#0"
      ]
    },
    "7064": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "aggregate%head%8#0",
        "0"
      ]
    },
    "7065": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%8#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "aggregate%head%8#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "7066": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "tmp%15#0"
      ]
    },
    "7067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "tmp%15#0",
        "0"
      ]
    },
    "7068": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "0",
        "16",
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "tmp%15#0",
        "0",
        "16"
      ]
    },
    "7070": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%1#0",
        "arr1#0",
        "arr2#0",
        "mut_arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "tmp%15#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "7071": {
      "op": "uncover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "tmp%15#0",
        "aggregate%write_offset%1#0",
        "mut_arr#0"
      ]
    },
    "7073": {
      "op": "uncover 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "tmp%15#0",
        "mut_arr#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "7075": {
      "op": "uncover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0",
        "aggregate%write_offset%1#0",
        "tmp%15#0"
      ]
    },
    "7077": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "mut_arr#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "mut_arr#0"
      ]
    },
    "7078": {
      "callsub": "test_cases.array.immutable.sum_imm_fixed",
      "op": "callsub sum_imm_fixed",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "tmp%17#0"
      ]
    },
    "7081": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr1#0",
        "arr2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "tmp%17#0",
        "10"
      ]
    },
    "7083": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "tmp%18#0"
      ]
    },
    "7084": {
      "error": "expected sum to be 10",
      "op": "assert // expected sum to be 10",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0"
      ]
    },
    "7085": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "7086": {
      "op": "bytec 6 // \"imm_fixed_arr\"",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "0",
        "\"imm_fixed_arr\""
      ]
    },
    "7088": {
      "op": "app_global_get_ex",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "7089": {
      "error": "check self.imm_fixed_arr exists",
      "op": "assert // check self.imm_fixed_arr exists",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "value_internal%0#0",
        "maybe_value%1#0"
      ]
    },
    "7090": {
      "op": "frame_bury 0"
    },
    "7092": {
      "retsub": true,
      "op": "retsub"
    },
    "7093": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "b _puya_lib.mem.new_slot@entry"
    },
    "7096": {
      "block": "_puya_lib.mem.new_slot@entry",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "7098": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "7099": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "7101": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "7104": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "7106": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "7107": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "7108": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "7109": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "7111": {
      "retsub": true,
      "op": "retsub"
    }
  }
}