{
  "version": 3,
  "sources": [
    "../uint64.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAyKK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAjBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAlCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhHL;;;AAAA;AAgHK;;;AAAA;;;;AAnBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAtBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAZA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AApCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AADL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AAmLA;;;;;AAEI;;AACA;;AACa;AAAA;AAA+B;;AAAhC;AAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAGF;AAAV;;;AAEc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAd;;;AACY;;AAAQ;AAAR;AAAA;;;;;AAEU;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;;AAAA;AAAd;;;AAEe;;AAAA;AAAA;AAAf;;;;;;;;;;;;;;;;;;;;AA+BO;;AAAA;AAAP;;;AACQ;;AAAA;;AAAA;;AAAA;;;AAED;;AAAA;;AAAA;AAAP;;;AACQ;;AAAA;;AAAA;;AAAA;;;;AAjCI;;AAAS;AAAT;AAAA;;;;;AAGG;;AAAA;;AAAA;AAAf;;;AACwC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAApC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACQ;AAAR;AAAA;;AAEG;AAAA;AAAnB;;;;;;;;;;;AACoB;;;AACJ;;AAAS;AAAT;AAAA;AAAA;;AAEG;;AAAA;AAAnB;;;AACoB;;;;;;;;;;;AAGJ;;;AAED;;AAAA;;AAAA;AAAf;;;AACgB;;AAAQ;AAAR;AAAA;;AAEG;;AAAA;AAAA;AAAA;;;;AAAnB;;;AACoB;;AAAS;AAAT;;;;;;;;;;;AAGJ;;;;;;AAYhB;;;AAEU;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACG;AAAb;AAAa;AAAA;;AAAO;AAAP;AAAb;;;AACQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;AAET;AAGJ;;;AAEe;;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AAAvB;AAAP;;AAGJ;;;AAEI;;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAY;;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AAGJ;;;AAEa;AAAb;AAAa;AAAA;;AAAA;;AAAA;AAAb;;;AACQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;;AAIb;;;AAEc;AAAd;AAAc;AAAA;;AAAA;;AAAA;AAAd;;;AACiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACF;;AAAA;AAAP;AACA;;AAAY;AAAZ;AAAA;;AAHM;;AAAA;AAAA;AAAA;;;;;;AAMd;;;AAEe;;AAAA;AAAA;AAAA;AAAA;AAAX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AAzQU;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACC;AAAA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEA;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEA;AAAW;AAAX;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEA;AAAa;;AAAoB;;AAAjC;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAP;AAEA;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEA;AAAW;;AAAX;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEA;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEA;AAAA;;AAAA;;;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAA;AAAA;AAAA;AAA2B;;AAA3B;AAAA;;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;;AAIM;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACN;AAAW;AAAX;;;AACO;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACP;AAAA;AAAY;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;AAAY;;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;AAAY;;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;;AAIM;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACN;AAAW;AAAX;;;AACA;AAAA;AAAW;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;;;AAMR;;;AAEgB;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACC;AAAjB;AAAiB;AAAA;;AAAO;;AAAP;AAAjB;;;AACY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;AAEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB;;AAAhB;AAAP;AAEA;AAAA;AAAa;;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAER;;;AAEgB;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACC;AAAjB;AAAiB;AAAA;;AAAO;AAAP;AAAjB;;;AACY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;;;;;AAEA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAT;AAEA;AAAA;AAAa;AAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAgB;;AAAhB;AAAP;AACa;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AAAP;AAEO;;AAAA;AAAA;AAAA;AAAA;AAAiB;AAAjB;AAAP;AACc;;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAgB;;AAAhB;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAiB;AAAjB;AAAP;AACa;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAb;AAAP;AACO;AAAA;AAAM;;AAAN;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAP;AACO;AAAA;AAAM;AAAN;AAAA;AAAA;AAAA;AAAA;AAAY;AAAZ;AAAP;AACO;AAAM;;AAAN;AAAA;AAAA;AAAA;AAAA;AAAY;AAAZ;AAAP;;AAIM;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACN;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;;AAAA;AAAqC;AAAA;;;AAArC;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AACO;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;AAAV;AAAP;AACO;AAAA;AAAI;;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AACO;AAAA;AAAI;;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AACO;AAAA;AAAI;;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;AAAV;AAAP;AACO;AAAA;AAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AAEwC;AAAA;;;AAA8B;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApC;;AAAA;;;AAAA;AAA8B;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AACO;AAAA;AAAI;;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AACO;AAAA;AAAI;;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;AACO;AAAI;;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAU;;AAAV;AAAP;;AAER;;;AAEkB;AAAlB;AAAkB;AAAA;;AAAA;;AAAA;AAAlB;;;AACyB;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACK;AAAlB;;;AAFM;;AAAA;AAAA;AAAA;;;;;;AAIlB;;;;;;;AAEc;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACK;AAAnB;AAAmB;AAAA;;AAAO;AAAP;AAAnB;;;AACY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;;AAAA;AAAA;AAAA;;;;;AAEJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAGO;AAAP;;AACR;AAAA;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;AACA;;;;;;;;;;;AAGZ;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACmB;AAAP;;;;;;;;;;AAGZ;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;AACA;;;;;AAEO;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAX;;AACa;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAb;;AACS;AAAjB;AAAiB;AAAL;;AAAK;;AAAO;AAAP;AAAjB;;;AAC4B;;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACkB;AAAlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFK;;AAAA;AAAA;AAAA;;;;;AAGM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AACR;AAAA;AAAA;AAAuB;;AAAvB;AAAP;AACO;AAAA;;;AAAa;AAAb;AAAA;AAAA;AAAA;AAAmB;AAAnB;AAAP;AACO;AAAA;;;AAAa;;AAAb;AAAA;AAAA;AAAA;AAAmB;AAAnB;AAAP;AACO;AAAA;;;AAAa;AAAb;AAAA;AAAA;AAAA;AAAmB;AAAnB;AAAP;AACO;;;AAAa;;AAAb;AAAA;AAAA;AAAA;AAAmB;AAAnB;AAAP;;AAER;;;;;;AAGc;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACG;;AAAA;AAAjB;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;AACuB;AAAX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AACG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAGiC;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AAAjC;;AAAsB;AAAtB;;AAAA;;;AAGO;AAAP;;AACR;AAAA;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;AACA;;;;;;;;;;;;AAIE;;;AACC;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AACP;;AAAA;AAAA;AAAY;AAAZ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;;;AACA;;AAAA;AAAY;AAAZ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AAAP;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 8 1 0 5 512"
    },
    "9": {
      "op": "bytecblock 0x 0x0000000000000000 0x0000000000000004"
    },
    "30": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "64": {
      "op": "store 0"
    },
    "66": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "68": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "69": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "70": {
      "op": "bz main_bare_routing@16",
      "stack_out": []
    },
    "73": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "76": {
      "op": "pushbytes 0xa33be873 // method \"test_array()void\"",
      "defined_out": [
        "Method(test_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)"
      ]
    },
    "82": {
      "op": "pushbytes 0xe0c378e9 // method \"test_array_extend()void\"",
      "defined_out": [
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)"
      ]
    },
    "88": {
      "op": "pushbytes 0x366f509d // method \"test_array_multiple_append()void\"",
      "defined_out": [
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)"
      ]
    },
    "94": {
      "op": "pushbytes 0x58351a50 // method \"overhead()void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)"
      ]
    },
    "100": {
      "op": "pushbytes 0xfa99e984 // method \"test_array_too_long()void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)"
      ]
    },
    "106": {
      "op": "pushbytes 0xa20e440f // method \"test_array_copy_and_extend()void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_array()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)"
      ]
    },
    "112": {
      "op": "pushbytes 0x179ac3f9 // method \"test_array_evaluation_order()void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_array()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)"
      ]
    },
    "118": {
      "op": "pushbytes 0xf17f6f0a // method \"test_allocations(uint64)void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_array()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_allocations(uint64)void)"
      ]
    },
    "124": {
      "op": "pushbytes 0x845e1b4e // method \"test_iteration()void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_array()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "Method(test_iteration()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_iteration()void)"
      ]
    },
    "130": {
      "op": "pushbytes 0x7621cfd1 // method \"test_quicksort()void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_array()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)"
      ]
    },
    "136": {
      "op": "pushbytes 0x5661a67c // method \"test_unobserved_write()void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_array()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)",
        "Method(test_unobserved_write()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)",
        "Method(test_unobserved_write()void)"
      ]
    },
    "142": {
      "op": "uncover 11",
      "stack_out": [
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)",
        "Method(test_unobserved_write()void)",
        "tmp%2#0"
      ]
    },
    "144": {
      "op": "match main_test_array_route@3 main_test_array_extend_route@4 main_test_array_multiple_append_route@5 main_overhead_route@6 main_test_array_too_long_route@7 main_test_array_copy_and_extend_route@8 main_test_array_evaluation_order_route@9 main_test_allocations_route@10 main_test_iteration_route@11 main_test_quicksort_route@12 main_test_unobserved_write_route@13",
      "stack_out": []
    },
    "168": {
      "block": "main_after_if_else@20",
      "stack_in": [],
      "op": "intc_2 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "169": {
      "block": "main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "170": {
      "block": "main_test_unobserved_write_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "172": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "NoOp"
      ]
    },
    "173": {
      "op": "==",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "174": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "175": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "177": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "0"
      ]
    },
    "178": {
      "op": "!=",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "179": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "180": {
      "callsub": "test_cases.array.uint64.Contract.test_unobserved_write",
      "op": "callsub test_unobserved_write"
    },
    "183": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "184": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "187": {
      "block": "main_test_quicksort_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "189": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "NoOp"
      ]
    },
    "190": {
      "op": "==",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "191": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "192": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "194": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "0"
      ]
    },
    "195": {
      "op": "!=",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "196": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "197": {
      "callsub": "test_cases.array.uint64.Contract.test_quicksort",
      "op": "callsub test_quicksort"
    },
    "200": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "201": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "204": {
      "block": "main_test_iteration_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "206": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "NoOp"
      ]
    },
    "207": {
      "op": "==",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "208": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "209": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "211": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "0"
      ]
    },
    "212": {
      "op": "!=",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "213": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "214": {
      "callsub": "test_cases.array.uint64.Contract.test_iteration",
      "op": "callsub test_iteration"
    },
    "217": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "218": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "221": {
      "block": "main_test_allocations_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "223": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "NoOp"
      ]
    },
    "224": {
      "op": "==",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "225": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "226": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "228": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "0"
      ]
    },
    "229": {
      "op": "!=",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "230": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "231": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "234": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "235": {
      "callsub": "test_cases.array.uint64.Contract.test_allocations",
      "op": "callsub test_allocations",
      "stack_out": []
    },
    "238": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "239": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "242": {
      "block": "main_test_array_evaluation_order_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "244": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "NoOp"
      ]
    },
    "245": {
      "op": "==",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "246": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "247": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "249": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0"
      ]
    },
    "250": {
      "op": "!=",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "251": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "252": {
      "callsub": "test_cases.array.uint64.Contract.test_array_evaluation_order",
      "op": "callsub test_array_evaluation_order"
    },
    "255": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "256": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "259": {
      "block": "main_test_array_copy_and_extend_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "261": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "NoOp"
      ]
    },
    "262": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "263": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "264": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "266": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "0"
      ]
    },
    "267": {
      "op": "!=",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "268": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "269": {
      "callsub": "test_cases.array.uint64.Contract.test_array_copy_and_extend",
      "op": "callsub test_array_copy_and_extend"
    },
    "272": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "273": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "276": {
      "block": "main_test_array_too_long_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "278": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "NoOp"
      ]
    },
    "279": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "280": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "281": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "283": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "0"
      ]
    },
    "284": {
      "op": "!=",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "285": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "286": {
      "callsub": "test_cases.array.uint64.Contract.test_array_too_long",
      "op": "callsub test_array_too_long"
    },
    "289": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "290": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "293": {
      "block": "main_overhead_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "295": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "NoOp"
      ]
    },
    "296": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "297": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "298": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "300": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "0"
      ]
    },
    "301": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "302": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "303": {
      "callsub": "test_cases.array.uint64.Contract.overhead",
      "op": "callsub overhead"
    },
    "306": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "307": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "310": {
      "block": "main_test_array_multiple_append_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "312": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "NoOp"
      ]
    },
    "313": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "314": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "315": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "317": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "318": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "319": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "320": {
      "callsub": "test_cases.array.uint64.Contract.test_array_multiple_append",
      "op": "callsub test_array_multiple_append"
    },
    "323": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "324": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "327": {
      "block": "main_test_array_extend_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "329": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "330": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "331": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "332": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "334": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "335": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "336": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "337": {
      "callsub": "test_cases.array.uint64.Contract.test_array_extend",
      "op": "callsub test_array_extend"
    },
    "340": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "341": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "344": {
      "block": "main_test_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "346": {
      "op": "intc_2 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "347": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "348": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "349": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "351": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "352": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "353": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "354": {
      "callsub": "test_cases.array.uint64.Contract.test_array",
      "op": "callsub test_array"
    },
    "357": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "358": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "361": {
      "block": "main_bare_routing@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "363": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "0"
      ]
    },
    "364": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%48#0"
      ]
    },
    "365": {
      "op": "match main___algopy_default_create@17",
      "stack_out": []
    },
    "369": {
      "block": "main_switch_case_next@19",
      "stack_in": [],
      "op": "b main_after_if_else@20"
    },
    "372": {
      "block": "main___algopy_default_create@17",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "374": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "0"
      ]
    },
    "375": {
      "op": "==",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "376": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "377": {
      "block": "main_after_inlined_test_cases.array.uint64.Contract.__algopy_default_create@23",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "378": {
      "op": "b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@21"
    },
    "381": {
      "subroutine": "test_cases.array.uint64.quicksort_window",
      "params": {
        "arr#0": "uint64",
        "window_left#0": "uint64",
        "window_right#0": "uint64"
      },
      "block": "quicksort_window",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "384": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "left#20"
      ]
    },
    "385": {
      "op": "dup",
      "stack_out": [
        "left#20",
        "right#17"
      ]
    },
    "386": {
      "block": "quicksort_window_block@0",
      "stack_in": [
        "left#20",
        "right#17"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0"
      ]
    },
    "388": {
      "op": "frame_dig -1",
      "defined_out": [
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0"
      ]
    },
    "390": {
      "op": "dup2",
      "defined_out": [
        "left#0",
        "right#0",
        "window_left#0 (copy)",
        "window_right#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "window_left#0 (copy)",
        "window_right#0 (copy)"
      ]
    },
    "391": {
      "op": "+",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "tmp%0#0"
      ]
    },
    "392": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "left#0",
        "right#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "tmp%0#0",
        "2"
      ]
    },
    "394": {
      "op": "/",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "tmp%1#0"
      ]
    },
    "395": {
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)",
        "left#0",
        "right#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "tmp%1#0",
        "arr#0 (copy)"
      ]
    },
    "397": {
      "op": "loads",
      "defined_out": [
        "left#0",
        "right#0",
        "slot_contents%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "tmp%1#0",
        "slot_contents%0#0"
      ]
    },
    "398": {
      "op": "swap",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "slot_contents%0#0",
        "tmp%1#0"
      ]
    },
    "399": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "left#0",
        "right#0",
        "slot_contents%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "slot_contents%0#0",
        "tmp%1#0",
        "8"
      ]
    },
    "400": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "left#0",
        "right#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "slot_contents%0#0",
        "bytes_offset%0#0"
      ]
    },
    "401": {
      "op": "intc_0 // 8",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "slot_contents%0#0",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "402": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "encoded_element%0#0"
      ]
    },
    "403": {
      "op": "btoi",
      "defined_out": [
        "left#0",
        "pivot#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "404": {
      "block": "quicksort_window_while_top@1",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#20"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#20"
      ]
    },
    "406": {
      "op": "frame_bury 0",
      "defined_out": [
        "left#20"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "408": {
      "op": "frame_dig 3",
      "defined_out": [
        "left#20",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#17"
      ]
    },
    "410": {
      "op": "frame_bury 1",
      "defined_out": [
        "left#20",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "412": {
      "op": "intc_1 // 1",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "1"
      ]
    },
    "413": {
      "op": "bz quicksort_window_after_while@22",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "416": {
      "block": "quicksort_window_while_top@3",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)"
      ]
    },
    "418": {
      "op": "loads",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%1#0"
      ]
    },
    "419": {
      "op": "frame_dig 2",
      "defined_out": [
        "left#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%1#0",
        "left#0"
      ]
    },
    "421": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "left#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%1#0",
        "left#0",
        "8"
      ]
    },
    "422": {
      "op": "*",
      "defined_out": [
        "bytes_offset%1#0",
        "left#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%1#0",
        "bytes_offset%1#0"
      ]
    },
    "423": {
      "op": "intc_0 // 8",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%1#0",
        "bytes_offset%1#0",
        "8"
      ]
    },
    "424": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%1#0",
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "encoded_element%1#0"
      ]
    },
    "425": {
      "op": "btoi",
      "defined_out": [
        "left#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%2#0"
      ]
    },
    "426": {
      "op": "frame_dig 4",
      "defined_out": [
        "left#0",
        "pivot#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%2#0",
        "pivot#0"
      ]
    },
    "428": {
      "op": "<",
      "defined_out": [
        "left#0",
        "pivot#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%3#0"
      ]
    },
    "429": {
      "op": "bz quicksort_window_after_while@5",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "432": {
      "block": "quicksort_window_while_body@4",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0"
      ]
    },
    "434": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0",
        "1"
      ]
    },
    "435": {
      "op": "+",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0"
      ]
    },
    "436": {
      "op": "frame_bury 2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "438": {
      "op": "b quicksort_window_while_top@3"
    },
    "441": {
      "block": "quicksort_window_while_top@6",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)"
      ]
    },
    "443": {
      "op": "loads",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%2#0"
      ]
    },
    "444": {
      "op": "frame_dig 3",
      "defined_out": [
        "right#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%2#0",
        "right#0"
      ]
    },
    "446": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "right#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%2#0",
        "right#0",
        "8"
      ]
    },
    "447": {
      "op": "*",
      "defined_out": [
        "bytes_offset%2#0",
        "right#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%2#0",
        "bytes_offset%2#0"
      ]
    },
    "448": {
      "op": "intc_0 // 8",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%2#0",
        "bytes_offset%2#0",
        "8"
      ]
    },
    "449": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%2#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "encoded_element%2#0"
      ]
    },
    "450": {
      "op": "btoi",
      "defined_out": [
        "right#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%4#0"
      ]
    },
    "451": {
      "op": "frame_dig 4",
      "defined_out": [
        "pivot#0",
        "right#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%4#0",
        "pivot#0"
      ]
    },
    "453": {
      "op": ">",
      "defined_out": [
        "pivot#0",
        "right#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%5#0"
      ]
    },
    "454": {
      "op": "bz quicksort_window_after_while@10",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "457": {
      "block": "quicksort_window_while_body@7",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "459": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "0"
      ]
    },
    "460": {
      "op": "==",
      "defined_out": [
        "right#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%6#0"
      ]
    },
    "461": {
      "op": "bz quicksort_window_after_if_else@9",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "464": {
      "block": "quicksort_window_block@21",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#20"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#20"
      ]
    },
    "466": {
      "op": "frame_bury 0",
      "defined_out": [
        "left#20"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "468": {
      "op": "frame_dig 3",
      "defined_out": [
        "left#20",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#17"
      ]
    },
    "470": {
      "op": "frame_bury 1",
      "defined_out": [
        "left#20",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "472": {
      "block": "quicksort_window_after_while@22",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0"
      ]
    },
    "474": {
      "op": "frame_bury 2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "476": {
      "op": "frame_dig 1",
      "defined_out": [
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "478": {
      "op": "dup",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "right#0"
      ]
    },
    "479": {
      "op": "frame_bury 3",
      "defined_out": [
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "481": {
      "op": "frame_dig -2",
      "defined_out": [
        "left#0",
        "right#0",
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "window_left#0 (copy)"
      ]
    },
    "483": {
      "op": ">",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%14#0"
      ]
    },
    "484": {
      "op": "bz quicksort_window_after_if_else@24",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "487": {
      "block": "quicksort_window_if_body@23",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)"
      ]
    },
    "489": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)",
        "window_left#0 (copy)"
      ]
    },
    "491": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr#0 (copy)",
        "right#0",
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)",
        "window_left#0 (copy)",
        "right#0"
      ]
    },
    "493": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "496": {
      "block": "quicksort_window_after_if_else@24",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0"
      ]
    },
    "498": {
      "op": "frame_dig -1",
      "defined_out": [
        "left#0",
        "window_right#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0",
        "window_right#0 (copy)"
      ]
    },
    "500": {
      "op": "<",
      "defined_out": [
        "left#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%15#0"
      ]
    },
    "501": {
      "op": "bz quicksort_window_after_if_else@26",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "504": {
      "block": "quicksort_window_if_body@25",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)"
      ]
    },
    "506": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr#0 (copy)",
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)",
        "left#0"
      ]
    },
    "508": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)",
        "left#0",
        "window_right#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)",
        "left#0",
        "window_right#0 (copy)"
      ]
    },
    "510": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "513": {
      "block": "quicksort_window_after_if_else@26",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "514": {
      "block": "quicksort_window_after_if_else@9",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "516": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "1"
      ]
    },
    "517": {
      "op": "-",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "518": {
      "op": "frame_bury 3",
      "defined_out": [
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "520": {
      "op": "b quicksort_window_while_top@6"
    },
    "523": {
      "block": "quicksort_window_after_while@10",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0"
      ]
    },
    "525": {
      "op": "frame_dig 3",
      "defined_out": [
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0",
        "right#0"
      ]
    },
    "527": {
      "op": "<",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%7#0"
      ]
    },
    "528": {
      "op": "bz quicksort_window_after_if_else@16",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "531": {
      "block": "quicksort_window_if_body@11",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "arr#0 (copy)"
      ]
    },
    "533": {
      "op": "loads",
      "defined_out": [
        "slot_contents%3#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%3#0"
      ]
    },
    "534": {
      "op": "frame_dig 3",
      "defined_out": [
        "right#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%3#0",
        "right#0"
      ]
    },
    "536": {
      "op": "dup",
      "defined_out": [
        "right#0",
        "right#0 (copy)",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "slot_contents%3#0",
        "right#0 (copy)",
        "right#0 (copy)"
      ]
    },
    "537": {
      "op": "cover 2",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "slot_contents%3#0",
        "right#0 (copy)"
      ]
    },
    "539": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "right#0",
        "right#0 (copy)",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "slot_contents%3#0",
        "right#0 (copy)",
        "8"
      ]
    },
    "540": {
      "op": "*",
      "defined_out": [
        "bytes_offset%3#0",
        "right#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "slot_contents%3#0",
        "bytes_offset%3#0"
      ]
    },
    "541": {
      "op": "intc_0 // 8",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "slot_contents%3#0",
        "bytes_offset%3#0",
        "8"
      ]
    },
    "542": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%3#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "encoded_element%3#0"
      ]
    },
    "543": {
      "op": "btoi",
      "defined_out": [
        "right#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%8#0"
      ]
    },
    "544": {
      "op": "frame_dig -3",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%8#0",
        "arr#0 (copy)"
      ]
    },
    "546": {
      "op": "loads",
      "defined_out": [
        "right#0",
        "slot_contents%4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%8#0",
        "slot_contents%4#0"
      ]
    },
    "547": {
      "op": "frame_dig 2",
      "defined_out": [
        "left#0",
        "right#0",
        "slot_contents%4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%8#0",
        "slot_contents%4#0",
        "left#0"
      ]
    },
    "549": {
      "op": "dup",
      "defined_out": [
        "left#0",
        "left#0 (copy)",
        "right#0",
        "slot_contents%4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%8#0",
        "slot_contents%4#0",
        "left#0 (copy)",
        "left#0 (copy)"
      ]
    },
    "550": {
      "op": "cover 3",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "tmp%8#0",
        "slot_contents%4#0",
        "left#0 (copy)"
      ]
    },
    "552": {
      "op": "intc_0 // 8",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "tmp%8#0",
        "slot_contents%4#0",
        "left#0 (copy)",
        "8"
      ]
    },
    "553": {
      "op": "*",
      "defined_out": [
        "bytes_offset%4#0",
        "left#0",
        "right#0",
        "slot_contents%4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "tmp%8#0",
        "slot_contents%4#0",
        "bytes_offset%4#0"
      ]
    },
    "554": {
      "op": "intc_0 // 8",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "tmp%8#0",
        "slot_contents%4#0",
        "bytes_offset%4#0",
        "8"
      ]
    },
    "555": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%4#0",
        "left#0",
        "right#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "tmp%8#0",
        "encoded_element%4#0"
      ]
    },
    "556": {
      "op": "btoi",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "557": {
      "op": "cover 2",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "tmp%8#0"
      ]
    },
    "559": {
      "op": "frame_dig -3",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "tmp%8#0",
        "arr#0 (copy)"
      ]
    },
    "561": {
      "op": "loads",
      "defined_out": [
        "left#0",
        "right#0",
        "slot_contents%5#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "tmp%8#0",
        "slot_contents%5#0"
      ]
    },
    "562": {
      "op": "swap",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "slot_contents%5#0",
        "tmp%8#0"
      ]
    },
    "563": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "left#0",
        "right#0",
        "slot_contents%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "slot_contents%5#0",
        "encoded_value%0#0"
      ]
    },
    "564": {
      "op": "dig 2",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "slot_contents%5#0",
        "encoded_value%0#0",
        "left#0 (copy)"
      ]
    },
    "566": {
      "op": "intc_0 // 8",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "slot_contents%5#0",
        "encoded_value%0#0",
        "left#0 (copy)",
        "8"
      ]
    },
    "567": {
      "op": "*",
      "defined_out": [
        "encoded_value%0#0",
        "left#0",
        "right#0",
        "slot_contents%5#0",
        "tmp%9#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "slot_contents%5#0",
        "encoded_value%0#0",
        "write_offset%0#0"
      ]
    },
    "568": {
      "op": "uncover 2",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "encoded_value%0#0",
        "write_offset%0#0",
        "slot_contents%5#0"
      ]
    },
    "570": {
      "op": "swap",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "encoded_value%0#0",
        "slot_contents%5#0",
        "write_offset%0#0"
      ]
    },
    "571": {
      "op": "uncover 2",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "slot_contents%5#0",
        "write_offset%0#0",
        "encoded_value%0#0"
      ]
    },
    "573": {
      "op": "replace3",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%9#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "updated_array%0#0"
      ]
    },
    "574": {
      "op": "frame_dig -3",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "updated_array%0#0",
        "arr#0 (copy)"
      ]
    },
    "576": {
      "op": "swap",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "arr#0 (copy)",
        "updated_array%0#0"
      ]
    },
    "577": {
      "op": "stores",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0"
      ]
    },
    "578": {
      "op": "frame_dig -3",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "arr#0 (copy)"
      ]
    },
    "580": {
      "op": "loads",
      "defined_out": [
        "left#0",
        "right#0",
        "slot_contents%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%9#0",
        "left#0",
        "slot_contents%6#0"
      ]
    },
    "581": {
      "op": "uncover 2",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "slot_contents%6#0",
        "tmp%9#0"
      ]
    },
    "583": {
      "op": "itob",
      "defined_out": [
        "encoded_value%1#0",
        "left#0",
        "right#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "slot_contents%6#0",
        "encoded_value%1#0"
      ]
    },
    "584": {
      "op": "dig 3",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "slot_contents%6#0",
        "encoded_value%1#0",
        "right#0 (copy)"
      ]
    },
    "586": {
      "op": "intc_0 // 8",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "slot_contents%6#0",
        "encoded_value%1#0",
        "right#0 (copy)",
        "8"
      ]
    },
    "587": {
      "op": "*",
      "defined_out": [
        "encoded_value%1#0",
        "left#0",
        "right#0",
        "slot_contents%6#0",
        "write_offset%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "slot_contents%6#0",
        "encoded_value%1#0",
        "write_offset%1#0"
      ]
    },
    "588": {
      "op": "uncover 2",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "encoded_value%1#0",
        "write_offset%1#0",
        "slot_contents%6#0"
      ]
    },
    "590": {
      "op": "swap",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "encoded_value%1#0",
        "slot_contents%6#0",
        "write_offset%1#0"
      ]
    },
    "591": {
      "op": "uncover 2",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "slot_contents%6#0",
        "write_offset%1#0",
        "encoded_value%1#0"
      ]
    },
    "593": {
      "op": "replace3",
      "defined_out": [
        "left#0",
        "right#0",
        "updated_array%1#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "updated_array%1#0"
      ]
    },
    "594": {
      "op": "frame_dig -3",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "updated_array%1#0",
        "arr#0 (copy)"
      ]
    },
    "596": {
      "op": "swap",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "arr#0 (copy)",
        "updated_array%1#0"
      ]
    },
    "597": {
      "op": "stores",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0"
      ]
    },
    "598": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0",
        "1"
      ]
    },
    "599": {
      "op": "+",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0"
      ]
    },
    "600": {
      "op": "frame_bury 2",
      "defined_out": [
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "602": {
      "op": "intc_2 // 0",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "0"
      ]
    },
    "603": {
      "op": "==",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%10#0"
      ]
    },
    "604": {
      "op": "bz quicksort_window_after_if_else@13",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "607": {
      "block": "quicksort_window_if_body@12",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#20"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#20"
      ]
    },
    "609": {
      "op": "frame_bury 0",
      "defined_out": [
        "left#20"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "611": {
      "op": "frame_dig 3",
      "defined_out": [
        "left#20",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#17"
      ]
    },
    "613": {
      "op": "frame_bury 1",
      "defined_out": [
        "left#20",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "615": {
      "op": "b quicksort_window_after_while@22"
    },
    "618": {
      "block": "quicksort_window_after_if_else@13",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "620": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "1"
      ]
    },
    "621": {
      "op": "-",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "622": {
      "op": "dup",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "right#0"
      ]
    },
    "623": {
      "op": "frame_bury 3",
      "defined_out": [
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "625": {
      "op": "frame_dig 2",
      "defined_out": [
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#0"
      ]
    },
    "627": {
      "op": ">=",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%11#0"
      ]
    },
    "628": {
      "op": "bz quicksort_window_after_if_else@15",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "631": {
      "block": "quicksort_window_if_body@14",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "b quicksort_window_while_top@1"
    },
    "634": {
      "block": "quicksort_window_after_if_else@15",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#20"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#20"
      ]
    },
    "636": {
      "op": "frame_bury 0",
      "defined_out": [
        "left#20"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "638": {
      "op": "frame_dig 3",
      "defined_out": [
        "left#20",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#17"
      ]
    },
    "640": {
      "op": "frame_bury 1",
      "defined_out": [
        "left#20",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "642": {
      "op": "b quicksort_window_after_while@22"
    },
    "645": {
      "block": "quicksort_window_after_if_else@16",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0"
      ]
    },
    "647": {
      "op": "frame_dig 3",
      "defined_out": [
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0",
        "right#0"
      ]
    },
    "649": {
      "op": "==",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%12#0"
      ]
    },
    "650": {
      "op": "bz quicksort_window_after_if_else@20",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "653": {
      "block": "quicksort_window_if_body@17",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0"
      ]
    },
    "655": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0",
        "1"
      ]
    },
    "656": {
      "op": "+",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "left#0"
      ]
    },
    "657": {
      "op": "frame_bury 2",
      "defined_out": [
        "left#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "659": {
      "op": "frame_dig 3",
      "defined_out": [
        "left#0",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "661": {
      "op": "dup",
      "defined_out": [
        "left#0",
        "right#0",
        "right#0 (copy)"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "right#0 (copy)"
      ]
    },
    "662": {
      "op": "intc_2 // 0",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "right#0 (copy)",
        "0"
      ]
    },
    "663": {
      "op": "!=",
      "defined_out": [
        "left#0",
        "right#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "tmp%13#0"
      ]
    },
    "664": {
      "op": "swap",
      "defined_out": [
        "left#0",
        "right#0",
        "right#17",
        "tmp%13#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%13#0",
        "right#17"
      ]
    },
    "665": {
      "op": "frame_bury 1",
      "defined_out": [
        "left#0",
        "right#0",
        "right#17",
        "tmp%13#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "tmp%13#0"
      ]
    },
    "667": {
      "op": "bz quicksort_window_after_if_else@19",
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "670": {
      "block": "quicksort_window_if_body@18",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "672": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "1"
      ]
    },
    "673": {
      "op": "-",
      "defined_out": [
        "right#0",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#17"
      ]
    },
    "674": {
      "op": "frame_bury 1",
      "defined_out": [
        "right#0",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "676": {
      "block": "quicksort_window_after_if_else@19",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0"
      ]
    },
    "678": {
      "op": "frame_dig 2",
      "defined_out": [
        "left#20",
        "right#0"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#0",
        "left#20"
      ]
    },
    "680": {
      "op": "frame_bury 0",
      "defined_out": [
        "left#20",
        "right#0",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0",
        "right#17"
      ]
    },
    "682": {
      "op": "frame_bury 1",
      "defined_out": [
        "left#20",
        "right#0",
        "right#17"
      ],
      "stack_out": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ]
    },
    "684": {
      "op": "b quicksort_window_after_while@22"
    },
    "687": {
      "block": "quicksort_window_after_if_else@20",
      "stack_in": [
        "left#20",
        "right#17",
        "left#0",
        "right#0",
        "pivot#0"
      ],
      "op": "b quicksort_window_block@21"
    },
    "690": {
      "subroutine": "test_cases.array.uint64.create_array",
      "params": {},
      "block": "create_array",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "693": {
      "block": "create_array_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "694": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "695": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "696": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "699": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "700": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "702": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "703": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "704": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr#0"
      ]
    },
    "705": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "706": {
      "block": "create_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "708": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "709": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "710": {
      "op": "bz create_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "713": {
      "block": "create_array_for_body@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "715": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "716": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "717": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "719": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "720": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "as_Encoded(uint64)%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "721": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "722": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "723": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "724": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%2#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "encoded%2#0"
      ]
    },
    "725": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "726": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "727": {
      "block": "create_array_for_footer@3",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "729": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "730": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "731": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "733": {
      "op": "b create_array_for_header@1"
    },
    "736": {
      "block": "create_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "737": {
      "subroutine": "test_cases.array.uint64.assert_last_is_zero",
      "params": {
        "arr#0": "uint64"
      },
      "block": "assert_last_is_zero",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "740": {
      "block": "assert_last_is_zero_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "742": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0"
      ]
    },
    "743": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1"
      ]
    },
    "744": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "745": {
      "op": "/",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "746": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "747": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "748": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%1#0",
        "arr#0 (copy)"
      ]
    },
    "750": {
      "op": "loads",
      "defined_out": [
        "slot_contents%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "slot_contents%1#0"
      ]
    },
    "751": {
      "op": "swap",
      "stack_out": [
        "slot_contents%1#0",
        "tmp%1#0"
      ]
    },
    "752": {
      "op": "intc_0 // 8",
      "stack_out": [
        "slot_contents%1#0",
        "tmp%1#0",
        "8"
      ]
    },
    "753": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "bytes_offset%0#0"
      ]
    },
    "754": {
      "op": "intc_0 // 8",
      "stack_out": [
        "slot_contents%1#0",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "755": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0"
      ],
      "stack_out": [
        "encoded_element%0#0"
      ]
    },
    "756": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "757": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "758": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "759": {
      "op": "assert",
      "stack_out": []
    },
    "760": {
      "retsub": true,
      "op": "retsub"
    },
    "761": {
      "subroutine": "test_cases.array.uint64.return_ref",
      "params": {
        "arr#0": "uint64",
        "arr2#0": "uint64"
      },
      "block": "return_ref",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "764": {
      "block": "return_ref_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "766": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0"
      ]
    },
    "767": {
      "op": "pushint 99 // 99",
      "defined_out": [
        "99",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "99"
      ]
    },
    "769": {
      "op": "itob",
      "defined_out": [
        "as_Encoded(uint64)%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "770": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "as_Encoded(uint64)%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "771": {
      "op": "swap",
      "stack_out": [
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "772": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "encoded%0#0"
      ]
    },
    "773": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "slot_contents%0#0",
        "encoded%0#0",
        "0x"
      ]
    },
    "774": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "775": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "776": {
      "op": "frame_dig -2",
      "stack_out": [
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "778": {
      "op": "swap",
      "stack_out": [
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "779": {
      "op": "stores",
      "stack_out": []
    },
    "780": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0 (copy)"
      ]
    },
    "782": {
      "op": "loads",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0"
      ]
    },
    "783": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "100"
      ]
    },
    "785": {
      "op": "itob",
      "defined_out": [
        "as_Encoded(uint64)%1#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "786": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "slot_contents%1#0",
        "as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "787": {
      "op": "swap",
      "stack_out": [
        "slot_contents%1#0",
        "0x",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "788": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "encoded%2#0"
      ]
    },
    "789": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "slot_contents%1#0",
        "encoded%2#0",
        "0x"
      ]
    },
    "790": {
      "op": "concat",
      "defined_out": [
        "encoded%3#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "encoded%3#0"
      ]
    },
    "791": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0"
      ]
    },
    "792": {
      "op": "frame_dig -1",
      "stack_out": [
        "concat%1#0",
        "arr2#0 (copy)"
      ]
    },
    "794": {
      "op": "swap",
      "stack_out": [
        "arr2#0 (copy)",
        "concat%1#0"
      ]
    },
    "795": {
      "op": "stores",
      "stack_out": []
    },
    "796": {
      "op": "frame_dig -2",
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "798": {
      "retsub": true,
      "op": "retsub"
    },
    "799": {
      "subroutine": "test_cases.array.uint64.add_x",
      "params": {
        "arr#0": "uint64",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "802": {
      "block": "add_x_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "803": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "804": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "805": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "807": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "809": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "810": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "813": {
      "block": "add_x_for_body@2",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "815": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "816": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "818": {
      "op": "itob",
      "defined_out": [
        "as_Encoded(uint64)%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "819": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "as_Encoded(uint64)%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "820": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "821": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "encoded%0#0"
      ]
    },
    "822": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "encoded%0#0",
        "0x"
      ]
    },
    "823": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "824": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "concat%0#0"
      ]
    },
    "825": {
      "op": "frame_dig -2",
      "stack_out": [
        "i#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "827": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "828": {
      "op": "stores",
      "stack_out": [
        "i#0"
      ]
    },
    "829": {
      "block": "add_x_for_footer@3",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "831": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "832": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "833": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "835": {
      "op": "b add_x_for_header@1"
    },
    "838": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "839": {
      "subroutine": "test_cases.array.uint64.pop_x",
      "params": {
        "arr#0": "uint64",
        "x#0": "uint64",
        "expected#0": "uint64"
      },
      "block": "pop_x",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "842": {
      "block": "pop_x_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "843": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "844": {
      "op": "intc_2 // 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "845": {
      "block": "pop_x_for_header@1",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "847": {
      "op": "frame_dig -2",
      "defined_out": [
        "_i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "x#0 (copy)"
      ]
    },
    "849": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "850": {
      "op": "bz pop_x_after_for@4",
      "stack_out": [
        "_i#0"
      ]
    },
    "853": {
      "block": "pop_x_for_body@2",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "arr#0 (copy)"
      ]
    },
    "855": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0"
      ]
    },
    "856": {
      "op": "dup",
      "defined_out": [
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ]
    },
    "857": {
      "op": "len",
      "defined_out": [
        "array%array_bytes_length%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_bytes_length%0#1"
      ]
    },
    "858": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "array%array_bytes_length%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_bytes_length%0#1",
        "8"
      ]
    },
    "859": {
      "op": "-",
      "defined_out": [
        "array%array_bytes_new_length%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_bytes_new_length%0#1"
      ]
    },
    "860": {
      "op": "dup",
      "defined_out": [
        "array%array_bytes_new_length%0#1",
        "array%array_bytes_new_length%0#1 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_bytes_new_length%0#1",
        "array%array_bytes_new_length%0#1 (copy)"
      ]
    },
    "861": {
      "op": "intc_0 // 8",
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_bytes_new_length%0#1",
        "array%array_bytes_new_length%0#1 (copy)",
        "8"
      ]
    },
    "862": {
      "op": "/",
      "defined_out": [
        "array%array_bytes_new_length%0#1",
        "array%array_new_length%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_bytes_new_length%0#1",
        "array%array_new_length%0#1"
      ]
    },
    "863": {
      "op": "swap",
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_new_length%0#1",
        "array%array_bytes_new_length%0#1"
      ]
    },
    "864": {
      "op": "dig 2",
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_new_length%0#1",
        "array%array_bytes_new_length%0#1",
        "slot_contents%0#0 (copy)"
      ]
    },
    "866": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "array%array_bytes_new_length%0#1",
        "array%array_new_length%0#1",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_new_length%0#1",
        "array%array_bytes_new_length%0#1",
        "slot_contents%0#0 (copy)",
        "0"
      ]
    },
    "867": {
      "op": "uncover 2",
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_new_length%0#1",
        "slot_contents%0#0 (copy)",
        "0",
        "array%array_bytes_new_length%0#1"
      ]
    },
    "869": {
      "op": "extract3",
      "defined_out": [
        "array%array_contents%0#1",
        "array%array_new_length%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "_i#0",
        "slot_contents%0#0",
        "array%array_new_length%0#1",
        "array%array_contents%0#1"
      ]
    },
    "870": {
      "op": "cover 2",
      "stack_out": [
        "_i#0",
        "array%array_contents%0#1",
        "slot_contents%0#0",
        "array%array_new_length%0#1"
      ]
    },
    "872": {
      "op": "intc_0 // 8",
      "stack_out": [
        "_i#0",
        "array%array_contents%0#1",
        "slot_contents%0#0",
        "array%array_new_length%0#1",
        "8"
      ]
    },
    "873": {
      "op": "*",
      "defined_out": [
        "array%array_contents%0#1",
        "array%bytes_index%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "_i#0",
        "array%array_contents%0#1",
        "slot_contents%0#0",
        "array%bytes_index%0#1"
      ]
    },
    "874": {
      "op": "intc_0 // 8",
      "stack_out": [
        "_i#0",
        "array%array_contents%0#1",
        "slot_contents%0#0",
        "array%bytes_index%0#1",
        "8"
      ]
    },
    "875": {
      "op": "extract3",
      "defined_out": [
        "pop%0#0",
        "pop%1#0"
      ],
      "stack_out": [
        "_i#0",
        "pop%0#0",
        "pop%1#0"
      ]
    },
    "876": {
      "op": "btoi",
      "defined_out": [
        "pop%0#0",
        "popped_item.0%0#0"
      ],
      "stack_out": [
        "_i#0",
        "pop%0#0",
        "popped_item.0%0#0"
      ]
    },
    "877": {
      "op": "frame_dig -3",
      "stack_out": [
        "_i#0",
        "pop%0#0",
        "popped_item.0%0#0",
        "arr#0 (copy)"
      ]
    },
    "879": {
      "op": "uncover 2",
      "stack_out": [
        "_i#0",
        "popped_item.0%0#0",
        "arr#0 (copy)",
        "pop%0#0"
      ]
    },
    "881": {
      "op": "stores",
      "defined_out": [
        "popped#0"
      ],
      "stack_out": [
        "_i#0",
        "popped#0"
      ]
    },
    "882": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "popped#0"
      ],
      "stack_out": [
        "_i#0",
        "popped#0",
        "expected#0 (copy)"
      ]
    },
    "884": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "_i#0",
        "tmp%0#0"
      ]
    },
    "885": {
      "op": "assert",
      "stack_out": [
        "_i#0"
      ]
    },
    "886": {
      "op": "frame_dig -1",
      "stack_out": [
        "_i#0",
        "expected#0 (copy)"
      ]
    },
    "888": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "expected#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "expected#0 (copy)",
        "1"
      ]
    },
    "889": {
      "op": "-",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "_i#0",
        "materialized_values%0#0"
      ]
    },
    "890": {
      "op": "frame_bury -1",
      "stack_out": [
        "_i#0"
      ]
    },
    "892": {
      "block": "pop_x_for_footer@3",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "894": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "895": {
      "op": "+",
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "896": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "898": {
      "op": "b pop_x_for_header@1"
    },
    "901": {
      "block": "pop_x_after_for@4",
      "stack_in": [
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "902": {
      "subroutine": "test_cases.array.uint64.append_length_and_return",
      "params": {
        "arr#0": "uint64"
      },
      "block": "append_length_and_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "905": {
      "block": "append_length_and_return_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "907": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0"
      ]
    },
    "908": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1"
      ]
    },
    "909": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "910": {
      "op": "/",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "911": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "arr#0 (copy)"
      ]
    },
    "913": {
      "op": "loads",
      "defined_out": [
        "slot_contents%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "slot_contents%1#0"
      ]
    },
    "914": {
      "op": "swap",
      "stack_out": [
        "slot_contents%1#0",
        "tmp%0#0"
      ]
    },
    "915": {
      "op": "itob",
      "defined_out": [
        "as_Encoded(uint64)%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "916": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "as_Encoded(uint64)%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "917": {
      "op": "swap",
      "stack_out": [
        "slot_contents%1#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "918": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "encoded%0#0"
      ]
    },
    "919": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "slot_contents%1#0",
        "encoded%0#0",
        "0x"
      ]
    },
    "920": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot_contents%1#0",
        "encoded%1#0"
      ]
    },
    "921": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "922": {
      "op": "frame_dig -1",
      "stack_out": [
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "924": {
      "op": "swap",
      "stack_out": [
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "925": {
      "op": "stores",
      "stack_out": []
    },
    "926": {
      "op": "frame_dig -1",
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "928": {
      "retsub": true,
      "op": "retsub"
    },
    "929": {
      "subroutine": "test_cases.array.uint64.Contract.test_array",
      "params": {},
      "block": "test_array_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "930": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "931": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "932": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "935": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "936": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "938": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "939": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "940": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "941": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ]
    },
    "942": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "943": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "944": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "0"
      ]
    },
    "945": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "946": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "947": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "948": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0"
      ]
    },
    "949": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "42"
      ]
    },
    "951": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "952": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "953": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "954": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "encoded%1#0"
      ]
    },
    "955": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "956": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%2#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "encoded%2#0"
      ]
    },
    "957": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "958": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "960": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "961": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "962": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "963": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%2#0"
      ]
    },
    "964": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%1#1"
      ]
    },
    "965": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "966": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "967": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0",
        "1"
      ]
    },
    "968": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%3#0"
      ]
    },
    "969": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "970": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "971": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "972": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%2#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%2#1"
      ]
    },
    "973": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "974": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "975": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%4#0",
        "1"
      ]
    },
    "976": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "977": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "arr#0 (copy)"
      ]
    },
    "979": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "slot_contents%4#0"
      ]
    },
    "980": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "tmp%5#0"
      ]
    },
    "981": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "tmp%5#0",
        "8"
      ]
    },
    "982": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "bytes_offset%0#0"
      ]
    },
    "983": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "984": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%0#0"
      ]
    },
    "985": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "986": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "tmp%6#0",
        "42"
      ]
    },
    "988": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "989": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "990": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "991": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "5"
      ]
    },
    "992": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "995": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "996": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0"
      ]
    },
    "997": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%3#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%3#1"
      ]
    },
    "998": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%3#1",
        "8"
      ]
    },
    "999": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0"
      ]
    },
    "1000": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0",
        "6"
      ]
    },
    "1002": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "1003": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1004": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1005": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%6#0"
      ]
    },
    "1006": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%4#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%4#1"
      ]
    },
    "1007": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%4#1",
        "8"
      ]
    },
    "1008": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "1009": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%10#0",
        "1"
      ]
    },
    "1010": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0"
      ]
    },
    "1011": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "arr#0 (copy)"
      ]
    },
    "1013": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%7#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "slot_contents%7#0"
      ]
    },
    "1014": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%7#0",
        "tmp%11#0"
      ]
    },
    "1015": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%7#0",
        "tmp%11#0",
        "8"
      ]
    },
    "1016": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%1#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%7#0",
        "bytes_offset%1#0"
      ]
    },
    "1017": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%7#0",
        "bytes_offset%1#0",
        "8"
      ]
    },
    "1018": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%1#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%1#0"
      ]
    },
    "1019": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "1020": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0",
        "4"
      ]
    },
    "1022": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "1023": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1024": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1025": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "3"
      ]
    },
    "1027": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "3",
        "4"
      ]
    },
    "1029": {
      "callsub": "test_cases.array.uint64.pop_x",
      "op": "callsub pop_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1032": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1033": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%8#0"
      ]
    },
    "1034": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%5#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%5#1"
      ]
    },
    "1035": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%5#1",
        "8"
      ]
    },
    "1036": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "1037": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr#0",
        "tmp%14#0",
        "3"
      ]
    },
    "1039": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "1040": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1041": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1042": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%9#0"
      ]
    },
    "1043": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%6#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%6#1"
      ]
    },
    "1044": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%6#1",
        "8"
      ]
    },
    "1045": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%16#0"
      ]
    },
    "1046": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%16#0",
        "1"
      ]
    },
    "1047": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0"
      ]
    },
    "1048": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "arr#0 (copy)"
      ]
    },
    "1050": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%10#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "slot_contents%10#0"
      ]
    },
    "1051": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "tmp%17#0"
      ]
    },
    "1052": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "tmp%17#0",
        "8"
      ]
    },
    "1053": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%2#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "bytes_offset%2#0"
      ]
    },
    "1054": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "bytes_offset%2#0",
        "8"
      ]
    },
    "1055": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%2#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%2#0"
      ]
    },
    "1056": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%18#0"
      ]
    },
    "1057": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%18#0",
        "1"
      ]
    },
    "1058": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0"
      ]
    },
    "1059": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1060": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1061": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%11#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%11#0"
      ]
    },
    "1062": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "arr#0",
        "slot_contents%11#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "43"
      ]
    },
    "1064": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%1#0",
        "slot_contents%11#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1065": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "1066": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "0x",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1067": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%3#0",
        "slot_contents%11#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "encoded%3#0"
      ]
    },
    "1068": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "encoded%3#0",
        "0x"
      ]
    },
    "1069": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%4#0",
        "slot_contents%11#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "encoded%4#0"
      ]
    },
    "1070": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%1#0"
      ]
    },
    "1071": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%1#0",
        "arr#0 (copy)"
      ]
    },
    "1073": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%1#0"
      ]
    },
    "1074": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1075": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1076": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%12#0"
      ]
    },
    "1077": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%7#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%7#1"
      ]
    },
    "1078": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%7#1",
        "8"
      ]
    },
    "1079": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "1080": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "tmp%20#0",
        "4"
      ]
    },
    "1082": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0"
      ]
    },
    "1083": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1084": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1085": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%13#0"
      ]
    },
    "1086": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%8#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%8#1"
      ]
    },
    "1087": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%8#1",
        "8"
      ]
    },
    "1088": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "1089": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%22#0",
        "1"
      ]
    },
    "1090": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "1091": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%23#0",
        "arr#0 (copy)"
      ]
    },
    "1093": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%14#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0",
        "slot_contents%14#0"
      ]
    },
    "1094": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%14#0",
        "tmp%23#0"
      ]
    },
    "1095": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%14#0",
        "tmp%23#0",
        "8"
      ]
    },
    "1096": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%3#0",
        "slot_contents%14#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%14#0",
        "bytes_offset%3#0"
      ]
    },
    "1097": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%14#0",
        "bytes_offset%3#0",
        "8"
      ]
    },
    "1098": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%3#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%3#0"
      ]
    },
    "1099": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "1100": {
      "op": "pushint 43 // 43",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "43"
      ]
    },
    "1102": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "1103": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1104": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1105": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%15#0"
      ]
    },
    "1106": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "slot_contents%15#0",
        "0"
      ]
    },
    "1107": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%15#0",
        "0",
        "8"
      ]
    },
    "1108": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%4#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%15#0",
        "bytes_offset%4#0"
      ]
    },
    "1109": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%15#0",
        "bytes_offset%4#0",
        "8"
      ]
    },
    "1110": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%4#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%4#0"
      ]
    },
    "1111": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%26#0"
      ]
    },
    "1112": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "tmp%26#0",
        "42"
      ]
    },
    "1114": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%27#0"
      ]
    },
    "1115": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1116": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1117": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "10"
      ]
    },
    "1119": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1122": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1123": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%16#0"
      ]
    },
    "1124": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%9#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%9#1"
      ]
    },
    "1125": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%9#1",
        "8"
      ]
    },
    "1126": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0"
      ]
    },
    "1127": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%28#0",
        "14"
      ]
    },
    "1129": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%29#0"
      ]
    },
    "1130": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1131": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1132": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%17#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%17#0"
      ]
    },
    "1133": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%10#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%10#1"
      ]
    },
    "1134": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%10#1",
        "8"
      ]
    },
    "1135": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%30#0"
      ]
    },
    "1136": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%30#0",
        "1"
      ]
    },
    "1137": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0"
      ]
    },
    "1138": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "arr#0 (copy)"
      ]
    },
    "1140": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%18#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%31#0",
        "slot_contents%18#0"
      ]
    },
    "1141": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%18#0",
        "tmp%31#0"
      ]
    },
    "1142": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%18#0",
        "tmp%31#0",
        "8"
      ]
    },
    "1143": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%5#0",
        "slot_contents%18#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%18#0",
        "bytes_offset%5#0"
      ]
    },
    "1144": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%18#0",
        "bytes_offset%5#0",
        "8"
      ]
    },
    "1145": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%5#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%5#0"
      ]
    },
    "1146": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0"
      ]
    },
    "1147": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%32#0",
        "9"
      ]
    },
    "1149": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%33#0"
      ]
    },
    "1150": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1151": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1152": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%19#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%19#0"
      ]
    },
    "1153": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "arr#0",
        "slot_contents%19#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%19#0",
        "44"
      ]
    },
    "1155": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%2#0",
        "slot_contents%19#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%19#0",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "1156": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%19#0",
        "as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "1157": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%19#0",
        "0x",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "1158": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%5#0",
        "slot_contents%19#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%19#0",
        "encoded%5#0"
      ]
    },
    "1159": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%19#0",
        "encoded%5#0",
        "0x"
      ]
    },
    "1160": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%6#0",
        "slot_contents%19#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%19#0",
        "encoded%6#0"
      ]
    },
    "1161": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%2#0"
      ]
    },
    "1162": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%2#0",
        "arr#0 (copy)"
      ]
    },
    "1164": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%2#0"
      ]
    },
    "1165": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1166": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1167": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%20#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%20#0"
      ]
    },
    "1168": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%11#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%11#1"
      ]
    },
    "1169": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%11#1",
        "8"
      ]
    },
    "1170": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0"
      ]
    },
    "1171": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%34#0",
        "15"
      ]
    },
    "1173": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%35#0"
      ]
    },
    "1174": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1175": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1176": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%21#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%21#0"
      ]
    },
    "1177": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%12#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%12#1"
      ]
    },
    "1178": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%12#1",
        "8"
      ]
    },
    "1179": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%36#0"
      ]
    },
    "1180": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%36#0",
        "1"
      ]
    },
    "1181": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0"
      ]
    },
    "1182": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "arr#0 (copy)"
      ]
    },
    "1184": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%22#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%37#0",
        "slot_contents%22#0"
      ]
    },
    "1185": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%22#0",
        "tmp%37#0"
      ]
    },
    "1186": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%22#0",
        "tmp%37#0",
        "8"
      ]
    },
    "1187": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%6#0",
        "slot_contents%22#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%22#0",
        "bytes_offset%6#0"
      ]
    },
    "1188": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%22#0",
        "bytes_offset%6#0",
        "8"
      ]
    },
    "1189": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%6#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%6#0"
      ]
    },
    "1190": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%38#0"
      ]
    },
    "1191": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "tmp%38#0",
        "44"
      ]
    },
    "1193": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%39#0"
      ]
    },
    "1194": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1195": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1196": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "arr#0 (copy)"
      ]
    },
    "1198": {
      "callsub": "test_cases.array.uint64.return_ref",
      "op": "callsub return_ref",
      "defined_out": [
        "arr#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0"
      ]
    },
    "1201": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ]
    },
    "1202": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%23#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%23#0"
      ]
    },
    "1203": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%23#0",
        "0"
      ]
    },
    "1204": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%23#0",
        "0",
        "8"
      ]
    },
    "1205": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%7#0",
        "slot_contents%23#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%23#0",
        "bytes_offset%7#0"
      ]
    },
    "1206": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%23#0",
        "bytes_offset%7#0",
        "8"
      ]
    },
    "1207": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%7#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "encoded_element%7#0"
      ]
    },
    "1208": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "1209": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "tmp%41#0",
        "2"
      ]
    },
    "1211": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "materialized_values%0#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "materialized_values%0#0"
      ]
    },
    "1212": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "materialized_values%0#0",
        "tmp%40#0 (copy)"
      ]
    },
    "1214": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%24#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "materialized_values%0#0",
        "slot_contents%24#0"
      ]
    },
    "1215": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%24#0",
        "materialized_values%0#0"
      ]
    },
    "1216": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0",
        "slot_contents%24#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%24#0",
        "encoded_value%0#0"
      ]
    },
    "1217": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%24#0",
        "encoded_value%0#0",
        "0"
      ]
    },
    "1218": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%24#0",
        "encoded_value%0#0",
        "0",
        "8"
      ]
    },
    "1219": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0",
        "slot_contents%24#0",
        "tmp%40#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%24#0",
        "encoded_value%0#0",
        "write_offset%0#0"
      ]
    },
    "1220": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "encoded_value%0#0",
        "write_offset%0#0",
        "slot_contents%24#0"
      ]
    },
    "1222": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "encoded_value%0#0",
        "slot_contents%24#0",
        "write_offset%0#0"
      ]
    },
    "1223": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "slot_contents%24#0",
        "write_offset%0#0",
        "encoded_value%0#0"
      ]
    },
    "1225": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "tmp%40#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%40#0",
        "updated_array%0#0"
      ]
    },
    "1226": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1227": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1228": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%25#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%25#0"
      ]
    },
    "1229": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%13#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%13#1"
      ]
    },
    "1230": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%13#1",
        "8"
      ]
    },
    "1231": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%42#0"
      ]
    },
    "1232": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "arr#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%42#0",
        "17"
      ]
    },
    "1234": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%43#0"
      ]
    },
    "1235": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1236": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1237": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%26#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%26#0"
      ]
    },
    "1238": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "slot_contents%26#0",
        "0"
      ]
    },
    "1239": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%26#0",
        "0",
        "8"
      ]
    },
    "1240": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%8#0",
        "slot_contents%26#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%26#0",
        "bytes_offset%8#0"
      ]
    },
    "1241": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%26#0",
        "bytes_offset%8#0",
        "8"
      ]
    },
    "1242": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%8#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%8#0"
      ]
    },
    "1243": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%44#0"
      ]
    },
    "1244": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "tmp%44#0",
        "44"
      ]
    },
    "1246": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%45#0"
      ]
    },
    "1247": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1248": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1249": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%27#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%27#0"
      ]
    },
    "1250": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%14#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%14#1"
      ]
    },
    "1251": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%14#1",
        "8"
      ]
    },
    "1252": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%46#0"
      ]
    },
    "1253": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "arr#0",
        "tmp%46#0",
        "2"
      ]
    },
    "1255": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%47#0"
      ]
    },
    "1256": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%47#0",
        "arr#0 (copy)"
      ]
    },
    "1258": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%28#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%47#0",
        "slot_contents%28#0"
      ]
    },
    "1259": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%28#0",
        "tmp%47#0"
      ]
    },
    "1260": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%28#0",
        "tmp%47#0",
        "8"
      ]
    },
    "1261": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%9#0",
        "slot_contents%28#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%28#0",
        "bytes_offset%9#0"
      ]
    },
    "1262": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%28#0",
        "bytes_offset%9#0",
        "8"
      ]
    },
    "1263": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%9#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%9#0"
      ]
    },
    "1264": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%48#0"
      ]
    },
    "1265": {
      "op": "pushint 99 // 99",
      "defined_out": [
        "99",
        "arr#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%48#0",
        "99"
      ]
    },
    "1267": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%49#0"
      ]
    },
    "1268": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1269": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1270": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%29#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%29#0"
      ]
    },
    "1271": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%15#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%15#1"
      ]
    },
    "1272": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%15#1",
        "8"
      ]
    },
    "1273": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%50#0"
      ]
    },
    "1274": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%50#0",
        "1"
      ]
    },
    "1275": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%51#0"
      ]
    },
    "1276": {
      "op": "swap",
      "stack_out": [
        "tmp%51#0",
        "arr#0"
      ]
    },
    "1277": {
      "op": "loads",
      "defined_out": [
        "slot_contents%30#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "slot_contents%30#0"
      ]
    },
    "1278": {
      "op": "swap",
      "stack_out": [
        "slot_contents%30#0",
        "tmp%51#0"
      ]
    },
    "1279": {
      "op": "intc_0 // 8",
      "stack_out": [
        "slot_contents%30#0",
        "tmp%51#0",
        "8"
      ]
    },
    "1280": {
      "op": "*",
      "defined_out": [
        "bytes_offset%10#0",
        "slot_contents%30#0"
      ],
      "stack_out": [
        "slot_contents%30#0",
        "bytes_offset%10#0"
      ]
    },
    "1281": {
      "op": "intc_0 // 8",
      "stack_out": [
        "slot_contents%30#0",
        "bytes_offset%10#0",
        "8"
      ]
    },
    "1282": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%10#0"
      ],
      "stack_out": [
        "encoded_element%10#0"
      ]
    },
    "1283": {
      "op": "btoi",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1284": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "100"
      ]
    },
    "1286": {
      "op": "==",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1287": {
      "op": "assert",
      "stack_out": []
    },
    "1288": {
      "retsub": true,
      "op": "retsub"
    },
    "1289": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_extend",
      "params": {},
      "block": "test_array_extend_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "1290": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "1291": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "1292": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "1295": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1296": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "1298": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1299": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1300": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "1"
      ]
    },
    "1301": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1304": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "0x"
      ]
    },
    "1305": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "0x",
        "0x"
      ]
    },
    "1306": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0"
      ]
    },
    "1307": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "slot%1#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0",
        "slot%1#0"
      ]
    },
    "1310": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "slot%1#0",
        "slot%1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "encoded%1#0",
        "slot%1#0",
        "slot%1#0 (copy)"
      ]
    },
    "1311": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "encoded%1#0"
      ]
    },
    "1313": {
      "op": "stores",
      "defined_out": [
        "arr#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0"
      ]
    },
    "1314": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1315": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0"
      ]
    },
    "1316": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0",
        "1"
      ]
    },
    "1317": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "as_Encoded(uint64)%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1318": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1319": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1320": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "encoded%2#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0",
        "encoded%2#0"
      ]
    },
    "1321": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0",
        "encoded%2#0",
        "0x"
      ]
    },
    "1322": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "encoded%3#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%0#0",
        "encoded%3#0"
      ]
    },
    "1323": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "concat%0#0"
      ]
    },
    "1324": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "concat%0#0",
        "arr2#0 (copy)"
      ]
    },
    "1326": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)",
        "concat%0#0"
      ]
    },
    "1327": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr2#0"
      ]
    },
    "1328": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1329": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0"
      ]
    },
    "1330": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "arr2#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0",
        "2"
      ]
    },
    "1332": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "as_Encoded(uint64)%1#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1333": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0",
        "as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "1334": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0",
        "0x",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1335": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "encoded%4#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0",
        "encoded%4#0"
      ]
    },
    "1336": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0",
        "encoded%4#0",
        "0x"
      ]
    },
    "1337": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "encoded%5#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%1#0",
        "encoded%5#0"
      ]
    },
    "1338": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "concat%1#0"
      ]
    },
    "1339": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "concat%1#0",
        "arr2#0 (copy)"
      ]
    },
    "1341": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)",
        "concat%1#0"
      ]
    },
    "1342": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr2#0"
      ]
    },
    "1343": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "1344": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0"
      ]
    },
    "1345": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "arr2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0",
        "3"
      ]
    },
    "1347": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "as_Encoded(uint64)%2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "1348": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0",
        "as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "1349": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0",
        "0x",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "1350": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "encoded%6#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0",
        "encoded%6#0"
      ]
    },
    "1351": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0",
        "encoded%6#0",
        "0x"
      ]
    },
    "1352": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "encoded%7#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "slot_contents%2#0",
        "encoded%7#0"
      ]
    },
    "1353": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "arr2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "arr2#0",
        "concat%2#0"
      ]
    },
    "1354": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "concat%2#0",
        "arr2#0 (copy)"
      ]
    },
    "1356": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr2#0",
        "arr2#0 (copy)",
        "concat%2#0"
      ]
    },
    "1357": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr2#0"
      ]
    },
    "1358": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1359": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "arr#0 (copy)"
      ]
    },
    "1361": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%4#0"
      ]
    },
    "1362": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "slot_contents%3#0"
      ]
    },
    "1363": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%3#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%3#0"
      ]
    },
    "1364": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%3#0",
        "arr#0 (copy)"
      ]
    },
    "1366": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%3#0"
      ]
    },
    "1367": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1368": {
      "op": "loads",
      "defined_out": [
        "slot_contents%5#0"
      ],
      "stack_out": [
        "slot_contents%5#0"
      ]
    },
    "1369": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1"
      ]
    },
    "1370": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1371": {
      "op": "/",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1372": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "4"
      ]
    },
    "1374": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1375": {
      "op": "assert",
      "stack_out": []
    },
    "1376": {
      "retsub": true,
      "op": "retsub"
    },
    "1377": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_multiple_append",
      "params": {},
      "block": "test_array_multiple_append_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "1378": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "1379": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "1380": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "1383": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1384": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "1386": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1387": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1388": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "1"
      ]
    },
    "1389": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1392": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1393": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "1394": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "1"
      ]
    },
    "1395": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1396": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1397": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1398": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "1399": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "1400": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%2#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "encoded%2#0"
      ]
    },
    "1401": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "1402": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1404": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "1405": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1406": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1407": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0"
      ]
    },
    "1408": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "2"
      ]
    },
    "1410": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%1#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1411": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "1412": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "0x",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1413": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%3#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "encoded%3#0"
      ]
    },
    "1414": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "encoded%3#0",
        "0x"
      ]
    },
    "1415": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%4#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "encoded%4#0"
      ]
    },
    "1416": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%1#0"
      ]
    },
    "1417": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%1#0",
        "arr#0 (copy)"
      ]
    },
    "1419": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%1#0"
      ]
    },
    "1420": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1421": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1422": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%2#0"
      ]
    },
    "1423": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "3"
      ]
    },
    "1425": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "1426": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "1427": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "0x",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "1428": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%5#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "encoded%5#0"
      ]
    },
    "1429": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "encoded%5#0",
        "0x"
      ]
    },
    "1430": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%6#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%2#0",
        "encoded%6#0"
      ]
    },
    "1431": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%2#0"
      ]
    },
    "1432": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%2#0",
        "arr#0 (copy)"
      ]
    },
    "1434": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%2#0"
      ]
    },
    "1435": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1436": {
      "op": "loads",
      "defined_out": [
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0"
      ]
    },
    "1437": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1"
      ]
    },
    "1438": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1439": {
      "op": "/",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1440": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "4"
      ]
    },
    "1442": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1443": {
      "op": "assert",
      "stack_out": []
    },
    "1444": {
      "retsub": true,
      "op": "retsub"
    },
    "1445": {
      "subroutine": "test_cases.array.uint64.Contract.overhead",
      "params": {},
      "block": "overhead_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1446": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_too_long",
      "params": {},
      "block": "test_array_too_long",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1449": {
      "block": "test_array_too_long_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "1450": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "1451": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "1452": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "1455": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1456": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "1458": {
      "op": "stores",
      "defined_out": [
        "array#0"
      ],
      "stack_out": [
        "array#0"
      ]
    },
    "1459": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array#0"
      ],
      "stack_out": [
        "array#0",
        "1"
      ]
    },
    "1460": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "array#0"
      ]
    },
    "1461": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array#0",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1462": {
      "block": "test_array_too_long_for_header@1",
      "stack_in": [
        "array#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "i#0"
      ]
    },
    "1464": {
      "op": "intc 4 // 512",
      "defined_out": [
        "512",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "i#0",
        "512"
      ]
    },
    "1466": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1467": {
      "op": "bz test_array_too_long_after_for@4",
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1470": {
      "block": "test_array_too_long_for_body@2",
      "stack_in": [
        "array#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "array#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0"
      ]
    },
    "1472": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1473": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0"
      ]
    },
    "1474": {
      "op": "frame_dig 1",
      "defined_out": [
        "array#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "1476": {
      "op": "itob",
      "defined_out": [
        "array#0",
        "as_Encoded(uint64)%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1477": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array#0",
        "as_Encoded(uint64)%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1478": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1479": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "encoded%1#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "1480": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "1481": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "encoded%2#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "encoded%2#0"
      ]
    },
    "1482": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "concat%0#0"
      ]
    },
    "1483": {
      "op": "stores",
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1484": {
      "block": "test_array_too_long_for_footer@3",
      "stack_in": [
        "array#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "i#0"
      ]
    },
    "1486": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1487": {
      "op": "+",
      "stack_out": [
        "array#0",
        "i#0",
        "i#0"
      ]
    },
    "1488": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1490": {
      "op": "b test_array_too_long_for_header@1"
    },
    "1493": {
      "block": "test_array_too_long_after_for@4",
      "stack_in": [
        "array#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "array#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0"
      ]
    },
    "1495": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1496": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%1#0"
      ]
    },
    "1497": {
      "op": "len",
      "defined_out": [
        "array#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array%bytes_len%0#1"
      ]
    },
    "1498": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "array#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1499": {
      "op": "/",
      "defined_out": [
        "array#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%0#0"
      ]
    },
    "1500": {
      "op": "intc 4 // 512",
      "defined_out": [
        "512",
        "array#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%0#0",
        "512"
      ]
    },
    "1502": {
      "op": "==",
      "defined_out": [
        "array#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%1#0"
      ]
    },
    "1503": {
      "error": "array is expected length",
      "op": "assert // array is expected length",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0"
      ]
    },
    "1504": {
      "op": "dup",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1505": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%2#0"
      ]
    },
    "1506": {
      "op": "intc 4 // 512",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%2#0",
        "512"
      ]
    },
    "1508": {
      "op": "itob",
      "defined_out": [
        "array#0",
        "as_Encoded(uint64)%1#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%2#0",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1509": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array#0",
        "as_Encoded(uint64)%1#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%2#0",
        "as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "1510": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%2#0",
        "0x",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1511": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "encoded%3#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%2#0",
        "encoded%3#0"
      ]
    },
    "1512": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%2#0",
        "encoded%3#0",
        "0x"
      ]
    },
    "1513": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "encoded%4#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%2#0",
        "encoded%4#0"
      ]
    },
    "1514": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "concat%1#0"
      ]
    },
    "1515": {
      "op": "stores",
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1516": {
      "retsub": true,
      "op": "retsub"
    },
    "1517": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_copy_and_extend",
      "params": {},
      "block": "test_array_copy_and_extend",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1520": {
      "block": "test_array_copy_and_extend_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "1521": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "1522": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "1523": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "1526": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1527": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "1529": {
      "op": "stores",
      "defined_out": [
        "array#0"
      ],
      "stack_out": [
        "array#0"
      ]
    },
    "1530": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array#0"
      ],
      "stack_out": [
        "array#0",
        "1"
      ]
    },
    "1531": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "array#0"
      ]
    },
    "1532": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array#0",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1533": {
      "block": "test_array_copy_and_extend_for_header@1",
      "stack_in": [
        "array#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "i#0"
      ]
    },
    "1535": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1536": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1537": {
      "op": "bz test_array_copy_and_extend_after_for@4",
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1540": {
      "block": "test_array_copy_and_extend_for_body@2",
      "stack_in": [
        "array#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "array#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0"
      ]
    },
    "1542": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1543": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0"
      ]
    },
    "1544": {
      "op": "frame_dig 1",
      "defined_out": [
        "array#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "1546": {
      "op": "itob",
      "defined_out": [
        "array#0",
        "as_Encoded(uint64)%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1547": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array#0",
        "as_Encoded(uint64)%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1548": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1549": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "encoded%1#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "1550": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "1551": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "encoded%2#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%0#0",
        "encoded%2#0"
      ]
    },
    "1552": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "concat%0#0"
      ]
    },
    "1553": {
      "op": "stores",
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1554": {
      "block": "test_array_copy_and_extend_for_footer@3",
      "stack_in": [
        "array#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "i#0"
      ]
    },
    "1556": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1557": {
      "op": "+",
      "stack_out": [
        "array#0",
        "i#0",
        "i#0"
      ]
    },
    "1558": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1560": {
      "op": "b test_array_copy_and_extend_for_header@1"
    },
    "1563": {
      "block": "test_array_copy_and_extend_after_for@4",
      "stack_in": [
        "array#0",
        "i#0"
      ],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "slot%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "slot%1#0"
      ]
    },
    "1566": {
      "op": "frame_dig 0",
      "defined_out": [
        "array#0",
        "slot%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "slot%1#0",
        "array#0"
      ]
    },
    "1568": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array#0 (copy)",
        "slot%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "slot%1#0",
        "array#0 (copy)",
        "array#0 (copy)"
      ]
    },
    "1569": {
      "op": "cover 2",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot%1#0",
        "array#0 (copy)"
      ]
    },
    "1571": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot%1#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot%1#0",
        "slot_contents%1#0"
      ]
    },
    "1572": {
      "op": "dig 1",
      "defined_out": [
        "array#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot%1#0",
        "slot_contents%1#0",
        "slot%1#0 (copy)"
      ]
    },
    "1574": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "slot_contents%1#0"
      ]
    },
    "1575": {
      "op": "stores",
      "defined_out": [
        "array#0",
        "array2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array2#0"
      ]
    },
    "1576": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0"
      ]
    },
    "1577": {
      "op": "dup",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1578": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%2#0"
      ]
    },
    "1579": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "array#0",
        "array2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%2#0",
        "5"
      ]
    },
    "1580": {
      "op": "itob",
      "defined_out": [
        "array#0",
        "array2#0",
        "as_Encoded(uint64)%1#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%2#0",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1581": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "array#0",
        "array2#0",
        "as_Encoded(uint64)%1#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%2#0",
        "as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "1582": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%2#0",
        "0x",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "1583": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "array2#0",
        "encoded%3#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%2#0",
        "encoded%3#0"
      ]
    },
    "1584": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%2#0",
        "encoded%3#0",
        "0x"
      ]
    },
    "1585": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "array2#0",
        "encoded%4#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%2#0",
        "encoded%4#0"
      ]
    },
    "1586": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array#0",
        "array2#0",
        "concat%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "concat%1#0"
      ]
    },
    "1587": {
      "op": "dig 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "concat%1#0",
        "array#0 (copy)"
      ]
    },
    "1589": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array#0 (copy)",
        "concat%1#0"
      ]
    },
    "1590": {
      "op": "stores",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0"
      ]
    },
    "1591": {
      "op": "dup",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1592": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%3#0"
      ]
    },
    "1593": {
      "op": "len",
      "defined_out": [
        "array#0",
        "array%bytes_len%0#1",
        "array2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%0#1"
      ]
    },
    "1594": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "array#0",
        "array%bytes_len%0#1",
        "array2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1595": {
      "op": "/",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%0#0"
      ]
    },
    "1596": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "array#0",
        "array2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%0#0",
        "6"
      ]
    },
    "1598": {
      "op": "==",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%1#0"
      ]
    },
    "1599": {
      "op": "assert",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0"
      ]
    },
    "1600": {
      "op": "dup",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1601": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%4#0"
      ]
    },
    "1602": {
      "op": "len",
      "defined_out": [
        "array#0",
        "array%bytes_len%1#1",
        "array2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%1#1"
      ]
    },
    "1603": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "1604": {
      "op": "/",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%2#0"
      ]
    },
    "1605": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array#0",
        "array2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%2#0",
        "1"
      ]
    },
    "1606": {
      "op": "-",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%3#0"
      ]
    },
    "1607": {
      "op": "dig 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%3#0",
        "array#0 (copy)"
      ]
    },
    "1609": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%5#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%3#0",
        "slot_contents%5#0"
      ]
    },
    "1610": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%5#0",
        "tmp%3#0"
      ]
    },
    "1611": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%5#0",
        "tmp%3#0",
        "8"
      ]
    },
    "1612": {
      "op": "*",
      "defined_out": [
        "array#0",
        "array2#0",
        "bytes_offset%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%5#0",
        "bytes_offset%0#0"
      ]
    },
    "1613": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%5#0",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "1614": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "array2#0",
        "encoded_element%0#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "encoded_element%0#0"
      ]
    },
    "1615": {
      "op": "btoi",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%4#0"
      ]
    },
    "1616": {
      "op": "intc_3 // 5",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%4#0",
        "5"
      ]
    },
    "1617": {
      "op": "==",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%5#0"
      ]
    },
    "1618": {
      "error": "expected 5",
      "op": "assert // expected 5",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0"
      ]
    },
    "1619": {
      "op": "dig 1",
      "defined_out": [
        "array#0",
        "array2#0",
        "array2#0 (copy)"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array2#0 (copy)"
      ]
    },
    "1621": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%6#0"
      ]
    },
    "1622": {
      "op": "len",
      "defined_out": [
        "array#0",
        "array%bytes_len%2#1",
        "array2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%2#1"
      ]
    },
    "1623": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "1624": {
      "op": "/",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%6#0"
      ]
    },
    "1625": {
      "op": "intc_3 // 5",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%6#0",
        "5"
      ]
    },
    "1626": {
      "op": "==",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%7#0"
      ]
    },
    "1627": {
      "op": "assert",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0"
      ]
    },
    "1628": {
      "op": "dig 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array2#0 (copy)"
      ]
    },
    "1630": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%7#0"
      ]
    },
    "1631": {
      "op": "len",
      "defined_out": [
        "array#0",
        "array%bytes_len%3#1",
        "array2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%3#1"
      ]
    },
    "1632": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%3#1",
        "8"
      ]
    },
    "1633": {
      "op": "/",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%8#0"
      ]
    },
    "1634": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%8#0",
        "1"
      ]
    },
    "1635": {
      "op": "-",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%9#0"
      ]
    },
    "1636": {
      "op": "dig 2",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%9#0",
        "array2#0 (copy)"
      ]
    },
    "1638": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%9#0",
        "slot_contents%8#0"
      ]
    },
    "1639": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%8#0",
        "tmp%9#0"
      ]
    },
    "1640": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%8#0",
        "tmp%9#0",
        "8"
      ]
    },
    "1641": {
      "op": "*",
      "defined_out": [
        "array#0",
        "array2#0",
        "bytes_offset%1#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%8#0",
        "bytes_offset%1#0"
      ]
    },
    "1642": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%8#0",
        "bytes_offset%1#0",
        "8"
      ]
    },
    "1643": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "array2#0",
        "encoded_element%1#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "encoded_element%1#0"
      ]
    },
    "1644": {
      "op": "btoi",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%10#0"
      ]
    },
    "1645": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "array#0",
        "array2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%10#0",
        "4"
      ]
    },
    "1647": {
      "op": "==",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%11#0"
      ]
    },
    "1648": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0"
      ]
    },
    "1649": {
      "op": "dig 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array2#0 (copy)"
      ]
    },
    "1651": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%9#0"
      ]
    },
    "1652": {
      "op": "dig 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%9#0",
        "array#0 (copy)"
      ]
    },
    "1654": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%10#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%9#0",
        "slot_contents%10#0"
      ]
    },
    "1655": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%10#0",
        "slot_contents%9#0"
      ]
    },
    "1656": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array#0",
        "array2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "concat%2#0"
      ]
    },
    "1657": {
      "op": "dig 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "concat%2#0",
        "array#0 (copy)"
      ]
    },
    "1659": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array#0 (copy)",
        "concat%2#0"
      ]
    },
    "1660": {
      "op": "stores",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0"
      ]
    },
    "1661": {
      "op": "dup",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1662": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "array2#0",
        "slot_contents%11#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "slot_contents%11#0"
      ]
    },
    "1663": {
      "op": "len",
      "defined_out": [
        "array#0",
        "array%bytes_len%4#1",
        "array2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%4#1"
      ]
    },
    "1664": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "array%bytes_len%4#1",
        "8"
      ]
    },
    "1665": {
      "op": "/",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%12#0"
      ]
    },
    "1666": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "array#0",
        "array2#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%12#0",
        "11"
      ]
    },
    "1668": {
      "op": "==",
      "defined_out": [
        "array#0",
        "array2#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0",
        "tmp%13#0"
      ]
    },
    "1669": {
      "op": "assert",
      "stack_out": [
        "array#0",
        "i#0",
        "array2#0",
        "array#0"
      ]
    },
    "1670": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array2#0"
      ]
    },
    "1671": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%12#0"
      ]
    },
    "1672": {
      "op": "len",
      "defined_out": [
        "array#0",
        "array%bytes_len%5#1"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array%bytes_len%5#1"
      ]
    },
    "1673": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array%bytes_len%5#1",
        "8"
      ]
    },
    "1674": {
      "op": "/",
      "defined_out": [
        "array#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%14#0"
      ]
    },
    "1675": {
      "op": "intc_3 // 5",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%14#0",
        "5"
      ]
    },
    "1676": {
      "op": "==",
      "defined_out": [
        "array#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%15#0"
      ]
    },
    "1677": {
      "op": "assert",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0"
      ]
    },
    "1678": {
      "op": "dup",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1679": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%13#0"
      ]
    },
    "1680": {
      "op": "len",
      "defined_out": [
        "array#0",
        "array%bytes_len%6#1"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array%bytes_len%6#1"
      ]
    },
    "1681": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array%bytes_len%6#1",
        "8"
      ]
    },
    "1682": {
      "op": "/",
      "defined_out": [
        "array#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%16#0"
      ]
    },
    "1683": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%16#0",
        "1"
      ]
    },
    "1684": {
      "op": "-",
      "defined_out": [
        "array#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%17#0"
      ]
    },
    "1685": {
      "op": "dig 1",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%17#0",
        "array#0 (copy)"
      ]
    },
    "1687": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%14#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%17#0",
        "slot_contents%14#0"
      ]
    },
    "1688": {
      "op": "swap",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%14#0",
        "tmp%17#0"
      ]
    },
    "1689": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%14#0",
        "tmp%17#0",
        "8"
      ]
    },
    "1690": {
      "op": "*",
      "defined_out": [
        "array#0",
        "bytes_offset%2#0",
        "slot_contents%14#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%14#0",
        "bytes_offset%2#0"
      ]
    },
    "1691": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%14#0",
        "bytes_offset%2#0",
        "8"
      ]
    },
    "1692": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "encoded_element%2#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "encoded_element%2#0"
      ]
    },
    "1693": {
      "op": "btoi",
      "defined_out": [
        "array#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%18#0"
      ]
    },
    "1694": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%18#0",
        "4"
      ]
    },
    "1696": {
      "op": "==",
      "defined_out": [
        "array#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%19#0"
      ]
    },
    "1697": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0"
      ]
    },
    "1698": {
      "op": "dup",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1699": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%15#0"
      ]
    },
    "1700": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%15#0",
        "4"
      ]
    },
    "1702": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%15#0",
        "4",
        "8"
      ]
    },
    "1703": {
      "op": "*",
      "defined_out": [
        "array#0",
        "bytes_offset%3#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%15#0",
        "bytes_offset%3#0"
      ]
    },
    "1704": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%15#0",
        "bytes_offset%3#0",
        "8"
      ]
    },
    "1705": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "encoded_element%3#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "encoded_element%3#0"
      ]
    },
    "1706": {
      "op": "btoi",
      "defined_out": [
        "array#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%20#0"
      ]
    },
    "1707": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%20#0",
        "4"
      ]
    },
    "1709": {
      "op": "==",
      "defined_out": [
        "array#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%21#0"
      ]
    },
    "1710": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0"
      ]
    },
    "1711": {
      "op": "dup",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1712": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%16#0"
      ]
    },
    "1713": {
      "op": "intc_3 // 5",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%16#0",
        "5"
      ]
    },
    "1714": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%16#0",
        "5",
        "8"
      ]
    },
    "1715": {
      "op": "*",
      "defined_out": [
        "array#0",
        "bytes_offset%4#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%16#0",
        "bytes_offset%4#0"
      ]
    },
    "1716": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "slot_contents%16#0",
        "bytes_offset%4#0",
        "8"
      ]
    },
    "1717": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "encoded_element%4#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "encoded_element%4#0"
      ]
    },
    "1718": {
      "op": "btoi",
      "defined_out": [
        "array#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%22#0"
      ]
    },
    "1719": {
      "op": "intc_3 // 5",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%22#0",
        "5"
      ]
    },
    "1720": {
      "op": "==",
      "defined_out": [
        "array#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "array#0",
        "tmp%23#0"
      ]
    },
    "1721": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "array#0",
        "i#0",
        "array#0"
      ]
    },
    "1722": {
      "op": "loads",
      "defined_out": [
        "array#0",
        "slot_contents%17#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "slot_contents%17#0"
      ]
    },
    "1723": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "array#0",
        "i#0",
        "slot_contents%17#0",
        "6"
      ]
    },
    "1725": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "slot_contents%17#0",
        "6",
        "8"
      ]
    },
    "1726": {
      "op": "*",
      "defined_out": [
        "array#0",
        "bytes_offset%5#0",
        "slot_contents%17#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "slot_contents%17#0",
        "bytes_offset%5#0"
      ]
    },
    "1727": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array#0",
        "i#0",
        "slot_contents%17#0",
        "bytes_offset%5#0",
        "8"
      ]
    },
    "1728": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "encoded_element%5#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "encoded_element%5#0"
      ]
    },
    "1729": {
      "op": "btoi",
      "defined_out": [
        "array#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "tmp%24#0"
      ]
    },
    "1730": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "array#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "tmp%24#0",
        "0"
      ]
    },
    "1731": {
      "op": "==",
      "defined_out": [
        "array#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "array#0",
        "i#0",
        "tmp%25#0"
      ]
    },
    "1732": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "array#0",
        "i#0"
      ]
    },
    "1733": {
      "retsub": true,
      "op": "retsub"
    },
    "1734": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_evaluation_order",
      "params": {},
      "block": "test_array_evaluation_order_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "1735": {
      "op": "dup",
      "stack_out": [
        "0x",
        "0x"
      ]
    },
    "1736": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "1737": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "1740": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1741": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "1743": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1744": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1745": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "1746": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "3"
      ]
    },
    "1748": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1749": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1750": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "1751": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "1752": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "1753": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%2#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "encoded%2#0"
      ]
    },
    "1754": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "1755": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1757": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "1758": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1759": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1760": {
      "callsub": "test_cases.array.uint64.append_length_and_return",
      "op": "callsub append_length_and_return",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1763": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "arr#0"
      ]
    },
    "1764": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1765": {
      "callsub": "test_cases.array.uint64.append_length_and_return",
      "op": "callsub append_length_and_return",
      "defined_out": [
        "arr#0",
        "iterable%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "arr#0",
        "iterable%0#0"
      ]
    },
    "1768": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "arr#0",
        "slot_contents%1#0"
      ]
    },
    "1769": {
      "op": "dig 2",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "arr#0",
        "slot_contents%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1771": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "slot_contents%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "arr#0",
        "slot_contents%1#0",
        "slot_contents%2#0"
      ]
    },
    "1772": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "arr#0",
        "slot_contents%2#0",
        "slot_contents%1#0"
      ]
    },
    "1773": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "arr#0",
        "concat%1#0"
      ]
    },
    "1774": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "concat%1#0",
        "tmp%0#0"
      ]
    },
    "1776": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "concat%1#0"
      ]
    },
    "1777": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1778": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1779": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1780": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ]
    },
    "1781": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1782": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "1783": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0",
        "6"
      ]
    },
    "1785": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%2#0"
      ]
    },
    "1786": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1787": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1788": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%4#0"
      ]
    },
    "1789": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "0"
      ]
    },
    "1790": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "0",
        "8"
      ]
    },
    "1791": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "bytes_offset%0#0"
      ]
    },
    "1792": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "1793": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%0#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%0#0"
      ]
    },
    "1794": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%3#0"
      ]
    },
    "1795": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr#0",
        "tmp%3#0",
        "3"
      ]
    },
    "1797": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%4#0"
      ]
    },
    "1798": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1799": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1800": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0"
      ]
    },
    "1801": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "1"
      ]
    },
    "1802": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "1",
        "8"
      ]
    },
    "1803": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%1#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "bytes_offset%1#0"
      ]
    },
    "1804": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "bytes_offset%1#0",
        "8"
      ]
    },
    "1805": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%1#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%1#0"
      ]
    },
    "1806": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%5#0"
      ]
    },
    "1807": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%5#0",
        "1"
      ]
    },
    "1808": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%6#0"
      ]
    },
    "1809": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1810": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1811": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%6#0"
      ]
    },
    "1812": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%6#0",
        "2"
      ]
    },
    "1814": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%6#0",
        "2",
        "8"
      ]
    },
    "1815": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%2#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%6#0",
        "bytes_offset%2#0"
      ]
    },
    "1816": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%6#0",
        "bytes_offset%2#0",
        "8"
      ]
    },
    "1817": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%2#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%2#0"
      ]
    },
    "1818": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "1819": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "arr#0",
        "tmp%7#0",
        "2"
      ]
    },
    "1821": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0"
      ]
    },
    "1822": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1823": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1824": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%7#0"
      ]
    },
    "1825": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr#0",
        "slot_contents%7#0",
        "3"
      ]
    },
    "1827": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%7#0",
        "3",
        "8"
      ]
    },
    "1828": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%3#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%7#0",
        "bytes_offset%3#0"
      ]
    },
    "1829": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%7#0",
        "bytes_offset%3#0",
        "8"
      ]
    },
    "1830": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%3#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%3#0"
      ]
    },
    "1831": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%9#0"
      ]
    },
    "1832": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr#0",
        "tmp%9#0",
        "3"
      ]
    },
    "1834": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%10#0"
      ]
    },
    "1835": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1836": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1837": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%8#0"
      ]
    },
    "1838": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%8#0",
        "4"
      ]
    },
    "1840": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%8#0",
        "4",
        "8"
      ]
    },
    "1841": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%4#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%8#0",
        "bytes_offset%4#0"
      ]
    },
    "1842": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%8#0",
        "bytes_offset%4#0",
        "8"
      ]
    },
    "1843": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%4#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%4#0"
      ]
    },
    "1844": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%11#0"
      ]
    },
    "1845": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%11#0",
        "1"
      ]
    },
    "1846": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%12#0"
      ]
    },
    "1847": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1848": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1849": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%9#0"
      ]
    },
    "1850": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%9#0",
        "5"
      ]
    },
    "1851": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%9#0",
        "5",
        "8"
      ]
    },
    "1852": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%5#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%9#0",
        "bytes_offset%5#0"
      ]
    },
    "1853": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%9#0",
        "bytes_offset%5#0",
        "8"
      ]
    },
    "1854": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%5#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%5#0"
      ]
    },
    "1855": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "1856": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "arr#0",
        "tmp%13#0",
        "2"
      ]
    },
    "1858": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "1859": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1860": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1861": {
      "callsub": "test_cases.array.uint64.append_length_and_return",
      "op": "callsub append_length_and_return",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "1864": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%15#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%15#0 (copy)"
      ]
    },
    "1865": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%10#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "slot_contents%10#0"
      ]
    },
    "1866": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%1#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "array%bytes_len%1#1"
      ]
    },
    "1867": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "1868": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1869": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%16#0",
        "1"
      ]
    },
    "1870": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "1871": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%15#0"
      ]
    },
    "1872": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%11#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "slot_contents%11#0"
      ]
    },
    "1873": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "tmp%17#0"
      ]
    },
    "1874": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "tmp%17#0",
        "8"
      ]
    },
    "1875": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%6#0",
        "slot_contents%11#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "bytes_offset%6#0"
      ]
    },
    "1876": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%11#0",
        "bytes_offset%6#0",
        "8"
      ]
    },
    "1877": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%6#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%6#0"
      ]
    },
    "1878": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "arr#0",
        "materialized_values%0#0"
      ]
    },
    "1879": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "arr#0 (copy)"
      ]
    },
    "1881": {
      "callsub": "test_cases.array.uint64.append_length_and_return",
      "op": "callsub append_length_and_return",
      "defined_out": [
        "arr#0",
        "materialized_values%0#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "tmp%18#0"
      ]
    },
    "1884": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%12#0"
      ]
    },
    "1885": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%12#0",
        "0"
      ]
    },
    "1886": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%12#0",
        "0",
        "8"
      ]
    },
    "1887": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%7#0",
        "materialized_values%0#0",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%12#0",
        "bytes_offset%7#0"
      ]
    },
    "1888": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%12#0",
        "bytes_offset%7#0",
        "8"
      ]
    },
    "1889": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%7#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "encoded_element%7#0"
      ]
    },
    "1890": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "materialized_values%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "tmp%19#0"
      ]
    },
    "1891": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "tmp%19#0",
        "arr#0 (copy)"
      ]
    },
    "1893": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%13#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "tmp%19#0",
        "slot_contents%13#0"
      ]
    },
    "1894": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "materialized_values%0#0",
        "slot_contents%13#0",
        "tmp%19#0"
      ]
    },
    "1895": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "tmp%19#0",
        "materialized_values%0#0"
      ]
    },
    "1897": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0",
        "slot_contents%13#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "tmp%19#0",
        "encoded_value%0#0"
      ]
    },
    "1898": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "encoded_value%0#0",
        "tmp%19#0"
      ]
    },
    "1899": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "encoded_value%0#0",
        "tmp%19#0",
        "8"
      ]
    },
    "1900": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0",
        "slot_contents%13#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "encoded_value%0#0",
        "write_offset%0#0"
      ]
    },
    "1901": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "write_offset%0#0",
        "slot_contents%13#0"
      ]
    },
    "1903": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "encoded_value%0#0",
        "slot_contents%13#0",
        "write_offset%0#0"
      ]
    },
    "1904": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "write_offset%0#0",
        "encoded_value%0#0"
      ]
    },
    "1906": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "updated_array%0#0"
      ]
    },
    "1907": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "updated_array%0#0",
        "arr#0 (copy)"
      ]
    },
    "1909": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "updated_array%0#0"
      ]
    },
    "1910": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1911": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1912": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%14#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%14#0"
      ]
    },
    "1913": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%2#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%2#1"
      ]
    },
    "1914": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "1915": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%20#0"
      ]
    },
    "1916": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "tmp%20#0",
        "8"
      ]
    },
    "1917": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0"
      ]
    },
    "1918": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1919": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1920": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%15#0"
      ]
    },
    "1921": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr#0",
        "slot_contents%15#0",
        "6"
      ]
    },
    "1923": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%15#0",
        "6",
        "8"
      ]
    },
    "1924": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%8#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%15#0",
        "bytes_offset%8#0"
      ]
    },
    "1925": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%15#0",
        "bytes_offset%8#0",
        "8"
      ]
    },
    "1926": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%8#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%8#0"
      ]
    },
    "1927": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%22#0"
      ]
    },
    "1928": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr#0",
        "tmp%22#0",
        "6"
      ]
    },
    "1930": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%23#0"
      ]
    },
    "1931": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1932": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1933": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%16#0"
      ]
    },
    "1934": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%16#0",
        "7"
      ]
    },
    "1936": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%16#0",
        "7",
        "8"
      ]
    },
    "1937": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%9#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%16#0",
        "bytes_offset%9#0"
      ]
    },
    "1938": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%16#0",
        "bytes_offset%9#0",
        "8"
      ]
    },
    "1939": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%9#0"
      ],
      "stack_out": [
        "arr#0",
        "encoded_element%9#0"
      ]
    },
    "1940": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%24#0"
      ]
    },
    "1941": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr#0",
        "tmp%24#0",
        "7"
      ]
    },
    "1943": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%25#0"
      ]
    },
    "1944": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1945": {
      "op": "loads",
      "defined_out": [
        "slot_contents%17#0"
      ],
      "stack_out": [
        "slot_contents%17#0"
      ]
    },
    "1946": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "slot_contents%17#0",
        "3"
      ]
    },
    "1948": {
      "op": "intc_0 // 8",
      "stack_out": [
        "slot_contents%17#0",
        "3",
        "8"
      ]
    },
    "1949": {
      "op": "*",
      "defined_out": [
        "bytes_offset%10#0",
        "slot_contents%17#0"
      ],
      "stack_out": [
        "slot_contents%17#0",
        "bytes_offset%10#0"
      ]
    },
    "1950": {
      "op": "intc_0 // 8",
      "stack_out": [
        "slot_contents%17#0",
        "bytes_offset%10#0",
        "8"
      ]
    },
    "1951": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%10#0"
      ],
      "stack_out": [
        "encoded_element%10#0"
      ]
    },
    "1952": {
      "op": "btoi",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1953": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "tmp%26#0",
        "6"
      ]
    },
    "1955": {
      "op": "==",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1956": {
      "op": "assert",
      "stack_out": []
    },
    "1957": {
      "retsub": true,
      "op": "retsub"
    },
    "1958": {
      "subroutine": "test_cases.array.uint64.Contract.test_allocations",
      "params": {
        "num#0": "uint64"
      },
      "block": "test_allocations",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1961": {
      "block": "test_allocations_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1962": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1963": {
      "op": "intc_2 // 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "1964": {
      "block": "test_allocations_for_header@1",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1966": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "num#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "num#0 (copy)"
      ]
    },
    "1968": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1969": {
      "op": "bz test_allocations_after_for@4",
      "stack_out": [
        "_i#0"
      ]
    },
    "1972": {
      "block": "test_allocations_for_body@2",
      "stack_in": [
        "_i#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "_i#0",
        "0x"
      ]
    },
    "1973": {
      "op": "dup",
      "stack_out": [
        "_i#0",
        "0x",
        "0x"
      ]
    },
    "1974": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "_i#0",
        "encoded%0#0"
      ]
    },
    "1975": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "_i#0",
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "1978": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1979": {
      "op": "uncover 2",
      "stack_out": [
        "_i#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "1981": {
      "op": "stores",
      "defined_out": [
        "alloc_test#0"
      ],
      "stack_out": [
        "_i#0",
        "alloc_test#0"
      ]
    },
    "1982": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "alloc_test#0"
      ],
      "stack_out": [
        "_i#0",
        "alloc_test#0",
        "1"
      ]
    },
    "1983": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "_i#0"
      ]
    },
    "1986": {
      "block": "test_allocations_for_footer@3",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1988": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1989": {
      "op": "+",
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1990": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "1992": {
      "op": "b test_allocations_for_header@1"
    },
    "1995": {
      "block": "test_allocations_after_for@4",
      "stack_in": [
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1996": {
      "subroutine": "test_cases.array.uint64.Contract.test_iteration",
      "params": {},
      "block": "test_iteration",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1999": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arc4_arr#0"
      ]
    },
    "2000": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0"
      ]
    },
    "2001": {
      "op": "dupn 7",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0"
      ]
    },
    "2003": {
      "block": "test_iteration_block@0",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "0x"
      ]
    },
    "2004": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "0x",
        "0x"
      ]
    },
    "2005": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "encoded%0#0"
      ]
    },
    "2006": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "2009": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "2010": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "2012": {
      "op": "stores",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0"
      ]
    },
    "2013": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "1"
      ]
    },
    "2014": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0"
      ]
    },
    "2015": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arr#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2016": {
      "block": "test_iteration_for_header@1",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "val#0"
      ]
    },
    "2018": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "val#0",
        "5"
      ]
    },
    "2019": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "continue_looping%0#0"
      ]
    },
    "2020": {
      "op": "bz test_iteration_after_for@4",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2023": {
      "block": "test_iteration_for_body@2",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0"
      ]
    },
    "2025": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2026": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "2027": {
      "op": "frame_dig 10",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%0#0",
        "val#0"
      ]
    },
    "2029": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_Encoded(uint64)%0#0",
        "slot_contents%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "2030": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "as_Encoded(uint64)%0#0",
        "slot_contents%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2031": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "2032": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%1#0",
        "slot_contents%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "2033": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%0#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "2034": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "encoded%2#0",
        "slot_contents%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%0#0",
        "encoded%2#0"
      ]
    },
    "2035": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "2036": {
      "op": "stores",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2037": {
      "block": "test_iteration_for_footer@3",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "val#0"
      ]
    },
    "2039": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "val#0",
        "1"
      ]
    },
    "2040": {
      "op": "+",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "val#0"
      ]
    },
    "2041": {
      "op": "frame_bury 10",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2043": {
      "op": "b test_iteration_for_header@1"
    },
    "2046": {
      "block": "test_iteration_after_for@4",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0"
      ]
    },
    "2048": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2049": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "slot_contents%1#0"
      ]
    },
    "2050": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "array%bytes_len%0#1"
      ]
    },
    "2051": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "2052": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2053": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "tmp%0#0",
        "5"
      ]
    },
    "2054": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "tmp%1#0"
      ]
    },
    "2055": {
      "error": "expected array of length 5",
      "op": "assert // expected array of length 5",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0"
      ]
    },
    "2056": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arr#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0",
        "last#0"
      ]
    },
    "2057": {
      "op": "frame_bury 6",
      "defined_out": [
        "arr#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0"
      ]
    },
    "2059": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%2#0"
      ]
    },
    "2060": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%1#1",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array%bytes_len%1#1"
      ]
    },
    "2061": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "2062": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array_length%0#0"
      ]
    },
    "2063": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2065": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%0#0"
      ]
    },
    "2066": {
      "op": "frame_bury 4",
      "defined_out": [
        "arr#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2068": {
      "block": "test_iteration_for_header@5",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%0#0"
      ]
    },
    "2070": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "2072": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "continue_looping%1#0"
      ]
    },
    "2073": {
      "op": "bz test_iteration_after_for@8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2076": {
      "block": "test_iteration_for_body@6",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0"
      ]
    },
    "2078": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%3#0"
      ]
    },
    "2079": {
      "op": "frame_dig 4",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%3#0",
        "item_index_internal%0#0"
      ]
    },
    "2081": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "item_index_internal%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%3#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "2082": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%0#0",
        "item_index_internal%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%3#0",
        "bytes_offset%0#0"
      ]
    },
    "2083": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%3#0",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "2084": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "encoded_element%0#0"
      ]
    },
    "2085": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "value#0"
      ]
    },
    "2086": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "value#0",
        "value#0 (copy)"
      ]
    },
    "2087": {
      "op": "frame_dig 6",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "last#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "value#0",
        "value#0 (copy)",
        "last#0"
      ]
    },
    "2089": {
      "op": ">=",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "last#0",
        "tmp%2#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2090": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "last#0"
      ]
    },
    "2091": {
      "op": "frame_bury 6",
      "defined_out": [
        "arr#0",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2093": {
      "block": "test_iteration_for_footer@7",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%0#0"
      ]
    },
    "2095": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "2096": {
      "op": "+",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%0#0"
      ]
    },
    "2097": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2099": {
      "op": "b test_iteration_for_header@5"
    },
    "2102": {
      "block": "test_iteration_after_for@8",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0"
      ]
    },
    "2104": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%4#0"
      ]
    },
    "2105": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array%bytes_len%2#1"
      ]
    },
    "2106": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "2107": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_length%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array_length%1#0"
      ]
    },
    "2108": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "array_length%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2110": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arr#0",
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0"
      ]
    },
    "2111": {
      "op": "frame_bury 5",
      "defined_out": [
        "arr#0",
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2113": {
      "block": "test_iteration_for_header@9",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0"
      ]
    },
    "2115": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0",
        "array_length%1#0"
      ]
    },
    "2117": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%2#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "continue_looping%2#0"
      ]
    },
    "2118": {
      "op": "bz test_iteration_after_for@12",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2121": {
      "block": "test_iteration_for_body@10",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0"
      ]
    },
    "2123": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%5#0"
      ]
    },
    "2124": {
      "op": "frame_dig 5",
      "defined_out": [
        "arr#0",
        "item_index_internal%1#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%5#0",
        "item_index_internal%1#0"
      ]
    },
    "2126": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "item_index_internal%1#0",
        "item_index_internal%1#0 (copy)",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%5#0",
        "item_index_internal%1#0 (copy)",
        "item_index_internal%1#0 (copy)"
      ]
    },
    "2127": {
      "op": "cover 2",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0",
        "slot_contents%5#0",
        "item_index_internal%1#0 (copy)"
      ]
    },
    "2129": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "item_index_internal%1#0",
        "item_index_internal%1#0 (copy)",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0",
        "slot_contents%5#0",
        "item_index_internal%1#0 (copy)",
        "8"
      ]
    },
    "2130": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%1#0",
        "item_index_internal%1#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0",
        "slot_contents%5#0",
        "bytes_offset%1#0"
      ]
    },
    "2131": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0",
        "slot_contents%5#0",
        "bytes_offset%1#0",
        "8"
      ]
    },
    "2132": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0",
        "encoded_element%1#0"
      ]
    },
    "2133": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "idx#0",
        "item_index_internal%1#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "idx#0",
        "value#0"
      ]
    },
    "2134": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "item_index_internal%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "tmp%3#0"
      ]
    },
    "2135": {
      "error": "incorrect array value",
      "op": "assert // incorrect array value",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2136": {
      "block": "test_iteration_for_footer@11",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0"
      ]
    },
    "2138": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "2139": {
      "op": "+",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "item_index_internal%1#0"
      ]
    },
    "2140": {
      "op": "frame_bury 5",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2142": {
      "op": "b test_iteration_for_header@9"
    },
    "2145": {
      "block": "test_iteration_after_for@12",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arr#0"
      ]
    },
    "2147": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%6#0"
      ]
    },
    "2148": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%3#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array%bytes_len%3#1"
      ]
    },
    "2149": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%3#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array%bytes_len%3#1",
        "8"
      ]
    },
    "2150": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0"
      ]
    },
    "2151": {
      "op": "frame_bury 8",
      "defined_out": [
        "arr#0",
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2153": {
      "block": "test_iteration_for_header@13",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0"
      ]
    },
    "2155": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0",
        "0"
      ]
    },
    "2156": {
      "op": ">",
      "defined_out": [
        "continue_looping%3#0",
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "continue_looping%3#0"
      ]
    },
    "2157": {
      "op": "bz test_iteration_after_for@16",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2160": {
      "block": "test_iteration_for_body@14",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0"
      ]
    },
    "2162": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0",
        "1"
      ]
    },
    "2163": {
      "op": "-",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0"
      ]
    },
    "2164": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0",
        "reverse_index_internal%2#0"
      ]
    },
    "2165": {
      "op": "frame_bury 8",
      "defined_out": [
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0"
      ]
    },
    "2167": {
      "op": "frame_dig 9",
      "defined_out": [
        "arr#0",
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0",
        "arr#0"
      ]
    },
    "2169": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "reverse_index_internal%2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reverse_index_internal%2#0",
        "slot_contents%7#0"
      ]
    },
    "2170": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%7#0",
        "reverse_index_internal%2#0"
      ]
    },
    "2171": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "reverse_index_internal%2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%7#0",
        "reverse_index_internal%2#0",
        "8"
      ]
    },
    "2172": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%2#0",
        "reverse_index_internal%2#0",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%7#0",
        "bytes_offset%2#0"
      ]
    },
    "2173": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%7#0",
        "bytes_offset%2#0",
        "8"
      ]
    },
    "2174": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr#0",
        "encoded_element%2#0",
        "reverse_index_internal%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "encoded_element%2#0"
      ]
    },
    "2175": {
      "op": "btoi",
      "defined_out": [
        "arr#0",
        "reverse_index_internal%2#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "value#0"
      ]
    },
    "2176": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "reverse_index_internal%2#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "value#0",
        "value#0 (copy)"
      ]
    },
    "2177": {
      "op": "frame_dig 6",
      "defined_out": [
        "arr#0",
        "last#0",
        "reverse_index_internal%2#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "value#0",
        "value#0 (copy)",
        "last#0"
      ]
    },
    "2179": {
      "op": "<=",
      "defined_out": [
        "arr#0",
        "last#0",
        "reverse_index_internal%2#0",
        "tmp%4#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "value#0",
        "tmp%4#0"
      ]
    },
    "2180": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "last#0"
      ]
    },
    "2181": {
      "op": "frame_bury 6",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2183": {
      "block": "test_iteration_for_footer@15",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "b test_iteration_for_header@13"
    },
    "2186": {
      "block": "test_iteration_after_for@16",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "intc_2 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "0"
      ]
    },
    "2187": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "as_bytes%0#0"
      ]
    },
    "2188": {
      "op": "extract 6 2",
      "defined_out": [
        "len_u16%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "len_u16%0#0"
      ]
    },
    "2191": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "len_u16%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "len_u16%0#0",
        "0x"
      ]
    },
    "2192": {
      "op": "concat",
      "defined_out": [
        "encoded%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "encoded%3#0"
      ]
    },
    "2193": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "encoded%3#0",
        "0x"
      ]
    },
    "2194": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arc4_arr#0"
      ]
    },
    "2195": {
      "op": "frame_bury 0",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2197": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "0x"
      ]
    },
    "2198": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "0x",
        "0x"
      ]
    },
    "2199": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#0",
        "encoded%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "encoded%5#0"
      ]
    },
    "2200": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arc4_arr#0",
        "encoded%5#0",
        "slot%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "encoded%5#0",
        "slot%1#0"
      ]
    },
    "2203": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "encoded%5#0",
        "slot%1#0",
        "slot%1#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "encoded%5#0",
        "slot%1#0",
        "slot%1#0 (copy)"
      ]
    },
    "2204": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "encoded%5#0"
      ]
    },
    "2206": {
      "op": "stores",
      "defined_out": [
        "arc4_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0"
      ]
    },
    "2207": {
      "op": "frame_bury 7",
      "defined_out": [
        "arc4_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2209": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arc4_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "1"
      ]
    },
    "2210": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2211": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0"
      ]
    },
    "2212": {
      "op": "frame_bury 3",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2214": {
      "block": "test_iteration_for_header@17",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0"
      ]
    },
    "2216": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "5"
      ]
    },
    "2217": {
      "op": "<",
      "defined_out": [
        "continue_looping%4#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "continue_looping%4#0"
      ]
    },
    "2218": {
      "op": "bz test_iteration_after_for@20",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2221": {
      "block": "test_iteration_for_body@18",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0"
      ]
    },
    "2223": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2224": {
      "op": "itob",
      "defined_out": [
        "as_Encoded(uint64)%1#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "2225": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "as_Encoded(uint64)%1#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "2226": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "0x",
        "as_Encoded(uint64)%1#0"
      ]
    },
    "2227": {
      "op": "concat",
      "defined_out": [
        "encoded%6#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "encoded%6#0"
      ]
    },
    "2228": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "encoded%6#0",
        "0x"
      ]
    },
    "2229": {
      "op": "concat",
      "defined_out": [
        "encoded%7#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "encoded%7#0"
      ]
    },
    "2230": {
      "op": "frame_dig 0",
      "defined_out": [
        "arc4_arr#0",
        "encoded%7#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "encoded%7#0",
        "arc4_arr#0"
      ]
    },
    "2232": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "arc4_arr#0",
        "encoded%7#0"
      ]
    },
    "2233": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0"
      ]
    },
    "2234": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "2235": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "extract_to_end%0#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0",
        "extract_to_end%0#0"
      ]
    },
    "2238": {
      "op": "len",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "i#0",
        "len%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0",
        "len%0#0"
      ]
    },
    "2239": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arc4_arr#0",
        "concat%1#0",
        "i#0",
        "len%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0",
        "len%0#0",
        "8"
      ]
    },
    "2240": {
      "op": "/",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "div_floor%0#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0",
        "div_floor%0#0"
      ]
    },
    "2241": {
      "op": "itob",
      "defined_out": [
        "arc4_arr#0",
        "as_bytes%1#0",
        "concat%1#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "2242": {
      "op": "extract 6 2",
      "defined_out": [
        "arc4_arr#0",
        "as_u16_bytes%0#0",
        "concat%1#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2245": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%1#0"
      ]
    },
    "2246": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arc4_arr#0",
        "as_u16_bytes%0#0",
        "concat%1#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "as_u16_bytes%0#0",
        "concat%1#0",
        "0"
      ]
    },
    "2247": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "2249": {
      "op": "replace3",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "arc4_arr#0"
      ]
    },
    "2250": {
      "op": "frame_bury 0",
      "defined_out": [
        "arc4_arr#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0"
      ]
    },
    "2252": {
      "op": "itob",
      "defined_out": [
        "arc4_arr#0",
        "as_Encoded(uint64)%2#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "2253": {
      "op": "frame_dig 7",
      "defined_out": [
        "arc4_arr#0",
        "as_Encoded(uint64)%2#0",
        "i#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "as_Encoded(uint64)%2#0",
        "native_arr#0"
      ]
    },
    "2255": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "as_Encoded(uint64)%2#0",
        "i#0",
        "native_arr#0",
        "native_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "as_Encoded(uint64)%2#0",
        "native_arr#0 (copy)",
        "native_arr#0 (copy)"
      ]
    },
    "2256": {
      "op": "cover 2",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "as_Encoded(uint64)%2#0",
        "native_arr#0 (copy)"
      ]
    },
    "2258": {
      "op": "loads",
      "defined_out": [
        "arc4_arr#0",
        "as_Encoded(uint64)%2#0",
        "i#0",
        "native_arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "as_Encoded(uint64)%2#0",
        "slot_contents%8#0"
      ]
    },
    "2259": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "slot_contents%8#0",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "2260": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "slot_contents%8#0",
        "as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "2261": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "slot_contents%8#0",
        "0x",
        "as_Encoded(uint64)%2#0"
      ]
    },
    "2262": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#0",
        "encoded%8#0",
        "i#0",
        "native_arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "slot_contents%8#0",
        "encoded%8#0"
      ]
    },
    "2263": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "slot_contents%8#0",
        "encoded%8#0",
        "0x"
      ]
    },
    "2264": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#0",
        "encoded%9#0",
        "i#0",
        "native_arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "slot_contents%8#0",
        "encoded%9#0"
      ]
    },
    "2265": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arc4_arr#0",
        "concat%2#0",
        "i#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0",
        "concat%2#0"
      ]
    },
    "2266": {
      "op": "stores",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2267": {
      "block": "test_iteration_for_footer@19",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0"
      ]
    },
    "2269": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0",
        "1"
      ]
    },
    "2270": {
      "op": "+",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "i#0"
      ]
    },
    "2271": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2273": {
      "op": "b test_iteration_for_header@17"
    },
    "2276": {
      "block": "test_iteration_after_for@20",
      "stack_in": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "native_arr#0"
      ]
    },
    "2278": {
      "op": "loads",
      "defined_out": [
        "native_arr#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%9#0"
      ]
    },
    "2279": {
      "op": "frame_dig 0",
      "defined_out": [
        "arc4_arr#0",
        "native_arr#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "slot_contents%9#0",
        "arc4_arr#0"
      ]
    },
    "2281": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "arc4_arr#0",
        "slot_contents%9#0"
      ]
    },
    "2282": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0"
      ]
    },
    "2283": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "concat%3#0 (copy)",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0",
        "concat%3#0 (copy)"
      ]
    },
    "2284": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "extract_to_end%1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0",
        "extract_to_end%1#0"
      ]
    },
    "2287": {
      "op": "len",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "len%1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0",
        "len%1#0"
      ]
    },
    "2288": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arc4_arr#0",
        "concat%3#0",
        "len%1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0",
        "len%1#0",
        "8"
      ]
    },
    "2289": {
      "op": "/",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "div_floor%1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0",
        "div_floor%1#0"
      ]
    },
    "2290": {
      "op": "itob",
      "defined_out": [
        "arc4_arr#0",
        "as_bytes%2#0",
        "concat%3#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0",
        "as_bytes%2#0"
      ]
    },
    "2291": {
      "op": "extract 6 2",
      "defined_out": [
        "arc4_arr#0",
        "as_u16_bytes%1#0",
        "concat%3#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0",
        "as_u16_bytes%1#0"
      ]
    },
    "2294": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "as_u16_bytes%1#0",
        "concat%3#0"
      ]
    },
    "2295": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arc4_arr#0",
        "as_u16_bytes%1#0",
        "concat%3#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "as_u16_bytes%1#0",
        "concat%3#0",
        "0"
      ]
    },
    "2296": {
      "op": "uncover 2",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "concat%3#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "2298": {
      "op": "replace3",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "2299": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "combined_arr#0 (copy)",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "2300": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)",
        "0"
      ]
    },
    "2301": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "tmp%5#0"
      ]
    },
    "2302": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "tmp%5#0",
        "10"
      ]
    },
    "2304": {
      "op": "==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "tmp%6#0"
      ]
    },
    "2305": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "2306": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "2307": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "array_trimmed%0#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%0#0"
      ]
    },
    "2310": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%0#0",
        "0"
      ]
    },
    "2311": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%0#0",
        "0",
        "8"
      ]
    },
    "2312": {
      "op": "*",
      "defined_out": [
        "arc4_arr#0",
        "array_trimmed%0#0",
        "bytes_offset%3#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%0#0",
        "bytes_offset%3#0"
      ]
    },
    "2313": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%0#0",
        "bytes_offset%3#0",
        "8"
      ]
    },
    "2314": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2315": {
      "op": "bytec_1 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "2316": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "tmp%7#0"
      ]
    },
    "2317": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "2318": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "2319": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "array_trimmed%1#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%1#0"
      ]
    },
    "2322": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arc4_arr#0",
        "array_trimmed%1#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%1#0",
        "4"
      ]
    },
    "2324": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%1#0",
        "4",
        "8"
      ]
    },
    "2325": {
      "op": "*",
      "defined_out": [
        "arc4_arr#0",
        "array_trimmed%1#0",
        "bytes_offset%4#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%1#0",
        "bytes_offset%4#0"
      ]
    },
    "2326": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%1#0",
        "bytes_offset%4#0",
        "8"
      ]
    },
    "2327": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "2328": {
      "op": "bytec_2 // 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004",
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "reinterpret_biguint%2#0",
        "0x0000000000000004"
      ]
    },
    "2329": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "tmp%8#0"
      ]
    },
    "2330": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "2331": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "2332": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "array_trimmed%2#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%2#0"
      ]
    },
    "2335": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "arc4_arr#0",
        "array_trimmed%2#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%2#0",
        "5"
      ]
    },
    "2336": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%2#0",
        "5",
        "8"
      ]
    },
    "2337": {
      "op": "*",
      "defined_out": [
        "arc4_arr#0",
        "array_trimmed%2#0",
        "bytes_offset%5#0",
        "combined_arr#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%2#0",
        "bytes_offset%5#0"
      ]
    },
    "2338": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "array_trimmed%2#0",
        "bytes_offset%5#0",
        "8"
      ]
    },
    "2339": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "reinterpret_biguint%4#0"
      ]
    },
    "2340": {
      "op": "bytec_1 // 0x0000000000000000",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "reinterpret_biguint%4#0",
        "0x0000000000000000"
      ]
    },
    "2341": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "native_arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0",
        "tmp%9#0"
      ]
    },
    "2342": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "2343": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "array_trimmed%3#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array_trimmed%3#0"
      ]
    },
    "2346": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arc4_arr#0",
        "array_trimmed%3#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array_trimmed%3#0",
        "9"
      ]
    },
    "2348": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array_trimmed%3#0",
        "9",
        "8"
      ]
    },
    "2349": {
      "op": "*",
      "defined_out": [
        "arc4_arr#0",
        "array_trimmed%3#0",
        "bytes_offset%6#0",
        "native_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array_trimmed%3#0",
        "bytes_offset%6#0"
      ]
    },
    "2350": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "array_trimmed%3#0",
        "bytes_offset%6#0",
        "8"
      ]
    },
    "2351": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arc4_arr#0",
        "native_arr#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reinterpret_biguint%6#0"
      ]
    },
    "2352": {
      "op": "bytec_2 // 0x0000000000000004",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "reinterpret_biguint%6#0",
        "0x0000000000000004"
      ]
    },
    "2353": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "native_arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0",
        "tmp%10#0"
      ]
    },
    "2354": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "array_length%0#0",
        "array_length%1#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "last#0",
        "native_arr#0",
        "reverse_index_internal%2#0",
        "arr#0",
        "val#0"
      ]
    },
    "2355": {
      "retsub": true,
      "op": "retsub"
    },
    "2356": {
      "subroutine": "test_cases.array.uint64.Contract.test_quicksort",
      "params": {},
      "block": "test_quicksort",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2359": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length%0#0"
      ]
    },
    "2360": {
      "op": "dupn 2",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0"
      ]
    },
    "2362": {
      "block": "test_quicksort_block@0",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "0x"
      ]
    },
    "2363": {
      "op": "dup",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "0x",
        "0x"
      ]
    },
    "2364": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "encoded%0#0"
      ]
    },
    "2365": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "2368": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "2369": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "2371": {
      "op": "stores",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ]
    },
    "2372": {
      "op": "txn Sender",
      "defined_out": [
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0"
      ]
    },
    "2374": {
      "op": "dup",
      "defined_out": [
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2375": {
      "op": "len",
      "defined_out": [
        "bytes_length%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0"
      ]
    },
    "2376": {
      "op": "intc_2 // 0",
      "defined_out": [
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2377": {
      "block": "test_quicksort_for_header@1",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2379": {
      "op": "frame_dig 5",
      "defined_out": [
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "bytes_length%0#0"
      ]
    },
    "2381": {
      "op": "<",
      "defined_out": [
        "bytes_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "2382": {
      "op": "bz test_quicksort_after_for@4",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2385": {
      "block": "test_quicksort_for_body@2",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "2387": {
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2389": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "2390": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "b#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "2391": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "2392": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "rnd#0"
      ]
    },
    "2394": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "rnd#0 (copy)",
        "rnd#0 (copy)"
      ]
    },
    "2395": {
      "op": "cover 2",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%1#0",
        "rnd#0 (copy)"
      ]
    },
    "2397": {
      "op": "loads",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%1#0",
        "slot_contents%0#0"
      ]
    },
    "2398": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%1#0"
      ]
    },
    "2399": {
      "op": "itob",
      "defined_out": [
        "as_Encoded(uint64)%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "2400": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "as_Encoded(uint64)%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2401": {
      "op": "swap",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "0x",
        "as_Encoded(uint64)%0#0"
      ]
    },
    "2402": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "encoded%1#0"
      ]
    },
    "2403": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "encoded%1#0",
        "0x"
      ]
    },
    "2404": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "encoded%2#0"
      ]
    },
    "2405": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "concat%0#0"
      ]
    },
    "2406": {
      "op": "stores",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2407": {
      "block": "test_quicksort_for_footer@3",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2409": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "2410": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2411": {
      "op": "frame_bury 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2413": {
      "op": "b test_quicksort_for_header@1"
    },
    "2416": {
      "block": "test_quicksort_after_for@4",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "2418": {
      "op": "dup",
      "defined_out": [
        "rnd#0",
        "rnd#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)"
      ]
    },
    "2419": {
      "op": "loads",
      "defined_out": [
        "rnd#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%1#0"
      ]
    },
    "2420": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%bytes_len%0#1"
      ]
    },
    "2421": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "2422": {
      "op": "/",
      "defined_out": [
        "rnd#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%2#0"
      ]
    },
    "2423": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "rnd#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%2#0",
        "32"
      ]
    },
    "2425": {
      "op": "==",
      "defined_out": [
        "rnd#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%3#0"
      ]
    },
    "2426": {
      "error": "expected array of length 32",
      "op": "assert // expected array of length 32",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "2427": {
      "op": "dup",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)"
      ]
    },
    "2428": {
      "op": "loads",
      "defined_out": [
        "rnd#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%2#0"
      ]
    },
    "2429": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%1#1",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%bytes_len%1#1"
      ]
    },
    "2430": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "2431": {
      "op": "/",
      "defined_out": [
        "rnd#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%4#0"
      ]
    },
    "2432": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "rnd#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%4#0",
        "1"
      ]
    },
    "2433": {
      "op": "-",
      "defined_out": [
        "rnd#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%5#0"
      ]
    },
    "2434": {
      "op": "dig 1",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%5#0",
        "rnd#0 (copy)"
      ]
    },
    "2436": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "rnd#0",
        "rnd#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%5#0",
        "rnd#0 (copy)",
        "0"
      ]
    },
    "2437": {
      "op": "uncover 2",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)",
        "0",
        "tmp%5#0"
      ]
    },
    "2439": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "2442": {
      "op": "intc_2 // 0",
      "defined_out": [
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "last#0"
      ]
    },
    "2443": {
      "op": "frame_bury 2",
      "defined_out": [
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "2445": {
      "op": "loads",
      "defined_out": [
        "last#0",
        "rnd#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%3#0"
      ]
    },
    "2446": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%2#1",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "array%bytes_len%2#1"
      ]
    },
    "2447": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "2448": {
      "op": "/",
      "defined_out": [
        "array_length%0#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "2449": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_length%0#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2451": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "2452": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2454": {
      "block": "test_quicksort_for_header@5",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "2456": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "array_length%0#0"
      ]
    },
    "2458": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "2459": {
      "op": "bz test_quicksort_after_for@8",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2462": {
      "block": "test_quicksort_for_body@6",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "2464": {
      "op": "loads",
      "defined_out": [
        "rnd#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ]
    },
    "2465": {
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%1#0",
        "rnd#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "item_index_internal%1#0"
      ]
    },
    "2467": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "item_index_internal%1#0",
        "rnd#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "item_index_internal%1#0",
        "8"
      ]
    },
    "2468": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "item_index_internal%1#0",
        "rnd#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "bytes_offset%0#0"
      ]
    },
    "2469": {
      "op": "intc_0 // 8",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "2470": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "item_index_internal%1#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "encoded_element%0#0"
      ]
    },
    "2471": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%1#0",
        "rnd#0",
        "value#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "value#0"
      ]
    },
    "2472": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%1#0",
        "rnd#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "value#0",
        "value#0 (copy)"
      ]
    },
    "2473": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "value#0",
        "value#0 (copy)",
        "last#0"
      ]
    },
    "2475": {
      "op": ">=",
      "defined_out": [
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%6#0",
        "value#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "value#0",
        "tmp%6#0"
      ]
    },
    "2476": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "last#0"
      ]
    },
    "2477": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2479": {
      "block": "test_quicksort_for_footer@7",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "2481": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "2482": {
      "op": "+",
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "2483": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2485": {
      "op": "b test_quicksort_for_header@5"
    },
    "2488": {
      "block": "test_quicksort_after_for@8",
      "stack_in": [
        "array_length%0#0",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2489": {
      "subroutine": "test_cases.array.uint64.Contract.test_unobserved_write",
      "params": {},
      "block": "test_unobserved_write_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.uint64.create_array",
      "op": "callsub create_array",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2492": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2493": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "2494": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%0#1"
      ]
    },
    "2495": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "2496": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "2497": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "1"
      ]
    },
    "2498": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "last#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0"
      ]
    },
    "2499": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "last#0",
        "arr#0 (copy)"
      ]
    },
    "2501": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "last#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%1#0"
      ]
    },
    "2502": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "last#0"
      ]
    },
    "2503": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "last#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "last#0",
        "0"
      ]
    },
    "2504": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0",
        "last#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "last#0",
        "encoded_value%0#0"
      ]
    },
    "2505": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0",
        "last#0",
        "last#0 (copy)",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "last#0",
        "encoded_value%0#0",
        "last#0 (copy)"
      ]
    },
    "2507": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "last#0",
        "encoded_value%0#0",
        "last#0 (copy)",
        "8"
      ]
    },
    "2508": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "encoded_value%0#0",
        "last#0",
        "slot_contents%1#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%1#0",
        "last#0",
        "encoded_value%0#0",
        "write_offset%0#0"
      ]
    },
    "2509": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "last#0",
        "encoded_value%0#0",
        "write_offset%0#0",
        "slot_contents%1#0"
      ]
    },
    "2511": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "last#0",
        "encoded_value%0#0",
        "slot_contents%1#0",
        "write_offset%0#0"
      ]
    },
    "2512": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%1#0",
        "write_offset%0#0",
        "encoded_value%0#0"
      ]
    },
    "2514": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "last#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "updated_array%0#0"
      ]
    },
    "2515": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "last#0",
        "updated_array%0#0",
        "arr#0 (copy)"
      ]
    },
    "2517": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "last#0",
        "arr#0 (copy)",
        "updated_array%0#0"
      ]
    },
    "2518": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "last#0"
      ]
    },
    "2519": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "last#0",
        "arr#0 (copy)"
      ]
    },
    "2521": {
      "callsub": "test_cases.array.uint64.assert_last_is_zero",
      "op": "callsub assert_last_is_zero",
      "stack_out": [
        "arr#0",
        "last#0"
      ]
    },
    "2524": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "last#0",
        "arr#0 (copy)"
      ]
    },
    "2526": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0"
      ]
    },
    "2527": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0",
        "1"
      ]
    },
    "2528": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "encoded_value%1#0",
        "last#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0",
        "encoded_value%1#0"
      ]
    },
    "2529": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0",
        "encoded_value%1#0",
        "last#0 (copy)"
      ]
    },
    "2531": {
      "op": "intc_0 // 8",
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0",
        "encoded_value%1#0",
        "last#0 (copy)",
        "8"
      ]
    },
    "2532": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "encoded_value%1#0",
        "last#0",
        "slot_contents%2#0",
        "write_offset%1#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0",
        "encoded_value%1#0",
        "write_offset%1#0"
      ]
    },
    "2533": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "last#0",
        "encoded_value%1#0",
        "write_offset%1#0",
        "slot_contents%2#0"
      ]
    },
    "2535": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "last#0",
        "encoded_value%1#0",
        "slot_contents%2#0",
        "write_offset%1#0"
      ]
    },
    "2536": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "last#0",
        "slot_contents%2#0",
        "write_offset%1#0",
        "encoded_value%1#0"
      ]
    },
    "2538": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "last#0",
        "updated_array%1#0"
      ],
      "stack_out": [
        "arr#0",
        "last#0",
        "updated_array%1#0"
      ]
    },
    "2539": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "last#0",
        "updated_array%1#0",
        "arr#0 (copy)"
      ]
    },
    "2541": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "last#0",
        "arr#0 (copy)",
        "updated_array%1#0"
      ]
    },
    "2542": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "last#0"
      ]
    },
    "2543": {
      "op": "swap",
      "stack_out": [
        "last#0",
        "arr#0"
      ]
    },
    "2544": {
      "op": "loads",
      "defined_out": [
        "last#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "last#0",
        "slot_contents%3#0"
      ]
    },
    "2545": {
      "op": "swap",
      "stack_out": [
        "slot_contents%3#0",
        "last#0"
      ]
    },
    "2546": {
      "op": "intc_0 // 8",
      "stack_out": [
        "slot_contents%3#0",
        "last#0",
        "8"
      ]
    },
    "2547": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "bytes_offset%0#0"
      ]
    },
    "2548": {
      "op": "intc_0 // 8",
      "stack_out": [
        "slot_contents%3#0",
        "bytes_offset%0#0",
        "8"
      ]
    },
    "2549": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0"
      ],
      "stack_out": [
        "encoded_element%0#0"
      ]
    },
    "2550": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2551": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%1#0",
        "1"
      ]
    },
    "2552": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2553": {
      "op": "assert",
      "stack_out": []
    },
    "2554": {
      "retsub": true,
      "op": "retsub"
    },
    "2555": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot@entry",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "2557": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "2558": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "2560": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "2563": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "2565": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "2566": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "2567": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "2568": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "2570": {
      "retsub": true,
      "op": "retsub"
    }
  }
}