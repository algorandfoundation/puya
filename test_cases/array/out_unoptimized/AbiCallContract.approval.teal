#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 2 1 6
    bytecblock 0x
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // array/unused_opt_allowed.py:12
    // class AbiCallContract(arc4.ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main___algopy_default_create@6
    b main_abi_routing@2

main_abi_routing@2:
    // array/unused_opt_allowed.py:12
    // class AbiCallContract(arc4.ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0x06598bc6 // method "test_implicit_conversion_abi_call(uint64[],uint64)void"
    uncover 1
    match main_test_implicit_conversion_abi_call_route@3
    b main_switch_case_default@4

main_switch_case_default@4:
    b main_switch_case_next@5

main_switch_case_next@5:
    b main_after_if_else@7

main_after_if_else@7:
    // array/unused_opt_allowed.py:12
    // class AbiCallContract(arc4.ARC4Contract):
    err

main_test_implicit_conversion_abi_call_route@3:
    // array/unused_opt_allowed.py:13
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    callsub test_implicit_conversion_abi_call
    b main_switch_case_next@5

main___algopy_default_create@6:
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    b main_block@9

main_block@9:
    b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@10

main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@10:
    intc_2 // 1
    return


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:
    proto 4 1
    bytec_0 // ""
    b dynamic_array_concat_dynamic_element_block@0

dynamic_array_concat_dynamic_element_block@0:
    bytec_0 // 0x
    frame_dig -2
    intc_1 // 2
    *
    frame_dig -4
    intc_1 // 2
    *
    intc_1 // 2
    assert // Step cannot be zero
    intc_0 // 0
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_for_header@1:
    frame_dig 4
    frame_dig 3
    <
    bz dynamic_array_concat_dynamic_element_after_for@4
    b dynamic_array_concat_dynamic_element_for_body@2

dynamic_array_concat_dynamic_element_for_body@2:
    frame_dig -3
    frame_dig 4
    extract_uint16
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    uncover 1
    concat
    frame_bury 1
    b dynamic_array_concat_dynamic_element_for_footer@3

dynamic_array_concat_dynamic_element_for_footer@3:
    frame_dig 4
    intc_1 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_after_for@4:
    frame_dig -3
    len
    frame_bury 2
    frame_dig -2
    intc_1 // 2
    *
    frame_bury 0
    intc_1 // 2
    assert // Step cannot be zero
    intc_0 // 0
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_for_header@5:
    frame_dig 4
    frame_dig 0
    <
    bz dynamic_array_concat_dynamic_element_after_for@8
    b dynamic_array_concat_dynamic_element_for_body@6

dynamic_array_concat_dynamic_element_for_body@6:
    frame_dig -1
    frame_dig 4
    extract_uint16
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    uncover 1
    concat
    frame_bury 1
    b dynamic_array_concat_dynamic_element_for_footer@7

dynamic_array_concat_dynamic_element_for_footer@7:
    frame_dig 4
    intc_1 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_after_for@8:
    frame_dig -4
    frame_dig -2
    +
    itob
    extract 6 2
    frame_dig 1
    concat
    frame_dig -4
    intc_1 // 2
    *
    frame_dig -3
    len
    frame_dig -3
    uncover 2
    uncover 2
    substring3
    concat
    frame_dig -2
    intc_1 // 2
    *
    frame_dig -1
    len
    frame_dig -1
    uncover 2
    uncover 2
    substring3
    concat
    frame_bury 0
    retsub


// test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call[routing]() -> void:
test_implicit_conversion_abi_call:
    b test_implicit_conversion_abi_call_block@0

test_implicit_conversion_abi_call_block@0:
    // array/unused_opt_allowed.py:13
    // @arc4.abimethod()
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi
    callsub test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
    intc_2 // 1
    return


// test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call(arr: bytes, app: uint64) -> void:
test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call:
    // array/unused_opt_allowed.py:13-16
    // @arc4.abimethod()
    // def test_implicit_conversion_abi_call(
    //     self, arr: ImmutableArray[UInt64], app: Application
    // ) -> None:
    proto 2 0
    intc_0 // 0
    b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_block@0

test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_block@0:
    // array/unused_opt_allowed.py:17-18
    // # itxn requires remove_unused_variables
    // arc4.abi_call("dont_call(uint64[])uint64", arr, app_id=app)
    itxn_begin
    frame_dig -2
    frame_dig -1
    itxn_field ApplicationID
    pushbytes 0x75b694f3 // method "dont_call(uint64[])uint64"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@1

test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@1:
    // array/unused_opt_allowed.py:17-18
    // # itxn requires remove_unused_variables
    // arc4.abi_call("dont_call(uint64[])uint64", arr, app_id=app)
    itxn_submit
    // array/unused_opt_allowed.py:20
    // nested_arr = ImmutableArray[ImmutableArray[UInt64]]()
    intc_0 // 0
    itob
    extract 6 2
    // array/unused_opt_allowed.py:21
    // nested_arr = nested_arr.append(arr)
    dup
    intc_0 // 0
    extract_uint16
    cover 1
    dup
    len
    cover 1
    intc_1 // 2
    uncover 2
    substring3
    intc_1 // 2
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    frame_dig -2
    concat
    uncover 2
    uncover 2
    intc_2 // 1
    uncover 3
    callsub dynamic_array_concat_dynamic_element
    // array/unused_opt_allowed.py:22
    // arc4.abi_call("dont_call(uint64[][])uint64", nested_arr, app_id=app)
    itxn_begin
    frame_dig -1
    itxn_field ApplicationID
    pushbytes 0xe92b1d53 // method "dont_call(uint64[][])uint64"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@2

test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@2:
    // array/unused_opt_allowed.py:22
    // arc4.abi_call("dont_call(uint64[][])uint64", nested_arr, app_id=app)
    itxn_submit
    // array/unused_opt_allowed.py:24
    // indirect_nested_arr = ImmutableArray[MyTuple]()
    intc_0 // 0
    itob
    extract 6 2
    // array/unused_opt_allowed.py:25
    // indirect_nested_arr.append(MyTuple(foo=arr, bar=arr.length))
    frame_dig -2
    intc_0 // 0
    extract_uint16
    cover 1
    dup
    intc_0 // 0
    extract_uint16
    cover 2
    dup
    len
    cover 1
    dup
    intc_1 // 2
    uncover 3
    substring3
    cover 1
    pushint 10 // 10
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    uncover 3
    itob
    concat
    frame_dig -2
    concat
    intc_1 // 2
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    uncover 1
    concat
    uncover 3
    uncover 3
    intc_2 // 1
    uncover 3
    callsub dynamic_array_concat_dynamic_element
    frame_bury 0
    // array/unused_opt_allowed.py:26
    // arc4.abi_call("dont_call((uint64[],uint64)[])uint64", indirect_nested_arr, app_id=app)
    itxn_begin
    frame_dig -1
    itxn_field ApplicationID
    pushbytes 0x165312d8 // method "dont_call((uint64[],uint64)[])uint64"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@3

test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@3:
    // array/unused_opt_allowed.py:26
    // arc4.abi_call("dont_call((uint64[],uint64)[])uint64", indirect_nested_arr, app_id=app)
    itxn_submit
    retsub
