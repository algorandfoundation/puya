{
  "version": 3,
  "sources": [
    "../immutable-init.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;AAAA;;;;;;;;;AAAA;AAmEK;;;;;;AAtBA;;;;;;AAtBA;;;;;;AAtBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;;AAsBA;;;AAAA;AAAA;;;;AAsBA;;;AAAA;AAAA;;;;AAsBA;;;AAAA;AAAA;;;;AAhEQ;;AAAA;AAAA;;;AAAwB;AAAxB;AAAA;AAAmC;AAAnC;AAAA;AAA8C;;AAA9C;AAAA;AAEmC;AAAZ;AAAA;AAAA;;AAAA;AAAuB;AAAvB;AAAA;AAAkC;;AAAlC;AAAA;AAAvB;;AAAA;AAAA;;;AAAA;;AAAA;AACE;;AAAA;AAAA;AAAA;;AAAa;AAAA;AAAA;AAAb;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AAE4C;AAAhB;AAAA;AAAA;;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACE;AAAA;AAAA;AAAa;;AAAb;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AAE4B;;AAAA;AAAA;;;AAAgB;AAAhB;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AACrB;;AAAA;AAAA;AAAA;;AAAa;AAAA;AAAA;AAAb;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;;;;;AAIK;;AAAA;AAAA;;;AAAgB;AAAhB;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AAE2B;AAAZ;AAAA;AAAA;;AAAA;AAAuB;AAAvB;AAAA;AAAkC;;AAAlC;AAAA;AAAf;;AAAA;AAAA;;;AAAA;;AAAA;AACE;;AAAA;AAAA;AAAA;;AAAa;AAAA;AAAA;AAAb;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AAEoC;AAAhB;AAAA;AAAA;;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACE;AAAA;AAAA;AAAa;;AAAb;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AAEoB;;AAAA;AAAA;;;AAAgB;AAAhB;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AACb;;AAAA;AAAA;AAAA;;AAAa;AAAA;AAAA;AAAb;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;;;;;AAI6B;AAAxB;AAAA;AAAA;;AAAA;AAAmC;AAAnC;AAAA;AAA8C;;AAA9C;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAEmC;AAAZ;AAAA;AAAA;;AAAA;AAAuB;AAAvB;AAAA;AAAkC;;AAAlC;AAAA;AAAvB;;;AAAA;AAAA;;AAAA;AACE;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAa;AAAA;AAAA;AAAA;AAAA;AAAb;;AAAA;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AAE4B;;AAAA;AAAA;;;AAAgB;AAAhB;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AAAvB;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAb;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AAE4C;AAAhB;AAAA;AAAA;;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AAAvB;;;AAAA;;AAAA;;AAAA;;AAAA;AACE;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAa;AAAA;AAAA;AAAA;AAAA;AAAb;;AAAA;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;;;;;AAIqB;AAAhB;AAAA;AAAA;;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAE2B;AAAZ;AAAA;AAAA;;AAAA;AAAuB;AAAvB;AAAA;AAAkC;;AAAlC;AAAA;AAAf;;;AAAA;AAAA;;AAAA;AACE;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAa;AAAA;AAAA;AAAA;AAAA;AAAb;;AAAA;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AAEoB;;AAAA;AAAA;;;AAAgB;AAAhB;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AAAf;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAa;;AAAb;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AAEoC;AAAhB;AAAA;AAAA;;AAAA;AAA2B;AAA3B;AAAA;AAAsC;;AAAtC;AAAA;AAAf;;;AAAA;;AAAA;;AAAA;;AAAA;AACE;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAa;AAAA;AAAA;AAAA;AAAA;AAAb;;AAAA;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;AACO;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAS;;AAAA;AAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AAAT;AAAP;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 8 2 1 0"
    },
    "7": {
      "op": "bytecblock 0x"
    },
    "10": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "44": {
      "op": "store 0"
    },
    "46": {
      "op": "b main_block@0"
    },
    "49": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "52": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "54": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "55": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "56": {
      "op": "bz main___algopy_default_create@11",
      "stack_out": []
    },
    "59": {
      "op": "b main_abi_routing@2"
    },
    "62": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "64": {
      "op": "intc_3 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "65": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "66": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "67": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "69": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "70": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "71": {
      "op": "bz main_create_NoOp@9",
      "stack_out": []
    },
    "74": {
      "op": "b main_call_NoOp@3"
    },
    "77": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "80": {
      "op": "pushbytes 0x8434ba2a // method \"test_immutable_array_init()void\"",
      "defined_out": [
        "Method(test_immutable_array_init()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_immutable_array_init()void)"
      ]
    },
    "86": {
      "op": "pushbytes 0x63aabba0 // method \"test_immutable_array_init_without_type_generic()void\"",
      "defined_out": [
        "Method(test_immutable_array_init()void)",
        "Method(test_immutable_array_init_without_type_generic()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_immutable_array_init()void)",
        "Method(test_immutable_array_init_without_type_generic()void)"
      ]
    },
    "92": {
      "op": "pushbytes 0xdbaf034e // method \"test_reference_array_init()void\"",
      "defined_out": [
        "Method(test_immutable_array_init()void)",
        "Method(test_immutable_array_init_without_type_generic()void)",
        "Method(test_reference_array_init()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_immutable_array_init()void)",
        "Method(test_immutable_array_init_without_type_generic()void)",
        "Method(test_reference_array_init()void)"
      ]
    },
    "98": {
      "op": "pushbytes 0xa9d14554 // method \"test_reference_array_init_without_type_generic()void\"",
      "defined_out": [
        "Method(test_immutable_array_init()void)",
        "Method(test_immutable_array_init_without_type_generic()void)",
        "Method(test_reference_array_init()void)",
        "Method(test_reference_array_init_without_type_generic()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_immutable_array_init()void)",
        "Method(test_immutable_array_init_without_type_generic()void)",
        "Method(test_reference_array_init()void)",
        "Method(test_reference_array_init_without_type_generic()void)"
      ]
    },
    "104": {
      "op": "uncover 4",
      "stack_out": [
        "Method(test_immutable_array_init()void)",
        "Method(test_immutable_array_init_without_type_generic()void)",
        "Method(test_reference_array_init()void)",
        "Method(test_reference_array_init_without_type_generic()void)",
        "tmp%6#0"
      ]
    },
    "106": {
      "op": "match main_test_immutable_array_init_route@4 main_test_immutable_array_init_without_type_generic_route@5 main_test_reference_array_init_route@6 main_test_reference_array_init_without_type_generic_route@7",
      "stack_out": []
    },
    "116": {
      "op": "b main_switch_case_next@8"
    },
    "119": {
      "block": "main_switch_case_next@8",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "122": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "b main_after_if_else@12"
    },
    "125": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "126": {
      "block": "main_test_reference_array_init_without_type_generic_route@7",
      "stack_in": [],
      "callsub": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_without_type_generic[routing]",
      "op": "callsub test_reference_array_init_without_type_generic"
    },
    "129": {
      "op": "b main_switch_case_next@8"
    },
    "132": {
      "block": "main_test_reference_array_init_route@6",
      "stack_in": [],
      "callsub": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init[routing]",
      "op": "callsub test_reference_array_init"
    },
    "135": {
      "op": "b main_switch_case_next@8"
    },
    "138": {
      "block": "main_test_immutable_array_init_without_type_generic_route@5",
      "stack_in": [],
      "callsub": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_without_type_generic[routing]",
      "op": "callsub test_immutable_array_init_without_type_generic"
    },
    "141": {
      "op": "b main_switch_case_next@8"
    },
    "144": {
      "block": "main_test_immutable_array_init_route@4",
      "stack_in": [],
      "callsub": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init[routing]",
      "op": "callsub test_immutable_array_init"
    },
    "147": {
      "op": "b main_switch_case_next@8"
    },
    "150": {
      "block": "main_create_NoOp@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "153": {
      "block": "main___algopy_default_create@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "155": {
      "op": "intc_3 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "156": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "157": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "159": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "160": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "161": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "162": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "163": {
      "op": "b main_block@14"
    },
    "166": {
      "block": "main_block@14",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.array.immutable-init.ImmutableArrayInitContract.__algopy_default_create@15"
    },
    "169": {
      "block": "main_after_inlined_test_cases.array.immutable-init.ImmutableArrayInitContract.__algopy_default_create@15",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "170": {
      "op": "return",
      "stack_out": []
    },
    "171": {
      "subroutine": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init[routing]",
      "params": {},
      "block": "test_immutable_array_init",
      "stack_in": [],
      "op": "b test_immutable_array_init_block@0"
    },
    "174": {
      "block": "test_immutable_array_init_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init",
      "op": "callsub test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init"
    },
    "177": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "178": {
      "op": "return",
      "stack_out": []
    },
    "179": {
      "subroutine": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_without_type_generic[routing]",
      "params": {},
      "block": "test_immutable_array_init_without_type_generic",
      "stack_in": [],
      "op": "b test_immutable_array_init_without_type_generic_block@0"
    },
    "182": {
      "block": "test_immutable_array_init_without_type_generic_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_without_type_generic",
      "op": "callsub test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_without_type_generic"
    },
    "185": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "186": {
      "op": "return",
      "stack_out": []
    },
    "187": {
      "subroutine": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init[routing]",
      "params": {},
      "block": "test_reference_array_init",
      "stack_in": [],
      "op": "b test_reference_array_init_block@0"
    },
    "190": {
      "block": "test_reference_array_init_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init",
      "op": "callsub test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init"
    },
    "193": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "194": {
      "op": "return",
      "stack_out": []
    },
    "195": {
      "subroutine": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_without_type_generic[routing]",
      "params": {},
      "block": "test_reference_array_init_without_type_generic",
      "stack_in": [],
      "op": "b test_reference_array_init_without_type_generic_block@0"
    },
    "198": {
      "block": "test_reference_array_init_without_type_generic_block@0",
      "stack_in": [],
      "callsub": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_without_type_generic",
      "op": "callsub test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_without_type_generic"
    },
    "201": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "202": {
      "op": "return",
      "stack_out": []
    },
    "203": {
      "subroutine": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init",
      "params": {},
      "block": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init",
      "stack_in": [],
      "op": "b test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_block@0"
    },
    "206": {
      "block": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_block@0",
      "stack_in": [],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "208": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "209": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "212": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "1"
      ]
    },
    "213": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "214": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "215": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "2"
      ]
    },
    "216": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "217": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "218": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "aggregate%head%1#0",
        "3"
      ]
    },
    "220": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "221": {
      "op": "concat",
      "defined_out": [
        "a1#0"
      ],
      "stack_out": [
        "a1#0"
      ]
    },
    "222": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "1"
      ]
    },
    "223": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "224": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0",
        "0x"
      ]
    },
    "225": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "227": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0"
      ]
    },
    "228": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0",
        "2"
      ]
    },
    "229": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%4#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "230": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0"
      ]
    },
    "231": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0",
        "3"
      ]
    },
    "233": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "234": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0"
      ]
    },
    "235": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "3"
      ]
    },
    "237": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "as_bytes%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "as_bytes%0#0"
      ]
    },
    "238": {
      "op": "extract 6 2",
      "defined_out": [
        "a1#0",
        "as_u16_bytes%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "241": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "as_u16_bytes%0#0",
        "encoded_array%1#0"
      ]
    },
    "243": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "244": {
      "op": "dig 1",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "246": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "a1#0",
        "a1#0 (copy)",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)",
        "0"
      ]
    },
    "247": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_length%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_length%0#0"
      ]
    },
    "248": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0"
      ]
    },
    "250": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a2#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "a2#0 (copy)"
      ]
    },
    "251": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "a2#0 (copy)",
        "0"
      ]
    },
    "252": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "tmp%2#0"
      ]
    },
    "253": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "255": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ]
    },
    "256": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "257": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "259": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%0#0"
      ]
    },
    "260": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%0#0",
        "a2#0"
      ]
    },
    "262": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%0#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "264": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%0#0",
        "a2#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "265": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "267": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "268": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "0"
      ]
    },
    "269": {
      "op": "intc_0 // 8",
      "defined_out": [
        "0",
        "8",
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "0",
        "8"
      ]
    },
    "270": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "271": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "272": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%0#0"
      ]
    },
    "273": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0"
      ]
    },
    "274": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "a2#0 (copy)"
      ]
    },
    "276": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%total_length%1#0"
      ]
    },
    "277": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%1#0",
        "values%0#0"
      ]
    },
    "279": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%1#0",
        "values%0#0",
        "a2#0 (copy)"
      ]
    },
    "281": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%1#0",
        "values%0#0",
        "a2#0 (copy)",
        "2"
      ]
    },
    "282": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "a2#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "284": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "285": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0",
        "0"
      ]
    },
    "286": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0",
        "0",
        "8"
      ]
    },
    "287": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "288": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "8"
      ]
    },
    "289": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "array_item%1#0"
      ]
    },
    "290": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "values%1#0"
      ]
    },
    "291": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ]
    },
    "292": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "293": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "295": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%2#0"
      ]
    },
    "296": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%2#0",
        "a2#0"
      ]
    },
    "298": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%2#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "300": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%2#0",
        "a2#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "301": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "303": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "304": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "1"
      ]
    },
    "305": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "1",
        "8"
      ]
    },
    "306": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "307": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "8"
      ]
    },
    "308": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%2#0"
      ]
    },
    "309": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0"
      ]
    },
    "310": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "a2#0 (copy)"
      ]
    },
    "312": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%total_length%3#0"
      ]
    },
    "313": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%3#0",
        "values%2#0"
      ]
    },
    "315": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%3#0",
        "values%2#0",
        "a2#0 (copy)"
      ]
    },
    "317": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%3#0",
        "values%2#0",
        "a2#0 (copy)",
        "2"
      ]
    },
    "318": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "a2#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "320": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "321": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0",
        "1"
      ]
    },
    "322": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0",
        "1",
        "8"
      ]
    },
    "323": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "324": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "8"
      ]
    },
    "325": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "array_item%3#0"
      ]
    },
    "326": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "values%3#0"
      ]
    },
    "327": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%5#0"
      ]
    },
    "328": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "329": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "331": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%4#0"
      ]
    },
    "332": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%4#0",
        "a2#0"
      ]
    },
    "334": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%4#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "336": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%4#0",
        "a2#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "337": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%4#0"
      ]
    },
    "339": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "340": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "2"
      ]
    },
    "341": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "2",
        "8"
      ]
    },
    "342": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "343": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "8"
      ]
    },
    "344": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%4#0"
      ]
    },
    "345": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%4#0"
      ]
    },
    "346": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%4#0",
        "a2#0 (copy)"
      ]
    },
    "348": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%4#0",
        "aggregate%total_length%5#0"
      ]
    },
    "349": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%5#0",
        "values%4#0"
      ]
    },
    "351": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%5#0",
        "values%4#0",
        "a2#0"
      ]
    },
    "353": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%5#0",
        "values%4#0",
        "a2#0",
        "2"
      ]
    },
    "354": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "a2#0",
        "2",
        "aggregate%total_length%5#0"
      ]
    },
    "356": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "aggregate%array_trimmed%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0"
      ]
    },
    "357": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0",
        "2"
      ]
    },
    "358": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0",
        "2",
        "8"
      ]
    },
    "359": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "360": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "8"
      ]
    },
    "361": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "array_item%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "array_item%5#0"
      ]
    },
    "362": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "values%5#0"
      ]
    },
    "363": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%6#0"
      ]
    },
    "364": {
      "op": "assert",
      "stack_out": [
        "a1#0"
      ]
    },
    "365": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "1"
      ]
    },
    "366": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%6#0"
      ]
    },
    "367": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%6#0",
        "0x"
      ]
    },
    "368": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%6#0"
      ]
    },
    "370": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0"
      ]
    },
    "371": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0",
        "2"
      ]
    },
    "372": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%7#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64)%7#0"
      ]
    },
    "373": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0"
      ]
    },
    "374": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0",
        "3"
      ]
    },
    "376": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%8#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64)%8#0"
      ]
    },
    "377": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0"
      ]
    },
    "378": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ]
    },
    "379": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "aggregate%bytes_len%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "380": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "381": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "slot_contents%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "tmp%7#0"
      ]
    },
    "382": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "as_bytes%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "as_bytes%1#0"
      ]
    },
    "383": {
      "op": "extract 6 2",
      "defined_out": [
        "a1#0",
        "as_u16_bytes%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "as_u16_bytes%1#0"
      ]
    },
    "386": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "as_u16_bytes%1#0",
        "slot_contents%0#0"
      ]
    },
    "388": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "a3#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "389": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)"
      ]
    },
    "390": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)",
        "0"
      ]
    },
    "391": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0"
      ]
    },
    "392": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0",
        "3"
      ]
    },
    "394": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%9#0"
      ]
    },
    "395": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "396": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "398": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%6#0"
      ]
    },
    "399": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%6#0",
        "a3#0"
      ]
    },
    "401": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%6#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "403": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%6#0",
        "a3#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "404": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%6#0"
      ]
    },
    "406": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0"
      ]
    },
    "407": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "0"
      ]
    },
    "408": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "0",
        "8"
      ]
    },
    "409": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "410": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0",
        "8"
      ]
    },
    "411": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%6#0"
      ]
    },
    "412": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0"
      ]
    },
    "413": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "a3#0 (copy)"
      ]
    },
    "415": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%total_length%7#0"
      ]
    },
    "416": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%7#0",
        "values%6#0"
      ]
    },
    "418": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%7#0",
        "values%6#0",
        "a3#0 (copy)"
      ]
    },
    "420": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%7#0",
        "values%6#0",
        "a3#0 (copy)",
        "2"
      ]
    },
    "421": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "a3#0 (copy)",
        "2",
        "aggregate%total_length%7#0"
      ]
    },
    "423": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0"
      ]
    },
    "424": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0",
        "0"
      ]
    },
    "425": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0",
        "0",
        "8"
      ]
    },
    "426": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%7#0",
        "aggregate%bytes_offset%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0",
        "aggregate%bytes_offset%7#0"
      ]
    },
    "427": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0",
        "aggregate%bytes_offset%7#0",
        "8"
      ]
    },
    "428": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "array_item%7#0"
      ]
    },
    "429": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "values%7#0"
      ]
    },
    "430": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%10#0"
      ]
    },
    "431": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "432": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "434": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%8#0"
      ]
    },
    "435": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%8#0",
        "a3#0"
      ]
    },
    "437": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%8#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "439": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%8#0",
        "a3#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "440": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%8#0"
      ]
    },
    "442": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0"
      ]
    },
    "443": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "1"
      ]
    },
    "444": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "1",
        "8"
      ]
    },
    "445": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0"
      ]
    },
    "446": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0",
        "8"
      ]
    },
    "447": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%8#0"
      ]
    },
    "448": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0"
      ]
    },
    "449": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "a3#0 (copy)"
      ]
    },
    "451": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%total_length%9#0"
      ]
    },
    "452": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%9#0",
        "values%8#0"
      ]
    },
    "454": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%9#0",
        "values%8#0",
        "a3#0 (copy)"
      ]
    },
    "456": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%9#0",
        "values%8#0",
        "a3#0 (copy)",
        "2"
      ]
    },
    "457": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "a3#0 (copy)",
        "2",
        "aggregate%total_length%9#0"
      ]
    },
    "459": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0"
      ]
    },
    "460": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0",
        "1"
      ]
    },
    "461": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0",
        "1",
        "8"
      ]
    },
    "462": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%9#0",
        "aggregate%bytes_offset%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0",
        "aggregate%bytes_offset%9#0"
      ]
    },
    "463": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0",
        "aggregate%bytes_offset%9#0",
        "8"
      ]
    },
    "464": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "array_item%9#0"
      ]
    },
    "465": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "values%9#0"
      ]
    },
    "466": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%11#0"
      ]
    },
    "467": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "468": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "470": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%10#0"
      ]
    },
    "471": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%10#0",
        "a3#0"
      ]
    },
    "473": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%10#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "475": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%10#0",
        "a3#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "476": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%10#0"
      ]
    },
    "478": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0"
      ]
    },
    "479": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "2"
      ]
    },
    "480": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "2",
        "8"
      ]
    },
    "481": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "aggregate%bytes_offset%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "aggregate%bytes_offset%10#0"
      ]
    },
    "482": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "aggregate%bytes_offset%10#0",
        "8"
      ]
    },
    "483": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%10#0"
      ]
    },
    "484": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%10#0"
      ]
    },
    "485": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%10#0",
        "a3#0 (copy)"
      ]
    },
    "487": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%10#0",
        "aggregate%total_length%11#0"
      ]
    },
    "488": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%11#0",
        "values%10#0"
      ]
    },
    "490": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%11#0",
        "values%10#0",
        "a3#0"
      ]
    },
    "492": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%11#0",
        "values%10#0",
        "a3#0",
        "2"
      ]
    },
    "493": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "a3#0",
        "2",
        "aggregate%total_length%11#0"
      ]
    },
    "495": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "aggregate%array_trimmed%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0"
      ]
    },
    "496": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0",
        "2"
      ]
    },
    "497": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0",
        "2",
        "8"
      ]
    },
    "498": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "aggregate%array_trimmed%11#0",
        "aggregate%bytes_offset%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0",
        "aggregate%bytes_offset%11#0"
      ]
    },
    "499": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0",
        "aggregate%bytes_offset%11#0",
        "8"
      ]
    },
    "500": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "array_item%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "array_item%11#0"
      ]
    },
    "501": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "values%10#0",
        "values%11#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "values%11#0"
      ]
    },
    "502": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%12#0"
      ]
    },
    "503": {
      "op": "assert",
      "stack_out": [
        "a1#0"
      ]
    },
    "504": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "3"
      ]
    },
    "506": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "507": {
      "op": "extract 6 2",
      "defined_out": [
        "a1#0",
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%1#0"
      ]
    },
    "510": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%1#0",
        "1"
      ]
    },
    "511": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%9#0",
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%1#0",
        "aggregate%as_Encoded(uint64)%9#0"
      ]
    },
    "512": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0"
      ]
    },
    "513": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0",
        "2"
      ]
    },
    "514": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%10#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0",
        "aggregate%as_Encoded(uint64)%10#0"
      ]
    },
    "515": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0"
      ]
    },
    "516": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0",
        "3"
      ]
    },
    "518": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%11#0",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(uint64)%11#0"
      ]
    },
    "519": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "a4#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "520": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "522": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)",
        "0"
      ]
    },
    "523": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_length%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_length%3#0"
      ]
    },
    "524": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0"
      ]
    },
    "526": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a4#0",
        "a4#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "a4#0 (copy)"
      ]
    },
    "527": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "a4#0 (copy)",
        "0"
      ]
    },
    "528": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "tmp%14#0"
      ]
    },
    "529": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%14#0",
        "tmp%13#0"
      ]
    },
    "531": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%15#0"
      ]
    },
    "532": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "533": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "535": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%12#0"
      ]
    },
    "536": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%12#0",
        "a4#0"
      ]
    },
    "538": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%12#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "540": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%12#0",
        "a4#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "541": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%12#0"
      ]
    },
    "543": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0"
      ]
    },
    "544": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "0"
      ]
    },
    "545": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "0",
        "8"
      ]
    },
    "546": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "aggregate%bytes_offset%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "aggregate%bytes_offset%12#0"
      ]
    },
    "547": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "aggregate%bytes_offset%12#0",
        "8"
      ]
    },
    "548": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "array_item%12#0"
      ]
    },
    "549": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0"
      ]
    },
    "550": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "a4#0 (copy)"
      ]
    },
    "552": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%total_length%13#0"
      ]
    },
    "553": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%13#0",
        "values%12#0"
      ]
    },
    "555": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%13#0",
        "values%12#0",
        "a4#0 (copy)"
      ]
    },
    "557": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%13#0",
        "values%12#0",
        "a4#0 (copy)",
        "2"
      ]
    },
    "558": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "a4#0 (copy)",
        "2",
        "aggregate%total_length%13#0"
      ]
    },
    "560": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0"
      ]
    },
    "561": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0",
        "0"
      ]
    },
    "562": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0",
        "0",
        "8"
      ]
    },
    "563": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%13#0",
        "aggregate%bytes_offset%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0",
        "aggregate%bytes_offset%13#0"
      ]
    },
    "564": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0",
        "aggregate%bytes_offset%13#0",
        "8"
      ]
    },
    "565": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "array_item%13#0"
      ]
    },
    "566": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "values%13#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "values%13#0"
      ]
    },
    "567": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%16#0"
      ]
    },
    "568": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "569": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "571": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%14#0"
      ]
    },
    "572": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%14#0",
        "a4#0"
      ]
    },
    "574": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%14#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "576": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%14#0",
        "a4#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "577": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%14#0"
      ]
    },
    "579": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0"
      ]
    },
    "580": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "1"
      ]
    },
    "581": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "1",
        "8"
      ]
    },
    "582": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "aggregate%bytes_offset%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "aggregate%bytes_offset%14#0"
      ]
    },
    "583": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "aggregate%bytes_offset%14#0",
        "8"
      ]
    },
    "584": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "array_item%14#0"
      ]
    },
    "585": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0"
      ]
    },
    "586": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "a4#0 (copy)"
      ]
    },
    "588": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%total_length%15#0"
      ]
    },
    "589": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%15#0",
        "values%14#0"
      ]
    },
    "591": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%15#0",
        "values%14#0",
        "a4#0 (copy)"
      ]
    },
    "593": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%15#0",
        "values%14#0",
        "a4#0 (copy)",
        "2"
      ]
    },
    "594": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "a4#0 (copy)",
        "2",
        "aggregate%total_length%15#0"
      ]
    },
    "596": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0"
      ]
    },
    "597": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0",
        "1"
      ]
    },
    "598": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0",
        "1",
        "8"
      ]
    },
    "599": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%15#0",
        "aggregate%bytes_offset%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0",
        "aggregate%bytes_offset%15#0"
      ]
    },
    "600": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0",
        "aggregate%bytes_offset%15#0",
        "8"
      ]
    },
    "601": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "array_item%15#0"
      ]
    },
    "602": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "values%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "values%15#0"
      ]
    },
    "603": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%17#0"
      ]
    },
    "604": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "605": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "607": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%16#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%16#0"
      ]
    },
    "608": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%16#0",
        "a4#0"
      ]
    },
    "610": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%total_length%16#0",
        "a4#0",
        "a1#0"
      ]
    },
    "612": {
      "op": "intc_1 // 2",
      "stack_out": [
        "aggregate%total_length%16#0",
        "a4#0",
        "a1#0",
        "2"
      ]
    },
    "613": {
      "op": "uncover 3",
      "stack_out": [
        "a4#0",
        "a1#0",
        "2",
        "aggregate%total_length%16#0"
      ]
    },
    "615": {
      "op": "substring3",
      "defined_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0"
      ],
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0"
      ]
    },
    "616": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "2"
      ]
    },
    "617": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "2",
        "8"
      ]
    },
    "618": {
      "op": "*",
      "defined_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "aggregate%bytes_offset%16#0"
      ],
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "aggregate%bytes_offset%16#0"
      ]
    },
    "619": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "aggregate%bytes_offset%16#0",
        "8"
      ]
    },
    "620": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a4#0",
        "array_item%16#0"
      ],
      "stack_out": [
        "a4#0",
        "array_item%16#0"
      ]
    },
    "621": {
      "op": "btoi",
      "defined_out": [
        "a4#0",
        "values%16#0"
      ],
      "stack_out": [
        "a4#0",
        "values%16#0"
      ]
    },
    "622": {
      "op": "dig 1",
      "stack_out": [
        "a4#0",
        "values%16#0",
        "a4#0 (copy)"
      ]
    },
    "624": {
      "op": "len",
      "defined_out": [
        "a4#0",
        "aggregate%total_length%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "a4#0",
        "values%16#0",
        "aggregate%total_length%17#0"
      ]
    },
    "625": {
      "op": "cover 1",
      "stack_out": [
        "a4#0",
        "aggregate%total_length%17#0",
        "values%16#0"
      ]
    },
    "627": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%total_length%17#0",
        "values%16#0",
        "a4#0"
      ]
    },
    "629": {
      "op": "intc_1 // 2",
      "stack_out": [
        "aggregate%total_length%17#0",
        "values%16#0",
        "a4#0",
        "2"
      ]
    },
    "630": {
      "op": "uncover 3",
      "stack_out": [
        "values%16#0",
        "a4#0",
        "2",
        "aggregate%total_length%17#0"
      ]
    },
    "632": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0"
      ]
    },
    "633": {
      "op": "intc_1 // 2",
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0",
        "2"
      ]
    },
    "634": {
      "op": "intc_0 // 8",
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0",
        "2",
        "8"
      ]
    },
    "635": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%17#0",
        "aggregate%bytes_offset%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0",
        "aggregate%bytes_offset%17#0"
      ]
    },
    "636": {
      "op": "intc_0 // 8",
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0",
        "aggregate%bytes_offset%17#0",
        "8"
      ]
    },
    "637": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "array_item%17#0"
      ]
    },
    "638": {
      "op": "btoi",
      "defined_out": [
        "values%16#0",
        "values%17#0"
      ],
      "stack_out": [
        "values%16#0",
        "values%17#0"
      ]
    },
    "639": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "640": {
      "op": "assert",
      "stack_out": []
    },
    "641": {
      "retsub": true,
      "op": "retsub"
    },
    "642": {
      "subroutine": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_without_type_generic",
      "params": {},
      "block": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_without_type_generic",
      "stack_in": [],
      "op": "b test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_without_type_generic_block@0"
    },
    "645": {
      "block": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_immutable_array_init_without_type_generic_block@0",
      "stack_in": [],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "647": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "648": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "651": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "1"
      ]
    },
    "652": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "653": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "654": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "2"
      ]
    },
    "655": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "656": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "657": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "aggregate%head%1#0",
        "3"
      ]
    },
    "659": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "660": {
      "op": "concat",
      "defined_out": [
        "a1#0"
      ],
      "stack_out": [
        "a1#0"
      ]
    },
    "661": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "1"
      ]
    },
    "662": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "663": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0",
        "0x"
      ]
    },
    "664": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "666": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0"
      ]
    },
    "667": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0",
        "2"
      ]
    },
    "668": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%4#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "669": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0"
      ]
    },
    "670": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0",
        "3"
      ]
    },
    "672": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "673": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0"
      ]
    },
    "674": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "3"
      ]
    },
    "676": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "as_bytes%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "as_bytes%0#0"
      ]
    },
    "677": {
      "op": "extract 6 2",
      "defined_out": [
        "a1#0",
        "as_u16_bytes%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "680": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "as_u16_bytes%0#0",
        "encoded_array%1#0"
      ]
    },
    "682": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "683": {
      "op": "dig 1",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "685": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "a1#0",
        "a1#0 (copy)",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)",
        "0"
      ]
    },
    "686": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_length%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_length%0#0"
      ]
    },
    "687": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0"
      ]
    },
    "689": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a2#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "a2#0 (copy)"
      ]
    },
    "690": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "a2#0 (copy)",
        "0"
      ]
    },
    "691": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "tmp%2#0"
      ]
    },
    "692": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "694": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ]
    },
    "695": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "696": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "698": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%0#0"
      ]
    },
    "699": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%0#0",
        "a2#0"
      ]
    },
    "701": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%0#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "703": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%0#0",
        "a2#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "704": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "706": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "707": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "0"
      ]
    },
    "708": {
      "op": "intc_0 // 8",
      "defined_out": [
        "0",
        "8",
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "0",
        "8"
      ]
    },
    "709": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "710": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "711": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%0#0"
      ]
    },
    "712": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0"
      ]
    },
    "713": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "a2#0 (copy)"
      ]
    },
    "715": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%total_length%1#0"
      ]
    },
    "716": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%1#0",
        "values%0#0"
      ]
    },
    "718": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%1#0",
        "values%0#0",
        "a2#0 (copy)"
      ]
    },
    "720": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%1#0",
        "values%0#0",
        "a2#0 (copy)",
        "2"
      ]
    },
    "721": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "a2#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "723": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "724": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0",
        "0"
      ]
    },
    "725": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0",
        "0",
        "8"
      ]
    },
    "726": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "727": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "8"
      ]
    },
    "728": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "array_item%1#0"
      ]
    },
    "729": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "values%1#0"
      ]
    },
    "730": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ]
    },
    "731": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "732": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "734": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%2#0"
      ]
    },
    "735": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%2#0",
        "a2#0"
      ]
    },
    "737": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%2#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "739": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%2#0",
        "a2#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "740": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "742": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "743": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "1"
      ]
    },
    "744": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "1",
        "8"
      ]
    },
    "745": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "746": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "8"
      ]
    },
    "747": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%2#0"
      ]
    },
    "748": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0"
      ]
    },
    "749": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "a2#0 (copy)"
      ]
    },
    "751": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%total_length%3#0"
      ]
    },
    "752": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%3#0",
        "values%2#0"
      ]
    },
    "754": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%3#0",
        "values%2#0",
        "a2#0 (copy)"
      ]
    },
    "756": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%3#0",
        "values%2#0",
        "a2#0 (copy)",
        "2"
      ]
    },
    "757": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "a2#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "759": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "760": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0",
        "1"
      ]
    },
    "761": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0",
        "1",
        "8"
      ]
    },
    "762": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "763": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%3#0",
        "8"
      ]
    },
    "764": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "array_item%3#0"
      ]
    },
    "765": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "values%3#0"
      ]
    },
    "766": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%5#0"
      ]
    },
    "767": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "768": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "770": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%4#0"
      ]
    },
    "771": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%4#0",
        "a2#0"
      ]
    },
    "773": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%4#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "775": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%4#0",
        "a2#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "776": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%4#0"
      ]
    },
    "778": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "779": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "2"
      ]
    },
    "780": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "2",
        "8"
      ]
    },
    "781": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "782": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "8"
      ]
    },
    "783": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%4#0"
      ]
    },
    "784": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%4#0"
      ]
    },
    "785": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%4#0",
        "a2#0 (copy)"
      ]
    },
    "787": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%4#0",
        "aggregate%total_length%5#0"
      ]
    },
    "788": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%total_length%5#0",
        "values%4#0"
      ]
    },
    "790": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%5#0",
        "values%4#0",
        "a2#0"
      ]
    },
    "792": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%5#0",
        "values%4#0",
        "a2#0",
        "2"
      ]
    },
    "793": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "a2#0",
        "2",
        "aggregate%total_length%5#0"
      ]
    },
    "795": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "aggregate%array_trimmed%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0"
      ]
    },
    "796": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0",
        "2"
      ]
    },
    "797": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0",
        "2",
        "8"
      ]
    },
    "798": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "799": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "8"
      ]
    },
    "800": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "array_item%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "array_item%5#0"
      ]
    },
    "801": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "values%5#0"
      ]
    },
    "802": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%6#0"
      ]
    },
    "803": {
      "op": "assert",
      "stack_out": [
        "a1#0"
      ]
    },
    "804": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "1"
      ]
    },
    "805": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%6#0"
      ]
    },
    "806": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%6#0",
        "0x"
      ]
    },
    "807": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%6#0"
      ]
    },
    "809": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0"
      ]
    },
    "810": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0",
        "2"
      ]
    },
    "811": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%7#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64)%7#0"
      ]
    },
    "812": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0"
      ]
    },
    "813": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0",
        "3"
      ]
    },
    "815": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%8#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64)%8#0"
      ]
    },
    "816": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0"
      ]
    },
    "817": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ]
    },
    "818": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "aggregate%bytes_len%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "819": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "820": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "slot_contents%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "tmp%7#0"
      ]
    },
    "821": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "as_bytes%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "as_bytes%1#0"
      ]
    },
    "822": {
      "op": "extract 6 2",
      "defined_out": [
        "a1#0",
        "as_u16_bytes%1#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "slot_contents%0#0",
        "as_u16_bytes%1#0"
      ]
    },
    "825": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "as_u16_bytes%1#0",
        "slot_contents%0#0"
      ]
    },
    "827": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "a3#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "828": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)"
      ]
    },
    "829": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)",
        "0"
      ]
    },
    "830": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0"
      ]
    },
    "831": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0",
        "3"
      ]
    },
    "833": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%9#0"
      ]
    },
    "834": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "835": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "837": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%6#0"
      ]
    },
    "838": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%6#0",
        "a3#0"
      ]
    },
    "840": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%6#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "842": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%6#0",
        "a3#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "843": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%6#0"
      ]
    },
    "845": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0"
      ]
    },
    "846": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "0"
      ]
    },
    "847": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "0",
        "8"
      ]
    },
    "848": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "849": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0",
        "8"
      ]
    },
    "850": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%6#0"
      ]
    },
    "851": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0"
      ]
    },
    "852": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "a3#0 (copy)"
      ]
    },
    "854": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%total_length%7#0"
      ]
    },
    "855": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%7#0",
        "values%6#0"
      ]
    },
    "857": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%7#0",
        "values%6#0",
        "a3#0 (copy)"
      ]
    },
    "859": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%7#0",
        "values%6#0",
        "a3#0 (copy)",
        "2"
      ]
    },
    "860": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "a3#0 (copy)",
        "2",
        "aggregate%total_length%7#0"
      ]
    },
    "862": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0"
      ]
    },
    "863": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0",
        "0"
      ]
    },
    "864": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0",
        "0",
        "8"
      ]
    },
    "865": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%7#0",
        "aggregate%bytes_offset%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0",
        "aggregate%bytes_offset%7#0"
      ]
    },
    "866": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "aggregate%array_trimmed%7#0",
        "aggregate%bytes_offset%7#0",
        "8"
      ]
    },
    "867": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "array_item%7#0"
      ]
    },
    "868": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "values%7#0"
      ]
    },
    "869": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%10#0"
      ]
    },
    "870": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "871": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "873": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%8#0"
      ]
    },
    "874": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%8#0",
        "a3#0"
      ]
    },
    "876": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%8#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "878": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%8#0",
        "a3#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "879": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%8#0"
      ]
    },
    "881": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0"
      ]
    },
    "882": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "1"
      ]
    },
    "883": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "1",
        "8"
      ]
    },
    "884": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0"
      ]
    },
    "885": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%8#0",
        "aggregate%bytes_offset%8#0",
        "8"
      ]
    },
    "886": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%8#0"
      ]
    },
    "887": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0"
      ]
    },
    "888": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "a3#0 (copy)"
      ]
    },
    "890": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%total_length%9#0"
      ]
    },
    "891": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%9#0",
        "values%8#0"
      ]
    },
    "893": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%9#0",
        "values%8#0",
        "a3#0 (copy)"
      ]
    },
    "895": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%9#0",
        "values%8#0",
        "a3#0 (copy)",
        "2"
      ]
    },
    "896": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "a3#0 (copy)",
        "2",
        "aggregate%total_length%9#0"
      ]
    },
    "898": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0"
      ]
    },
    "899": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0",
        "1"
      ]
    },
    "900": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0",
        "1",
        "8"
      ]
    },
    "901": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%9#0",
        "aggregate%bytes_offset%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0",
        "aggregate%bytes_offset%9#0"
      ]
    },
    "902": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "aggregate%array_trimmed%9#0",
        "aggregate%bytes_offset%9#0",
        "8"
      ]
    },
    "903": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "array_item%9#0"
      ]
    },
    "904": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "values%9#0"
      ]
    },
    "905": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%11#0"
      ]
    },
    "906": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "907": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "909": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%10#0"
      ]
    },
    "910": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%10#0",
        "a3#0"
      ]
    },
    "912": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%10#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "914": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%10#0",
        "a3#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "915": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%10#0"
      ]
    },
    "917": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0"
      ]
    },
    "918": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "2"
      ]
    },
    "919": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "2",
        "8"
      ]
    },
    "920": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "aggregate%bytes_offset%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "aggregate%bytes_offset%10#0"
      ]
    },
    "921": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%array_trimmed%10#0",
        "aggregate%bytes_offset%10#0",
        "8"
      ]
    },
    "922": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%10#0"
      ]
    },
    "923": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%10#0"
      ]
    },
    "924": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%10#0",
        "a3#0 (copy)"
      ]
    },
    "926": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%10#0",
        "aggregate%total_length%11#0"
      ]
    },
    "927": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%total_length%11#0",
        "values%10#0"
      ]
    },
    "929": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%11#0",
        "values%10#0",
        "a3#0"
      ]
    },
    "931": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%11#0",
        "values%10#0",
        "a3#0",
        "2"
      ]
    },
    "932": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "a3#0",
        "2",
        "aggregate%total_length%11#0"
      ]
    },
    "934": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "aggregate%array_trimmed%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0"
      ]
    },
    "935": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0",
        "2"
      ]
    },
    "936": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0",
        "2",
        "8"
      ]
    },
    "937": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "aggregate%array_trimmed%11#0",
        "aggregate%bytes_offset%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0",
        "aggregate%bytes_offset%11#0"
      ]
    },
    "938": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "aggregate%array_trimmed%11#0",
        "aggregate%bytes_offset%11#0",
        "8"
      ]
    },
    "939": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "array_item%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "array_item%11#0"
      ]
    },
    "940": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "values%10#0",
        "values%11#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "values%11#0"
      ]
    },
    "941": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%12#0"
      ]
    },
    "942": {
      "op": "assert",
      "stack_out": [
        "a1#0"
      ]
    },
    "943": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "3"
      ]
    },
    "945": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "946": {
      "op": "extract 6 2",
      "defined_out": [
        "a1#0",
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%1#0"
      ]
    },
    "949": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%1#0",
        "1"
      ]
    },
    "950": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%9#0",
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%1#0",
        "aggregate%as_Encoded(uint64)%9#0"
      ]
    },
    "951": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0"
      ]
    },
    "952": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0",
        "2"
      ]
    },
    "953": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%10#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0",
        "aggregate%as_Encoded(uint64)%10#0"
      ]
    },
    "954": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0"
      ]
    },
    "955": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0",
        "3"
      ]
    },
    "957": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%11#0",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(uint64)%11#0"
      ]
    },
    "958": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "a4#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "959": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "961": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)",
        "0"
      ]
    },
    "962": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_length%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_length%3#0"
      ]
    },
    "963": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0"
      ]
    },
    "965": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a4#0",
        "a4#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "a4#0 (copy)"
      ]
    },
    "966": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "a4#0 (copy)",
        "0"
      ]
    },
    "967": {
      "op": "extract_uint16",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "tmp%14#0"
      ]
    },
    "968": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%14#0",
        "tmp%13#0"
      ]
    },
    "970": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%15#0"
      ]
    },
    "971": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "972": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "974": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%12#0"
      ]
    },
    "975": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%12#0",
        "a4#0"
      ]
    },
    "977": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%12#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "979": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%12#0",
        "a4#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "980": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%12#0"
      ]
    },
    "982": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0"
      ]
    },
    "983": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "0"
      ]
    },
    "984": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "0",
        "8"
      ]
    },
    "985": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "aggregate%bytes_offset%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "aggregate%bytes_offset%12#0"
      ]
    },
    "986": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%12#0",
        "aggregate%bytes_offset%12#0",
        "8"
      ]
    },
    "987": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "array_item%12#0"
      ]
    },
    "988": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0"
      ]
    },
    "989": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "a4#0 (copy)"
      ]
    },
    "991": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%total_length%13#0"
      ]
    },
    "992": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%13#0",
        "values%12#0"
      ]
    },
    "994": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%13#0",
        "values%12#0",
        "a4#0 (copy)"
      ]
    },
    "996": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%13#0",
        "values%12#0",
        "a4#0 (copy)",
        "2"
      ]
    },
    "997": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "a4#0 (copy)",
        "2",
        "aggregate%total_length%13#0"
      ]
    },
    "999": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0"
      ]
    },
    "1000": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0",
        "0"
      ]
    },
    "1001": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0",
        "0",
        "8"
      ]
    },
    "1002": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%13#0",
        "aggregate%bytes_offset%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0",
        "aggregate%bytes_offset%13#0"
      ]
    },
    "1003": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "aggregate%array_trimmed%13#0",
        "aggregate%bytes_offset%13#0",
        "8"
      ]
    },
    "1004": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "array_item%13#0"
      ]
    },
    "1005": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "values%13#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "values%13#0"
      ]
    },
    "1006": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%16#0"
      ]
    },
    "1007": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1008": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1010": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%14#0"
      ]
    },
    "1011": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%14#0",
        "a4#0"
      ]
    },
    "1013": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%14#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1015": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%14#0",
        "a4#0",
        "a1#0 (copy)",
        "2"
      ]
    },
    "1016": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)",
        "2",
        "aggregate%total_length%14#0"
      ]
    },
    "1018": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0"
      ]
    },
    "1019": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "1"
      ]
    },
    "1020": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "1",
        "8"
      ]
    },
    "1021": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "aggregate%bytes_offset%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "aggregate%bytes_offset%14#0"
      ]
    },
    "1022": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%14#0",
        "aggregate%bytes_offset%14#0",
        "8"
      ]
    },
    "1023": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "array_item%14#0"
      ]
    },
    "1024": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0"
      ]
    },
    "1025": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "a4#0 (copy)"
      ]
    },
    "1027": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%total_length%15#0"
      ]
    },
    "1028": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%15#0",
        "values%14#0"
      ]
    },
    "1030": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%15#0",
        "values%14#0",
        "a4#0 (copy)"
      ]
    },
    "1032": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%15#0",
        "values%14#0",
        "a4#0 (copy)",
        "2"
      ]
    },
    "1033": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "a4#0 (copy)",
        "2",
        "aggregate%total_length%15#0"
      ]
    },
    "1035": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0"
      ]
    },
    "1036": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0",
        "1"
      ]
    },
    "1037": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0",
        "1",
        "8"
      ]
    },
    "1038": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_trimmed%15#0",
        "aggregate%bytes_offset%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0",
        "aggregate%bytes_offset%15#0"
      ]
    },
    "1039": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "aggregate%array_trimmed%15#0",
        "aggregate%bytes_offset%15#0",
        "8"
      ]
    },
    "1040": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "array_item%15#0"
      ]
    },
    "1041": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "values%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "values%15#0"
      ]
    },
    "1042": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%17#0"
      ]
    },
    "1043": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1044": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1046": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%16#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%total_length%16#0"
      ]
    },
    "1047": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "aggregate%total_length%16#0",
        "a4#0"
      ]
    },
    "1049": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%total_length%16#0",
        "a4#0",
        "a1#0"
      ]
    },
    "1051": {
      "op": "intc_1 // 2",
      "stack_out": [
        "aggregate%total_length%16#0",
        "a4#0",
        "a1#0",
        "2"
      ]
    },
    "1052": {
      "op": "uncover 3",
      "stack_out": [
        "a4#0",
        "a1#0",
        "2",
        "aggregate%total_length%16#0"
      ]
    },
    "1054": {
      "op": "substring3",
      "defined_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0"
      ],
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0"
      ]
    },
    "1055": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "2"
      ]
    },
    "1056": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "2",
        "8"
      ]
    },
    "1057": {
      "op": "*",
      "defined_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "aggregate%bytes_offset%16#0"
      ],
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "aggregate%bytes_offset%16#0"
      ]
    },
    "1058": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a4#0",
        "aggregate%array_trimmed%16#0",
        "aggregate%bytes_offset%16#0",
        "8"
      ]
    },
    "1059": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a4#0",
        "array_item%16#0"
      ],
      "stack_out": [
        "a4#0",
        "array_item%16#0"
      ]
    },
    "1060": {
      "op": "btoi",
      "defined_out": [
        "a4#0",
        "values%16#0"
      ],
      "stack_out": [
        "a4#0",
        "values%16#0"
      ]
    },
    "1061": {
      "op": "dig 1",
      "stack_out": [
        "a4#0",
        "values%16#0",
        "a4#0 (copy)"
      ]
    },
    "1063": {
      "op": "len",
      "defined_out": [
        "a4#0",
        "aggregate%total_length%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "a4#0",
        "values%16#0",
        "aggregate%total_length%17#0"
      ]
    },
    "1064": {
      "op": "cover 1",
      "stack_out": [
        "a4#0",
        "aggregate%total_length%17#0",
        "values%16#0"
      ]
    },
    "1066": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%total_length%17#0",
        "values%16#0",
        "a4#0"
      ]
    },
    "1068": {
      "op": "intc_1 // 2",
      "stack_out": [
        "aggregate%total_length%17#0",
        "values%16#0",
        "a4#0",
        "2"
      ]
    },
    "1069": {
      "op": "uncover 3",
      "stack_out": [
        "values%16#0",
        "a4#0",
        "2",
        "aggregate%total_length%17#0"
      ]
    },
    "1071": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0"
      ]
    },
    "1072": {
      "op": "intc_1 // 2",
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0",
        "2"
      ]
    },
    "1073": {
      "op": "intc_0 // 8",
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0",
        "2",
        "8"
      ]
    },
    "1074": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%17#0",
        "aggregate%bytes_offset%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0",
        "aggregate%bytes_offset%17#0"
      ]
    },
    "1075": {
      "op": "intc_0 // 8",
      "stack_out": [
        "values%16#0",
        "aggregate%array_trimmed%17#0",
        "aggregate%bytes_offset%17#0",
        "8"
      ]
    },
    "1076": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "array_item%17#0"
      ]
    },
    "1077": {
      "op": "btoi",
      "defined_out": [
        "values%16#0",
        "values%17#0"
      ],
      "stack_out": [
        "values%16#0",
        "values%17#0"
      ]
    },
    "1078": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1079": {
      "op": "assert",
      "stack_out": []
    },
    "1080": {
      "retsub": true,
      "op": "retsub"
    },
    "1081": {
      "subroutine": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init",
      "params": {},
      "block": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init",
      "stack_in": [],
      "op": "b test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_block@0"
    },
    "1084": {
      "block": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_block@0",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1085": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1086": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1087": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1089": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "1090": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "2"
      ]
    },
    "1091": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1092": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "1093": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "3"
      ]
    },
    "1095": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1096": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "1097": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "1100": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1101": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "1103": {
      "op": "stores",
      "defined_out": [
        "a1#0"
      ],
      "stack_out": [
        "a1#0"
      ]
    },
    "1104": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "1"
      ]
    },
    "1105": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1106": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0",
        "0x"
      ]
    },
    "1107": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1109": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0"
      ]
    },
    "1110": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0",
        "2"
      ]
    },
    "1111": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%4#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "1112": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0"
      ]
    },
    "1113": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0",
        "3"
      ]
    },
    "1115": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "1116": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0"
      ]
    },
    "1117": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "a1#0",
        "encoded_array%1#0",
        "slot%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "slot%1#0"
      ]
    },
    "1120": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "encoded_array%1#0",
        "slot%1#0",
        "slot%1#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "slot%1#0",
        "slot%1#0 (copy)"
      ]
    },
    "1121": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "encoded_array%1#0"
      ]
    },
    "1123": {
      "op": "stores",
      "defined_out": [
        "a1#0",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1124": {
      "op": "dig 1",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "1126": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1127": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1128": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "1129": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_len%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_len%0#0"
      ]
    },
    "1130": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0"
      ]
    },
    "1132": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a2#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "a2#0 (copy)"
      ]
    },
    "1133": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%slot_contents%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "aggregate%slot_contents%1#0"
      ]
    },
    "1134": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "1135": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "aggregate%bytes_len%1#0",
        "8"
      ]
    },
    "1136": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "tmp%2#0"
      ]
    },
    "1137": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "1139": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ]
    },
    "1140": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1141": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "1143": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0"
      ]
    },
    "1144": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "a1#0",
        "a2#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0",
        "0"
      ]
    },
    "1145": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0",
        "0",
        "8"
      ]
    },
    "1146": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1147": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "1148": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%0#0"
      ]
    },
    "1149": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0"
      ]
    },
    "1150": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "a2#0 (copy)"
      ]
    },
    "1152": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0"
      ]
    },
    "1153": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0",
        "0"
      ]
    },
    "1154": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0",
        "0",
        "8"
      ]
    },
    "1155": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%1#0",
        "slot_contents%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "1156": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#0",
        "8"
      ]
    },
    "1157": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "array_item%1#0"
      ]
    },
    "1158": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "values%1#0"
      ]
    },
    "1159": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ]
    },
    "1160": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1161": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "1163": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0"
      ]
    },
    "1164": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0",
        "1"
      ]
    },
    "1165": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0",
        "1",
        "8"
      ]
    },
    "1166": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "1167": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%2#0",
        "8"
      ]
    },
    "1168": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%2#0"
      ]
    },
    "1169": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0"
      ]
    },
    "1170": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "a2#0 (copy)"
      ]
    },
    "1172": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0"
      ]
    },
    "1173": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0",
        "1"
      ]
    },
    "1174": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0",
        "1",
        "8"
      ]
    },
    "1175": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%3#0",
        "slot_contents%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "1176": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0",
        "aggregate%bytes_offset%3#0",
        "8"
      ]
    },
    "1177": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "array_item%3#0"
      ]
    },
    "1178": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "values%3#0"
      ]
    },
    "1179": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%5#0"
      ]
    },
    "1180": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1181": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "1183": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0"
      ]
    },
    "1184": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0",
        "2"
      ]
    },
    "1185": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0",
        "2",
        "8"
      ]
    },
    "1186": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%4#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "1187": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0",
        "aggregate%bytes_offset%4#0",
        "8"
      ]
    },
    "1188": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%4#0"
      ]
    },
    "1189": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%4#0"
      ]
    },
    "1190": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "a2#0"
      ]
    },
    "1192": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "slot_contents%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0"
      ]
    },
    "1193": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0",
        "2"
      ]
    },
    "1194": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0",
        "2",
        "8"
      ]
    },
    "1195": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "aggregate%bytes_offset%5#0",
        "slot_contents%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "1196": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0",
        "aggregate%bytes_offset%5#0",
        "8"
      ]
    },
    "1197": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "array_item%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "array_item%5#0"
      ]
    },
    "1198": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "values%5#0"
      ]
    },
    "1199": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%6#0"
      ]
    },
    "1200": {
      "op": "assert",
      "stack_out": [
        "a1#0"
      ]
    },
    "1201": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "3"
      ]
    },
    "1203": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1204": {
      "op": "extract 6 2",
      "defined_out": [
        "a1#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "1207": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%0#0",
        "1"
      ]
    },
    "1208": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%6#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%6#0"
      ]
    },
    "1209": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0"
      ]
    },
    "1210": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0",
        "2"
      ]
    },
    "1211": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%7#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64)%7#0"
      ]
    },
    "1212": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0"
      ]
    },
    "1213": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0",
        "3"
      ]
    },
    "1215": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%8#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64)%8#0"
      ]
    },
    "1216": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%2#0"
      ]
    },
    "1217": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "encoded_array%2#0",
        "encoded_array%2#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%2#0",
        "encoded_array%2#0 (copy)"
      ]
    },
    "1218": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "encoded_array%2#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%2#0",
        "total_length%0#0"
      ]
    },
    "1219": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "total_length%0#0",
        "encoded_array%2#0"
      ]
    },
    "1221": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "total_length%0#0",
        "encoded_array%2#0",
        "2"
      ]
    },
    "1222": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "encoded_array%2#0",
        "2",
        "total_length%0#0"
      ]
    },
    "1224": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "converted_array%0#0"
      ],
      "stack_out": [
        "a1#0",
        "converted_array%0#0"
      ]
    },
    "1225": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "a1#0",
        "converted_array%0#0",
        "slot%2#0"
      ],
      "stack_out": [
        "a1#0",
        "converted_array%0#0",
        "slot%2#0"
      ]
    },
    "1228": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "converted_array%0#0",
        "slot%2#0",
        "slot%2#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "converted_array%0#0",
        "slot%2#0",
        "slot%2#0 (copy)"
      ]
    },
    "1229": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "slot%2#0",
        "slot%2#0 (copy)",
        "converted_array%0#0"
      ]
    },
    "1231": {
      "op": "stores",
      "defined_out": [
        "a1#0",
        "a3#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "1232": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)"
      ]
    },
    "1233": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%slot_contents%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%slot_contents%2#0"
      ]
    },
    "1234": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_len%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1235": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_len%2#0",
        "8"
      ]
    },
    "1236": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0"
      ]
    },
    "1237": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0",
        "3"
      ]
    },
    "1239": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%9#0"
      ]
    },
    "1240": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "1241": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "1243": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0"
      ]
    },
    "1244": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0",
        "0"
      ]
    },
    "1245": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0",
        "0",
        "8"
      ]
    },
    "1246": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%6#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "1247": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0",
        "aggregate%bytes_offset%6#0",
        "8"
      ]
    },
    "1248": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%6#0"
      ]
    },
    "1249": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0"
      ]
    },
    "1250": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "a3#0 (copy)"
      ]
    },
    "1252": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0"
      ]
    },
    "1253": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0",
        "0"
      ]
    },
    "1254": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0",
        "0",
        "8"
      ]
    },
    "1255": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%7#0",
        "slot_contents%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0",
        "aggregate%bytes_offset%7#0"
      ]
    },
    "1256": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0",
        "aggregate%bytes_offset%7#0",
        "8"
      ]
    },
    "1257": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "array_item%7#0"
      ]
    },
    "1258": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "values%7#0"
      ]
    },
    "1259": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%10#0"
      ]
    },
    "1260": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "1261": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "1263": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0"
      ]
    },
    "1264": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0",
        "1"
      ]
    },
    "1265": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0",
        "1",
        "8"
      ]
    },
    "1266": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%8#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%8#0"
      ]
    },
    "1267": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%8#0",
        "8"
      ]
    },
    "1268": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%8#0"
      ]
    },
    "1269": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0"
      ]
    },
    "1270": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "a3#0 (copy)"
      ]
    },
    "1272": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0"
      ]
    },
    "1273": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0",
        "1"
      ]
    },
    "1274": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0",
        "1",
        "8"
      ]
    },
    "1275": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%9#0",
        "slot_contents%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0",
        "aggregate%bytes_offset%9#0"
      ]
    },
    "1276": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0",
        "aggregate%bytes_offset%9#0",
        "8"
      ]
    },
    "1277": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "array_item%9#0"
      ]
    },
    "1278": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "values%9#0"
      ]
    },
    "1279": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%11#0"
      ]
    },
    "1280": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "1281": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "1283": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0"
      ]
    },
    "1284": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0",
        "2"
      ]
    },
    "1285": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0",
        "2",
        "8"
      ]
    },
    "1286": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%10#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0",
        "aggregate%bytes_offset%10#0"
      ]
    },
    "1287": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0",
        "aggregate%bytes_offset%10#0",
        "8"
      ]
    },
    "1288": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%10#0"
      ]
    },
    "1289": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%10#0"
      ]
    },
    "1290": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "a3#0"
      ]
    },
    "1292": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "slot_contents%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0"
      ]
    },
    "1293": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0",
        "2"
      ]
    },
    "1294": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0",
        "2",
        "8"
      ]
    },
    "1295": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "aggregate%bytes_offset%11#0",
        "slot_contents%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0",
        "aggregate%bytes_offset%11#0"
      ]
    },
    "1296": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0",
        "aggregate%bytes_offset%11#0",
        "8"
      ]
    },
    "1297": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "array_item%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "array_item%11#0"
      ]
    },
    "1298": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "values%10#0",
        "values%11#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "values%11#0"
      ]
    },
    "1299": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%12#0"
      ]
    },
    "1300": {
      "op": "assert",
      "stack_out": [
        "a1#0"
      ]
    },
    "1301": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "1"
      ]
    },
    "1302": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%9#0"
      ]
    },
    "1303": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%9#0",
        "0x"
      ]
    },
    "1304": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%9#0"
      ]
    },
    "1306": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0"
      ]
    },
    "1307": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0",
        "2"
      ]
    },
    "1308": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%10#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0",
        "aggregate%as_Encoded(uint64)%10#0"
      ]
    },
    "1309": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0"
      ]
    },
    "1310": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0",
        "3"
      ]
    },
    "1312": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%11#0",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(uint64)%11#0"
      ]
    },
    "1313": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "slot%0"
      ],
      "stack_out": [
        "a1#0",
        "slot%0"
      ]
    },
    "1314": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "a1#0",
        "slot%0",
        "slot%4#0"
      ],
      "stack_out": [
        "a1#0",
        "slot%0",
        "slot%4#0"
      ]
    },
    "1317": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "slot%4#0",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "a1#0",
        "slot%4#0",
        "slot_contents%12#0"
      ]
    },
    "1319": {
      "op": "dig 1",
      "defined_out": [
        "a1#0",
        "slot%4#0",
        "slot%4#0 (copy)",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "a1#0",
        "slot%4#0",
        "slot_contents%12#0",
        "slot%4#0 (copy)"
      ]
    },
    "1321": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "slot%4#0",
        "slot%4#0 (copy)",
        "slot_contents%12#0"
      ]
    },
    "1323": {
      "op": "stores",
      "defined_out": [
        "a1#0",
        "a4#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1324": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1326": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%slot_contents%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%slot_contents%3#0"
      ]
    },
    "1327": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_len%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_len%3#0"
      ]
    },
    "1328": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_len%3#0",
        "8"
      ]
    },
    "1329": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_len%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_len%3#0"
      ]
    },
    "1330": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0"
      ]
    },
    "1332": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a4#0",
        "a4#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "a4#0 (copy)"
      ]
    },
    "1333": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%slot_contents%4#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "aggregate%slot_contents%4#0"
      ]
    },
    "1334": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_len%4#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "aggregate%bytes_len%4#0"
      ]
    },
    "1335": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "aggregate%bytes_len%4#0",
        "8"
      ]
    },
    "1336": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "tmp%14#0"
      ]
    },
    "1337": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%14#0",
        "tmp%13#0"
      ]
    },
    "1339": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%15#0"
      ]
    },
    "1340": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1341": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1343": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0"
      ]
    },
    "1344": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0",
        "0"
      ]
    },
    "1345": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0",
        "0",
        "8"
      ]
    },
    "1346": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_offset%12#0",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0",
        "aggregate%bytes_offset%12#0"
      ]
    },
    "1347": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0",
        "aggregate%bytes_offset%12#0",
        "8"
      ]
    },
    "1348": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "array_item%12#0"
      ]
    },
    "1349": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0"
      ]
    },
    "1350": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "a4#0 (copy)"
      ]
    },
    "1352": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "slot_contents%14#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0"
      ]
    },
    "1353": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0",
        "0"
      ]
    },
    "1354": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0",
        "0",
        "8"
      ]
    },
    "1355": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_offset%13#0",
        "slot_contents%14#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0",
        "aggregate%bytes_offset%13#0"
      ]
    },
    "1356": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0",
        "aggregate%bytes_offset%13#0",
        "8"
      ]
    },
    "1357": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "array_item%13#0"
      ]
    },
    "1358": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "values%13#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "values%13#0"
      ]
    },
    "1359": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%16#0"
      ]
    },
    "1360": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1361": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1363": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0"
      ]
    },
    "1364": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0",
        "1"
      ]
    },
    "1365": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0",
        "1",
        "8"
      ]
    },
    "1366": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_offset%14#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0",
        "aggregate%bytes_offset%14#0"
      ]
    },
    "1367": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0",
        "aggregate%bytes_offset%14#0",
        "8"
      ]
    },
    "1368": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "array_item%14#0"
      ]
    },
    "1369": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0"
      ]
    },
    "1370": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "a4#0 (copy)"
      ]
    },
    "1372": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "slot_contents%16#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0"
      ]
    },
    "1373": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0",
        "1"
      ]
    },
    "1374": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0",
        "1",
        "8"
      ]
    },
    "1375": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_offset%15#0",
        "slot_contents%16#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0",
        "aggregate%bytes_offset%15#0"
      ]
    },
    "1376": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0",
        "aggregate%bytes_offset%15#0",
        "8"
      ]
    },
    "1377": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "array_item%15#0"
      ]
    },
    "1378": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "values%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "values%15#0"
      ]
    },
    "1379": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%17#0"
      ]
    },
    "1380": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1381": {
      "op": "uncover 1",
      "stack_out": [
        "a4#0",
        "a1#0"
      ]
    },
    "1383": {
      "op": "loads",
      "defined_out": [
        "a4#0",
        "slot_contents%17#0"
      ],
      "stack_out": [
        "a4#0",
        "slot_contents%17#0"
      ]
    },
    "1384": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a4#0",
        "slot_contents%17#0",
        "2"
      ]
    },
    "1385": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a4#0",
        "slot_contents%17#0",
        "2",
        "8"
      ]
    },
    "1386": {
      "op": "*",
      "defined_out": [
        "a4#0",
        "aggregate%bytes_offset%16#0",
        "slot_contents%17#0"
      ],
      "stack_out": [
        "a4#0",
        "slot_contents%17#0",
        "aggregate%bytes_offset%16#0"
      ]
    },
    "1387": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a4#0",
        "slot_contents%17#0",
        "aggregate%bytes_offset%16#0",
        "8"
      ]
    },
    "1388": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a4#0",
        "array_item%16#0"
      ],
      "stack_out": [
        "a4#0",
        "array_item%16#0"
      ]
    },
    "1389": {
      "op": "btoi",
      "defined_out": [
        "a4#0",
        "values%16#0"
      ],
      "stack_out": [
        "a4#0",
        "values%16#0"
      ]
    },
    "1390": {
      "op": "uncover 1",
      "stack_out": [
        "values%16#0",
        "a4#0"
      ]
    },
    "1392": {
      "op": "loads",
      "defined_out": [
        "slot_contents%18#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0"
      ]
    },
    "1393": {
      "op": "intc_1 // 2",
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0",
        "2"
      ]
    },
    "1394": {
      "op": "intc_0 // 8",
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0",
        "2",
        "8"
      ]
    },
    "1395": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%17#0",
        "slot_contents%18#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0",
        "aggregate%bytes_offset%17#0"
      ]
    },
    "1396": {
      "op": "intc_0 // 8",
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0",
        "aggregate%bytes_offset%17#0",
        "8"
      ]
    },
    "1397": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "array_item%17#0"
      ]
    },
    "1398": {
      "op": "btoi",
      "defined_out": [
        "values%16#0",
        "values%17#0"
      ],
      "stack_out": [
        "values%16#0",
        "values%17#0"
      ]
    },
    "1399": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1400": {
      "op": "assert",
      "stack_out": []
    },
    "1401": {
      "retsub": true,
      "op": "retsub"
    },
    "1402": {
      "subroutine": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_without_type_generic",
      "params": {},
      "block": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_without_type_generic",
      "stack_in": [],
      "op": "b test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_without_type_generic_block@0"
    },
    "1405": {
      "block": "test_cases.array.immutable-init.ImmutableArrayInitContract.test_reference_array_init_without_type_generic_block@0",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1406": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1407": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1408": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1410": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "1411": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "2"
      ]
    },
    "1412": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1413": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "1414": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "3"
      ]
    },
    "1416": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1417": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "1418": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0"
      ]
    },
    "1421": {
      "op": "dup",
      "defined_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "1422": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded_array%0#0"
      ]
    },
    "1424": {
      "op": "stores",
      "defined_out": [
        "a1#0"
      ],
      "stack_out": [
        "a1#0"
      ]
    },
    "1425": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "1"
      ]
    },
    "1426": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1427": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%3#0",
        "0x"
      ]
    },
    "1428": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1430": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0"
      ]
    },
    "1431": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0",
        "2"
      ]
    },
    "1432": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%4#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "1433": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0"
      ]
    },
    "1434": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0",
        "3"
      ]
    },
    "1436": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "1437": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0"
      ]
    },
    "1438": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "a1#0",
        "encoded_array%1#0",
        "slot%1#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "slot%1#0"
      ]
    },
    "1441": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "encoded_array%1#0",
        "slot%1#0",
        "slot%1#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%1#0",
        "slot%1#0",
        "slot%1#0 (copy)"
      ]
    },
    "1442": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "slot%1#0",
        "slot%1#0 (copy)",
        "encoded_array%1#0"
      ]
    },
    "1444": {
      "op": "stores",
      "defined_out": [
        "a1#0",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1445": {
      "op": "dig 1",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "1447": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1448": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1449": {
      "op": "intc_0 // 8",
      "defined_out": [
        "8",
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "1450": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_len%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%array_len%0#0"
      ]
    },
    "1451": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0"
      ]
    },
    "1453": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a2#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "a2#0 (copy)"
      ]
    },
    "1454": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%slot_contents%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "aggregate%slot_contents%1#0"
      ]
    },
    "1455": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_len%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "1456": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "aggregate%bytes_len%1#0",
        "8"
      ]
    },
    "1457": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%1#0",
        "a2#0",
        "tmp%2#0"
      ]
    },
    "1458": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "1460": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ]
    },
    "1461": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1462": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "1464": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0"
      ]
    },
    "1465": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "a1#0",
        "a2#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0",
        "0"
      ]
    },
    "1466": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0",
        "0",
        "8"
      ]
    },
    "1467": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1468": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "1469": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%0#0"
      ]
    },
    "1470": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0"
      ]
    },
    "1471": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "a2#0 (copy)"
      ]
    },
    "1473": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0"
      ]
    },
    "1474": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0",
        "0"
      ]
    },
    "1475": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0",
        "0",
        "8"
      ]
    },
    "1476": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%1#0",
        "slot_contents%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "1477": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%1#0",
        "8"
      ]
    },
    "1478": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "array_item%1#0"
      ]
    },
    "1479": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%0#0",
        "values%1#0"
      ]
    },
    "1480": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ]
    },
    "1481": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1482": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "1484": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0"
      ]
    },
    "1485": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0",
        "1"
      ]
    },
    "1486": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0",
        "1",
        "8"
      ]
    },
    "1487": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%2#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "1488": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%2#0",
        "aggregate%bytes_offset%2#0",
        "8"
      ]
    },
    "1489": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%2#0"
      ]
    },
    "1490": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0"
      ]
    },
    "1491": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "a2#0 (copy)"
      ]
    },
    "1493": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0"
      ]
    },
    "1494": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0",
        "1"
      ]
    },
    "1495": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0",
        "1",
        "8"
      ]
    },
    "1496": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%3#0",
        "slot_contents%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "1497": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "slot_contents%3#0",
        "aggregate%bytes_offset%3#0",
        "8"
      ]
    },
    "1498": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "array_item%3#0"
      ]
    },
    "1499": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%2#0",
        "values%3#0"
      ]
    },
    "1500": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "tmp%5#0"
      ]
    },
    "1501": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1502": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a1#0 (copy)"
      ]
    },
    "1504": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0"
      ]
    },
    "1505": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0",
        "2"
      ]
    },
    "1506": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0",
        "2",
        "8"
      ]
    },
    "1507": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%bytes_offset%4#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "1508": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a2#0",
        "slot_contents%4#0",
        "aggregate%bytes_offset%4#0",
        "8"
      ]
    },
    "1509": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a2#0",
        "array_item%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "array_item%4#0"
      ]
    },
    "1510": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a2#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "values%4#0"
      ]
    },
    "1511": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "a2#0"
      ]
    },
    "1513": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "slot_contents%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0"
      ]
    },
    "1514": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0",
        "2"
      ]
    },
    "1515": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0",
        "2",
        "8"
      ]
    },
    "1516": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "aggregate%bytes_offset%5#0",
        "slot_contents%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "1517": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%4#0",
        "slot_contents%5#0",
        "aggregate%bytes_offset%5#0",
        "8"
      ]
    },
    "1518": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "array_item%5#0",
        "values%4#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "array_item%5#0"
      ]
    },
    "1519": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "a1#0",
        "values%4#0",
        "values%5#0"
      ]
    },
    "1520": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%6#0"
      ]
    },
    "1521": {
      "op": "assert",
      "stack_out": [
        "a1#0"
      ]
    },
    "1522": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "3"
      ]
    },
    "1524": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1525": {
      "op": "extract 6 2",
      "defined_out": [
        "a1#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "1528": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%0#0",
        "1"
      ]
    },
    "1529": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%6#0",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%len_u16%0#0",
        "aggregate%as_Encoded(uint64)%6#0"
      ]
    },
    "1530": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0"
      ]
    },
    "1531": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0",
        "2"
      ]
    },
    "1532": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%7#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64)%7#0"
      ]
    },
    "1533": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0"
      ]
    },
    "1534": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0",
        "3"
      ]
    },
    "1536": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%8#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64)%8#0"
      ]
    },
    "1537": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%2#0"
      ]
    },
    "1538": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "encoded_array%2#0",
        "encoded_array%2#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%2#0",
        "encoded_array%2#0 (copy)"
      ]
    },
    "1539": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "encoded_array%2#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "a1#0",
        "encoded_array%2#0",
        "total_length%0#0"
      ]
    },
    "1540": {
      "op": "cover 1",
      "stack_out": [
        "a1#0",
        "total_length%0#0",
        "encoded_array%2#0"
      ]
    },
    "1542": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "total_length%0#0",
        "encoded_array%2#0",
        "2"
      ]
    },
    "1543": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "encoded_array%2#0",
        "2",
        "total_length%0#0"
      ]
    },
    "1545": {
      "op": "substring3",
      "defined_out": [
        "a1#0",
        "converted_array%0#0"
      ],
      "stack_out": [
        "a1#0",
        "converted_array%0#0"
      ]
    },
    "1546": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "a1#0",
        "converted_array%0#0",
        "slot%2#0"
      ],
      "stack_out": [
        "a1#0",
        "converted_array%0#0",
        "slot%2#0"
      ]
    },
    "1549": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "converted_array%0#0",
        "slot%2#0",
        "slot%2#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "converted_array%0#0",
        "slot%2#0",
        "slot%2#0 (copy)"
      ]
    },
    "1550": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "slot%2#0",
        "slot%2#0 (copy)",
        "converted_array%0#0"
      ]
    },
    "1552": {
      "op": "stores",
      "defined_out": [
        "a1#0",
        "a3#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "1553": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "a3#0 (copy)"
      ]
    },
    "1554": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%slot_contents%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%slot_contents%2#0"
      ]
    },
    "1555": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_len%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1556": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_len%2#0",
        "8"
      ]
    },
    "1557": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0"
      ]
    },
    "1558": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%8#0",
        "3"
      ]
    },
    "1560": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%9#0"
      ]
    },
    "1561": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "1562": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "1564": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0"
      ]
    },
    "1565": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0",
        "0"
      ]
    },
    "1566": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0",
        "0",
        "8"
      ]
    },
    "1567": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%6#0",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "1568": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%6#0",
        "aggregate%bytes_offset%6#0",
        "8"
      ]
    },
    "1569": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%6#0"
      ]
    },
    "1570": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0"
      ]
    },
    "1571": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "a3#0 (copy)"
      ]
    },
    "1573": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0"
      ]
    },
    "1574": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0",
        "0"
      ]
    },
    "1575": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0",
        "0",
        "8"
      ]
    },
    "1576": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%7#0",
        "slot_contents%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0",
        "aggregate%bytes_offset%7#0"
      ]
    },
    "1577": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "slot_contents%7#0",
        "aggregate%bytes_offset%7#0",
        "8"
      ]
    },
    "1578": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%7#0",
        "values%6#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "array_item%7#0"
      ]
    },
    "1579": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "values%7#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%6#0",
        "values%7#0"
      ]
    },
    "1580": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%10#0"
      ]
    },
    "1581": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "1582": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "1584": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0"
      ]
    },
    "1585": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0",
        "1"
      ]
    },
    "1586": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0",
        "1",
        "8"
      ]
    },
    "1587": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%8#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%8#0"
      ]
    },
    "1588": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%8#0",
        "aggregate%bytes_offset%8#0",
        "8"
      ]
    },
    "1589": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%8#0"
      ]
    },
    "1590": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0"
      ]
    },
    "1591": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "a3#0 (copy)"
      ]
    },
    "1593": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0"
      ]
    },
    "1594": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0",
        "1"
      ]
    },
    "1595": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0",
        "1",
        "8"
      ]
    },
    "1596": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%9#0",
        "slot_contents%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0",
        "aggregate%bytes_offset%9#0"
      ]
    },
    "1597": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "slot_contents%9#0",
        "aggregate%bytes_offset%9#0",
        "8"
      ]
    },
    "1598": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%9#0",
        "values%8#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "array_item%9#0"
      ]
    },
    "1599": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%8#0",
        "values%9#0"
      ]
    },
    "1600": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "tmp%11#0"
      ]
    },
    "1601": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a3#0"
      ]
    },
    "1602": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a1#0 (copy)"
      ]
    },
    "1604": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0"
      ]
    },
    "1605": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0",
        "2"
      ]
    },
    "1606": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0",
        "2",
        "8"
      ]
    },
    "1607": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a3#0",
        "aggregate%bytes_offset%10#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0",
        "aggregate%bytes_offset%10#0"
      ]
    },
    "1608": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a3#0",
        "slot_contents%10#0",
        "aggregate%bytes_offset%10#0",
        "8"
      ]
    },
    "1609": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a3#0",
        "array_item%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "array_item%10#0"
      ]
    },
    "1610": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a3#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "values%10#0"
      ]
    },
    "1611": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "a3#0"
      ]
    },
    "1613": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "slot_contents%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0"
      ]
    },
    "1614": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0",
        "2"
      ]
    },
    "1615": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0",
        "2",
        "8"
      ]
    },
    "1616": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "aggregate%bytes_offset%11#0",
        "slot_contents%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0",
        "aggregate%bytes_offset%11#0"
      ]
    },
    "1617": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "values%10#0",
        "slot_contents%11#0",
        "aggregate%bytes_offset%11#0",
        "8"
      ]
    },
    "1618": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "array_item%11#0",
        "values%10#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "array_item%11#0"
      ]
    },
    "1619": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "values%10#0",
        "values%11#0"
      ],
      "stack_out": [
        "a1#0",
        "values%10#0",
        "values%11#0"
      ]
    },
    "1620": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%12#0"
      ]
    },
    "1621": {
      "op": "assert",
      "stack_out": [
        "a1#0"
      ]
    },
    "1622": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "1"
      ]
    },
    "1623": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%9#0"
      ]
    },
    "1624": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%9#0",
        "0x"
      ]
    },
    "1625": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%9#0"
      ]
    },
    "1627": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0"
      ]
    },
    "1628": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0",
        "2"
      ]
    },
    "1629": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%10#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%9#0",
        "aggregate%as_Encoded(uint64)%10#0"
      ]
    },
    "1630": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0"
      ]
    },
    "1631": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0",
        "3"
      ]
    },
    "1633": {
      "op": "itob",
      "defined_out": [
        "a1#0",
        "aggregate%as_Encoded(uint64)%11#0",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "a1#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(uint64)%11#0"
      ]
    },
    "1634": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "slot%0"
      ],
      "stack_out": [
        "a1#0",
        "slot%0"
      ]
    },
    "1635": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "a1#0",
        "slot%0",
        "slot%4#0"
      ],
      "stack_out": [
        "a1#0",
        "slot%0",
        "slot%4#0"
      ]
    },
    "1638": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "slot%4#0",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "a1#0",
        "slot%4#0",
        "slot_contents%12#0"
      ]
    },
    "1640": {
      "op": "dig 1",
      "defined_out": [
        "a1#0",
        "slot%4#0",
        "slot%4#0 (copy)",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "a1#0",
        "slot%4#0",
        "slot_contents%12#0",
        "slot%4#0 (copy)"
      ]
    },
    "1642": {
      "op": "uncover 1",
      "stack_out": [
        "a1#0",
        "slot%4#0",
        "slot%4#0 (copy)",
        "slot_contents%12#0"
      ]
    },
    "1644": {
      "op": "stores",
      "defined_out": [
        "a1#0",
        "a4#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1645": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1647": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%slot_contents%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%slot_contents%3#0"
      ]
    },
    "1648": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_len%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_len%3#0"
      ]
    },
    "1649": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_len%3#0",
        "8"
      ]
    },
    "1650": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_len%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "aggregate%array_len%3#0"
      ]
    },
    "1651": {
      "op": "cover 1",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0"
      ]
    },
    "1653": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a4#0",
        "a4#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "a4#0 (copy)"
      ]
    },
    "1654": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%slot_contents%4#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "aggregate%slot_contents%4#0"
      ]
    },
    "1655": {
      "op": "len",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_len%4#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "aggregate%bytes_len%4#0"
      ]
    },
    "1656": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "aggregate%bytes_len%4#0",
        "8"
      ]
    },
    "1657": {
      "op": "/",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%13#0",
        "a4#0",
        "tmp%14#0"
      ]
    },
    "1658": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%14#0",
        "tmp%13#0"
      ]
    },
    "1660": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%15#0"
      ]
    },
    "1661": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1662": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1664": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0"
      ]
    },
    "1665": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0",
        "0"
      ]
    },
    "1666": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0",
        "0",
        "8"
      ]
    },
    "1667": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_offset%12#0",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0",
        "aggregate%bytes_offset%12#0"
      ]
    },
    "1668": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%13#0",
        "aggregate%bytes_offset%12#0",
        "8"
      ]
    },
    "1669": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "array_item%12#0"
      ]
    },
    "1670": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0"
      ]
    },
    "1671": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "a4#0 (copy)"
      ]
    },
    "1673": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "slot_contents%14#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0"
      ]
    },
    "1674": {
      "op": "intc_3 // 0",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0",
        "0"
      ]
    },
    "1675": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0",
        "0",
        "8"
      ]
    },
    "1676": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_offset%13#0",
        "slot_contents%14#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0",
        "aggregate%bytes_offset%13#0"
      ]
    },
    "1677": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "slot_contents%14#0",
        "aggregate%bytes_offset%13#0",
        "8"
      ]
    },
    "1678": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%13#0",
        "values%12#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "array_item%13#0"
      ]
    },
    "1679": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "values%13#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%12#0",
        "values%13#0"
      ]
    },
    "1680": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%16#0"
      ]
    },
    "1681": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1682": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1684": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0"
      ]
    },
    "1685": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0",
        "1"
      ]
    },
    "1686": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0",
        "1",
        "8"
      ]
    },
    "1687": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_offset%14#0",
        "slot_contents%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0",
        "aggregate%bytes_offset%14#0"
      ]
    },
    "1688": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "slot_contents%15#0",
        "aggregate%bytes_offset%14#0",
        "8"
      ]
    },
    "1689": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "array_item%14#0"
      ]
    },
    "1690": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0"
      ]
    },
    "1691": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "a4#0 (copy)"
      ]
    },
    "1693": {
      "op": "loads",
      "defined_out": [
        "a1#0",
        "a4#0",
        "slot_contents%16#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0"
      ]
    },
    "1694": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0",
        "1"
      ]
    },
    "1695": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0",
        "1",
        "8"
      ]
    },
    "1696": {
      "op": "*",
      "defined_out": [
        "a1#0",
        "a4#0",
        "aggregate%bytes_offset%15#0",
        "slot_contents%16#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0",
        "aggregate%bytes_offset%15#0"
      ]
    },
    "1697": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "slot_contents%16#0",
        "aggregate%bytes_offset%15#0",
        "8"
      ]
    },
    "1698": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a1#0",
        "a4#0",
        "array_item%15#0",
        "values%14#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "array_item%15#0"
      ]
    },
    "1699": {
      "op": "btoi",
      "defined_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "values%15#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "values%14#0",
        "values%15#0"
      ]
    },
    "1700": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%17#0"
      ]
    },
    "1701": {
      "op": "assert",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1702": {
      "op": "uncover 1",
      "stack_out": [
        "a4#0",
        "a1#0"
      ]
    },
    "1704": {
      "op": "loads",
      "defined_out": [
        "a4#0",
        "slot_contents%17#0"
      ],
      "stack_out": [
        "a4#0",
        "slot_contents%17#0"
      ]
    },
    "1705": {
      "op": "intc_1 // 2",
      "stack_out": [
        "a4#0",
        "slot_contents%17#0",
        "2"
      ]
    },
    "1706": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a4#0",
        "slot_contents%17#0",
        "2",
        "8"
      ]
    },
    "1707": {
      "op": "*",
      "defined_out": [
        "a4#0",
        "aggregate%bytes_offset%16#0",
        "slot_contents%17#0"
      ],
      "stack_out": [
        "a4#0",
        "slot_contents%17#0",
        "aggregate%bytes_offset%16#0"
      ]
    },
    "1708": {
      "op": "intc_0 // 8",
      "stack_out": [
        "a4#0",
        "slot_contents%17#0",
        "aggregate%bytes_offset%16#0",
        "8"
      ]
    },
    "1709": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a4#0",
        "array_item%16#0"
      ],
      "stack_out": [
        "a4#0",
        "array_item%16#0"
      ]
    },
    "1710": {
      "op": "btoi",
      "defined_out": [
        "a4#0",
        "values%16#0"
      ],
      "stack_out": [
        "a4#0",
        "values%16#0"
      ]
    },
    "1711": {
      "op": "uncover 1",
      "stack_out": [
        "values%16#0",
        "a4#0"
      ]
    },
    "1713": {
      "op": "loads",
      "defined_out": [
        "slot_contents%18#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0"
      ]
    },
    "1714": {
      "op": "intc_1 // 2",
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0",
        "2"
      ]
    },
    "1715": {
      "op": "intc_0 // 8",
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0",
        "2",
        "8"
      ]
    },
    "1716": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%17#0",
        "slot_contents%18#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0",
        "aggregate%bytes_offset%17#0"
      ]
    },
    "1717": {
      "op": "intc_0 // 8",
      "stack_out": [
        "values%16#0",
        "slot_contents%18#0",
        "aggregate%bytes_offset%17#0",
        "8"
      ]
    },
    "1718": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%17#0",
        "values%16#0"
      ],
      "stack_out": [
        "values%16#0",
        "array_item%17#0"
      ]
    },
    "1719": {
      "op": "btoi",
      "defined_out": [
        "values%16#0",
        "values%17#0"
      ],
      "stack_out": [
        "values%16#0",
        "values%17#0"
      ]
    },
    "1720": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1721": {
      "op": "assert",
      "stack_out": []
    },
    "1722": {
      "retsub": true,
      "op": "retsub"
    },
    "1723": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "b _puya_lib.mem.new_slot@entry"
    },
    "1726": {
      "block": "_puya_lib.mem.new_slot@entry",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "1728": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1729": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "1731": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "1734": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "1736": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "1737": {
      "op": "intc_3 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "1738": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "1739": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1741": {
      "retsub": true,
      "op": "retsub"
    }
  }
}