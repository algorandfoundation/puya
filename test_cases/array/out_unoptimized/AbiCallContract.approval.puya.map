{
  "version": 3,
  "sources": [
    "../unused_opt_allowed.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAWA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACK;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAL;;;;;;;AAKQ;AAA2C;;AAAY;;;;AAAvD;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEa;AAAA;AAAA;;;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACb;AAAgE;;;;AAAhE;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEsB;AAAA;AAAA;;;AAC0B;;AAAA;AAAA;AAAA;;AAAhD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AACA;AAAkF;;;;AAAlF;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 2 1 6"
    },
    "7": {
      "op": "bytecblock 0x"
    },
    "10": {
      "op": "b main_block@0"
    },
    "13": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "16": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "18": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "19": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "20": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "23": {
      "op": "b main_abi_routing@2"
    },
    "26": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "29": {
      "op": "pushbytes 0x06598bc6 // method \"test_implicit_conversion_abi_call(uint64[],uint64)void\"",
      "defined_out": [
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)"
      ]
    },
    "35": {
      "op": "uncover 1",
      "stack_out": [
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)",
        "tmp%2#0"
      ]
    },
    "37": {
      "op": "match main_test_implicit_conversion_abi_call_route@3",
      "stack_out": []
    },
    "41": {
      "op": "b main_switch_case_default@4"
    },
    "44": {
      "block": "main_switch_case_default@4",
      "stack_in": [],
      "op": "b main_switch_case_next@5"
    },
    "47": {
      "block": "main_switch_case_next@5",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "50": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "51": {
      "block": "main_test_implicit_conversion_abi_call_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "53": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "54": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "55": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "56": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "58": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "59": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "60": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "61": {
      "callsub": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call[routing]",
      "op": "callsub test_implicit_conversion_abi_call"
    },
    "64": {
      "op": "b main_switch_case_next@5"
    },
    "67": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "70": {
      "op": "uncover 1",
      "stack_out": [
        "0",
        "tmp%7#0"
      ]
    },
    "72": {
      "op": "match main___algopy_default_create@7",
      "stack_out": []
    },
    "76": {
      "op": "b main_switch_case_default@8"
    },
    "79": {
      "block": "main_switch_case_default@8",
      "stack_in": [],
      "op": "b main_switch_case_next@9"
    },
    "82": {
      "block": "main_switch_case_next@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "85": {
      "block": "main___algopy_default_create@7",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "87": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "88": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "89": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "90": {
      "op": "b main_block@12"
    },
    "93": {
      "block": "main_block@12",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@13"
    },
    "96": {
      "block": "main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@13",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "97": {
      "op": "return",
      "stack_out": []
    },
    "98": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "101": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "102": {
      "op": "b dynamic_array_concat_dynamic_element_block@0"
    },
    "105": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "tmp%8#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0"
      ]
    },
    "106": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "108": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "109": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "110": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "112": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "113": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "114": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "2"
      ]
    },
    "115": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "116": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "117": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "120": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "122": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "124": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "125": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "128": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@2"
    },
    "131": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "133": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "135": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "136": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "138": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "139": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "140": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "143": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "145": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "147": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "148": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "150": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@3"
    },
    "153": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "155": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "156": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "157": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "159": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "162": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "164": {
      "op": "len",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "165": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "167": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "169": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "170": {
      "op": "*",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "171": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "173": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "2"
      ]
    },
    "174": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "175": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "0"
      ]
    },
    "176": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "178": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "181": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "183": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "185": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "186": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "189": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@6"
    },
    "192": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "194": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "196": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "197": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "199": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "200": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "201": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "204": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "206": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "208": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "209": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "211": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@7"
    },
    "214": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "216": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "217": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "218": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "220": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "223": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "225": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "227": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "228": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "229": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "232": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "234": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "235": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)"
      ]
    },
    "237": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "238": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "239": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "241": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "242": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "244": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0"
      ]
    },
    "246": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "248": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "249": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "250": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)"
      ]
    },
    "252": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "253": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "254": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "256": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "257": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "259": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0"
      ]
    },
    "261": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "263": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "264": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "265": {
      "op": "frame_bury 0"
    },
    "267": {
      "retsub": true,
      "op": "retsub"
    },
    "268": {
      "subroutine": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call[routing]",
      "params": {},
      "block": "test_implicit_conversion_abi_call",
      "stack_in": [],
      "op": "b test_implicit_conversion_abi_call_block@0"
    },
    "271": {
      "block": "test_implicit_conversion_abi_call_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "274": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "277": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ]
    },
    "278": {
      "callsub": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "op": "callsub test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "stack_out": []
    },
    "281": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "282": {
      "op": "return",
      "stack_out": []
    },
    "283": {
      "subroutine": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "params": {
        "arr#0": "bytes",
        "app#0": "uint64"
      },
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "286": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "287": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_block@0"
    },
    "290": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_block@0",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_begin"
    },
    "291": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "293": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "295": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "297": {
      "op": "pushbytes 0x75b694f3 // method \"dont_call(uint64[])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[])uint64)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call(uint64[])uint64)"
      ]
    },
    "303": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "305": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "307": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "308": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "310": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "311": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "313": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@1"
    },
    "316": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@1",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "317": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "318": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "319": {
      "op": "extract 6 2",
      "defined_out": [
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0"
      ]
    },
    "322": {
      "op": "dup",
      "defined_out": [
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ]
    },
    "323": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)",
        "0"
      ]
    },
    "324": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "extract_uint16%0#0"
      ]
    },
    "325": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0"
      ]
    },
    "327": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ]
    },
    "328": {
      "op": "len",
      "defined_out": [
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ]
    },
    "329": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "nested_arr#0"
      ]
    },
    "331": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "nested_arr#0",
        "2"
      ]
    },
    "332": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "334": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "335": {
      "op": "intc_1 // 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "336": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "337": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "340": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "341": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "343": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0"
      ]
    },
    "344": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0 (copy)",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "arr#0 (copy)"
      ]
    },
    "346": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0"
      ]
    },
    "347": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "extract_uint16%0#0"
      ]
    },
    "349": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "351": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "352": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%0#0"
      ]
    },
    "354": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0"
      ]
    },
    "357": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "358": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "360": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "362": {
      "op": "pushbytes 0xe92b1d53 // method \"dont_call(uint64[][])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[][])uint64)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call(uint64[][])uint64)"
      ]
    },
    "368": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "370": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "372": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "373": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "375": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "376": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "378": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@2"
    },
    "381": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@2",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "382": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "383": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "384": {
      "op": "extract 6 2",
      "defined_out": [
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ]
    },
    "387": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "arr#0 (copy)"
      ]
    },
    "389": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "390": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "391": {
      "op": "cover 1",
      "defined_out": [
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "393": {
      "op": "dup",
      "defined_out": [
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "394": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "0"
      ]
    },
    "395": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "extract_uint16%1#0"
      ]
    },
    "396": {
      "op": "cover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "398": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "399": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "total_length%1#0"
      ]
    },
    "400": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "402": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "403": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "tmp%1#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "2"
      ]
    },
    "404": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "2",
        "total_length%1#0"
      ]
    },
    "406": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "extract_to_end%1#0"
      ]
    },
    "407": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "409": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "10"
      ]
    },
    "411": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "412": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "415": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "416": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "418": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0"
      ]
    },
    "419": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0",
        "tmp%1#0"
      ]
    },
    "421": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "422": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%2#0"
      ]
    },
    "423": {
      "op": "frame_dig -2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%2#0",
        "arr#0 (copy)"
      ]
    },
    "425": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0"
      ]
    },
    "426": {
      "op": "intc_1 // 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "2"
      ]
    },
    "427": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%as_bytes%4#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "428": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "431": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "432": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "434": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%head%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%head%3#0"
      ]
    },
    "435": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0"
      ]
    },
    "437": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ]
    },
    "438": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0"
      ]
    },
    "440": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "442": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1"
      ]
    },
    "443": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1",
        "tmp%2#0"
      ]
    },
    "445": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "448": {
      "op": "frame_bury 0",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ]
    },
    "450": {
      "op": "itxn_begin",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "451": {
      "op": "frame_dig -1",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "453": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "455": {
      "op": "pushbytes 0x165312d8 // method \"dont_call((uint64[],uint64)[])uint64\"",
      "defined_out": [
        "Method(dont_call((uint64[],uint64)[])uint64)",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call((uint64[],uint64)[])uint64)"
      ]
    },
    "461": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "463": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "465": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "466": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "468": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "469": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "471": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@3"
    },
    "474": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@3",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "475": {
      "retsub": true,
      "op": "retsub"
    }
  }
}