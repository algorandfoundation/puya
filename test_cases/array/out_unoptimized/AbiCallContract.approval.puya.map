{
  "version": 3,
  "sources": [
    "../unused_opt_allowed.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAWA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;;;;;;;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AAAA;;;AAAA;AACK;;;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;AAKQ;AAA2C;;AAAY;;;;AAAvD;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEa;AAAA;AAAA;;;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACb;AAAgE;;;;AAAhE;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEsB;AAAA;AAAA;;;AAC0B;;AAAA;AAAA;AAAA;;AAAhD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AACA;AAAkF;;;;AAAlF;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 2 1 6"
    },
    "7": {
      "op": "bytecblock 0x"
    },
    "10": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "11": {
      "op": "b main_block@0"
    },
    "14": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "17": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "19": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "20": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "21": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "b main_abi_routing@2"
    },
    "27": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "30": {
      "op": "pushbytes 0x06598bc6 // method \"test_implicit_conversion_abi_call(uint64[],uint64)void\"",
      "defined_out": [
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)"
      ]
    },
    "36": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)",
        "tmp%2#0"
      ]
    },
    "38": {
      "op": "match main_test_implicit_conversion_abi_call_route@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "42": {
      "op": "b main_switch_case_default@4"
    },
    "45": {
      "block": "main_switch_case_default@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@5"
    },
    "48": {
      "block": "main_switch_case_next@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "51": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0"
      ]
    },
    "52": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "54": {
      "op": "b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11"
    },
    "57": {
      "block": "main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "58": {
      "block": "main_test_implicit_conversion_abi_call_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "60": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "61": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "62": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "63": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "65": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "66": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "67": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "68": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "71": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "74": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%7#0"
      ]
    },
    "75": {
      "callsub": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "op": "callsub test_implicit_conversion_abi_call",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "78": {
      "op": "intc_2 // 1",
      "defined_out": [
        "test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0"
      ]
    },
    "79": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "81": {
      "op": "b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11"
    },
    "84": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "0"
      ]
    },
    "87": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%8#0"
      ]
    },
    "89": {
      "op": "match main___algopy_default_create@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "93": {
      "op": "b main_switch_case_default@8"
    },
    "96": {
      "block": "main_switch_case_default@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@9"
    },
    "99": {
      "block": "main_switch_case_next@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "102": {
      "block": "main___algopy_default_create@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "104": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0",
        "0"
      ]
    },
    "105": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "106": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "107": {
      "op": "b main_block@12"
    },
    "110": {
      "block": "main_block@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@13"
    },
    "113": {
      "block": "main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_2 // 1",
      "defined_out": [
        "test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0"
      ]
    },
    "114": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "116": {
      "op": "b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11"
    },
    "119": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "122": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "123": {
      "op": "b dynamic_array_concat_dynamic_element_block@0"
    },
    "126": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "tmp%8#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0"
      ]
    },
    "127": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "129": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "130": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "131": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "133": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "134": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "135": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "2"
      ]
    },
    "136": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "138": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "141": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "143": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "145": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "146": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "149": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@2"
    },
    "152": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "154": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "156": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "157": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "159": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "160": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "161": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "164": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "166": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "168": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "169": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "171": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@3"
    },
    "174": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "176": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "177": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "178": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "180": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "183": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "185": {
      "op": "len",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "186": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "188": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "190": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "191": {
      "op": "*",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "192": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "194": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "2"
      ]
    },
    "195": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "0"
      ]
    },
    "197": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "199": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "202": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "204": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "206": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "207": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "210": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@6"
    },
    "213": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "215": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "217": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "218": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "220": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "221": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "222": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "225": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "227": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "229": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "230": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "232": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@7"
    },
    "235": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "237": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "238": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "239": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "241": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "244": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "246": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "248": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "249": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "250": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "253": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "255": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "256": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)"
      ]
    },
    "258": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "259": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "260": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "262": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "263": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "265": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0"
      ]
    },
    "267": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "269": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "270": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "271": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)"
      ]
    },
    "273": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "274": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "275": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "277": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "278": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "280": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0"
      ]
    },
    "282": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "284": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "285": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "286": {
      "op": "frame_bury 0"
    },
    "288": {
      "retsub": true,
      "op": "retsub"
    },
    "289": {
      "subroutine": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "params": {
        "arr#0": "bytes",
        "app#0": "uint64"
      },
      "block": "test_implicit_conversion_abi_call",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "292": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "293": {
      "op": "b test_implicit_conversion_abi_call_block@0"
    },
    "296": {
      "block": "test_implicit_conversion_abi_call_block@0",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_begin"
    },
    "297": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "299": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "301": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "303": {
      "op": "pushbytes 0x75b694f3 // method \"dont_call(uint64[])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[])uint64)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call(uint64[])uint64)"
      ]
    },
    "309": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "311": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "313": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "314": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "316": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "317": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "319": {
      "op": "b test_implicit_conversion_abi_call_next_txn@1"
    },
    "322": {
      "block": "test_implicit_conversion_abi_call_next_txn@1",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "323": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "324": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "325": {
      "op": "extract 6 2",
      "defined_out": [
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0"
      ]
    },
    "328": {
      "op": "dup",
      "defined_out": [
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ]
    },
    "329": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)",
        "0"
      ]
    },
    "330": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "extract_uint16%0#0"
      ]
    },
    "331": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0"
      ]
    },
    "333": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ]
    },
    "334": {
      "op": "len",
      "defined_out": [
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ]
    },
    "335": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "nested_arr#0"
      ]
    },
    "337": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "nested_arr#0",
        "2"
      ]
    },
    "338": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "340": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "341": {
      "op": "intc_1 // 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "342": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "343": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "346": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "347": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "349": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0"
      ]
    },
    "350": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0 (copy)",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "arr#0 (copy)"
      ]
    },
    "352": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0"
      ]
    },
    "353": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "extract_uint16%0#0"
      ]
    },
    "355": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "357": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "358": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%0#0"
      ]
    },
    "360": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0"
      ]
    },
    "363": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "364": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "366": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "368": {
      "op": "pushbytes 0xe92b1d53 // method \"dont_call(uint64[][])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[][])uint64)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call(uint64[][])uint64)"
      ]
    },
    "374": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "376": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "378": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "379": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "381": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "382": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "384": {
      "op": "b test_implicit_conversion_abi_call_next_txn@2"
    },
    "387": {
      "block": "test_implicit_conversion_abi_call_next_txn@2",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "388": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "389": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "390": {
      "op": "extract 6 2",
      "defined_out": [
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ]
    },
    "393": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "arr#0 (copy)"
      ]
    },
    "395": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "396": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "397": {
      "op": "cover 1",
      "defined_out": [
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "399": {
      "op": "dup",
      "defined_out": [
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "400": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "0"
      ]
    },
    "401": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "extract_uint16%1#0"
      ]
    },
    "402": {
      "op": "cover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "404": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "405": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "total_length%1#0"
      ]
    },
    "406": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "408": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "409": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "tmp%1#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "2"
      ]
    },
    "410": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "2",
        "total_length%1#0"
      ]
    },
    "412": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "extract_to_end%1#0"
      ]
    },
    "413": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "415": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "10"
      ]
    },
    "417": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "418": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "421": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "422": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "424": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0"
      ]
    },
    "425": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0",
        "tmp%1#0"
      ]
    },
    "427": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "428": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%2#0"
      ]
    },
    "429": {
      "op": "frame_dig -2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%2#0",
        "arr#0 (copy)"
      ]
    },
    "431": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0"
      ]
    },
    "432": {
      "op": "intc_1 // 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "2"
      ]
    },
    "433": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%as_bytes%4#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "434": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "437": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "438": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "440": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%head%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%head%3#0"
      ]
    },
    "441": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0"
      ]
    },
    "443": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ]
    },
    "444": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0"
      ]
    },
    "446": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "448": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1"
      ]
    },
    "449": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1",
        "tmp%2#0"
      ]
    },
    "451": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "454": {
      "op": "frame_bury 0",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ]
    },
    "456": {
      "op": "itxn_begin",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "457": {
      "op": "frame_dig -1",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "459": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "461": {
      "op": "pushbytes 0x165312d8 // method \"dont_call((uint64[],uint64)[])uint64\"",
      "defined_out": [
        "Method(dont_call((uint64[],uint64)[])uint64)",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call((uint64[],uint64)[])uint64)"
      ]
    },
    "467": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "469": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "471": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "472": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "474": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "475": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "477": {
      "op": "b test_implicit_conversion_abi_call_next_txn@3"
    },
    "480": {
      "block": "test_implicit_conversion_abi_call_next_txn@3",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "481": {
      "retsub": true,
      "op": "retsub"
    }
  }
}