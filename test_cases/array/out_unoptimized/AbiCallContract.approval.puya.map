{
  "version": 3,
  "sources": [
    "../unused_opt_allowed.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAWA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;AACK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAL;;;;;;;AAKQ;AAA2C;;AAAY;;;;AAAvD;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEa;AAAA;AAAA;;;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACb;AAAgE;;;;AAAhE;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEsB;AAAA;AAAA;;;AAC0B;;AAAA;AAAA;AAAA;;AAAhD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AACA;AAAkF;;;;AAAlF;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 2 1 6"
    },
    "7": {
      "op": "bytecblock 0x"
    },
    "10": {
      "op": "b block@0"
    },
    "13": {
      "block": "block@0",
      "stack_in": [],
      "op": "b block@1"
    },
    "16": {
      "block": "block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "18": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "19": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "20": {
      "op": "bz __algopy_default_create@6",
      "stack_out": []
    },
    "23": {
      "op": "b abi_routing@2"
    },
    "26": {
      "block": "abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "29": {
      "op": "pushbytes 0x06598bc6 // method \"test_implicit_conversion_abi_call(uint64[],uint64)void\"",
      "defined_out": [
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)"
      ]
    },
    "35": {
      "op": "uncover 1",
      "stack_out": [
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)",
        "tmp%2#0"
      ]
    },
    "37": {
      "op": "match test_implicit_conversion_abi_call_route@3",
      "stack_out": []
    },
    "41": {
      "op": "b switch_case_default@4"
    },
    "44": {
      "block": "switch_case_default@4",
      "stack_in": [],
      "op": "b switch_case_next@5"
    },
    "47": {
      "block": "switch_case_next@5",
      "stack_in": [],
      "op": "b after_if_else@7"
    },
    "50": {
      "block": "after_if_else@7",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "51": {
      "block": "test_implicit_conversion_abi_call_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "53": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "54": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "55": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "57": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "0"
      ]
    },
    "58": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "59": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "60": {
      "error": "OnCompletion must be NoOp && can only call when not creating",
      "op": "assert // OnCompletion must be NoOp && can only call when not creating",
      "stack_out": []
    },
    "61": {
      "callsub": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call[routing]",
      "op": "callsub test_implicit_conversion_abi_call"
    },
    "64": {
      "op": "b switch_case_next@5"
    },
    "67": {
      "block": "__algopy_default_create@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "69": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "70": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "71": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "73": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "0"
      ]
    },
    "74": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "75": {
      "op": "&&",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "76": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "77": {
      "op": "b block@9"
    },
    "80": {
      "block": "block@9",
      "stack_in": [],
      "op": "b after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@10"
    },
    "83": {
      "block": "after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@10",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "84": {
      "op": "return",
      "stack_out": []
    },
    "85": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "88": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "89": {
      "op": "b dynamic_array_concat_dynamic_element_block@0"
    },
    "92": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "tmp%8#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0"
      ]
    },
    "93": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "95": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "96": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "97": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "99": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "100": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "101": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "2"
      ]
    },
    "102": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "103": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "104": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "107": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "109": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "111": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "112": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "115": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@2"
    },
    "118": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "120": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "122": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "123": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "125": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "126": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "127": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "130": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "132": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "134": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "135": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "137": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@3"
    },
    "140": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "142": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "143": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "144": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "146": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "149": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "151": {
      "op": "len",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "152": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "154": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "156": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "157": {
      "op": "*",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "158": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "160": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "2"
      ]
    },
    "161": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "162": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "0"
      ]
    },
    "163": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "165": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "168": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "170": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "172": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "173": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "176": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@6"
    },
    "179": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "181": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "183": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "184": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "186": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "187": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "188": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "191": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "193": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "195": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "196": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "198": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@7"
    },
    "201": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "203": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "204": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "205": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "207": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "210": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "212": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "214": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "215": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "216": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "219": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "221": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "222": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)"
      ]
    },
    "224": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "225": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "226": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "228": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "229": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "231": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0"
      ]
    },
    "233": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "235": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "236": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "237": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)"
      ]
    },
    "239": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "240": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "241": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "243": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "244": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "246": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0"
      ]
    },
    "248": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "250": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "251": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "252": {
      "op": "frame_bury 0"
    },
    "254": {
      "retsub": true,
      "op": "retsub"
    },
    "255": {
      "subroutine": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call[routing]",
      "params": {},
      "block": "test_implicit_conversion_abi_call",
      "stack_in": [],
      "op": "b test_implicit_conversion_abi_call_block@0"
    },
    "258": {
      "block": "test_implicit_conversion_abi_call_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "261": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "264": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ]
    },
    "265": {
      "callsub": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "op": "callsub test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "stack_out": []
    },
    "268": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "269": {
      "op": "return",
      "stack_out": []
    },
    "270": {
      "subroutine": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "params": {
        "arr#0": "bytes",
        "app#0": "uint64"
      },
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "273": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "274": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_block@0"
    },
    "277": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_block@0",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_begin"
    },
    "278": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "280": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "282": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "284": {
      "op": "pushbytes 0x75b694f3 // method \"dont_call(uint64[])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[])uint64)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call(uint64[])uint64)"
      ]
    },
    "290": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "292": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "294": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "295": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "297": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "298": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "300": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@1"
    },
    "303": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@1",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "304": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "305": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "306": {
      "op": "extract 6 2",
      "defined_out": [
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0"
      ]
    },
    "309": {
      "op": "dup",
      "defined_out": [
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ]
    },
    "310": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)",
        "0"
      ]
    },
    "311": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "extract_uint16%0#0"
      ]
    },
    "312": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0"
      ]
    },
    "314": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ]
    },
    "315": {
      "op": "len",
      "defined_out": [
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ]
    },
    "316": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "nested_arr#0"
      ]
    },
    "318": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "nested_arr#0",
        "2"
      ]
    },
    "319": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "321": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "322": {
      "op": "intc_1 // 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "323": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "324": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "327": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "328": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "330": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0"
      ]
    },
    "331": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0 (copy)",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "arr#0 (copy)"
      ]
    },
    "333": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0"
      ]
    },
    "334": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "extract_uint16%0#0"
      ]
    },
    "336": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "338": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "339": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%0#0"
      ]
    },
    "341": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0"
      ]
    },
    "344": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "345": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "347": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "349": {
      "op": "pushbytes 0xe92b1d53 // method \"dont_call(uint64[][])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[][])uint64)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call(uint64[][])uint64)"
      ]
    },
    "355": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "357": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "359": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "360": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "362": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "363": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "365": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@2"
    },
    "368": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@2",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "369": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "370": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "371": {
      "op": "extract 6 2",
      "defined_out": [
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ]
    },
    "374": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "arr#0 (copy)"
      ]
    },
    "376": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "377": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "378": {
      "op": "cover 1",
      "defined_out": [
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "380": {
      "op": "dup",
      "defined_out": [
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "381": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "0"
      ]
    },
    "382": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "extract_uint16%1#0"
      ]
    },
    "383": {
      "op": "cover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "385": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "386": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "total_length%1#0"
      ]
    },
    "387": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "389": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "390": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "tmp%1#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "2"
      ]
    },
    "391": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "2",
        "total_length%1#0"
      ]
    },
    "393": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "extract_to_end%1#0"
      ]
    },
    "394": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "396": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "10"
      ]
    },
    "398": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "399": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "402": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "403": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "405": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0"
      ]
    },
    "406": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0",
        "tmp%1#0"
      ]
    },
    "408": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "409": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%2#0"
      ]
    },
    "410": {
      "op": "frame_dig -2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%2#0",
        "arr#0 (copy)"
      ]
    },
    "412": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0"
      ]
    },
    "413": {
      "op": "intc_1 // 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "2"
      ]
    },
    "414": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%as_bytes%4#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "415": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "418": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "419": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "421": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%head%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%head%3#0"
      ]
    },
    "422": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0"
      ]
    },
    "424": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ]
    },
    "425": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0"
      ]
    },
    "427": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "429": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1"
      ]
    },
    "430": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1",
        "tmp%2#0"
      ]
    },
    "432": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "435": {
      "op": "frame_bury 0",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ]
    },
    "437": {
      "op": "itxn_begin",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "438": {
      "op": "frame_dig -1",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "440": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "442": {
      "op": "pushbytes 0x165312d8 // method \"dont_call((uint64[],uint64)[])uint64\"",
      "defined_out": [
        "Method(dont_call((uint64[],uint64)[])uint64)",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call((uint64[],uint64)[])uint64)"
      ]
    },
    "448": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "450": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "452": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "453": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "455": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "456": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "458": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@3"
    },
    "461": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@3",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "462": {
      "retsub": true,
      "op": "retsub"
    }
  }
}