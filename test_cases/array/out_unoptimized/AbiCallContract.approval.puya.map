{
  "version": 3,
  "sources": [
    "../unused_opt_allowed.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAWA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;;;;;;;;;AAAA;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACK;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAL;;;;;;;AAKQ;AAA2C;;AAAY;;;;AAAvD;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEa;AAAA;AAAA;;;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACb;AAAgE;;;;AAAhE;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEsB;AAAA;AAAA;;;AAC0B;;AAAA;AAAA;AAAA;;AAAhD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AACA;AAAkF;;;;AAAlF;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 2 0 1 6"
    },
    "7": {
      "op": "bytecblock 0x"
    },
    "10": {
      "op": "b block@0"
    },
    "13": {
      "block": "block@0",
      "stack_in": [],
      "op": "b block@1"
    },
    "16": {
      "block": "block@1",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "18": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "19": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "21": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "22": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "23": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "24": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "25": {
      "op": "intc_2 // 1",
      "stack_out": [
        "tmp%4#0",
        "0",
        "1"
      ]
    },
    "26": {
      "op": "intc_0 // 2",
      "defined_out": [
        "0",
        "1",
        "2",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2"
      ]
    },
    "27": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3"
      ]
    },
    "29": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "31": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ]
    },
    "33": {
      "op": "intc_3 // 6",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "34": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "36": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ]
    },
    "38": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "40": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10"
      ]
    },
    "42": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "0",
        "1",
        "10",
        "11",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "44": {
      "op": "uncover 12",
      "stack_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "tmp%4#0"
      ]
    },
    "46": {
      "op": "match call_NoOp create_NoOp call_OptIn create_OptIn call_CloseOut create_CloseOut call_ClearState create_ClearState call_UpdateApplication create_UpdateApplication call_DeleteApplication create_DeleteApplication",
      "stack_out": []
    },
    "72": {
      "op": "b *NOT_IMPLEMENTED"
    },
    "75": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "76": {
      "block": "create_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "79": {
      "block": "call_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "82": {
      "block": "create_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "85": {
      "block": "call_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "88": {
      "block": "create_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "91": {
      "block": "call_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "94": {
      "block": "create_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "97": {
      "block": "call_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "100": {
      "block": "create_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "103": {
      "block": "call_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "106": {
      "block": "create_NoOp",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "108": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "109": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "110": {
      "op": "bz else_body@8",
      "stack_out": []
    },
    "113": {
      "op": "b __algopy_default_create@7"
    },
    "116": {
      "block": "__algopy_default_create@7",
      "stack_in": [],
      "op": "b block@21"
    },
    "119": {
      "block": "block@21",
      "stack_in": [],
      "op": "b after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@22"
    },
    "122": {
      "block": "after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create@22",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "123": {
      "op": "return",
      "stack_out": []
    },
    "124": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "block": "else_body@8",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for create NoOp"
    },
    "125": {
      "block": "call_NoOp",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "128": {
      "op": "pushbytes 0x06598bc6 // method \"test_implicit_conversion_abi_call(uint64[],uint64)void\"",
      "defined_out": [
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)"
      ]
    },
    "134": {
      "op": "uncover 1",
      "stack_out": [
        "Method(test_implicit_conversion_abi_call(uint64[],uint64)void)",
        "tmp%5#0"
      ]
    },
    "136": {
      "op": "match test_implicit_conversion_abi_call_route@3",
      "stack_out": []
    },
    "140": {
      "op": "b switch_case_default@4"
    },
    "143": {
      "block": "switch_case_default@4",
      "stack_in": [],
      "op": "b switch_case_next@5"
    },
    "146": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "block": "switch_case_next@5",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "147": {
      "block": "test_implicit_conversion_abi_call_route@3",
      "stack_in": [],
      "callsub": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call[routing]",
      "op": "callsub test_implicit_conversion_abi_call"
    },
    "150": {
      "op": "b switch_case_next@5"
    },
    "153": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "156": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "157": {
      "op": "b dynamic_array_concat_dynamic_element_block@0"
    },
    "160": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "tmp%8#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0"
      ]
    },
    "161": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "163": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "164": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "165": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "167": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "168": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "169": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "2"
      ]
    },
    "170": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "171": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "172": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "175": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "177": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "179": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "180": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "183": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@2"
    },
    "186": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "188": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "190": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "191": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "193": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "194": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "195": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "198": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "200": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "202": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "203": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "205": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@3"
    },
    "208": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "210": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "211": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "212": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "214": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "217": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "219": {
      "op": "len",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "220": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "222": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "224": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "225": {
      "op": "*",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "226": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "228": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "2"
      ]
    },
    "229": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "230": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "0"
      ]
    },
    "231": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "233": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "236": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "238": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "240": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "241": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "244": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@6"
    },
    "247": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "249": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "251": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "252": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "254": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "255": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "256": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "259": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "261": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "263": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "264": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "266": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@7"
    },
    "269": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "271": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "272": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "273": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "275": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "278": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "280": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "282": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "283": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "284": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "287": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "289": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "290": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)"
      ]
    },
    "292": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "293": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "294": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "296": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "297": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "299": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0"
      ]
    },
    "301": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "303": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "304": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "305": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)"
      ]
    },
    "307": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "308": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "309": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "311": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "312": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "314": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0"
      ]
    },
    "316": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "318": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "319": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "320": {
      "op": "frame_bury 0"
    },
    "322": {
      "retsub": true,
      "op": "retsub"
    },
    "323": {
      "subroutine": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call[routing]",
      "params": {},
      "block": "test_implicit_conversion_abi_call",
      "stack_in": [],
      "op": "b test_implicit_conversion_abi_call_block@0"
    },
    "326": {
      "block": "test_implicit_conversion_abi_call_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "329": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "332": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ]
    },
    "333": {
      "callsub": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "op": "callsub test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "stack_out": []
    },
    "336": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "337": {
      "op": "return",
      "stack_out": []
    },
    "338": {
      "subroutine": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "params": {
        "arr#0": "bytes",
        "app#0": "uint64"
      },
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "341": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "342": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_block@0"
    },
    "345": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_block@0",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_begin"
    },
    "346": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "348": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "350": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "352": {
      "op": "pushbytes 0x75b694f3 // method \"dont_call(uint64[])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[])uint64)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call(uint64[])uint64)"
      ]
    },
    "358": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "360": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "362": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "363": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "365": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "366": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "368": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@1"
    },
    "371": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@1",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "372": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "373": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "374": {
      "op": "extract 6 2",
      "defined_out": [
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0"
      ]
    },
    "377": {
      "op": "dup",
      "defined_out": [
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ]
    },
    "378": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)",
        "0"
      ]
    },
    "379": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0",
        "extract_uint16%0#0"
      ]
    },
    "380": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0"
      ]
    },
    "382": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "nested_arr#0 (copy)"
      ]
    },
    "383": {
      "op": "len",
      "defined_out": [
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ]
    },
    "384": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "nested_arr#0"
      ]
    },
    "386": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "nested_arr#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "nested_arr#0",
        "2"
      ]
    },
    "387": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "nested_arr#0",
        "2",
        "total_length%0#0"
      ]
    },
    "389": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "390": {
      "op": "intc_0 // 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "391": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "392": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "395": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "396": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "398": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0"
      ]
    },
    "399": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%head%0#0",
        "arr#0 (copy)",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "arr#0 (copy)"
      ]
    },
    "401": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%0#0"
      ]
    },
    "402": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_to_end%0#0",
        "tmp%0#0",
        "extract_uint16%0#0"
      ]
    },
    "404": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "406": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "407": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%0#0"
      ]
    },
    "409": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "nested_arr#0"
      ]
    },
    "412": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "413": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "415": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "417": {
      "op": "pushbytes 0xe92b1d53 // method \"dont_call(uint64[][])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[][])uint64)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call(uint64[][])uint64)"
      ]
    },
    "423": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "425": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "427": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "428": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "430": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "431": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "433": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@2"
    },
    "436": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@2",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "437": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "438": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "439": {
      "op": "extract 6 2",
      "defined_out": [
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ]
    },
    "442": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "arr#0 (copy)"
      ]
    },
    "444": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "445": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "446": {
      "op": "cover 1",
      "defined_out": [
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "448": {
      "op": "dup",
      "defined_out": [
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "449": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "0"
      ]
    },
    "450": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "extract_uint16%1#0"
      ]
    },
    "451": {
      "op": "cover 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "453": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "454": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "total_length%1#0"
      ]
    },
    "455": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "457": {
      "op": "dup",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)"
      ]
    },
    "458": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "tmp%1#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "total_length%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "2"
      ]
    },
    "459": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "indirect_nested_arr#0 (copy)",
        "2",
        "total_length%1#0"
      ]
    },
    "461": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "indirect_nested_arr#0",
        "extract_to_end%1#0"
      ]
    },
    "462": {
      "op": "cover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0"
      ]
    },
    "464": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "10"
      ]
    },
    "466": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "467": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "470": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "471": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "473": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "tmp%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0"
      ]
    },
    "474": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0",
        "tmp%1#0"
      ]
    },
    "476": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "477": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%2#0"
      ]
    },
    "478": {
      "op": "frame_dig -2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%2#0",
        "arr#0 (copy)"
      ]
    },
    "480": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0"
      ]
    },
    "481": {
      "op": "intc_0 // 2",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "2"
      ]
    },
    "482": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%as_bytes%4#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "483": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "486": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "487": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "489": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%head%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0",
        "aggregate%head%3#0"
      ]
    },
    "490": {
      "op": "uncover 1",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded((len+uint64[]),uint64)%0#0"
      ]
    },
    "492": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ]
    },
    "493": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "extract_to_end%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0"
      ]
    },
    "495": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "497": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "indirect_nested_arr#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1"
      ]
    },
    "498": {
      "op": "uncover 3",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1",
        "tmp%2#0"
      ]
    },
    "500": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "503": {
      "op": "frame_bury 0",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "indirect_nested_arr#0"
      ]
    },
    "505": {
      "op": "itxn_begin",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "506": {
      "op": "frame_dig -1",
      "defined_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "508": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "510": {
      "op": "pushbytes 0x165312d8 // method \"dont_call((uint64[],uint64)[])uint64\"",
      "defined_out": [
        "Method(dont_call((uint64[],uint64)[])uint64)",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(dont_call((uint64[],uint64)[])uint64)"
      ]
    },
    "516": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "518": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "520": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl",
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "appl"
      ]
    },
    "521": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "523": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0",
        "0"
      ]
    },
    "524": {
      "op": "itxn_field Fee",
      "stack_out": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ]
    },
    "526": {
      "op": "b test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@3"
    },
    "529": {
      "block": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call_next_txn@3",
      "stack_in": [
        "as_Encoded(len+((len+uint64[]),uint64)[])%0#0"
      ],
      "op": "itxn_submit"
    },
    "530": {
      "retsub": true,
      "op": "retsub"
    }
  }
}